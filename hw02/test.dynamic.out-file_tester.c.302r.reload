
;; Function file_tester_create (file_tester_create, funcdef_no=6, decl_uid=2023, cgraph_uid=7, symbol_order=6)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=48, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 19 to 7 (offset=32, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2:  (0) m  (1) re {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 6:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 7:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 8:  (1) rBwBz {*call_value}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 10:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 11:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 12:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 13:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 16:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 17:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 18:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 19:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 20:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 21:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 23:  (0) r  (1) i {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 25:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 27:  (0) r  (1) rem {*movdi_internal}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #1: **********

EBB 2

********** Pseudo live ranges #1: **********

  BB 2
   Insn 35: point = 0, n_alt = -1
   Insn 34: point = 0, n_alt = -2
   Insn 30: point = 1, n_alt = -2
   Insn 27: point = 3, n_alt = 3
   Insn 26: point = 4, n_alt = 0
   Insn 25: point = 4, n_alt = 3
   Insn 24: point = 4, n_alt = -2
   Insn 23: point = 5, n_alt = 4
   Insn 22: point = 6, n_alt = -2
   Insn 21: point = 7, n_alt = 3
   Insn 20: point = 8, n_alt = 1
   Insn 19: point = 9, n_alt = 3
   Insn 18: point = 10, n_alt = 5
   Insn 17: point = 11, n_alt = 3
   Insn 16: point = 12, n_alt = 0
   Insn 15: point = 12, n_alt = -2
   Insn 14: point = 13, n_alt = -2
   Insn 13: point = 14, n_alt = 2
   Insn 12: point = 14, n_alt = 3
   Insn 11: point = 15, n_alt = 3
   Insn 10: point = 16, n_alt = 5
   Insn 9: point = 17, n_alt = -2
   Insn 8: point = 18, n_alt = 0
   Insn 7: point = 18, n_alt = 2
   Insn 6: point = 18, n_alt = 2
   Insn 2: point = 18, n_alt = 5
 r82: [12..15]
 r83: [6..7]
 r84: [2..3]
 r85: [0..1]
 r86: [16..17]
 r87: [13..14]
 r88: [10..11]
 r89: [8..9]
 r90: [4..5]
Compressing live ranges: from 18 to 16 - 88%
Ranges after the compression:
 r82: [12..13]
 r83: [6..7]
 r84: [2..3]
 r85: [0..1]
 r86: [14..15]
 r87: [12..13]
 r88: [10..11]
 r89: [8..9]
 r90: [4..5]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 6
	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=48, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 19 to 7 (offset=32, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
changing reg in insn 11
changing reg in insn 15
changing reg in insn 21
changing reg in insn 22
changing reg in insn 27
changing reg in insn 30
changing reg in insn 30
changing reg in insn 34
changing reg in insn 9
changing reg in insn 10
changing reg in insn 12
changing reg in insn 14
changing reg in insn 17
changing reg in insn 18
changing reg in insn 19
changing reg in insn 20
changing reg in insn 23
changing reg in insn 24
deleting insn with uid = 9.
deleting insn with uid = 30.
deleting insn with uid = 34.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 8.
verify found no changes in insn with uid = 16.
verify found no changes in insn with uid = 26.


file_tester_create

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;;  ref usage 	r0={11d,9u} r1={5d,1u} r2={5d,1u} r4={7d,3u} r5={7d,4u} r6={1d,10u} r7={1d,5u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r17={3d} r18={3d} r19={1d,1u} r20={4d} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={4d} r37={4d} r38={3d} r39={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} 
;;    total ref usage 268{234d,34u,0e} in 23{20 regular + 3 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 82 83 84 85 86 87 88 89 90
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 name+0 S8 A64])
        (reg:DI 5 di [ name ])) "tester/file_tester.c":7:52 80 {*movdi_internal}
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 4 si)
        (const_int 40 [0x28])) "tester/file_tester.c":8:32 80 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:DI 5 di)
        (const_int 1 [0x1])) "tester/file_tester.c":8:32 80 {*movdi_internal}
     (nil))
(call_insn 8 7 10 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("calloc") [flags 0x41]  <function_decl 0x7f20b72d8500 calloc>) [0 __builtin_calloc S1 A8])
            (const_int 0 [0]))) "tester/file_tester.c":8:32 909 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 10 8 11 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [7 tester+0 S8 A64])
        (reg/f:DI 0 ax [86])) "tester/file_tester.c":8:32 80 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (reg/f:DI 0 ax [orig:82 _1 ] [82])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [7 tester+0 S8 A64])) "tester/file_tester.c":9:17 80 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:DI 2 cx [87])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 name+0 S8 A64])) "tester/file_tester.c":9:3 80 {*movdi_internal}
     (nil))
(insn 13 12 14 2 (set (reg:DI 1 dx)
        (const_int 20 [0x14])) "tester/file_tester.c":9:3 80 {*movdi_internal}
     (nil))
(insn 14 13 15 2 (set (reg:DI 4 si)
        (reg:DI 2 cx [87])) "tester/file_tester.c":9:3 80 {*movdi_internal}
     (nil))
(insn 15 14 16 2 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:82 _1 ] [82])) "tester/file_tester.c":9:3 80 {*movdi_internal}
     (nil))
(call_insn 16 15 17 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strncpy") [flags 0x41]  <function_decl 0x7f20b72c0e00 strncpy>) [0 __builtin_strncpy S1 A8])
            (const_int 0 [0]))) "tester/file_tester.c":9:3 909 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 17 16 18 2 (set (reg/f:DI 0 ax [88])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [7 tester+0 S8 A64])) "tester/file_tester.c":10:22 80 {*movdi_internal}
     (nil))
(insn 18 17 19 2 (set (mem/f:DI (plus:DI (reg/f:DI 0 ax [88])
                (const_int 24 [0x18])) [2 tester_5->inner_file+0 S8 A64])
        (const_int 0 [0])) "tester/file_tester.c":10:22 80 {*movdi_internal}
     (nil))
(insn 19 18 20 2 (set (reg/f:DI 0 ax [89])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [7 tester+0 S8 A64])) "tester/file_tester.c":11:17 80 {*movdi_internal}
     (nil))
(insn 20 19 21 2 (set (mem:SI (plus:DI (reg/f:DI 0 ax [89])
                (const_int 32 [0x20])) [4 tester_5->error+0 S4 A64])
        (const_int 0 [0])) "tester/file_tester.c":11:17 81 {*movsi_internal}
     (nil))
(insn 21 20 22 2 (set (reg/f:DI 0 ax [orig:83 _2 ] [83])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [7 tester+0 S8 A64])) "tester/file_tester.c":12:49 80 {*movdi_internal}
     (nil))
(insn 22 21 23 2 (set (reg:DI 4 si)
        (reg/f:DI 0 ax [orig:83 _2 ] [83])) "tester/file_tester.c":12:3 80 {*movdi_internal}
     (nil))
(insn 23 22 24 2 (set (reg:DI 0 ax [90])
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7f20b7027360 *.LC0>)) "tester/file_tester.c":12:3 80 {*movdi_internal}
     (nil))
(insn 24 23 25 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [90])) "tester/file_tester.c":12:3 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7f20b7027360 *.LC0>)
        (nil)))
(insn 25 24 26 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "tester/file_tester.c":12:3 83 {*movqi_internal}
     (nil))
(call_insn 26 25 27 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f20b72c6000 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "tester/file_tester.c":12:3 909 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 27 26 35 2 (set (reg/f:DI 0 ax [orig:84 _11 ] [84])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [7 tester+0 S8 A64])) "tester/file_tester.c":13:10 80 {*movdi_internal}
     (nil))
(insn 35 27 37 2 (use (reg/i:DI 0 ax)) "tester/file_tester.c":14:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(note 37 35 0 NOTE_INSN_DELETED)

;; Function file_tester_destory (file_tester_destory, funcdef_no=7, decl_uid=2025, cgraph_uid=8, symbol_order=7)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 6:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 7:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 8:  (0) r {*cmpdi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 11:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 12:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 14:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 17:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 18:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 19:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 22:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 24:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 29:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 31:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 34:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 36:  (0) rBwBz {*call}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #1: **********

EBB 2 3
EBB 4 5
EBB 6
EBB 7 8

********** Pseudo live ranges #1: **********

  BB 8
   Insn 42: point = 0, n_alt = -1
  BB 7
   Insn 36: point = 0, n_alt = 0
   Insn 35: point = 0, n_alt = -2
   Insn 34: point = 1, n_alt = 3
  BB 5
   Insn 39: point = 2, n_alt = -1
   Insn 24: point = 2, n_alt = 0
   Insn 23: point = 2, n_alt = -2
   Insn 22: point = 3, n_alt = 4
  BB 6
   Insn 31: point = 4, n_alt = 0
   Insn 30: point = 4, n_alt = -2
   Insn 29: point = 5, n_alt = 4
  BB 4
   Insn 20: point = 6, n_alt = -1
   Insn 19: point = 6, n_alt = 0
   Insn 18: point = 7, n_alt = 0
   Insn 17: point = 9, n_alt = 3
  BB 3
   Insn 14: point = 10, n_alt = 0
   Insn 13: point = 10, n_alt = -2
   Insn 12: point = 11, n_alt = 3
   Insn 11: point = 13, n_alt = 3
  BB 2
   Insn 9: point = 14, n_alt = -1
   Insn 8: point = 14, n_alt = 0
   Insn 7: point = 15, n_alt = 3
   Insn 6: point = 17, n_alt = 3
   Insn 2: point = 18, n_alt = 5
 r82: [14..15]
 r83: [10..11]
 r84: [6..7]
 r85: [16..17]
 r86: [12..13]
 r87: [8..9]
 r88: [2..3]
 r89: [4..5]
 r90: [0..1]
Compressing live ranges: from 18 to 18 - 100%
Ranges after the compression:
 r82: [14..15]
 r83: [10..11]
 r84: [6..7]
 r85: [16..17]
 r86: [12..13]
 r87: [8..9]
 r88: [2..3]
 r89: [4..5]
 r90: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 6
	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
changing reg in insn 7
changing reg in insn 8
changing reg in insn 12
changing reg in insn 13
changing reg in insn 18
changing reg in insn 19
changing reg in insn 6
changing reg in insn 7
changing reg in insn 11
changing reg in insn 12
changing reg in insn 17
changing reg in insn 18
changing reg in insn 22
changing reg in insn 23
changing reg in insn 29
changing reg in insn 30
changing reg in insn 34
changing reg in insn 35
starting the processing of deferred insns
ending the processing of deferred insns


file_tester_destory

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;;  ref usage 	r0={14d,9u} r1={5d} r2={5d} r4={5d} r5={9d,5u} r6={1d,13u} r7={1d,12u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r17={6d,2u} r18={4d} r19={1d,1u} r20={5d} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={5d} r37={5d} r38={4d} r39={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} 
;;    total ref usage 343{301d,42u,0e} in 24{20 regular + 4 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags] 82 85
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [7 tester+0 S8 A64])
        (reg:DI 5 di [ tester ])) "tester/file_tester.c":16:54 80 {*movdi_internal}
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 0 ax [85])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [7 tester+0 S8 A64])) "tester/file_tester.c":17:13 80 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg/f:DI 0 ax [orig:82 _1 ] [82])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [85])
                (const_int 24 [0x18])) [2 tester_7(D)->inner_file+0 S8 A64])) "tester/file_tester.c":17:13 80 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:82 _1 ] [82])
            (const_int 0 [0]))) "tester/file_tester.c":17:6 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 9 8 10 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 15)
            (pc))) "tester/file_tester.c":17:6 891 {*jcc}
     (nil)
 -> 15)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 83 86
(note 10 9 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 3 (set (reg/f:DI 0 ax [86])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [7 tester+0 S8 A64])) "tester/file_tester.c":18:5 80 {*movdi_internal}
     (nil))
(insn 12 11 13 3 (set (reg/f:DI 0 ax [orig:83 _2 ] [83])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [86])
                (const_int 24 [0x18])) [2 tester_7(D)->inner_file+0 S8 A64])) "tester/file_tester.c":18:5 80 {*movdi_internal}
     (nil))
(insn 13 12 14 3 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:83 _2 ] [83])) "tester/file_tester.c":18:5 80 {*movdi_internal}
     (nil))
(call_insn 14 13 15 3 (call (mem:QI (symbol_ref:DI ("file_release") [flags 0x41]  <function_decl 0x7f20b7341500 file_release>) [0 file_release S1 A8])
        (const_int 0 [0])) "tester/file_tester.c":18:5 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       2
;;              3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags] 84 87
(code_label 15 14 16 4 4 (nil) [1 uses])
(note 16 15 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 4 (set (reg/f:DI 0 ax [87])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [7 tester+0 S8 A64])) "tester/file_tester.c":20:13 80 {*movdi_internal}
     (nil))
(insn 18 17 19 4 (set (reg:SI 0 ax [orig:84 _3 ] [84])
        (mem:SI (plus:DI (reg/f:DI 0 ax [87])
                (const_int 32 [0x20])) [4 tester_7(D)->error+0 S4 A64])) "tester/file_tester.c":20:13 81 {*movsi_internal}
     (nil))
(insn 19 18 20 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:84 _3 ] [84])
            (const_int 0 [0]))) "tester/file_tester.c":20:6 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 20 19 21 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 27)
            (pc))) "tester/file_tester.c":20:6 891 {*jcc}
     (nil)
 -> 27)
;;  succ:       5 (FALLTHRU)
;;              6
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 88
(note 21 20 22 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 5 (set (reg:DI 0 ax [88])
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f20b7027870 *.LC1>)) "tester/file_tester.c":21:5 80 {*movdi_internal}
     (nil))
(insn 23 22 24 5 (set (reg:DI 5 di)
        (reg:DI 0 ax [88])) "tester/file_tester.c":21:5 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f20b7027870 *.LC1>)
        (nil)))
(call_insn 24 23 39 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f20b72c6700 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) "tester/file_tester.c":21:5 909 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 39 24 40 5 (set (pc)
        (label_ref 32)) 892 {jump}
     (nil)
 -> 32)
;;  succ:       7 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 40 39 27)
;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 7, flags: (RTL, MODIFIED)
;;  pred:       4
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 89
(code_label 27 40 28 6 5 (nil) [1 uses])
(note 28 27 29 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 30 6 (set (reg:DI 0 ax [89])
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f20b7027900 *.LC2>)) "tester/file_tester.c":23:5 80 {*movdi_internal}
     (nil))
(insn 30 29 31 6 (set (reg:DI 5 di)
        (reg:DI 0 ax [89])) "tester/file_tester.c":23:5 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f20b7027900 *.LC2>)
        (nil)))
(call_insn 31 30 32 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f20b72c6700 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) "tester/file_tester.c":23:5 909 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       7 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 7, loop depth 0, maybe hot
;;  prev block 6, next block 8, flags: (RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;;              5 [always] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 90
(code_label 32 31 33 7 6 (nil) [1 uses])
(note 33 32 34 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 34 33 35 7 (set (reg:DI 0 ax [90])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [7 tester+0 S8 A64])) "tester/file_tester.c":25:3 80 {*movdi_internal}
     (nil))
(insn 35 34 36 7 (set (reg:DI 5 di)
        (reg:DI 0 ax [90])) "tester/file_tester.c":25:3 80 {*movdi_internal}
     (nil))
(call_insn 36 35 41 7 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f20b72ddc00 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) "tester/file_tester.c":25:3 898 {*call}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       8 [always]  (FALLTHRU) tester/file_tester.c:26:1
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 8, loop depth 0, maybe hot
;;  prev block 7, next block 1, flags: (RTL, MODIFIED)
;;  pred:       7 [always]  (FALLTHRU) tester/file_tester.c:26:1
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(note 41 36 42 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 43 8 (const_int 0 [0]) "tester/file_tester.c":26:1 928 {nop}
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(note 43 42 0 NOTE_INSN_DELETED)

;; Function file_tester_init (file_tester_init, funcdef_no=8, decl_uid=2029, cgraph_uid=9, symbol_order=8)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=48, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 19 to 7 (offset=32, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 4:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 8:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 17:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 18:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 19:  (0) r {*cmpdi_ccno_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 22:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 24:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 25:  (0) r  (1) i {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 27:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 29:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 33:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 35:  (0) r  (1) i {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 37:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 38:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 39:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 40:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 43:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 45:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 46:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 49:  (0) ?mr {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 52:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 53:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 54:  (0) r {*cmpdi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 57:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 58:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 59:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 61:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 66:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 68:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 75:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 76:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 77:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 78:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 79:  (0) r {*cmpdi_ccno_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 82:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 84:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 89:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 90:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 91:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 92:  (0) rm  (1) re {*cmpsi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 95:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 96:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 97:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 98:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 101:  (0) r  (1) i {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 103:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 104:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 109:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 110:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 111:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 112:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 115:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 116:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 117:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 118:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 120:  (0) r  (1) i {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 122:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 123:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 128:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 129:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 130:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 132:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 133:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 136:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 138:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 141:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 142:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 143:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 145:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 148:  (0) r  (1) i {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 150:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 151:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 156:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 157:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 158:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 160:  (1) rBwBz {*call_value}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #1: **********

EBB 2 3 4
EBB 5 6 7
EBB 8
EBB 9 10
EBB 11 12
EBB 13 14
EBB 15 16
EBB 17
EBB 19
EBB 18

********** Pseudo live ranges #1: **********

  BB 4
   Insn 29: point = 0, n_alt = 0
   Insn 28: point = 0, n_alt = -2
   Insn 27: point = 1, n_alt = 4
   Insn 26: point = 2, n_alt = -2
   Insn 25: point = 3, n_alt = 4
   Insn 24: point = 4, n_alt = 0
   Insn 23: point = 4, n_alt = -2
   Insn 22: point = 5, n_alt = 4
  BB 18
  BB 17
   Insn 177: point = 6, n_alt = -1
   Insn 160: point = 6, n_alt = 0
   Insn 159: point = 6, n_alt = -2
   Insn 158: point = 7, n_alt = 4
   Insn 157: point = 8, n_alt = 1
   Insn 156: point = 9, n_alt = 3
  BB 12
   Insn 171: point = 10, n_alt = -1
   Insn 104: point = 10, n_alt = 0
   Insn 103: point = 10, n_alt = 3
   Insn 102: point = 10, n_alt = -2
   Insn 101: point = 11, n_alt = 4
   Insn 100: point = 12, n_alt = -2
   Insn 99: point = 13, n_alt = -2
   Insn 98: point = 14, n_alt = 0
   Insn 97: point = 15, n_alt = 0
   Insn 96: point = 17, n_alt = 3
   Insn 95: point = 19, n_alt = 3
  BB 10
   Insn 169: point = 20, n_alt = -1
   Insn 84: point = 20, n_alt = 0
   Insn 83: point = 20, n_alt = -2
   Insn 82: point = 21, n_alt = 4
  BB 8
   Insn 167: point = 22, n_alt = -1
   Insn 68: point = 22, n_alt = 0
   Insn 67: point = 22, n_alt = -2
   Insn 66: point = 23, n_alt = 4
  BB 7
   Insn 165: point = 24, n_alt = -1
   Insn 61: point = 24, n_alt = 0
   Insn 60: point = 24, n_alt = -2
   Insn 59: point = 25, n_alt = 4
   Insn 58: point = 26, n_alt = 1
   Insn 57: point = 27, n_alt = 3
  BB 6
   Insn 55: point = 28, n_alt = -1
   Insn 54: point = 28, n_alt = 0
   Insn 53: point = 29, n_alt = 3
   Insn 52: point = 31, n_alt = 3
  BB 14
   Insn 173: point = 32, n_alt = -1
   Insn 123: point = 32, n_alt = 0
   Insn 122: point = 32, n_alt = 3
   Insn 121: point = 32, n_alt = -2
   Insn 120: point = 33, n_alt = 4
   Insn 119: point = 34, n_alt = -2
   Insn 118: point = 35, n_alt = 0
   Insn 117: point = 35, n_alt = 0
   Insn 116: point = 37, n_alt = 3
   Insn 115: point = 39, n_alt = 3
  BB 19
   Insn 181: point = 40, n_alt = -1
  BB 16
   Insn 175: point = 40, n_alt = -1
   Insn 151: point = 40, n_alt = 0
   Insn 150: point = 40, n_alt = 3
   Insn 149: point = 40, n_alt = -2
   Insn 148: point = 41, n_alt = 4
   Insn 147: point = 42, n_alt = -2
   Insn 146: point = 43, n_alt = -2
   Insn 145: point = 44, n_alt = 3
   Insn 144: point = 45, n_alt = -2
   Insn 143: point = 47, n_alt = 3
   Insn 142: point = 49, n_alt = 3
   Insn 141: point = 51, n_alt = 3
  BB 15
   Insn 139: point = 52, n_alt = -1
   Insn 138: point = 52, n_alt = 0
   Insn 137: point = 53, n_alt = -2
   Insn 136: point = 54, n_alt = 0
   Insn 135: point = 54, n_alt = -2
   Insn 134: point = 55, n_alt = -2
   Insn 133: point = 56, n_alt = 2
   Insn 132: point = 56, n_alt = 3
   Insn 131: point = 57, n_alt = -2
   Insn 130: point = 59, n_alt = 3
   Insn 129: point = 61, n_alt = 3
   Insn 128: point = 63, n_alt = 3
  BB 13
   Insn 113: point = 64, n_alt = -1
   Insn 112: point = 64, n_alt = 0
   Insn 111: point = 65, n_alt = 0
   Insn 110: point = 67, n_alt = 3
   Insn 109: point = 69, n_alt = 3
  BB 11
   Insn 93: point = 70, n_alt = -1
   Insn 92: point = 70, n_alt = 0
   Insn 91: point = 71, n_alt = 0
   Insn 90: point = 73, n_alt = 3
   Insn 89: point = 75, n_alt = 3
  BB 9
   Insn 80: point = 76, n_alt = -1
   Insn 79: point = 76, n_alt = 0
   Insn 78: point = 77, n_alt = 3
   Insn 77: point = 79, n_alt = 3
   Insn 76: point = 80, n_alt = 1
   Insn 75: point = 81, n_alt = 3
  BB 5
   Insn 50: point = 82, n_alt = -1
   Insn 49: point = 82, n_alt = 1
   Insn 46: point = 82, n_alt = 5
   Insn 45: point = 83, n_alt = 3
   Insn 44: point = 84, n_alt = -2
   Insn 43: point = 85, n_alt = 0
   Insn 42: point = 85, n_alt = -2
   Insn 41: point = 86, n_alt = -2
   Insn 40: point = 87, n_alt = 0
   Insn 39: point = 88, n_alt = 3
   Insn 38: point = 89, n_alt = 0
   Insn 37: point = 89, n_alt = 3
   Insn 36: point = 89, n_alt = -2
   Insn 35: point = 90, n_alt = 4
   Insn 34: point = 91, n_alt = -2
   Insn 33: point = 92, n_alt = 0
  BB 3
   Insn 20: point = 93, n_alt = -1
   Insn 19: point = 93, n_alt = 0
   Insn 18: point = 94, n_alt = 3
   Insn 17: point = 96, n_alt = 3
  BB 2
   Insn 11: point = 97, n_alt = -1
   Insn 10: point = 97, n_alt = 0
   Insn 9: point = 98, n_alt = 0
   Insn 8: point = 100, n_alt = 3
   Insn 4: point = 101, n_alt = 5
   Insn 3: point = 101, n_alt = 1
   Insn 2: point = 101, n_alt = 5
 r82: [97..98]
 r83: [93..94]
 r84: [82..84]
 r85: [28..29]
 r86: [76..77]
 r87: [72..73]
 r88: [70..71]
 r89: [16..17]
 r90: [12..15]
 r91: [66..67]
 r92: [64..65]
 r93: [36..37]
 r94: [34..35]
 r95: [60..61]
 r96: [58..59]
 r97: [54..57]
 r98: [52..53]
 r99: [48..49]
 r100: [46..47]
 r101: [42..45]
 r102: [99..100]
 r103: [95..96]
 r104: [4..5]
 r105: [2..3]
 r106: [0..1]
 r107: [91..92]
 r108: [89..90]
 r109: [86..88]
 r110: [85..87]
 r111: [82..83]
 r112: [30..31]
 r113: [26..27]
 r114: [24..25]
 r115: [22..23]
 r116: [80..81]
 r117: [78..79]
 r118: [20..21]
 r119: [74..75]
 r120: [18..19]
 r121: [13..14]
 r122: [10..11]
 r123: [68..69]
 r124: [38..39]
 r125: [32..33]
 r126: [62..63]
 r127: [55..56]
 r128: [50..51]
 r129: [43..44]
 r130: [40..41]
 r131: [8..9]
 r132: [6..7]
Compressing live ranges: from 101 to 92 - 91%
Ranges after the compression:
 r82: [88..89]
 r83: [84..85]
 r84: [76..77]
 r85: [26..27]
 r86: [70..71]
 r87: [66..67]
 r88: [64..65]
 r89: [14..15]
 r90: [12..13]
 r91: [60..61]
 r92: [58..59]
 r93: [34..35]
 r94: [32..33]
 r95: [54..55]
 r96: [52..53]
 r97: [50..51]
 r98: [48..49]
 r99: [44..45]
 r100: [42..43]
 r101: [40..41]
 r102: [90..91]
 r103: [86..87]
 r104: [4..5]
 r105: [2..3]
 r106: [0..1]
 r107: [82..83]
 r108: [80..81]
 r109: [78..79]
 r110: [78..79]
 r111: [76..77]
 r112: [28..29]
 r113: [24..25]
 r114: [22..23]
 r115: [20..21]
 r116: [74..75]
 r117: [72..73]
 r118: [18..19]
 r119: [68..69]
 r120: [16..17]
 r121: [12..13]
 r122: [10..11]
 r123: [62..63]
 r124: [36..37]
 r125: [30..31]
 r126: [56..57]
 r127: [50..51]
 r128: [46..47]
 r129: [40..41]
 r130: [38..39]
 r131: [8..9]
 r132: [6..7]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 6
	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=48, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 19 to 7 (offset=32, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
changing reg in insn 9
changing reg in insn 10
changing reg in insn 18
changing reg in insn 19
changing reg in insn 44
changing reg in insn 46
changing reg in insn 53
changing reg in insn 54
changing reg in insn 78
changing reg in insn 79
changing reg in insn 90
changing reg in insn 91
changing reg in insn 91
changing reg in insn 92
changing reg in insn 96
changing reg in insn 97
changing reg in insn 97
changing reg in insn 100
changing reg in insn 110
changing reg in insn 111
changing reg in insn 111
changing reg in insn 112
changing reg in insn 116
changing reg in insn 117
changing reg in insn 117
changing reg in insn 119
changing reg in insn 129
changing reg in insn 130
changing reg in insn 130
changing reg in insn 131
changing reg in insn 131
changing reg in insn 135
changing reg in insn 137
changing reg in insn 138
changing reg in insn 142
changing reg in insn 143
changing reg in insn 143
changing reg in insn 144
changing reg in insn 144
changing reg in insn 147
changing reg in insn 8
changing reg in insn 9
changing reg in insn 17
changing reg in insn 18
changing reg in insn 22
changing reg in insn 23
changing reg in insn 25
changing reg in insn 26
changing reg in insn 27
changing reg in insn 28
changing reg in insn 33
changing reg in insn 34
changing reg in insn 35
changing reg in insn 36
changing reg in insn 39
changing reg in insn 41
changing reg in insn 40
changing reg in insn 42
changing reg in insn 45
changing reg in insn 46
changing reg in insn 52
changing reg in insn 53
changing reg in insn 57
changing reg in insn 58
changing reg in insn 59
changing reg in insn 60
changing reg in insn 66
changing reg in insn 67
changing reg in insn 75
changing reg in insn 76
changing reg in insn 77
changing reg in insn 78
changing reg in insn 82
changing reg in insn 83
changing reg in insn 89
changing reg in insn 90
changing reg in insn 95
changing reg in insn 96
changing reg in insn 98
changing reg in insn 99
changing reg in insn 101
changing reg in insn 102
changing reg in insn 109
changing reg in insn 110
changing reg in insn 115
changing reg in insn 116
changing reg in insn 120
changing reg in insn 121
changing reg in insn 128
changing reg in insn 129
changing reg in insn 132
changing reg in insn 134
changing reg in insn 141
changing reg in insn 142
changing reg in insn 145
changing reg in insn 146
changing reg in insn 148
changing reg in insn 149
changing reg in insn 156
changing reg in insn 157
changing reg in insn 158
changing reg in insn 159
deleting insn with uid = 44.
deleting insn with uid = 99.
deleting insn with uid = 137.
starting the processing of deferred insns
ending the processing of deferred insns


file_tester_init

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;;  ref usage 	r0={60d,50u} r1={19d,8u} r2={15d,3u} r4={19d,8u} r5={23d,12u} r6={1d,44u} r7={1d,30u} r8={11d} r9={11d} r10={11d} r11={11d} r12={11d} r13={11d} r14={11d} r15={11d} r17={19d,8u} r18={11d} r19={1d,1u} r20={12d} r21={12d} r22={12d} r23={12d} r24={12d} r25={12d} r26={12d} r27={12d} r28={11d} r29={11d} r30={11d} r31={11d} r32={11d} r33={11d} r34={11d} r35={11d} r36={12d} r37={12d} r38={11d} r39={11d} r44={11d} r45={11d} r46={11d} r47={11d} r48={11d} r49={11d} r50={11d} r51={11d} r52={11d} r53={11d} r54={11d} r55={11d} r56={11d} r57={11d} r58={11d} r59={11d} r60={11d} r61={11d} r62={11d} r63={11d} r64={11d} r65={11d} r66={11d} r67={11d} r68={11d} r69={11d} r70={11d} r71={11d} r72={11d} r73={11d} r74={11d} r75={11d} 
;;    total ref usage 1003{839d,164u,0e} in 118{107 regular + 11 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags] 82 102
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [7 tester+0 S8 A64])
        (reg:DI 5 di [ tester ])) "tester/file_tester.c":28:73 80 {*movdi_internal}
     (nil))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [4 type+0 S4 A32])
        (reg:SI 4 si [ type ])) "tester/file_tester.c":28:73 81 {*movsi_internal}
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 name+0 S8 A64])
        (reg:DI 1 dx [ name ])) "tester/file_tester.c":28:73 80 {*movdi_internal}
     (nil))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg/f:DI 0 ax [102])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [7 tester+0 S8 A64])) "tester/file_tester.c":29:13 80 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:SI 0 ax [orig:82 _1 ] [82])
        (mem:SI (plus:DI (reg/f:DI 0 ax [102])
                (const_int 32 [0x20])) [4 tester_24(D)->error+0 S4 A64])) "tester/file_tester.c":29:13 81 {*movsi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:82 _1 ] [82])
            (const_int 0 [0]))) "tester/file_tester.c":29:6 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 11 10 16 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 180)
            (pc))) "tester/file_tester.c":29:6 891 {*jcc}
     (nil)
 -> 180)
;;  succ:       19 tester/file_tester.c:30:5
;;              3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags] 83 103
(note 16 11 17 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 3 (set (reg/f:DI 0 ax [103])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [7 tester+0 S8 A64])) "tester/file_tester.c":31:3 80 {*movdi_internal}
     (nil))
(insn 18 17 19 3 (set (reg/f:DI 0 ax [orig:83 _2 ] [83])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [103])
                (const_int 24 [0x18])) [2 tester_24(D)->inner_file+0 S8 A64])) "tester/file_tester.c":31:3 80 {*movdi_internal}
     (nil))
(insn 19 18 20 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:83 _2 ] [83])
            (const_int 0 [0]))) "tester/file_tester.c":31:3 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 20 19 21 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 31)
            (pc))) "tester/file_tester.c":31:3 891 {*jcc}
     (nil)
 -> 31)
;;  succ:       5
;;              4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 104 105 106
(note 21 20 22 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 4 (set (reg:DI 0 ax [104])
        (symbol_ref:DI ("__PRETTY_FUNCTION__.0") [flags 0x2]  <var_decl 0x7f20b7211f30 __PRETTY_FUNCTION__>)) "tester/file_tester.c":31:3 80 {*movdi_internal}
     (nil))
(insn 23 22 24 4 (set (reg:DI 2 cx)
        (reg:DI 0 ax [104])) "tester/file_tester.c":31:3 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("__PRETTY_FUNCTION__.0") [flags 0x2]  <var_decl 0x7f20b7211f30 __PRETTY_FUNCTION__>)
        (nil)))
(insn 24 23 25 4 (set (reg:SI 1 dx)
        (const_int 31 [0x1f])) "tester/file_tester.c":31:3 81 {*movsi_internal}
     (nil))
(insn 25 24 26 4 (set (reg:DI 0 ax [105])
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f20b70273f0 *.LC3>)) "tester/file_tester.c":31:3 80 {*movdi_internal}
     (nil))
(insn 26 25 27 4 (set (reg:DI 4 si)
        (reg:DI 0 ax [105])) "tester/file_tester.c":31:3 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f20b70273f0 *.LC3>)
        (nil)))
(insn 27 26 28 4 (set (reg:DI 0 ax [106])
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7f20b703c000 *.LC4>)) "tester/file_tester.c":31:3 80 {*movdi_internal}
     (nil))
(insn 28 27 29 4 (set (reg:DI 5 di)
        (reg:DI 0 ax [106])) "tester/file_tester.c":31:3 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7f20b703c000 *.LC4>)
        (nil)))
(call_insn 29 28 30 4 (call (mem:QI (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x7f20b7379600 __assert_fail>) [0 __assert_fail S1 A8])
        (const_int 0 [0])) "tester/file_tester.c":31:3 898 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 19 [frame]

(barrier 30 29 31)
;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL, MODIFIED)
;;  pred:       3
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 84 107 108 109 110 111
(code_label 31 30 32 5 10 (nil) [1 uses])
(note 32 31 33 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 33 32 34 5 (set (reg:SI 0 ax [107])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [4 type+0 S4 A32])) "tester/file_tester.c":32:3 81 {*movsi_internal}
     (nil))
(insn 34 33 35 5 (set (reg:SI 4 si)
        (reg:SI 0 ax [107])) "tester/file_tester.c":32:3 81 {*movsi_internal}
     (nil))
(insn 35 34 36 5 (set (reg:DI 0 ax [108])
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f20b703c090 *.LC5>)) "tester/file_tester.c":32:3 80 {*movdi_internal}
     (nil))
(insn 36 35 37 5 (set (reg:DI 5 di)
        (reg:DI 0 ax [108])) "tester/file_tester.c":32:3 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f20b703c090 *.LC5>)
        (nil)))
(insn 37 36 38 5 (set (reg:QI 0 ax)
        (const_int 0 [0])) "tester/file_tester.c":32:3 83 {*movqi_internal}
     (nil))
(call_insn 38 37 39 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f20b72c6000 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "tester/file_tester.c":32:3 909 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(insn 39 38 40 5 (set (reg:DI 1 dx [109])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 name+0 S8 A64])) "tester/file_tester.c":33:24 80 {*movdi_internal}
     (nil))
(insn 40 39 41 5 (set (reg:SI 0 ax [110])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [4 type+0 S4 A32])) "tester/file_tester.c":33:24 81 {*movsi_internal}
     (nil))
(insn 41 40 42 5 (set (reg:DI 4 si)
        (reg:DI 1 dx [109])) "tester/file_tester.c":33:24 80 {*movdi_internal}
     (nil))
(insn 42 41 43 5 (set (reg:SI 5 di)
        (reg:SI 0 ax [110])) "tester/file_tester.c":33:24 81 {*movsi_internal}
     (nil))
(call_insn 43 42 45 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("file_new") [flags 0x41]  <function_decl 0x7f20b7341400 file_new>) [0 file_new S1 A8])
            (const_int 0 [0]))) "tester/file_tester.c":33:24 909 {*call_value}
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 45 43 46 5 (set (reg/f:DI 1 dx [111])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [7 tester+0 S8 A64])) "tester/file_tester.c":33:22 80 {*movdi_internal}
     (nil))
(insn 46 45 49 5 (set (mem/f:DI (plus:DI (reg/f:DI 1 dx [111])
                (const_int 24 [0x18])) [2 tester_24(D)->inner_file+0 S8 A64])
        (reg/f:DI 0 ax [orig:84 _3 ] [84])) "tester/file_tester.c":33:22 80 {*movdi_internal}
     (nil))
(insn 49 46 50 5 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -12 [0xfffffffffffffff4])) [4 type+0 S4 A32])
            (const_int 0 [0]))) "tester/file_tester.c":36:6 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 50 49 51 5 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 73)
            (pc))) "tester/file_tester.c":36:6 891 {*jcc}
     (nil)
 -> 73)
;;  succ:       6 (FALLTHRU)
;;              9
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 7, flags: (RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags] 85 112
(note 51 50 52 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 52 51 53 6 (set (reg/f:DI 0 ax [112])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [7 tester+0 S8 A64])) "tester/file_tester.c":37:15 80 {*movdi_internal}
     (nil))
(insn 53 52 54 6 (set (reg/f:DI 0 ax [orig:85 _4 ] [85])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [112])
                (const_int 24 [0x18])) [2 tester_24(D)->inner_file+0 S8 A64])) "tester/file_tester.c":37:15 80 {*movdi_internal}
     (nil))
(insn 54 53 55 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:85 _4 ] [85])
            (const_int 0 [0]))) "tester/file_tester.c":37:8 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 55 54 56 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 64)
            (pc))) "tester/file_tester.c":37:8 891 {*jcc}
     (nil)
 -> 64)
;;  succ:       7 (FALLTHRU)
;;              8
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 7, loop depth 0, maybe hot
;;  prev block 6, next block 8, flags: (RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 113 114
(note 56 55 57 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 57 56 58 7 (set (reg/f:DI 0 ax [113])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [7 tester+0 S8 A64])) "tester/file_tester.c":38:21 80 {*movdi_internal}
     (nil))
(insn 58 57 59 7 (set (mem:SI (plus:DI (reg/f:DI 0 ax [113])
                (const_int 32 [0x20])) [4 tester_24(D)->error+0 S4 A64])
        (const_int 1 [0x1])) "tester/file_tester.c":38:21 81 {*movsi_internal}
     (nil))
(insn 59 58 60 7 (set (reg:DI 0 ax [114])
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7f20b703c120 *.LC6>)) "tester/file_tester.c":39:7 80 {*movdi_internal}
     (nil))
(insn 60 59 61 7 (set (reg:DI 5 di)
        (reg:DI 0 ax [114])) "tester/file_tester.c":39:7 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7f20b703c120 *.LC6>)
        (nil)))
(call_insn 61 60 165 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f20b72c6700 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) "tester/file_tester.c":39:7 909 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 165 61 166 7 (set (pc)
        (label_ref 163)) "tester/file_tester.c":43:5 892 {jump}
     (nil)
 -> 163)
;;  succ:       18 [always]  tester/file_tester.c:43:5
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 166 165 64)
;; basic block 8, loop depth 0, maybe hot
;;  prev block 7, next block 9, flags: (RTL, MODIFIED)
;;  pred:       6
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 115
(code_label 64 166 65 8 12 (nil) [1 uses])
(note 65 64 66 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 66 65 67 8 (set (reg:DI 0 ax [115])
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7f20b703c1b0 *.LC7>)) "tester/file_tester.c":41:7 80 {*movdi_internal}
     (nil))
(insn 67 66 68 8 (set (reg:DI 5 di)
        (reg:DI 0 ax [115])) "tester/file_tester.c":41:7 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7f20b703c1b0 *.LC7>)
        (nil)))
(call_insn 68 67 167 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f20b72c6700 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) "tester/file_tester.c":41:7 909 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 167 68 168 8 (set (pc)
        (label_ref 163)) "tester/file_tester.c":43:5 892 {jump}
     (nil)
 -> 163)
;;  succ:       18 [always]  tester/file_tester.c:43:5
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 168 167 73)
;; basic block 9, loop depth 0, maybe hot
;;  prev block 8, next block 10, flags: (RTL, MODIFIED)
;;  pred:       5
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags] 86 116 117
(code_label 73 168 74 9 11 (nil) [1 uses])
(note 74 73 75 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 75 74 76 9 (set (reg/f:DI 0 ax [116])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [7 tester+0 S8 A64])) "tester/file_tester.c":45:17 80 {*movdi_internal}
     (nil))
(insn 76 75 77 9 (set (mem:SI (plus:DI (reg/f:DI 0 ax [116])
                (const_int 32 [0x20])) [4 tester_24(D)->error+0 S4 A64])
        (const_int 1 [0x1])) "tester/file_tester.c":45:17 81 {*movsi_internal}
     (nil))
(insn 77 76 78 9 (set (reg/f:DI 0 ax [117])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [7 tester+0 S8 A64])) "tester/file_tester.c":47:13 80 {*movdi_internal}
     (nil))
(insn 78 77 79 9 (set (reg/f:DI 0 ax [orig:86 _5 ] [86])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [117])
                (const_int 24 [0x18])) [2 tester_24(D)->inner_file+0 S8 A64])) "tester/file_tester.c":47:13 80 {*movdi_internal}
     (nil))
(insn 79 78 80 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:86 _5 ] [86])
            (const_int 0 [0]))) "tester/file_tester.c":47:6 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 80 79 81 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 87)
            (pc))) "tester/file_tester.c":47:6 891 {*jcc}
     (nil)
 -> 87)
;;  succ:       10 (FALLTHRU)
;;              11
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 10, loop depth 0, maybe hot
;;  prev block 9, next block 11, flags: (RTL, MODIFIED)
;;  pred:       9 (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 118
(note 81 80 82 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 82 81 83 10 (set (reg:DI 0 ax [118])
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x7f20b703c240 *.LC8>)) "tester/file_tester.c":48:5 80 {*movdi_internal}
     (nil))
(insn 83 82 84 10 (set (reg:DI 5 di)
        (reg:DI 0 ax [118])) "tester/file_tester.c":48:5 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x7f20b703c240 *.LC8>)
        (nil)))
(call_insn 84 83 169 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f20b72c6700 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) "tester/file_tester.c":48:5 909 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 169 84 170 10 (set (pc)
        (label_ref 163)) "tester/file_tester.c":49:5 892 {jump}
     (nil)
 -> 163)
;;  succ:       18 [always]  tester/file_tester.c:49:5
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 170 169 87)
;; basic block 11, loop depth 0, maybe hot
;;  prev block 10, next block 12, flags: (RTL, MODIFIED)
;;  pred:       9
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags] 87 88 119
(code_label 87 170 88 11 14 (nil) [1 uses])
(note 88 87 89 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 89 88 90 11 (set (reg/f:DI 0 ax [119])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [7 tester+0 S8 A64])) "tester/file_tester.c":53:13 80 {*movdi_internal}
     (nil))
(insn 90 89 91 11 (set (reg/f:DI 0 ax [orig:87 _6 ] [87])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [119])
                (const_int 24 [0x18])) [2 tester_24(D)->inner_file+0 S8 A64])) "tester/file_tester.c":53:13 80 {*movdi_internal}
     (nil))
(insn 91 90 92 11 (set (reg:SI 0 ax [orig:88 _7 ] [88])
        (mem:SI (reg/f:DI 0 ax [orig:87 _6 ] [87]) [4 _6->type+0 S4 A64])) "tester/file_tester.c":53:25 81 {*movsi_internal}
     (nil))
(insn 92 91 93 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -12 [0xfffffffffffffff4])) [4 type+0 S4 A32])
            (reg:SI 0 ax [orig:88 _7 ] [88]))) "tester/file_tester.c":53:6 11 {*cmpsi_1}
     (nil))
(jump_insn 93 92 94 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 107)
            (pc))) "tester/file_tester.c":53:6 891 {*jcc}
     (nil)
 -> 107)
;;  succ:       12 (FALLTHRU)
;;              13
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 12, loop depth 0, maybe hot
;;  prev block 11, next block 13, flags: (RTL, MODIFIED)
;;  pred:       11 (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 89 90 120 121 122
(note 94 93 95 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 95 94 96 12 (set (reg/f:DI 0 ax [120])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [7 tester+0 S8 A64])) "tester/file_tester.c":55:18 80 {*movdi_internal}
     (nil))
(insn 96 95 97 12 (set (reg/f:DI 0 ax [orig:89 _8 ] [89])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [120])
                (const_int 24 [0x18])) [2 tester_24(D)->inner_file+0 S8 A64])) "tester/file_tester.c":55:18 80 {*movdi_internal}
     (nil))
(insn 97 96 98 12 (set (reg:SI 0 ax [orig:90 _9 ] [90])
        (mem:SI (reg/f:DI 0 ax [orig:89 _8 ] [89]) [4 _8->type+0 S4 A64])) "tester/file_tester.c":54:5 81 {*movsi_internal}
     (nil))
(insn 98 97 100 12 (set (reg:SI 1 dx [121])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [4 type+0 S4 A32])) "tester/file_tester.c":54:5 81 {*movsi_internal}
     (nil))
(insn 100 98 101 12 (set (reg:SI 4 si)
        (reg:SI 0 ax [orig:90 _9 ] [90])) "tester/file_tester.c":54:5 81 {*movsi_internal}
     (nil))
(insn 101 100 102 12 (set (reg:DI 0 ax [122])
        (symbol_ref/f:DI ("*.LC9") [flags 0x2]  <var_decl 0x7f20b703c2d0 *.LC9>)) "tester/file_tester.c":54:5 80 {*movdi_internal}
     (nil))
(insn 102 101 103 12 (set (reg:DI 5 di)
        (reg:DI 0 ax [122])) "tester/file_tester.c":54:5 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC9") [flags 0x2]  <var_decl 0x7f20b703c2d0 *.LC9>)
        (nil)))
(insn 103 102 104 12 (set (reg:QI 0 ax)
        (const_int 0 [0])) "tester/file_tester.c":54:5 83 {*movqi_internal}
     (nil))
(call_insn 104 103 171 12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f20b72c6000 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "tester/file_tester.c":54:5 909 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
(jump_insn 171 104 172 12 (set (pc)
        (label_ref 163)) "tester/file_tester.c":56:5 892 {jump}
     (nil)
 -> 163)
;;  succ:       18 [always]  tester/file_tester.c:56:5
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 172 171 107)
;; basic block 13, loop depth 0, maybe hot
;;  prev block 12, next block 14, flags: (RTL, MODIFIED)
;;  pred:       11
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags] 91 92 123
(code_label 107 172 108 13 15 (nil) [1 uses])
(note 108 107 109 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 109 108 110 13 (set (reg/f:DI 0 ax [123])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [7 tester+0 S8 A64])) "tester/file_tester.c":60:13 80 {*movdi_internal}
     (nil))
(insn 110 109 111 13 (set (reg/f:DI 0 ax [orig:91 _10 ] [91])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [123])
                (const_int 24 [0x18])) [2 tester_24(D)->inner_file+0 S8 A64])) "tester/file_tester.c":60:13 80 {*movdi_internal}
     (nil))
(insn 111 110 112 13 (set (reg:SI 0 ax [orig:92 _11 ] [92])
        (mem:SI (plus:DI (reg/f:DI 0 ax [orig:91 _10 ] [91])
                (const_int 4 [0x4])) [4 _10->size+0 S4 A32])) "tester/file_tester.c":60:25 81 {*movsi_internal}
     (nil))
(insn 112 111 113 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:92 _11 ] [92])
            (const_int 0 [0]))) "tester/file_tester.c":60:6 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 113 112 114 13 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 126)
            (pc))) "tester/file_tester.c":60:6 891 {*jcc}
     (nil)
 -> 126)
;;  succ:       14 (FALLTHRU)
;;              15
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 14, loop depth 0, maybe hot
;;  prev block 13, next block 15, flags: (RTL, MODIFIED)
;;  pred:       13 (FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 93 94 124 125
(note 114 113 115 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 115 114 116 14 (set (reg/f:DI 0 ax [124])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [7 tester+0 S8 A64])) "tester/file_tester.c":62:18 80 {*movdi_internal}
     (nil))
(insn 116 115 117 14 (set (reg/f:DI 0 ax [orig:93 _12 ] [93])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [124])
                (const_int 24 [0x18])) [2 tester_24(D)->inner_file+0 S8 A64])) "tester/file_tester.c":62:18 80 {*movdi_internal}
     (nil))
(insn 117 116 118 14 (set (reg:SI 0 ax [orig:94 _13 ] [94])
        (mem:SI (plus:DI (reg/f:DI 0 ax [orig:93 _12 ] [93])
                (const_int 4 [0x4])) [4 _12->size+0 S4 A32])) "tester/file_tester.c":61:5 81 {*movsi_internal}
     (nil))
(insn 118 117 119 14 (set (reg:SI 1 dx)
        (const_int 0 [0])) "tester/file_tester.c":61:5 81 {*movsi_internal}
     (nil))
(insn 119 118 120 14 (set (reg:SI 4 si)
        (reg:SI 0 ax [orig:94 _13 ] [94])) "tester/file_tester.c":61:5 81 {*movsi_internal}
     (nil))
(insn 120 119 121 14 (set (reg:DI 0 ax [125])
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7f20b703c360 *.LC10>)) "tester/file_tester.c":61:5 80 {*movdi_internal}
     (nil))
(insn 121 120 122 14 (set (reg:DI 5 di)
        (reg:DI 0 ax [125])) "tester/file_tester.c":61:5 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7f20b703c360 *.LC10>)
        (nil)))
(insn 122 121 123 14 (set (reg:QI 0 ax)
        (const_int 0 [0])) "tester/file_tester.c":61:5 83 {*movqi_internal}
     (nil))
(call_insn 123 122 173 14 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f20b72c6000 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "tester/file_tester.c":61:5 909 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
(jump_insn 173 123 174 14 (set (pc)
        (label_ref 163)) "tester/file_tester.c":63:5 892 {jump}
     (nil)
 -> 163)
;;  succ:       18 [always]  tester/file_tester.c:63:5
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 174 173 126)
;; basic block 15, loop depth 0, maybe hot
;;  prev block 14, next block 16, flags: (RTL, MODIFIED)
;;  pred:       13
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 95 96 97 98 126 127
(code_label 126 174 127 15 16 (nil) [1 uses])
(note 127 126 128 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 128 127 129 15 (set (reg/f:DI 0 ax [126])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [7 tester+0 S8 A64])) "tester/file_tester.c":67:21 80 {*movdi_internal}
     (nil))
(insn 129 128 130 15 (set (reg/f:DI 0 ax [orig:95 _14 ] [95])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [126])
                (const_int 24 [0x18])) [2 tester_24(D)->inner_file+0 S8 A64])) "tester/file_tester.c":67:21 80 {*movdi_internal}
     (nil))
(insn 130 129 131 15 (set (reg/f:DI 0 ax [orig:96 _15 ] [96])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:95 _14 ] [95])
                (const_int 16 [0x10])) [6 _14->base+0 S8 A64])) "tester/file_tester.c":67:33 80 {*movdi_internal}
     (nil))
(insn 131 130 132 15 (set (reg/f:DI 2 cx [orig:97 _16 ] [97])
        (reg/f:DI 0 ax [orig:96 _15 ] [96])) "tester/file_tester.c":67:39 80 {*movdi_internal}
     (nil))
(insn 132 131 133 15 (set (reg:DI 0 ax [127])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 name+0 S8 A64])) "tester/file_tester.c":67:7 80 {*movdi_internal}
     (nil))
(insn 133 132 134 15 (set (reg:DI 1 dx)
        (const_int 32 [0x20])) "tester/file_tester.c":67:7 80 {*movdi_internal}
     (nil))
(insn 134 133 135 15 (set (reg:DI 4 si)
        (reg:DI 0 ax [127])) "tester/file_tester.c":67:7 80 {*movdi_internal}
     (nil))
(insn 135 134 136 15 (set (reg:DI 5 di)
        (reg/f:DI 2 cx [orig:97 _16 ] [97])) "tester/file_tester.c":67:7 80 {*movdi_internal}
     (nil))
(call_insn/i 136 135 138 15 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strncmp") [flags 0x41]  <function_decl 0x7f20b72c0c00 strncmp>) [0 __builtin_strncmp S1 A8])
            (const_int 0 [0]))) "tester/file_tester.c":67:7 909 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 138 136 139 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:98 _17 ] [98])
            (const_int 0 [0]))) "tester/file_tester.c":67:6 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 139 138 140 15 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 154)
            (pc))) "tester/file_tester.c":67:6 891 {*jcc}
     (nil)
 -> 154)
;;  succ:       16 (FALLTHRU)
;;              17
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 16, loop depth 0, maybe hot
;;  prev block 15, next block 17, flags: (RTL, MODIFIED)
;;  pred:       15 (FALLTHRU)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 99 100 101 128 129 130
(note 140 139 141 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 141 140 142 16 (set (reg/f:DI 0 ax [128])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [7 tester+0 S8 A64])) "tester/file_tester.c":69:18 80 {*movdi_internal}
     (nil))
(insn 142 141 143 16 (set (reg/f:DI 0 ax [orig:99 _18 ] [99])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [128])
                (const_int 24 [0x18])) [2 tester_24(D)->inner_file+0 S8 A64])) "tester/file_tester.c":69:18 80 {*movdi_internal}
     (nil))
(insn 143 142 144 16 (set (reg/f:DI 0 ax [orig:100 _19 ] [100])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:99 _18 ] [99])
                (const_int 16 [0x10])) [6 _18->base+0 S8 A64])) "tester/file_tester.c":69:30 80 {*movdi_internal}
     (nil))
(insn 144 143 145 16 (set (reg/f:DI 2 cx [orig:101 _20 ] [101])
        (reg/f:DI 0 ax [orig:100 _19 ] [100])) "tester/file_tester.c":69:36 80 {*movdi_internal}
     (nil))
(insn 145 144 146 16 (set (reg:DI 0 ax [129])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 name+0 S8 A64])) "tester/file_tester.c":68:5 80 {*movdi_internal}
     (nil))
(insn 146 145 147 16 (set (reg:DI 1 dx)
        (reg:DI 0 ax [129])) "tester/file_tester.c":68:5 80 {*movdi_internal}
     (nil))
(insn 147 146 148 16 (set (reg:DI 4 si)
        (reg/f:DI 2 cx [orig:101 _20 ] [101])) "tester/file_tester.c":68:5 80 {*movdi_internal}
     (nil))
(insn 148 147 149 16 (set (reg:DI 0 ax [130])
        (symbol_ref/f:DI ("*.LC11") [flags 0x2]  <var_decl 0x7f20b703c3f0 *.LC11>)) "tester/file_tester.c":68:5 80 {*movdi_internal}
     (nil))
(insn 149 148 150 16 (set (reg:DI 5 di)
        (reg:DI 0 ax [130])) "tester/file_tester.c":68:5 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC11") [flags 0x2]  <var_decl 0x7f20b703c3f0 *.LC11>)
        (nil)))
(insn 150 149 151 16 (set (reg:QI 0 ax)
        (const_int 0 [0])) "tester/file_tester.c":68:5 83 {*movqi_internal}
     (nil))
(call_insn 151 150 175 16 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f20b72c6000 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "tester/file_tester.c":68:5 909 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(jump_insn 175 151 176 16 (set (pc)
        (label_ref 163)) "tester/file_tester.c":70:5 892 {jump}
     (nil)
 -> 163)
;;  succ:       18 [always]  tester/file_tester.c:70:5
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 176 175 154)
;; basic block 17, loop depth 0, maybe hot
;;  prev block 16, next block 19, flags: (RTL, MODIFIED)
;;  pred:       15
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 131 132
(code_label 154 176 155 17 17 (nil) [1 uses])
(note 155 154 156 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 156 155 157 17 (set (reg/f:DI 0 ax [131])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [7 tester+0 S8 A64])) "tester/file_tester.c":72:17 80 {*movdi_internal}
     (nil))
(insn 157 156 158 17 (set (mem:SI (plus:DI (reg/f:DI 0 ax [131])
                (const_int 32 [0x20])) [4 tester_24(D)->error+0 S4 A64])
        (const_int 0 [0])) "tester/file_tester.c":72:17 81 {*movsi_internal}
     (nil))
(insn 158 157 159 17 (set (reg:DI 0 ax [132])
        (symbol_ref/f:DI ("*.LC12") [flags 0x2]  <var_decl 0x7f20b703c480 *.LC12>)) "tester/file_tester.c":73:3 80 {*movdi_internal}
     (nil))
(insn 159 158 160 17 (set (reg:DI 5 di)
        (reg:DI 0 ax [132])) "tester/file_tester.c":73:3 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC12") [flags 0x2]  <var_decl 0x7f20b703c480 *.LC12>)
        (nil)))
(call_insn 160 159 177 17 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f20b72c6700 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) "tester/file_tester.c":73:3 909 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 177 160 178 17 (set (pc)
        (label_ref 163)) 892 {jump}
     (nil)
 -> 163)
;;  succ:       18
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 178 177 180)
;; basic block 19, loop depth 0, maybe hot
;;  prev block 17, next block 18, flags: (RTL, MODIFIED)
;;  pred:       2 tester/file_tester.c:30:5
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(code_label 180 178 179 19 18 (nil) [1 uses])
(note 179 180 181 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 181 179 163 19 (const_int 0 [0]) "tester/file_tester.c":30:5 928 {nop}
     (nil))
;;  succ:       18 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 18, loop depth 0, maybe hot
;;  prev block 19, next block 1, flags: (RTL, MODIFIED)
;;  pred:       16 [always]  tester/file_tester.c:70:5
;;              19 [always]  (FALLTHRU)
;;              14 [always]  tester/file_tester.c:63:5
;;              7 [always]  tester/file_tester.c:43:5
;;              8 [always]  tester/file_tester.c:43:5
;;              10 [always]  tester/file_tester.c:49:5
;;              12 [always]  tester/file_tester.c:56:5
;;              17
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(code_label 163 181 164 18 7 (nil) [7 uses])
(note 164 163 182 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(note 182 164 0 NOTE_INSN_DELETED)

;; Function file_tester_write (file_tester_write, funcdef_no=9, decl_uid=2034, cgraph_uid=10, symbol_order=9)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=80, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 19 to 7 (offset=64, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 4:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 5:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 9:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 11:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 18:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 19:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 22:  (0) r  (1) i {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 24:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 25:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 26:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 27:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 28:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 29:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 30:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 31
	 Choosing alt 0 in insn 31:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 254:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 255:  (0) =r  (2) rm  (3) 0 {*movsicc_noc}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 33:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 34:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 35:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 36:  (0) r {*cmpdi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 39:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 40:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 41:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 42:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 43:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 48:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 50:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 53:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 54:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 55:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 57:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 62:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 64:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 69:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 70:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 71:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 72:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 74:  (1) rBwBz {*call_value}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 76:  (0) m  (1) re {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 77:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 78:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 79:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 80:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 82:  (1) rBwBz {*call_value}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 84:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 85:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 86:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 87:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 88:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 89:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 90:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 91:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 92:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 93:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 94:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 98:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 99:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 100:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 101:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 102:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 103:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 104:  (0) =rm  (1) %0  (2) re {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 105:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 109:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 110:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 111:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 112:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 113:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 114:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 119:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 121:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 122:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 123:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 124:  (0) rm  (1) re {*cmpsi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 127:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 128:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 129:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 130:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 133:  (0) r  (1) i {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 135:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 136:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 141:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 142:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 143:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 144:  (0) rm  (1) re {*cmpsi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 147:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 148:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 149:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 150:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 153:  (0) r  (1) i {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 155:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 156:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 161:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 162:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 163:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 164:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 167:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 169:  (1) rBwBz {*call_value}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 171:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 175:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 176:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 177:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 178
	 Choosing alt 0 in insn 178:  (0) =rm  (1) %0  (2) re {*adddi_1}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 179:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 180:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 181:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 182:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 183
	 Choosing alt 0 in insn 183:  (0) =rm  (1) %0  (2) re {*adddi_1}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 184:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 185:  (0) qm  (1) qn {*cmpqi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 188:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 189:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 190:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 191
	 Choosing alt 0 in insn 191:  (0) =rm  (1) %0  (2) re {*adddi_1}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 192:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 193:  (0) =r  (1) qm {extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 194:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 195:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 196:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 197
	 Choosing alt 0 in insn 197:  (0) =rm  (1) %0  (2) re {*adddi_1}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 198:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 199:  (0) =r  (1) qm {extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 200:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 204:  (0) r  (1) i {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 206:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 207:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 212:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 216:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 217:  (0) r  (1) rBM {*cmpsi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 220:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 221:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 222:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 224:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 227:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 229:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 230:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 232:  (0) rBwBz {*call}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #1: **********

EBB 2 3 4 5
EBB 6
EBB 7 8
EBB 9 10
EBB 11
EBB 12 13
EBB 14
EBB 15 16
EBB 17
EBB 19
EBB 18

********** Pseudo live ranges #1: **********

  BB 18
  BB 17
   Insn 249: point = 0, n_alt = -1
   Insn 232: point = 0, n_alt = 0
   Insn 231: point = 0, n_alt = -2
   Insn 230: point = 1, n_alt = 3
   Insn 229: point = 2, n_alt = 0
   Insn 228: point = 2, n_alt = -2
   Insn 227: point = 3, n_alt = 3
  BB 13
   Insn 247: point = 4, n_alt = -1
   Insn 207: point = 4, n_alt = 0
   Insn 206: point = 4, n_alt = 3
   Insn 205: point = 4, n_alt = -2
   Insn 204: point = 5, n_alt = 4
   Insn 203: point = 6, n_alt = -2
   Insn 202: point = 7, n_alt = -2
   Insn 201: point = 8, n_alt = -2
   Insn 200: point = 9, n_alt = 0
   Insn 199: point = 10, n_alt = 0
   Insn 198: point = 12, n_alt = 4
   Insn 197: point = 14, n_alt = 0
   Insn 196: point = 16, n_alt = 3
   Insn 195: point = 17, n_alt = 1
   Insn 194: point = 19, n_alt = 0
   Insn 193: point = 20, n_alt = 0
   Insn 192: point = 22, n_alt = 4
   Insn 191: point = 24, n_alt = 0
   Insn 190: point = 26, n_alt = 3
   Insn 189: point = 27, n_alt = 1
   Insn 188: point = 29, n_alt = 0
  BB 8
   Insn 241: point = 30, n_alt = -1
   Insn 136: point = 30, n_alt = 0
   Insn 135: point = 30, n_alt = 3
   Insn 134: point = 30, n_alt = -2
   Insn 133: point = 31, n_alt = 4
   Insn 132: point = 32, n_alt = -2
   Insn 131: point = 33, n_alt = -2
   Insn 130: point = 34, n_alt = 0
   Insn 129: point = 35, n_alt = 0
   Insn 128: point = 37, n_alt = 3
   Insn 127: point = 39, n_alt = 3
  BB 10
   Insn 243: point = 40, n_alt = -1
   Insn 156: point = 40, n_alt = 0
   Insn 155: point = 40, n_alt = 3
   Insn 154: point = 40, n_alt = -2
   Insn 153: point = 41, n_alt = 4
   Insn 152: point = 42, n_alt = -2
   Insn 151: point = 43, n_alt = -2
   Insn 150: point = 44, n_alt = 0
   Insn 149: point = 45, n_alt = 0
   Insn 148: point = 47, n_alt = 3
   Insn 147: point = 49, n_alt = 3
  BB 16
   Insn 224: point = 50, n_alt = 0
   Insn 223: point = 50, n_alt = -2
   Insn 222: point = 51, n_alt = 4
   Insn 221: point = 52, n_alt = 1
   Insn 220: point = 53, n_alt = 3
  BB 15
   Insn 218: point = 54, n_alt = -1
   Insn 217: point = 54, n_alt = 1
   Insn 216: point = 55, n_alt = 0
  BB 11
   Insn 245: point = 56, n_alt = -1
   Insn 171: point = 56, n_alt = 1
   Insn 169: point = 56, n_alt = 0
   Insn 168: point = 56, n_alt = -2
   Insn 167: point = 57, n_alt = 0
   Insn 166: point = 57, n_alt = -2
   Insn 165: point = 58, n_alt = -2
   Insn 164: point = 59, n_alt = 0
   Insn 163: point = 60, n_alt = 3
   Insn 162: point = 61, n_alt = 3
   Insn 161: point = 63, n_alt = 3
  BB 9
   Insn 145: point = 64, n_alt = -1
   Insn 144: point = 64, n_alt = 0
   Insn 143: point = 65, n_alt = 0
   Insn 142: point = 67, n_alt = 3
   Insn 141: point = 69, n_alt = 3
  BB 7
   Insn 125: point = 70, n_alt = -1
   Insn 124: point = 70, n_alt = 0
   Insn 123: point = 71, n_alt = 0
   Insn 122: point = 73, n_alt = 3
   Insn 121: point = 75, n_alt = 3
   Insn 119: point = 76, n_alt = 0
   Insn 118: point = 76, n_alt = -2
   Insn 117: point = 77, n_alt = -2
   Insn 116: point = 78, n_alt = -2
   Insn 115: point = 79, n_alt = -2
   Insn 114: point = 80, n_alt = 0
   Insn 113: point = 81, n_alt = 0
   Insn 112: point = 82, n_alt = 3
   Insn 111: point = 83, n_alt = 3
   Insn 110: point = 85, n_alt = 3
   Insn 109: point = 86, n_alt = 0
   Insn 108: point = 86, n_alt = -2
   Insn 107: point = 87, n_alt = -2
   Insn 106: point = 88, n_alt = -2
   Insn 105: point = 89, n_alt = 3
   Insn 104: point = 90, n_alt = 0
   Insn 103: point = 92, n_alt = 3
   Insn 102: point = 93, n_alt = 1
   Insn 101: point = 95, n_alt = 0
   Insn 100: point = 96, n_alt = 1
   Insn 99: point = 98, n_alt = 0
   Insn 98: point = 99, n_alt = 0
   Insn 97: point = 99, n_alt = -2
   Insn 96: point = 100, n_alt = -2
   Insn 95: point = 101, n_alt = -2
   Insn 94: point = 102, n_alt = 3
   Insn 93: point = 103, n_alt = 3
   Insn 92: point = 105, n_alt = 3
   Insn 91: point = 107, n_alt = 3
   Insn 90: point = 108, n_alt = 1
   Insn 89: point = 110, n_alt = 0
   Insn 88: point = 112, n_alt = 3
   Insn 87: point = 114, n_alt = 3
   Insn 86: point = 115, n_alt = 1
   Insn 85: point = 116, n_alt = 3
   Insn 84: point = 117, n_alt = 5
   Insn 83: point = 118, n_alt = -2
   Insn 82: point = 119, n_alt = 0
   Insn 81: point = 119, n_alt = -2
   Insn 80: point = 120, n_alt = 2
   Insn 79: point = 120, n_alt = 0
   Insn 78: point = 122, n_alt = 0
   Insn 77: point = 124, n_alt = 0
   Insn 76: point = 125, n_alt = 5
   Insn 75: point = 126, n_alt = -2
   Insn 74: point = 127, n_alt = 0
   Insn 73: point = 127, n_alt = -2
   Insn 72: point = 128, n_alt = 2
   Insn 71: point = 128, n_alt = 0
   Insn 70: point = 130, n_alt = 0
   Insn 69: point = 132, n_alt = 0
  BB 5
   Insn 237: point = 133, n_alt = -1
   Insn 57: point = 133, n_alt = 0
   Insn 56: point = 133, n_alt = -2
   Insn 55: point = 134, n_alt = 4
   Insn 54: point = 135, n_alt = 1
   Insn 53: point = 136, n_alt = 3
  BB 14
   Insn 212: point = 137, n_alt = 0
  BB 12
   Insn 186: point = 137, n_alt = -1
   Insn 185: point = 137, n_alt = 0
   Insn 184: point = 138, n_alt = 4
   Insn 183: point = 140, n_alt = 0
   Insn 182: point = 142, n_alt = 3
   Insn 181: point = 143, n_alt = 1
   Insn 180: point = 145, n_alt = 0
   Insn 179: point = 146, n_alt = 4
   Insn 178: point = 148, n_alt = 0
   Insn 177: point = 150, n_alt = 3
   Insn 176: point = 151, n_alt = 1
   Insn 175: point = 153, n_alt = 0
  BB 19
   Insn 253: point = 154, n_alt = -1
  BB 6
   Insn 239: point = 154, n_alt = -1
   Insn 64: point = 154, n_alt = 0
   Insn 63: point = 154, n_alt = -2
   Insn 62: point = 155, n_alt = 4
  BB 4
   Insn 51: point = 156, n_alt = -1
   Insn 50: point = 156, n_alt = 0
   Insn 49: point = 157, n_alt = -2
   Insn 48: point = 158, n_alt = 0
   Insn 47: point = 158, n_alt = -2
   Insn 46: point = 159, n_alt = -2
   Insn 45: point = 160, n_alt = -2
   Insn 44: point = 161, n_alt = -2
   Insn 43: point = 162, n_alt = 0
   Insn 42: point = 163, n_alt = 0
   Insn 41: point = 164, n_alt = 3
   Insn 40: point = 165, n_alt = 3
   Insn 39: point = 167, n_alt = 3
  BB 3
   Insn 37: point = 168, n_alt = -1
   Insn 36: point = 168, n_alt = 0
   Insn 35: point = 169, n_alt = 3
   Insn 34: point = 171, n_alt = 3
   Insn 33: point = 172, n_alt = 1
   Insn 255: point = 173, n_alt = 0
   Insn 254: point = 175, n_alt = 0
   Insn 31: point = 175, n_alt = 0
   Insn 30: point = 177, n_alt = 0
   Insn 29: point = 178, n_alt = 0
   Insn 28: point = 179, n_alt = 0
   Insn 27: point = 181, n_alt = 3
   Insn 26: point = 183, n_alt = 3
   Insn 25: point = 184, n_alt = 0
   Insn 24: point = 184, n_alt = 3
   Insn 23: point = 184, n_alt = -2
   Insn 22: point = 185, n_alt = 4
   Insn 21: point = 186, n_alt = -2
   Insn 20: point = 187, n_alt = -2
   Insn 19: point = 188, n_alt = 0
   Insn 18: point = 189, n_alt = 0
  BB 2
   Insn 12: point = 190, n_alt = -1
   Insn 11: point = 190, n_alt = 0
   Insn 10: point = 191, n_alt = 0
   Insn 9: point = 193, n_alt = 3
   Insn 5: point = 194, n_alt = 5
   Insn 4: point = 194, n_alt = 1
   Insn 3: point = 194, n_alt = 1
   Insn 2: point = 194, n_alt = 5
 r82: [190..191]
 r83: [180..181]
 r84: [174..179]
 r85: [174..175]
 r86: [168..169]
 r87: [158..165]
 r88: [156..157]
 r89: [129..130]
 r90: [127..128]
 r91: [121..122]
 r92: [119..120]
 r93: [111..112]
 r94: [109..110]
 r95: [101..108]
 r96: [104..105]
 r97: [100..103]
 r98: [88..96]
 r99: [91..93]
 r100: [86..90]
 r101: [76..83]
 r102: [72..73]
 r103: [70..71]
 r104: [36..37]
 r105: [32..35]
 r106: [66..67]
 r107: [64..65]
 r108: [46..47]
 r109: [42..45]
 r110: [56..61]
 r111: [149..151]
 r112: [147..148]
 r113: [137..146]
 r114: [141..143]
 r115: [139..140]
 r116: [137..138]
 r117: [25..27]
 r118: [23..24]
 r119: [21..22]
 r120: [8..20]
 r121: [15..17]
 r122: [13..14]
 r123: [11..12]
 r124: [7..10]
 r125: [192..193]
 r126: [187..189]
 r127: [186..188]
 r128: [184..185]
 r129: [182..183]
 r130: [176..178]
 r131: [176..177]
 r132: [172..173]
 r133: [170..171]
 r134: [166..167]
 r135: [161..164]
 r136: [160..163]
 r137: [159..162]
 r138: [135..136]
 r139: [133..134]
 r140: [154..155]
 r141: [131..132]
 r142: [125..126]
 r143: [123..124]
 r144: [117..118]
 r145: [115..116]
 r146: [113..114]
 r147: [106..107]
 r148: [99..102]
 r149: [97..98]
 r150: [94..95]
 r151: [91..92]
 r152: [87..89]
 r153: [84..85]
 r154: [79..82]
 r155: [78..81]
 r156: [77..80]
 r157: [74..75]
 r158: [38..39]
 r159: [33..34]
 r160: [30..31]
 r161: [68..69]
 r162: [48..49]
 r163: [43..44]
 r164: [40..41]
 r165: [62..63]
 r166: [58..60]
 r167: [57..59]
 r168: [152..153]
 r169: [149..150]
 r170: [144..145]
 r171: [141..142]
 r172: [28..29]
 r173: [25..26]
 r174: [18..19]
 r175: [15..16]
 r176: [6..9]
 r177: [4..5]
 r178: [54..55]
 r179: [52..53]
 r180: [50..51]
 r181: [2..3]
 r182: [0..1]
Compressing live ranges: from 194 to 152 - 78%
Ranges after the compression:
 r82: [148..149]
 r83: [140..141]
 r84: [136..139]
 r85: [136..137]
 r86: [130..131]
 r87: [126..127]
 r88: [124..125]
 r89: [100..101]
 r90: [98..99]
 r91: [92..93]
 r92: [90..91]
 r93: [82..83]
 r94: [80..81]
 r95: [74..79]
 r96: [76..77]
 r97: [74..75]
 r98: [66..71]
 r99: [68..69]
 r100: [66..67]
 r101: [62..63]
 r102: [58..59]
 r103: [56..57]
 r104: [28..29]
 r105: [26..27]
 r106: [52..53]
 r107: [50..51]
 r108: [36..37]
 r109: [34..35]
 r110: [46..47]
 r111: [118..119]
 r112: [116..117]
 r113: [108..115]
 r114: [112..113]
 r115: [110..111]
 r116: [108..109]
 r117: [20..21]
 r118: [18..19]
 r119: [16..17]
 r120: [6..15]
 r121: [12..13]
 r122: [10..11]
 r123: [8..9]
 r124: [6..7]
 r125: [150..151]
 r126: [146..147]
 r127: [146..147]
 r128: [144..145]
 r129: [142..143]
 r130: [138..139]
 r131: [138..139]
 r132: [134..135]
 r133: [132..133]
 r134: [128..129]
 r135: [126..127]
 r136: [126..127]
 r137: [126..127]
 r138: [106..107]
 r139: [104..105]
 r140: [122..123]
 r141: [102..103]
 r142: [96..97]
 r143: [94..95]
 r144: [88..89]
 r145: [86..87]
 r146: [84..85]
 r147: [78..79]
 r148: [74..75]
 r149: [72..73]
 r150: [70..71]
 r151: [68..69]
 r152: [66..67]
 r153: [64..65]
 r154: [62..63]
 r155: [62..63]
 r156: [62..63]
 r157: [60..61]
 r158: [30..31]
 r159: [26..27]
 r160: [24..25]
 r161: [54..55]
 r162: [38..39]
 r163: [34..35]
 r164: [32..33]
 r165: [48..49]
 r166: [46..47]
 r167: [46..47]
 r168: [120..121]
 r169: [118..119]
 r170: [114..115]
 r171: [112..113]
 r172: [22..23]
 r173: [20..21]
 r174: [14..15]
 r175: [12..13]
 r176: [6..7]
 r177: [4..5]
 r178: [44..45]
 r179: [42..43]
 r180: [40..41]
 r181: [2..3]
 r182: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 6
	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=80, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 19 to 7 (offset=64, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
changing reg in insn 10
changing reg in insn 11
changing reg in insn 27
changing reg in insn 28
changing reg in insn 28
changing reg in insn 255
changing reg in insn 254
changing reg in insn 31
changing reg in insn 255
changing reg in insn 254
changing reg in insn 35
changing reg in insn 36
changing reg in insn 40
changing reg in insn 47
changing reg in insn 49
changing reg in insn 50
changing reg in insn 70
changing reg in insn 71
changing reg in insn 71
changing reg in insn 73
changing reg in insn 78
changing reg in insn 79
changing reg in insn 79
changing reg in insn 81
changing reg in insn 88
changing reg in insn 89
changing reg in insn 89
changing reg in insn 90
changing reg in insn 90
changing reg in insn 95
changing reg in insn 92
changing reg in insn 93
changing reg in insn 93
changing reg in insn 96
changing reg in insn 100
changing reg in insn 106
changing reg in insn 102
changing reg in insn 104
changing reg in insn 104
changing reg in insn 104
changing reg in insn 108
changing reg in insn 111
changing reg in insn 118
changing reg in insn 122
changing reg in insn 123
changing reg in insn 123
changing reg in insn 124
changing reg in insn 128
changing reg in insn 129
changing reg in insn 129
changing reg in insn 132
changing reg in insn 142
changing reg in insn 143
changing reg in insn 143
changing reg in insn 144
changing reg in insn 148
changing reg in insn 149
changing reg in insn 149
changing reg in insn 152
changing reg in insn 162
changing reg in insn 168
changing reg in insn 176
changing reg in insn 178
changing reg in insn 178
changing reg in insn 179
changing reg in insn 179
changing reg in insn 185
changing reg in insn 181
changing reg in insn 183
changing reg in insn 183
changing reg in insn 184
changing reg in insn 184
changing reg in insn 185
changing reg in insn 189
changing reg in insn 191
changing reg in insn 191
changing reg in insn 192
changing reg in insn 192
changing reg in insn 193
changing reg in insn 193
changing reg in insn 201
changing reg in insn 195
changing reg in insn 197
changing reg in insn 197
changing reg in insn 198
changing reg in insn 198
changing reg in insn 199
changing reg in insn 199
changing reg in insn 202
changing reg in insn 9
changing reg in insn 10
changing reg in insn 18
changing reg in insn 20
changing reg in insn 19
changing reg in insn 21
changing reg in insn 22
changing reg in insn 23
changing reg in insn 26
changing reg in insn 27
changing reg in insn 29
changing reg in insn 30
changing reg in insn 255
changing reg in insn 33
changing reg in insn 34
changing reg in insn 35
changing reg in insn 39
changing reg in insn 40
changing reg in insn 41
changing reg in insn 44
changing reg in insn 42
changing reg in insn 45
changing reg in insn 43
changing reg in insn 46
changing reg in insn 53
changing reg in insn 54
changing reg in insn 55
changing reg in insn 56
changing reg in insn 62
changing reg in insn 63
changing reg in insn 69
changing reg in insn 70
changing reg in insn 75
changing reg in insn 76
changing reg in insn 77
changing reg in insn 78
changing reg in insn 83
changing reg in insn 84
changing reg in insn 85
changing reg in insn 86
changing reg in insn 87
changing reg in insn 88
changing reg in insn 91
changing reg in insn 92
changing reg in insn 94
changing reg in insn 97
changing reg in insn 99
changing reg in insn 100
changing reg in insn 101
changing reg in insn 102
changing reg in insn 103
changing reg in insn 104
changing reg in insn 105
changing reg in insn 107
changing reg in insn 110
changing reg in insn 111
changing reg in insn 112
changing reg in insn 115
changing reg in insn 113
changing reg in insn 116
changing reg in insn 114
changing reg in insn 117
changing reg in insn 121
changing reg in insn 122
changing reg in insn 127
changing reg in insn 128
changing reg in insn 130
changing reg in insn 131
changing reg in insn 133
changing reg in insn 134
changing reg in insn 141
changing reg in insn 142
changing reg in insn 147
changing reg in insn 148
changing reg in insn 150
changing reg in insn 151
changing reg in insn 153
changing reg in insn 154
changing reg in insn 161
changing reg in insn 162
changing reg in insn 163
changing reg in insn 165
changing reg in insn 164
changing reg in insn 166
changing reg in insn 175
changing reg in insn 176
changing reg in insn 177
changing reg in insn 180
changing reg in insn 181
changing reg in insn 182
changing reg in insn 188
changing reg in insn 189
changing reg in insn 190
changing reg in insn 194
changing reg in insn 195
changing reg in insn 196
changing reg in insn 200
changing reg in insn 203
changing reg in insn 204
changing reg in insn 205
changing reg in insn 216
changing reg in insn 217
changing reg in insn 220
changing reg in insn 221
changing reg in insn 222
changing reg in insn 223
changing reg in insn 227
changing reg in insn 228
changing reg in insn 230
changing reg in insn 231
deleting insn with uid = 20.
deleting insn with uid = 44.
deleting insn with uid = 45.
deleting insn with uid = 46.
deleting insn with uid = 49.
deleting insn with uid = 75.
deleting insn with uid = 83.
deleting insn with uid = 95.
deleting insn with uid = 106.
deleting insn with uid = 115.
deleting insn with uid = 116.
deleting insn with uid = 117.
deleting insn with uid = 131.
deleting insn with uid = 151.
deleting insn with uid = 165.
deleting insn with uid = 166.
deleting insn with uid = 201.
deleting insn with uid = 202.
starting the processing of deferred insns
ending the processing of deferred insns


file_tester_write

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;;  ref usage 	r0={94d,81u} r1={31d,16u,3e} r2={26d,10u,2e} r4={28d,12u} r5={33d,17u} r6={1d,80u} r7={1d,35u} r8={16d} r9={16d} r10={16d} r11={16d} r12={16d} r13={16d} r14={16d} r15={16d} r17={33d,8u} r18={16d} r19={1d,1u,9e} r20={17d} r21={17d} r22={17d} r23={17d} r24={17d} r25={17d} r26={17d} r27={17d} r28={16d} r29={16d} r30={16d} r31={16d} r32={16d} r33={16d} r34={16d} r35={16d} r36={17d} r37={17d} r38={16d} r39={16d} r44={16d} r45={16d} r46={16d} r47={16d} r48={16d} r49={16d} r50={16d} r51={16d} r52={16d} r53={16d} r54={16d} r55={16d} r56={16d} r57={16d} r58={16d} r59={16d} r60={16d} r61={16d} r62={16d} r63={16d} r64={16d} r65={16d} r66={16d} r67={16d} r68={16d} r69={16d} r70={16d} r71={16d} r72={16d} r73={16d} r74={16d} r75={16d} 
;;    total ref usage 1508{1234d,260u,14e} in 178{162 regular + 16 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags] 82 125
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [7 tester+0 S8 A64])
        (reg:DI 5 di [ tester ])) "tester/file_tester.c":76:35 80 {*movdi_internal}
     (nil))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [4 offset+0 S4 A32])
        (reg:SI 4 si [ offset ])) "tester/file_tester.c":76:35 81 {*movsi_internal}
     (nil))
(insn 4 3 5 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [4 size+0 S4 A32])
        (reg:SI 1 dx [ size ])) "tester/file_tester.c":76:35 81 {*movsi_internal}
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [1 buf+0 S8 A64])
        (reg:DI 2 cx [ buf ])) "tester/file_tester.c":76:35 80 {*movdi_internal}
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (reg/f:DI 0 ax [125])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [7 tester+0 S8 A64])) "tester/file_tester.c":78:13 80 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:SI 0 ax [orig:82 _1 ] [82])
        (mem:SI (plus:DI (reg/f:DI 0 ax [125])
                (const_int 32 [0x20])) [4 tester_49(D)->error+0 S4 A64])) "tester/file_tester.c":78:13 81 {*movsi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:82 _1 ] [82])
            (const_int 0 [0]))) "tester/file_tester.c":78:6 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 12 11 17 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 252)
            (pc))) "tester/file_tester.c":78:6 891 {*jcc}
     (nil)
 -> 252)
;;  succ:       19 tester/file_tester.c:79:5
;;              3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 83 84 85 86 126 127 128 129 130 131 132 133
(note 17 12 18 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 3 (set (reg:SI 1 dx [126])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [4 offset+0 S4 A32])) "tester/file_tester.c":80:3 81 {*movsi_internal}
     (nil))
(insn 19 18 21 3 (set (reg:SI 0 ax [127])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [4 size+0 S4 A32])) "tester/file_tester.c":80:3 81 {*movsi_internal}
     (nil))
(insn 21 19 22 3 (set (reg:SI 4 si)
        (reg:SI 0 ax [127])) "tester/file_tester.c":80:3 81 {*movsi_internal}
     (nil))
(insn 22 21 23 3 (set (reg:DI 0 ax [128])
        (symbol_ref/f:DI ("*.LC13") [flags 0x2]  <var_decl 0x7f20b70472d0 *.LC13>)) "tester/file_tester.c":80:3 80 {*movdi_internal}
     (nil))
(insn 23 22 24 3 (set (reg:DI 5 di)
        (reg:DI 0 ax [128])) "tester/file_tester.c":80:3 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC13") [flags 0x2]  <var_decl 0x7f20b70472d0 *.LC13>)
        (nil)))
(insn 24 23 25 3 (set (reg:QI 0 ax)
        (const_int 0 [0])) "tester/file_tester.c":80:3 83 {*movqi_internal}
     (nil))
(call_insn 25 24 26 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f20b72c6000 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "tester/file_tester.c":80:3 909 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
(insn 26 25 27 3 (set (reg/f:DI 0 ax [129])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [7 tester+0 S8 A64])) "tester/file_tester.c":81:45 80 {*movdi_internal}
     (nil))
(insn 27 26 28 3 (set (reg/f:DI 0 ax [orig:83 _2 ] [83])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [129])
                (const_int 24 [0x18])) [2 tester_49(D)->inner_file+0 S8 A64])) "tester/file_tester.c":81:45 80 {*movdi_internal}
     (nil))
(insn 28 27 29 3 (set (reg:SI 1 dx [orig:84 _3 ] [84])
        (mem:SI (plus:DI (reg/f:DI 0 ax [orig:83 _2 ] [83])
                (const_int 4 [0x4])) [4 _2->size+0 S4 A32])) "tester/file_tester.c":81:57 81 {*movsi_internal}
     (nil))
(insn 29 28 30 3 (set (reg:SI 2 cx [130])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [4 offset+0 S4 A32])) "tester/file_tester.c":81:30 81 {*movsi_internal}
     (nil))
(insn 30 29 31 3 (set (reg:SI 0 ax [131])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [4 size+0 S4 A32])) "tester/file_tester.c":81:30 81 {*movsi_internal}
     (nil))
(insn 31 30 254 3 (parallel [
            (set (reg:SI 0 ax [orig:85 _4 ] [85])
                (plus:SI (reg:SI 0 ax [131])
                    (reg:SI 2 cx [130])))
            (clobber (reg:CC 17 flags))
        ]) "tester/file_tester.c":81:30 229 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                    (const_int -44 [0xffffffffffffffd4])) [4 offset+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                    (const_int -48 [0xffffffffffffffd0])) [4 size+0 S4 A32]))
        (nil)))
(insn 254 31 255 3 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 1 dx [orig:84 _3 ] [84])
            (reg:SI 0 ax [orig:85 _4 ] [85]))) "tester/file_tester.c":81:7 11 {*cmpsi_1}
     (nil))
(insn 255 254 33 3 (set (reg:SI 0 ax [132])
        (if_then_else:SI (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (reg:SI 1 dx [orig:84 _3 ] [84])
            (reg:SI 0 ax [orig:85 _4 ] [85]))) "tester/file_tester.c":81:7 1201 {*movsicc_noc}
     (nil))
(insn 33 255 34 3 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [4 expected_size+0 S4 A32])
        (reg:SI 0 ax [132])) "tester/file_tester.c":81:7 81 {*movsi_internal}
     (nil))
(insn 34 33 35 3 (set (reg/f:DI 0 ax [133])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [7 tester+0 S8 A64])) "tester/file_tester.c":86:14 80 {*movdi_internal}
     (nil))
(insn 35 34 36 3 (set (reg/f:DI 0 ax [orig:86 _5 ] [86])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [133])
                (const_int 24 [0x18])) [2 tester_49(D)->inner_file+0 S8 A64])) "tester/file_tester.c":86:14 80 {*movdi_internal}
     (nil))
(insn 36 35 37 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:86 _5 ] [86])
            (const_int 0 [0]))) "tester/file_tester.c":86:6 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 37 36 38 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 67)
            (pc))) "tester/file_tester.c":86:6 891 {*jcc}
     (nil)
 -> 67)
;;  succ:       4 (FALLTHRU)
;;              7
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 87 88 134 135 136 137
(note 38 37 39 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 40 4 (set (reg/f:DI 0 ax [134])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [7 tester+0 S8 A64])) "tester/file_tester.c":87:9 80 {*movdi_internal}
     (nil))
(insn 40 39 41 4 (set (reg/f:DI 0 ax [orig:87 _6 ] [87])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [134])
                (const_int 24 [0x18])) [2 tester_49(D)->inner_file+0 S8 A64])) "tester/file_tester.c":87:9 80 {*movdi_internal}
     (nil))
(insn 41 40 42 4 (set (reg:DI 2 cx [135])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [1 buf+0 S8 A64])) "tester/file_tester.c":87:9 80 {*movdi_internal}
     (nil))
(insn 42 41 43 4 (set (reg:SI 1 dx [136])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [4 size+0 S4 A32])) "tester/file_tester.c":87:9 81 {*movsi_internal}
     (nil))
(insn 43 42 47 4 (set (reg:SI 4 si [137])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [4 offset+0 S4 A32])) "tester/file_tester.c":87:9 81 {*movsi_internal}
     (nil))
(insn 47 43 48 4 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:87 _6 ] [87])) "tester/file_tester.c":87:9 80 {*movdi_internal}
     (nil))
(call_insn 48 47 50 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("file_write") [flags 0x41]  <function_decl 0x7f20b7341600 file_write>) [0 file_write S1 A8])
            (const_int 0 [0]))) "tester/file_tester.c":87:9 909 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 50 48 51 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:88 _7 ] [88])
            (const_int 0 [0]))) "tester/file_tester.c":87:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 51 50 52 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 60)
            (pc))) "tester/file_tester.c":87:8 891 {*jcc}
     (nil)
 -> 60)
;;  succ:       5 (FALLTHRU)
;;              6
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 138 139
(note 52 51 53 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 53 52 54 5 (set (reg/f:DI 0 ax [138])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [7 tester+0 S8 A64])) "tester/file_tester.c":88:21 80 {*movdi_internal}
     (nil))
(insn 54 53 55 5 (set (mem:SI (plus:DI (reg/f:DI 0 ax [138])
                (const_int 32 [0x20])) [4 tester_49(D)->error+0 S4 A64])
        (const_int 1 [0x1])) "tester/file_tester.c":88:21 81 {*movsi_internal}
     (nil))
(insn 55 54 56 5 (set (reg:DI 0 ax [139])
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7f20b703c120 *.LC6>)) "tester/file_tester.c":89:7 80 {*movdi_internal}
     (nil))
(insn 56 55 57 5 (set (reg:DI 5 di)
        (reg:DI 0 ax [139])) "tester/file_tester.c":89:7 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7f20b703c120 *.LC6>)
        (nil)))
(call_insn 57 56 237 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f20b72c6700 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) "tester/file_tester.c":89:7 909 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 237 57 238 5 (set (pc)
        (label_ref 67)) 892 {jump}
     (nil)
 -> 67)
;;  succ:       7 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 238 237 60)
;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 7, flags: (RTL, MODIFIED)
;;  pred:       4
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 140
(code_label 60 238 61 6 23 (nil) [1 uses])
(note 61 60 62 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 62 61 63 6 (set (reg:DI 0 ax [140])
        (symbol_ref/f:DI ("*.LC14") [flags 0x2]  <var_decl 0x7f20b7047360 *.LC14>)) "tester/file_tester.c":91:7 80 {*movdi_internal}
     (nil))
(insn 63 62 64 6 (set (reg:DI 5 di)
        (reg:DI 0 ax [140])) "tester/file_tester.c":91:7 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC14") [flags 0x2]  <var_decl 0x7f20b7047360 *.LC14>)
        (nil)))
(call_insn 64 63 239 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f20b72c6700 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) "tester/file_tester.c":91:7 909 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 239 64 240 6 (set (pc)
        (label_ref 235)) "tester/file_tester.c":92:7 892 {jump}
     (nil)
 -> 235)
;;  succ:       18 [always]  tester/file_tester.c:92:7
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 240 239 67)
;; basic block 7, loop depth 0, maybe hot
;;  prev block 6, next block 8, flags: (RTL, MODIFIED)
;;  pred:       3
;;              5 [always] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157
(code_label 67 240 68 7 22 (nil) [2 uses])
(note 68 67 69 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 69 68 70 7 (set (reg:SI 0 ax [141])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [4 expected_size+0 S4 A32])) "tester/file_tester.c":96:46 81 {*movsi_internal}
     (nil))
(insn 70 69 71 7 (parallel [
            (set (reg:SI 0 ax [orig:89 _8 ] [89])
                (plus:SI (reg:SI 0 ax [141])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "tester/file_tester.c":96:46 229 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                    (const_int -20 [0xffffffffffffffec])) [4 expected_size+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 71 70 72 7 (set (reg:DI 0 ax [orig:90 _9 ] [90])
        (sign_extend:DI (reg:SI 0 ax [orig:89 _8 ] [89]))) "tester/file_tester.c":96:25 154 {*extendsidi2_rex64}
     (nil))
(insn 72 71 73 7 (set (reg:DI 4 si)
        (const_int 1 [0x1])) "tester/file_tester.c":96:25 80 {*movdi_internal}
     (nil))
(insn 73 72 74 7 (set (reg:DI 5 di)
        (reg:DI 0 ax [orig:90 _9 ] [90])) "tester/file_tester.c":96:25 80 {*movdi_internal}
     (nil))
(call_insn 74 73 76 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("calloc") [flags 0x41]  <function_decl 0x7f20b72d8500 calloc>) [0 __builtin_calloc S1 A8])
            (const_int 0 [0]))) "tester/file_tester.c":96:25 909 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 76 74 77 7 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [1 expected_data+0 S8 A64])
        (reg/f:DI 0 ax [142])) "tester/file_tester.c":96:25 80 {*movdi_internal}
     (nil))
(insn 77 76 78 7 (set (reg:SI 0 ax [143])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [4 expected_size+0 S4 A32])) "tester/file_tester.c":97:45 81 {*movsi_internal}
     (nil))
(insn 78 77 79 7 (parallel [
            (set (reg:SI 0 ax [orig:91 _10 ] [91])
                (plus:SI (reg:SI 0 ax [143])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "tester/file_tester.c":97:45 229 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                    (const_int -20 [0xffffffffffffffec])) [4 expected_size+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 79 78 80 7 (set (reg:DI 0 ax [orig:92 _11 ] [92])
        (sign_extend:DI (reg:SI 0 ax [orig:91 _10 ] [91]))) "tester/file_tester.c":97:24 154 {*extendsidi2_rex64}
     (nil))
(insn 80 79 81 7 (set (reg:DI 4 si)
        (const_int 1 [0x1])) "tester/file_tester.c":97:24 80 {*movdi_internal}
     (nil))
(insn 81 80 82 7 (set (reg:DI 5 di)
        (reg:DI 0 ax [orig:92 _11 ] [92])) "tester/file_tester.c":97:24 80 {*movdi_internal}
     (nil))
(call_insn 82 81 84 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("calloc") [flags 0x41]  <function_decl 0x7f20b72d8500 calloc>) [0 __builtin_calloc S1 A8])
            (const_int 0 [0]))) "tester/file_tester.c":97:24 909 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 84 82 85 7 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [1 readout_data+0 S8 A64])
        (reg/f:DI 0 ax [144])) "tester/file_tester.c":97:24 80 {*movdi_internal}
     (nil))
(insn 85 84 86 7 (set (reg/f:DI 0 ax [145])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [7 tester+0 S8 A64])) "tester/file_tester.c":98:17 80 {*movdi_internal}
     (nil))
(insn 86 85 87 7 (set (mem:SI (plus:DI (reg/f:DI 0 ax [145])
                (const_int 32 [0x20])) [4 tester_49(D)->error+0 S4 A64])
        (const_int 1 [0x1])) "tester/file_tester.c":98:17 81 {*movsi_internal}
     (nil))
(insn 87 86 88 7 (set (reg/f:DI 0 ax [146])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [7 tester+0 S8 A64])) "tester/file_tester.c":100:58 80 {*movdi_internal}
     (nil))
(insn 88 87 89 7 (set (reg/f:DI 0 ax [orig:93 _12 ] [93])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [146])
                (const_int 24 [0x18])) [2 tester_49(D)->inner_file+0 S8 A64])) "tester/file_tester.c":100:58 80 {*movdi_internal}
     (nil))
(insn 89 88 90 7 (set (reg:SI 0 ax [orig:94 _13 ] [94])
        (mem:SI (plus:DI (reg/f:DI 0 ax [orig:93 _12 ] [93])
                (const_int 4 [0x4])) [4 _12->size+0 S4 A32])) "tester/file_tester.c":100:70 81 {*movsi_internal}
     (nil))
(insn 90 89 91 7 (set (reg:DI 1 dx [orig:95 _14 ] [95])
        (sign_extend:DI (reg:SI 0 ax [orig:94 _13 ] [94]))) "tester/file_tester.c":100:3 154 {*extendsidi2_rex64}
     (nil))
(insn 91 90 92 7 (set (reg/f:DI 0 ax [147])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [7 tester+0 S8 A64])) "tester/file_tester.c":100:32 80 {*movdi_internal}
     (nil))
(insn 92 91 93 7 (set (reg/f:DI 0 ax [orig:96 _15 ] [96])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [147])
                (const_int 24 [0x18])) [2 tester_49(D)->inner_file+0 S8 A64])) "tester/file_tester.c":100:32 80 {*movdi_internal}
     (nil))
(insn 93 92 94 7 (set (reg/f:DI 2 cx [orig:97 _16 ] [97])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:96 _15 ] [96])
                (const_int 8 [0x8])) [1 _15->data+0 S8 A64])) "tester/file_tester.c":100:44 80 {*movdi_internal}
     (nil))
(insn 94 93 96 7 (set (reg:DI 0 ax [148])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [1 expected_data+0 S8 A64])) "tester/file_tester.c":100:3 80 {*movdi_internal}
     (nil))
(insn 96 94 97 7 (set (reg:DI 4 si)
        (reg/f:DI 2 cx [orig:97 _16 ] [97])) "tester/file_tester.c":100:3 80 {*movdi_internal}
     (nil))
(insn 97 96 98 7 (set (reg:DI 5 di)
        (reg:DI 0 ax [148])) "tester/file_tester.c":100:3 80 {*movdi_internal}
     (nil))
(call_insn 98 97 99 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strncpy") [flags 0x41]  <function_decl 0x7f20b72c0e00 strncpy>) [0 __builtin_strncpy S1 A8])
            (const_int 0 [0]))) "tester/file_tester.c":100:3 909 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 99 98 100 7 (set (reg:SI 0 ax [149])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [4 size+0 S4 A32])) "tester/file_tester.c":101:3 81 {*movsi_internal}
     (nil))
(insn 100 99 101 7 (set (reg:DI 1 dx [orig:98 _17 ] [98])
        (sign_extend:DI (reg:SI 0 ax [149]))) "tester/file_tester.c":101:3 154 {*extendsidi2_rex64}
     (nil))
(insn 101 100 102 7 (set (reg:SI 0 ax [150])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [4 offset+0 S4 A32])) "tester/file_tester.c":101:3 81 {*movsi_internal}
     (nil))
(insn 102 101 103 7 (set (reg:DI 2 cx [orig:99 _18 ] [99])
        (sign_extend:DI (reg:SI 0 ax [150]))) "tester/file_tester.c":101:3 154 {*extendsidi2_rex64}
     (nil))
(insn 103 102 104 7 (set (reg/f:DI 0 ax [151])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [1 expected_data+0 S8 A64])) "tester/file_tester.c":101:3 80 {*movdi_internal}
     (nil))
(insn 104 103 105 7 (parallel [
            (set (reg/f:DI 2 cx [orig:100 _19 ] [100])
                (plus:DI (reg:DI 2 cx [orig:99 _18 ] [99])
                    (reg/f:DI 0 ax [151])))
            (clobber (reg:CC 17 flags))
        ]) "tester/file_tester.c":101:3 230 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                    (const_int -16 [0xfffffffffffffff0])) [1 expected_data+0 S8 A64])
            (reg:DI 2 cx [orig:99 _18 ] [99]))
        (nil)))
(insn 105 104 107 7 (set (reg:DI 0 ax [152])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [1 buf+0 S8 A64])) "tester/file_tester.c":101:3 80 {*movdi_internal}
     (nil))
(insn 107 105 108 7 (set (reg:DI 4 si)
        (reg:DI 0 ax [152])) "tester/file_tester.c":101:3 80 {*movdi_internal}
     (nil))
(insn 108 107 109 7 (set (reg:DI 5 di)
        (reg/f:DI 2 cx [orig:100 _19 ] [100])) "tester/file_tester.c":101:3 80 {*movdi_internal}
     (nil))
(call_insn 109 108 110 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strncpy") [flags 0x41]  <function_decl 0x7f20b72c0e00 strncpy>) [0 __builtin_strncpy S1 A8])
            (const_int 0 [0]))) "tester/file_tester.c":101:3 909 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 110 109 111 7 (set (reg/f:DI 0 ax [153])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [7 tester+0 S8 A64])) "tester/file_tester.c":103:7 80 {*movdi_internal}
     (nil))
(insn 111 110 112 7 (set (reg/f:DI 0 ax [orig:101 _20 ] [101])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [153])
                (const_int 24 [0x18])) [2 tester_49(D)->inner_file+0 S8 A64])) "tester/file_tester.c":103:7 80 {*movdi_internal}
     (nil))
(insn 112 111 113 7 (set (reg:DI 2 cx [154])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [1 buf+0 S8 A64])) "tester/file_tester.c":103:7 80 {*movdi_internal}
     (nil))
(insn 113 112 114 7 (set (reg:SI 1 dx [155])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [4 size+0 S4 A32])) "tester/file_tester.c":103:7 81 {*movsi_internal}
     (nil))
(insn 114 113 118 7 (set (reg:SI 4 si [156])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [4 offset+0 S4 A32])) "tester/file_tester.c":103:7 81 {*movsi_internal}
     (nil))
(insn 118 114 119 7 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:101 _20 ] [101])) "tester/file_tester.c":103:7 80 {*movdi_internal}
     (nil))
(call_insn 119 118 121 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("file_write") [flags 0x41]  <function_decl 0x7f20b7341600 file_write>) [0 file_write S1 A8])
            (const_int 0 [0]))) "tester/file_tester.c":103:7 909 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 121 119 122 7 (set (reg/f:DI 0 ax [157])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [7 tester+0 S8 A64])) "tester/file_tester.c":107:13 80 {*movdi_internal}
     (nil))
(insn 122 121 123 7 (set (reg/f:DI 0 ax [orig:102 _21 ] [102])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [157])
                (const_int 24 [0x18])) [2 tester_49(D)->inner_file+0 S8 A64])) "tester/file_tester.c":107:13 80 {*movdi_internal}
     (nil))
(insn 123 122 124 7 (set (reg:SI 0 ax [orig:103 _22 ] [103])
        (mem:SI (plus:DI (reg/f:DI 0 ax [orig:102 _21 ] [102])
                (const_int 4 [0x4])) [4 _21->size+0 S4 A32])) "tester/file_tester.c":107:25 81 {*movsi_internal}
     (nil))
(insn 124 123 125 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -20 [0xffffffffffffffec])) [4 expected_size+0 S4 A32])
            (reg:SI 0 ax [orig:103 _22 ] [103]))) "tester/file_tester.c":107:6 11 {*cmpsi_1}
     (nil))
(jump_insn 125 124 126 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 139)
            (pc))) "tester/file_tester.c":107:6 891 {*jcc}
     (nil)
 -> 139)
;;  succ:       8 (FALLTHRU)
;;              9
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 8, loop depth 0, maybe hot
;;  prev block 7, next block 9, flags: (RTL, MODIFIED)
;;  pred:       7 (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 104 105 158 159 160
(note 126 125 127 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 127 126 128 8 (set (reg/f:DI 0 ax [158])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [7 tester+0 S8 A64])) "tester/file_tester.c":109:18 80 {*movdi_internal}
     (nil))
(insn 128 127 129 8 (set (reg/f:DI 0 ax [orig:104 _23 ] [104])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [158])
                (const_int 24 [0x18])) [2 tester_49(D)->inner_file+0 S8 A64])) "tester/file_tester.c":109:18 80 {*movdi_internal}
     (nil))
(insn 129 128 130 8 (set (reg:SI 0 ax [orig:105 _24 ] [105])
        (mem:SI (plus:DI (reg/f:DI 0 ax [orig:104 _23 ] [104])
                (const_int 4 [0x4])) [4 _23->size+0 S4 A32])) "tester/file_tester.c":108:5 81 {*movsi_internal}
     (nil))
(insn 130 129 132 8 (set (reg:SI 1 dx [159])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [4 expected_size+0 S4 A32])) "tester/file_tester.c":108:5 81 {*movsi_internal}
     (nil))
(insn 132 130 133 8 (set (reg:SI 4 si)
        (reg:SI 0 ax [orig:105 _24 ] [105])) "tester/file_tester.c":108:5 81 {*movsi_internal}
     (nil))
(insn 133 132 134 8 (set (reg:DI 0 ax [160])
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x7f20b70473f0 *.LC15>)) "tester/file_tester.c":108:5 80 {*movdi_internal}
     (nil))
(insn 134 133 135 8 (set (reg:DI 5 di)
        (reg:DI 0 ax [160])) "tester/file_tester.c":108:5 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x7f20b70473f0 *.LC15>)
        (nil)))
(insn 135 134 136 8 (set (reg:QI 0 ax)
        (const_int 0 [0])) "tester/file_tester.c":108:5 83 {*movqi_internal}
     (nil))
(call_insn 136 135 241 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f20b72c6000 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "tester/file_tester.c":108:5 909 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
(jump_insn 241 136 242 8 (set (pc)
        (label_ref 225)) "tester/file_tester.c":110:5 892 {jump}
     (nil)
 -> 225)
;;  succ:       17 [always]  tester/file_tester.c:110:5
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 242 241 139)
;; basic block 9, loop depth 0, maybe hot
;;  prev block 8, next block 10, flags: (RTL, MODIFIED)
;;  pred:       7
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags] 106 107 161
(code_label 139 242 140 9 24 (nil) [1 uses])
(note 140 139 141 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 141 140 142 9 (set (reg/f:DI 0 ax [161])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [7 tester+0 S8 A64])) "tester/file_tester.c":114:13 80 {*movdi_internal}
     (nil))
(insn 142 141 143 9 (set (reg/f:DI 0 ax [orig:106 _25 ] [106])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [161])
                (const_int 24 [0x18])) [2 tester_49(D)->inner_file+0 S8 A64])) "tester/file_tester.c":114:13 80 {*movdi_internal}
     (nil))
(insn 143 142 144 9 (set (reg:SI 0 ax [orig:107 _26 ] [107])
        (mem:SI (plus:DI (reg/f:DI 0 ax [orig:106 _25 ] [106])
                (const_int 4 [0x4])) [4 _25->size+0 S4 A32])) "tester/file_tester.c":114:25 81 {*movsi_internal}
     (nil))
(insn 144 143 145 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -20 [0xffffffffffffffec])) [4 expected_size+0 S4 A32])
            (reg:SI 0 ax [orig:107 _26 ] [107]))) "tester/file_tester.c":114:6 11 {*cmpsi_1}
     (nil))
(jump_insn 145 144 146 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 159)
            (pc))) "tester/file_tester.c":114:6 891 {*jcc}
     (nil)
 -> 159)
;;  succ:       10 (FALLTHRU)
;;              11
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 10, loop depth 0, maybe hot
;;  prev block 9, next block 11, flags: (RTL, MODIFIED)
;;  pred:       9 (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 108 109 162 163 164
(note 146 145 147 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 147 146 148 10 (set (reg/f:DI 0 ax [162])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [7 tester+0 S8 A64])) "tester/file_tester.c":116:18 80 {*movdi_internal}
     (nil))
(insn 148 147 149 10 (set (reg/f:DI 0 ax [orig:108 _27 ] [108])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [162])
                (const_int 24 [0x18])) [2 tester_49(D)->inner_file+0 S8 A64])) "tester/file_tester.c":116:18 80 {*movdi_internal}
     (nil))
(insn 149 148 150 10 (set (reg:SI 0 ax [orig:109 _28 ] [109])
        (mem:SI (plus:DI (reg/f:DI 0 ax [orig:108 _27 ] [108])
                (const_int 4 [0x4])) [4 _27->size+0 S4 A32])) "tester/file_tester.c":115:5 81 {*movsi_internal}
     (nil))
(insn 150 149 152 10 (set (reg:SI 1 dx [163])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [4 expected_size+0 S4 A32])) "tester/file_tester.c":115:5 81 {*movsi_internal}
     (nil))
(insn 152 150 153 10 (set (reg:SI 4 si)
        (reg:SI 0 ax [orig:109 _28 ] [109])) "tester/file_tester.c":115:5 81 {*movsi_internal}
     (nil))
(insn 153 152 154 10 (set (reg:DI 0 ax [164])
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x7f20b70473f0 *.LC15>)) "tester/file_tester.c":115:5 80 {*movdi_internal}
     (nil))
(insn 154 153 155 10 (set (reg:DI 5 di)
        (reg:DI 0 ax [164])) "tester/file_tester.c":115:5 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x7f20b70473f0 *.LC15>)
        (nil)))
(insn 155 154 156 10 (set (reg:QI 0 ax)
        (const_int 0 [0])) "tester/file_tester.c":115:5 83 {*movqi_internal}
     (nil))
(call_insn 156 155 243 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f20b72c6000 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "tester/file_tester.c":115:5 909 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
(jump_insn 243 156 244 10 (set (pc)
        (label_ref 225)) "tester/file_tester.c":117:5 892 {jump}
     (nil)
 -> 225)
;;  succ:       17 [always]  tester/file_tester.c:117:5
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 244 243 159)
;; basic block 11, loop depth 0, maybe hot
;;  prev block 10, next block 12, flags: (RTL, MODIFIED)
;;  pred:       9
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 110 165 166 167
(code_label 159 244 160 11 26 (nil) [1 uses])
(note 160 159 161 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 161 160 162 11 (set (reg/f:DI 0 ax [165])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [7 tester+0 S8 A64])) "tester/file_tester.c":119:23 80 {*movdi_internal}
     (nil))
(insn 162 161 163 11 (set (reg/f:DI 0 ax [orig:110 _29 ] [110])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [165])
                (const_int 24 [0x18])) [2 tester_49(D)->inner_file+0 S8 A64])) "tester/file_tester.c":119:23 80 {*movdi_internal}
     (nil))
(insn 163 162 164 11 (set (reg:DI 2 cx [166])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [1 readout_data+0 S8 A64])) "tester/file_tester.c":119:7 80 {*movdi_internal}
     (nil))
(insn 164 163 167 11 (set (reg:SI 1 dx [167])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [4 expected_size+0 S4 A32])) "tester/file_tester.c":119:7 81 {*movsi_internal}
     (nil))
(insn 167 164 168 11 (set (reg:SI 4 si)
        (const_int 0 [0])) "tester/file_tester.c":119:7 81 {*movsi_internal}
     (nil))
(insn 168 167 169 11 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:110 _29 ] [110])) "tester/file_tester.c":119:7 80 {*movdi_internal}
     (nil))
(call_insn 169 168 171 11 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("file_read") [flags 0x41]  <function_decl 0x7f20b7341700 file_read>) [0 file_read S1 A8])
            (const_int 0 [0]))) "tester/file_tester.c":119:7 909 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 171 169 245 11 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [4 i+0 S4 A64])
        (const_int 0 [0])) "tester/file_tester.c":125:10 81 {*movsi_internal}
     (nil))
(jump_insn 245 171 246 11 (set (pc)
        (label_ref 213)) "tester/file_tester.c":125:3 892 {jump}
     (nil)
 -> 213)
;;  succ:       15 [always]  tester/file_tester.c:125:3
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 246 245 215)
;; basic block 12, loop depth 0, maybe hot
;;  prev block 11, next block 13, flags: (RTL, MODIFIED)
;;  pred:       15
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags] 111 112 113 114 115 116 168 169 170 171
(code_label 215 246 174 12 29 (nil) [1 uses])
(note 174 215 175 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 175 174 176 12 (set (reg:SI 0 ax [168])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [4 i+0 S4 A64])) "tester/file_tester.c":126:21 81 {*movsi_internal}
     (nil))
(insn 176 175 177 12 (set (reg:DI 1 dx [orig:111 _30 ] [111])
        (sign_extend:DI (reg:SI 0 ax [168]))) "tester/file_tester.c":126:21 154 {*extendsidi2_rex64}
     (nil))
(insn 177 176 178 12 (set (reg/f:DI 0 ax [169])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [1 readout_data+0 S8 A64])) "tester/file_tester.c":126:21 80 {*movdi_internal}
     (nil))
(insn 178 177 179 12 (parallel [
            (set (reg/f:DI 0 ax [orig:112 _31 ] [112])
                (plus:DI (reg/f:DI 0 ax [169])
                    (reg:DI 1 dx [orig:111 _30 ] [111])))
            (clobber (reg:CC 17 flags))
        ]) "tester/file_tester.c":126:21 230 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 readout_data+0 S8 A64])
            (reg:DI 1 dx [orig:111 _30 ] [111]))
        (nil)))
(insn 179 178 180 12 (set (reg:QI 1 dx [orig:113 _32 ] [113])
        (mem:QI (reg/f:DI 0 ax [orig:112 _31 ] [112]) [0 *_31+0 S1 A8])) "tester/file_tester.c":126:21 83 {*movqi_internal}
     (nil))
(insn 180 179 181 12 (set (reg:SI 0 ax [170])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [4 i+0 S4 A64])) "tester/file_tester.c":126:41 81 {*movsi_internal}
     (nil))
(insn 181 180 182 12 (set (reg:DI 2 cx [orig:114 _33 ] [114])
        (sign_extend:DI (reg:SI 0 ax [170]))) "tester/file_tester.c":126:41 154 {*extendsidi2_rex64}
     (nil))
(insn 182 181 183 12 (set (reg/f:DI 0 ax [171])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [1 expected_data+0 S8 A64])) "tester/file_tester.c":126:41 80 {*movdi_internal}
     (nil))
(insn 183 182 184 12 (parallel [
            (set (reg/f:DI 0 ax [orig:115 _34 ] [115])
                (plus:DI (reg/f:DI 0 ax [171])
                    (reg:DI 2 cx [orig:114 _33 ] [114])))
            (clobber (reg:CC 17 flags))
        ]) "tester/file_tester.c":126:41 230 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                    (const_int -16 [0xfffffffffffffff0])) [1 expected_data+0 S8 A64])
            (reg:DI 2 cx [orig:114 _33 ] [114]))
        (nil)))
(insn 184 183 185 12 (set (reg:QI 0 ax [orig:116 _35 ] [116])
        (mem:QI (reg/f:DI 0 ax [orig:115 _34 ] [115]) [0 *_34+0 S1 A8])) "tester/file_tester.c":126:41 83 {*movqi_internal}
     (nil))
(insn 185 184 186 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 1 dx [orig:113 _32 ] [113])
            (reg:QI 0 ax [orig:116 _35 ] [116]))) "tester/file_tester.c":126:8 9 {*cmpqi_1}
     (nil))
(jump_insn 186 185 187 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 210)
            (pc))) "tester/file_tester.c":126:8 891 {*jcc}
     (nil)
 -> 210)
;;  succ:       13 (FALLTHRU)
;;              14
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 13, loop depth 0, maybe hot
;;  prev block 12, next block 14, flags: (RTL, MODIFIED)
;;  pred:       12 (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 117 118 119 120 121 122 123 124 172 173 174 175 176 177
(note 187 186 188 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 188 187 189 13 (set (reg:SI 0 ax [172])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [4 i+0 S4 A64])) "tester/file_tester.c":128:44 81 {*movsi_internal}
     (nil))
(insn 189 188 190 13 (set (reg:DI 1 dx [orig:117 _36 ] [117])
        (sign_extend:DI (reg:SI 0 ax [172]))) "tester/file_tester.c":128:44 154 {*extendsidi2_rex64}
     (nil))
(insn 190 189 191 13 (set (reg/f:DI 0 ax [173])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [1 expected_data+0 S8 A64])) "tester/file_tester.c":128:44 80 {*movdi_internal}
     (nil))
(insn 191 190 192 13 (parallel [
            (set (reg/f:DI 0 ax [orig:118 _37 ] [118])
                (plus:DI (reg/f:DI 0 ax [173])
                    (reg:DI 1 dx [orig:117 _36 ] [117])))
            (clobber (reg:CC 17 flags))
        ]) "tester/file_tester.c":128:44 230 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                    (const_int -16 [0xfffffffffffffff0])) [1 expected_data+0 S8 A64])
            (reg:DI 1 dx [orig:117 _36 ] [117]))
        (nil)))
(insn 192 191 193 13 (set (reg:QI 0 ax [orig:119 _38 ] [119])
        (mem:QI (reg/f:DI 0 ax [orig:118 _37 ] [118]) [0 *_37+0 S1 A8])) "tester/file_tester.c":128:44 83 {*movqi_internal}
     (nil))
(insn 193 192 194 13 (set (reg:SI 2 cx [orig:120 _39 ] [120])
        (sign_extend:SI (reg:QI 0 ax [orig:119 _38 ] [119]))) "tester/file_tester.c":127:7 160 {extendqisi2}
     (nil))
(insn 194 193 195 13 (set (reg:SI 0 ax [174])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [4 i+0 S4 A64])) "tester/file_tester.c":128:26 81 {*movsi_internal}
     (nil))
(insn 195 194 196 13 (set (reg:DI 1 dx [orig:121 _40 ] [121])
        (sign_extend:DI (reg:SI 0 ax [174]))) "tester/file_tester.c":128:26 154 {*extendsidi2_rex64}
     (nil))
(insn 196 195 197 13 (set (reg/f:DI 0 ax [175])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [1 readout_data+0 S8 A64])) "tester/file_tester.c":128:26 80 {*movdi_internal}
     (nil))
(insn 197 196 198 13 (parallel [
            (set (reg/f:DI 0 ax [orig:122 _41 ] [122])
                (plus:DI (reg/f:DI 0 ax [175])
                    (reg:DI 1 dx [orig:121 _40 ] [121])))
            (clobber (reg:CC 17 flags))
        ]) "tester/file_tester.c":128:26 230 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 readout_data+0 S8 A64])
            (reg:DI 1 dx [orig:121 _40 ] [121]))
        (nil)))
(insn 198 197 199 13 (set (reg:QI 0 ax [orig:123 _42 ] [123])
        (mem:QI (reg/f:DI 0 ax [orig:122 _41 ] [122]) [0 *_41+0 S1 A8])) "tester/file_tester.c":128:26 83 {*movqi_internal}
     (nil))
(insn 199 198 200 13 (set (reg:SI 1 dx [orig:124 _43 ] [124])
        (sign_extend:SI (reg:QI 0 ax [orig:123 _42 ] [123]))) "tester/file_tester.c":127:7 160 {extendqisi2}
     (nil))
(insn 200 199 203 13 (set (reg:SI 0 ax [176])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [4 i+0 S4 A64])) "tester/file_tester.c":127:7 81 {*movsi_internal}
     (nil))
(insn 203 200 204 13 (set (reg:SI 4 si)
        (reg:SI 0 ax [176])) "tester/file_tester.c":127:7 81 {*movsi_internal}
     (nil))
(insn 204 203 205 13 (set (reg:DI 0 ax [177])
        (symbol_ref/f:DI ("*.LC16") [flags 0x2]  <var_decl 0x7f20b7047480 *.LC16>)) "tester/file_tester.c":127:7 80 {*movdi_internal}
     (nil))
(insn 205 204 206 13 (set (reg:DI 5 di)
        (reg:DI 0 ax [177])) "tester/file_tester.c":127:7 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC16") [flags 0x2]  <var_decl 0x7f20b7047480 *.LC16>)
        (nil)))
(insn 206 205 207 13 (set (reg:QI 0 ax)
        (const_int 0 [0])) "tester/file_tester.c":127:7 83 {*movqi_internal}
     (nil))
(call_insn 207 206 247 13 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f20b72c6000 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "tester/file_tester.c":127:7 909 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (expr_list:SI (use (reg:SI 2 cx))
                        (nil)))))))
(jump_insn 247 207 248 13 (set (pc)
        (label_ref 225)) "tester/file_tester.c":129:7 892 {jump}
     (nil)
 -> 225)
;;  succ:       17 [always]  tester/file_tester.c:129:7
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 248 247 210)
;; basic block 14, loop depth 0, maybe hot
;;  prev block 13, next block 15, flags: (RTL, MODIFIED)
;;  pred:       12
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags]
(code_label 210 248 211 14 28 (nil) [1 uses])
(note 211 210 212 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 212 211 213 14 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -24 [0xffffffffffffffe8])) [4 i+0 S4 A64])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -24 [0xffffffffffffffe8])) [4 i+0 S4 A64])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "tester/file_tester.c":125:35 229 {*addsi_1}
     (nil))
;;  succ:       15 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 15, loop depth 0, maybe hot
;;  prev block 14, next block 16, flags: (RTL, MODIFIED)
;;  pred:       14 (FALLTHRU,DFS_BACK)
;;              11 [always]  tester/file_tester.c:125:3
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags] 178
(code_label 213 212 214 15 27 (nil) [1 uses])
(note 214 213 216 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 216 214 217 15 (set (reg:SI 0 ax [178])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [4 i+0 S4 A64])) "tester/file_tester.c":125:17 81 {*movsi_internal}
     (nil))
(insn 217 216 218 15 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [178])
            (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -20 [0xffffffffffffffec])) [4 expected_size+0 S4 A32]))) "tester/file_tester.c":125:17 11 {*cmpsi_1}
     (nil))
(jump_insn 218 217 219 15 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 215)
            (pc))) "tester/file_tester.c":125:17 891 {*jcc}
     (nil)
 -> 215)
;;  succ:       12
;;              16 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 16, loop depth 0, maybe hot
;;  prev block 15, next block 17, flags: (RTL, MODIFIED)
;;  pred:       15 (FALLTHRU)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 179 180
(note 219 218 220 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 220 219 221 16 (set (reg/f:DI 0 ax [179])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [7 tester+0 S8 A64])) "tester/file_tester.c":132:17 80 {*movdi_internal}
     (nil))
(insn 221 220 222 16 (set (mem:SI (plus:DI (reg/f:DI 0 ax [179])
                (const_int 32 [0x20])) [4 tester_49(D)->error+0 S4 A64])
        (const_int 0 [0])) "tester/file_tester.c":132:17 81 {*movsi_internal}
     (nil))
(insn 222 221 223 16 (set (reg:DI 0 ax [180])
        (symbol_ref/f:DI ("*.LC12") [flags 0x2]  <var_decl 0x7f20b703c480 *.LC12>)) "tester/file_tester.c":133:3 80 {*movdi_internal}
     (nil))
(insn 223 222 224 16 (set (reg:DI 5 di)
        (reg:DI 0 ax [180])) "tester/file_tester.c":133:3 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC12") [flags 0x2]  <var_decl 0x7f20b703c480 *.LC12>)
        (nil)))
(call_insn 224 223 225 16 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f20b72c6700 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) "tester/file_tester.c":133:3 909 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       17 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 17, loop depth 0, maybe hot
;;  prev block 16, next block 19, flags: (RTL, MODIFIED)
;;  pred:       16 (FALLTHRU)
;;              10 [always]  tester/file_tester.c:117:5
;;              8 [always]  tester/file_tester.c:110:5
;;              13 [always]  tester/file_tester.c:129:7
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 181 182
(code_label 225 224 226 17 25 ("test_write_clear") [3 uses])
(note 226 225 227 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 227 226 228 17 (set (reg:DI 0 ax [181])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [1 readout_data+0 S8 A64])) "tester/file_tester.c":135:3 80 {*movdi_internal}
     (nil))
(insn 228 227 229 17 (set (reg:DI 5 di)
        (reg:DI 0 ax [181])) "tester/file_tester.c":135:3 80 {*movdi_internal}
     (nil))
(call_insn 229 228 230 17 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f20b72ddc00 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) "tester/file_tester.c":135:3 898 {*call}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 230 229 231 17 (set (reg:DI 0 ax [182])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [1 expected_data+0 S8 A64])) "tester/file_tester.c":136:3 80 {*movdi_internal}
     (nil))
(insn 231 230 232 17 (set (reg:DI 5 di)
        (reg:DI 0 ax [182])) "tester/file_tester.c":136:3 80 {*movdi_internal}
     (nil))
(call_insn 232 231 249 17 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f20b72ddc00 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) "tester/file_tester.c":136:3 898 {*call}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 249 232 250 17 (set (pc)
        (label_ref 235)) 892 {jump}
     (nil)
 -> 235)
;;  succ:       18
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 250 249 252)
;; basic block 19, loop depth 0, maybe hot
;;  prev block 17, next block 18, flags: (RTL, MODIFIED)
;;  pred:       2 tester/file_tester.c:79:5
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(code_label 252 250 251 19 30 (nil) [1 uses])
(note 251 252 253 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 253 251 235 19 (const_int 0 [0]) "tester/file_tester.c":79:5 928 {nop}
     (nil))
;;  succ:       18 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 18, loop depth 0, maybe hot
;;  prev block 19, next block 1, flags: (RTL, MODIFIED)
;;  pred:       6 [always]  tester/file_tester.c:92:7
;;              19 [always]  (FALLTHRU)
;;              17
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(code_label 235 253 236 18 19 (nil) [2 uses])
(note 236 235 256 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(note 256 236 0 NOTE_INSN_DELETED)

;; Function file_tester_read (file_tester_read, funcdef_no=10, decl_uid=2039, cgraph_uid=11, symbol_order=10)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=64, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 19 to 7 (offset=48, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 4:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 5:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 9:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 10:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 11:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 19:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 20:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 23:  (0) r  (1) i {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 25:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 27:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 28:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 29:  (0) r {*cmpdi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 32:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 33:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 34:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 35:  (0) =r  (1) g {*movsi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 36:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 40:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 42:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 45:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 46:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 47:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 49:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 54:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 56:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 63:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 64:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 65:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 66:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 68:  (1) rBwBz {*call_value}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 70:  (0) m  (1) re {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 71:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 72:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 73:  (0) =rm  (1) %0  (2) re {*addsi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 74:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 75:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 76:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 77:  (0) rm  (1) re {*cmpsi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 80:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 81:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 82:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 83:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 84:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 89:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 91:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 94:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 95:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 96:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 98:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 103:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 105:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 112:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 113:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 114:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 115:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 116:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 117:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 118:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 123:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 125:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 128:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 130:  (1) rBwBz {*call_value}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 135:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 139:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 140:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 141:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 142
	 Choosing alt 0 in insn 142:  (0) =rm  (1) %0  (2) re {*adddi_1}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 143:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 144:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 145:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 146:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 147
	 Choosing alt 0 in insn 147:  (0) =rm  (1) %0  (2) re {*adddi_1}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 148:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 149:  (0) qm  (1) qn {*cmpqi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 152:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 153:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 154:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 155
	 Choosing alt 0 in insn 155:  (0) =rm  (1) %0  (2) re {*adddi_1}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 156:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 157:  (0) =r  (1) qm {extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 158:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 159:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 160:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 161
	 Choosing alt 0 in insn 161:  (0) =rm  (1) %0  (2) re {*adddi_1}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 162:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 163:  (0) =r  (1) qm {extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 164:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 165:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 166:  (0) =rm  (1) %0  (2) re {*addsi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 170:  (0) r  (1) i {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 172:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 173:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 178:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 182:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 183:  (0) r  (1) rBM {*cmpsi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 186:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 187:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 188:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 190:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 193:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 195:  (0) rBwBz {*call}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #1: **********

EBB 2 3 4 5
EBB 6
EBB 7 8 9
EBB 10
EBB 11 12
EBB 13
EBB 14 15
EBB 16
EBB 17 18
EBB 19
EBB 21
EBB 20

********** Pseudo live ranges #1: **********

  BB 20
  BB 19
   Insn 214: point = 0, n_alt = -1
   Insn 195: point = 0, n_alt = 0
   Insn 194: point = 0, n_alt = -2
   Insn 193: point = 1, n_alt = 3
  BB 15
   Insn 212: point = 2, n_alt = -1
   Insn 173: point = 2, n_alt = 0
   Insn 172: point = 2, n_alt = 3
   Insn 171: point = 2, n_alt = -2
   Insn 170: point = 3, n_alt = 4
   Insn 169: point = 4, n_alt = -2
   Insn 168: point = 5, n_alt = -2
   Insn 167: point = 6, n_alt = -2
   Insn 166: point = 7, n_alt = 0
   Insn 165: point = 9, n_alt = 0
   Insn 164: point = 10, n_alt = 0
   Insn 163: point = 11, n_alt = 0
   Insn 162: point = 13, n_alt = 4
   Insn 161: point = 15, n_alt = 0
   Insn 160: point = 17, n_alt = 3
   Insn 159: point = 18, n_alt = 1
   Insn 158: point = 20, n_alt = 0
   Insn 157: point = 21, n_alt = 0
   Insn 156: point = 23, n_alt = 4
   Insn 155: point = 25, n_alt = 0
   Insn 154: point = 27, n_alt = 3
   Insn 153: point = 28, n_alt = 1
   Insn 152: point = 30, n_alt = 0
  BB 18
   Insn 190: point = 31, n_alt = 0
   Insn 189: point = 31, n_alt = -2
   Insn 188: point = 32, n_alt = 4
   Insn 187: point = 33, n_alt = 1
   Insn 186: point = 34, n_alt = 3
  BB 17
   Insn 184: point = 35, n_alt = -1
   Insn 183: point = 35, n_alt = 1
   Insn 182: point = 36, n_alt = 0
  BB 13
   Insn 210: point = 37, n_alt = -1
   Insn 135: point = 37, n_alt = 1
  BB 16
   Insn 178: point = 37, n_alt = 0
  BB 14
   Insn 150: point = 37, n_alt = -1
   Insn 149: point = 37, n_alt = 0
   Insn 148: point = 38, n_alt = 4
   Insn 147: point = 40, n_alt = 0
   Insn 146: point = 42, n_alt = 3
   Insn 145: point = 43, n_alt = 1
   Insn 144: point = 45, n_alt = 0
   Insn 143: point = 46, n_alt = 4
   Insn 142: point = 48, n_alt = 0
   Insn 141: point = 50, n_alt = 3
   Insn 140: point = 51, n_alt = 1
   Insn 139: point = 53, n_alt = 0
  BB 12
   Insn 208: point = 54, n_alt = -1
   Insn 130: point = 54, n_alt = 0
   Insn 129: point = 54, n_alt = -2
   Insn 128: point = 55, n_alt = 4
  BB 11
   Insn 126: point = 56, n_alt = -1
   Insn 125: point = 56, n_alt = 0
   Insn 124: point = 57, n_alt = -2
   Insn 123: point = 58, n_alt = 0
   Insn 122: point = 58, n_alt = -2
   Insn 121: point = 59, n_alt = -2
   Insn 120: point = 60, n_alt = -2
   Insn 119: point = 61, n_alt = -2
   Insn 118: point = 62, n_alt = 0
   Insn 117: point = 63, n_alt = 0
   Insn 116: point = 64, n_alt = 3
   Insn 115: point = 65, n_alt = 3
   Insn 114: point = 67, n_alt = 3
   Insn 113: point = 68, n_alt = 1
   Insn 112: point = 69, n_alt = 3
  BB 10
   Insn 206: point = 70, n_alt = -1
   Insn 105: point = 70, n_alt = 0
   Insn 104: point = 70, n_alt = -2
   Insn 103: point = 71, n_alt = 4
  BB 9
   Insn 204: point = 72, n_alt = -1
   Insn 98: point = 72, n_alt = 0
   Insn 97: point = 72, n_alt = -2
   Insn 96: point = 73, n_alt = 4
   Insn 95: point = 74, n_alt = 1
   Insn 94: point = 75, n_alt = 3
  BB 8
   Insn 92: point = 76, n_alt = -1
   Insn 91: point = 76, n_alt = 0
   Insn 90: point = 77, n_alt = -2
   Insn 89: point = 78, n_alt = 0
   Insn 88: point = 78, n_alt = -2
   Insn 87: point = 79, n_alt = -2
   Insn 86: point = 80, n_alt = -2
   Insn 85: point = 81, n_alt = -2
   Insn 84: point = 82, n_alt = 0
   Insn 83: point = 83, n_alt = 0
   Insn 82: point = 84, n_alt = 3
   Insn 81: point = 85, n_alt = 3
   Insn 80: point = 87, n_alt = 3
  BB 7
   Insn 78: point = 88, n_alt = -1
   Insn 77: point = 88, n_alt = 0
   Insn 76: point = 89, n_alt = 0
   Insn 75: point = 91, n_alt = 3
   Insn 74: point = 93, n_alt = 3
   Insn 73: point = 94, n_alt = 0
   Insn 72: point = 96, n_alt = 0
   Insn 71: point = 97, n_alt = 0
   Insn 70: point = 98, n_alt = 5
   Insn 69: point = 99, n_alt = -2
   Insn 68: point = 100, n_alt = 0
   Insn 67: point = 100, n_alt = -2
   Insn 66: point = 101, n_alt = 2
   Insn 65: point = 101, n_alt = 0
   Insn 64: point = 103, n_alt = 0
   Insn 63: point = 105, n_alt = 0
  BB 5
   Insn 200: point = 106, n_alt = -1
   Insn 49: point = 106, n_alt = 0
   Insn 48: point = 106, n_alt = -2
   Insn 47: point = 107, n_alt = 4
   Insn 46: point = 108, n_alt = 1
   Insn 45: point = 109, n_alt = 3
  BB 21
   Insn 218: point = 110, n_alt = -1
  BB 6
   Insn 202: point = 110, n_alt = -1
   Insn 56: point = 110, n_alt = 0
   Insn 55: point = 110, n_alt = -2
   Insn 54: point = 111, n_alt = 4
  BB 4
   Insn 43: point = 112, n_alt = -1
   Insn 42: point = 112, n_alt = 0
   Insn 41: point = 113, n_alt = -2
   Insn 40: point = 114, n_alt = 0
   Insn 39: point = 114, n_alt = -2
   Insn 38: point = 115, n_alt = -2
   Insn 37: point = 116, n_alt = -2
   Insn 36: point = 117, n_alt = 2
   Insn 35: point = 117, n_alt = 0
   Insn 34: point = 118, n_alt = 0
   Insn 33: point = 119, n_alt = 3
   Insn 32: point = 121, n_alt = 3
  BB 3
   Insn 30: point = 122, n_alt = -1
   Insn 29: point = 122, n_alt = 0
   Insn 28: point = 123, n_alt = 3
   Insn 27: point = 125, n_alt = 3
   Insn 26: point = 126, n_alt = 0
   Insn 25: point = 126, n_alt = 3
   Insn 24: point = 126, n_alt = -2
   Insn 23: point = 127, n_alt = 4
   Insn 22: point = 128, n_alt = -2
   Insn 21: point = 129, n_alt = -2
   Insn 20: point = 130, n_alt = 0
   Insn 19: point = 131, n_alt = 0
  BB 2
   Insn 13: point = 132, n_alt = -1
   Insn 12: point = 132, n_alt = 0
   Insn 11: point = 133, n_alt = 0
   Insn 10: point = 135, n_alt = 3
   Insn 9: point = 136, n_alt = 1
   Insn 5: point = 136, n_alt = 5
   Insn 4: point = 136, n_alt = 1
   Insn 3: point = 136, n_alt = 1
   Insn 2: point = 136, n_alt = 5
 r82: [132..133]
 r83: [122..123]
 r84: [114..119]
 r85: [112..113]
 r86: [102..103]
 r87: [100..101]
 r88: [88..94]
 r89: [90..91]
 r90: [88..89]
 r91: [78..85]
 r92: [76..77]
 r93: [58..65]
 r94: [56..57]
 r95: [49..51]
 r96: [47..48]
 r97: [37..46]
 r98: [41..43]
 r99: [39..40]
 r100: [37..38]
 r101: [26..28]
 r102: [24..25]
 r103: [22..23]
 r104: [6..21]
 r105: [16..18]
 r106: [14..15]
 r107: [12..13]
 r108: [5..11]
 r109: [4..7]
 r110: [134..135]
 r111: [129..131]
 r112: [128..130]
 r113: [126..127]
 r114: [124..125]
 r115: [120..121]
 r116: [116..118]
 r117: [115..117]
 r118: [108..109]
 r119: [106..107]
 r120: [110..111]
 r121: [104..105]
 r122: [98..99]
 r123: [95..97]
 r124: [95..96]
 r125: [92..93]
 r126: [86..87]
 r127: [81..84]
 r128: [80..83]
 r129: [79..82]
 r130: [74..75]
 r131: [72..73]
 r132: [70..71]
 r133: [68..69]
 r134: [66..67]
 r135: [61..64]
 r136: [60..63]
 r137: [59..62]
 r138: [54..55]
 r139: [52..53]
 r140: [49..50]
 r141: [44..45]
 r142: [41..42]
 r143: [29..30]
 r144: [26..27]
 r145: [19..20]
 r146: [16..17]
 r147: [8..10]
 r148: [8..9]
 r149: [2..3]
 r150: [35..36]
 r151: [33..34]
 r152: [31..32]
 r153: [0..1]
Compressing live ranges: from 136 to 106 - 77%
Ranges after the compression:
 r82: [102..103]
 r83: [94..95]
 r84: [90..91]
 r85: [88..89]
 r86: [78..79]
 r87: [76..77]
 r88: [66..71]
 r89: [68..69]
 r90: [66..67]
 r91: [62..63]
 r92: [60..61]
 r93: [48..49]
 r94: [46..47]
 r95: [40..41]
 r96: [38..39]
 r97: [30..37]
 r98: [34..35]
 r99: [32..33]
 r100: [30..31]
 r101: [20..21]
 r102: [18..19]
 r103: [16..17]
 r104: [4..15]
 r105: [12..13]
 r106: [10..11]
 r107: [8..9]
 r108: [4..7]
 r109: [4..5]
 r110: [104..105]
 r111: [100..101]
 r112: [100..101]
 r113: [98..99]
 r114: [96..97]
 r115: [92..93]
 r116: [90..91]
 r117: [90..91]
 r118: [84..85]
 r119: [82..83]
 r120: [86..87]
 r121: [80..81]
 r122: [74..75]
 r123: [72..73]
 r124: [72..73]
 r125: [70..71]
 r126: [64..65]
 r127: [62..63]
 r128: [62..63]
 r129: [62..63]
 r130: [58..59]
 r131: [56..57]
 r132: [54..55]
 r133: [52..53]
 r134: [50..51]
 r135: [48..49]
 r136: [48..49]
 r137: [48..49]
 r138: [44..45]
 r139: [42..43]
 r140: [40..41]
 r141: [36..37]
 r142: [34..35]
 r143: [22..23]
 r144: [20..21]
 r145: [14..15]
 r146: [12..13]
 r147: [6..7]
 r148: [6..7]
 r149: [2..3]
 r150: [28..29]
 r151: [26..27]
 r152: [24..25]
 r153: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 6
	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=64, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 19 to 7 (offset=48, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
changing reg in insn 11
changing reg in insn 12
changing reg in insn 28
changing reg in insn 29
changing reg in insn 33
changing reg in insn 39
changing reg in insn 41
changing reg in insn 42
changing reg in insn 64
changing reg in insn 65
changing reg in insn 65
changing reg in insn 67
changing reg in insn 73
changing reg in insn 77
changing reg in insn 75
changing reg in insn 76
changing reg in insn 76
changing reg in insn 77
changing reg in insn 81
changing reg in insn 88
changing reg in insn 90
changing reg in insn 91
changing reg in insn 115
changing reg in insn 122
changing reg in insn 124
changing reg in insn 125
changing reg in insn 140
changing reg in insn 142
changing reg in insn 142
changing reg in insn 143
changing reg in insn 143
changing reg in insn 149
changing reg in insn 145
changing reg in insn 147
changing reg in insn 147
changing reg in insn 148
changing reg in insn 148
changing reg in insn 149
changing reg in insn 153
changing reg in insn 155
changing reg in insn 155
changing reg in insn 156
changing reg in insn 156
changing reg in insn 157
changing reg in insn 157
changing reg in insn 167
changing reg in insn 159
changing reg in insn 161
changing reg in insn 161
changing reg in insn 162
changing reg in insn 162
changing reg in insn 163
changing reg in insn 163
changing reg in insn 168
changing reg in insn 166
changing reg in insn 169
changing reg in insn 10
changing reg in insn 11
changing reg in insn 19
changing reg in insn 21
changing reg in insn 20
changing reg in insn 22
changing reg in insn 23
changing reg in insn 24
changing reg in insn 27
changing reg in insn 28
changing reg in insn 32
changing reg in insn 33
changing reg in insn 34
changing reg in insn 37
changing reg in insn 35
changing reg in insn 38
changing reg in insn 45
changing reg in insn 46
changing reg in insn 47
changing reg in insn 48
changing reg in insn 54
changing reg in insn 55
changing reg in insn 63
changing reg in insn 64
changing reg in insn 69
changing reg in insn 70
changing reg in insn 71
changing reg in insn 73
changing reg in insn 72
changing reg in insn 73
changing reg in insn 74
changing reg in insn 75
changing reg in insn 80
changing reg in insn 81
changing reg in insn 82
changing reg in insn 85
changing reg in insn 83
changing reg in insn 86
changing reg in insn 84
changing reg in insn 87
changing reg in insn 94
changing reg in insn 95
changing reg in insn 96
changing reg in insn 97
changing reg in insn 103
changing reg in insn 104
changing reg in insn 112
changing reg in insn 113
changing reg in insn 114
changing reg in insn 115
changing reg in insn 116
changing reg in insn 119
changing reg in insn 117
changing reg in insn 120
changing reg in insn 118
changing reg in insn 121
changing reg in insn 128
changing reg in insn 129
changing reg in insn 139
changing reg in insn 140
changing reg in insn 141
changing reg in insn 144
changing reg in insn 145
changing reg in insn 146
changing reg in insn 152
changing reg in insn 153
changing reg in insn 154
changing reg in insn 158
changing reg in insn 159
changing reg in insn 160
changing reg in insn 164
changing reg in insn 166
changing reg in insn 165
changing reg in insn 166
changing reg in insn 170
changing reg in insn 171
changing reg in insn 182
changing reg in insn 183
changing reg in insn 186
changing reg in insn 187
changing reg in insn 188
changing reg in insn 189
changing reg in insn 193
changing reg in insn 194
deleting insn with uid = 21.
deleting insn with uid = 37.
deleting insn with uid = 38.
deleting insn with uid = 41.
deleting insn with uid = 69.
deleting insn with uid = 85.
deleting insn with uid = 86.
deleting insn with uid = 87.
deleting insn with uid = 90.
deleting insn with uid = 119.
deleting insn with uid = 120.
deleting insn with uid = 121.
deleting insn with uid = 124.
deleting insn with uid = 169.
starting the processing of deferred insns
ending the processing of deferred insns


file_tester_read

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;;  ref usage 	r0={64d,54u} r1={25d,12u,2e} r2={21d,8u,2e} r4={21d,8u} r5={27d,14u} r6={1d,66u} r7={1d,34u} r8={13d} r9={13d} r10={13d} r11={13d} r12={13d} r13={13d} r14={13d} r15={13d} r17={29d,8u} r18={13d} r19={1d,1u,9e} r20={14d} r21={14d} r22={14d} r23={14d} r24={14d} r25={14d} r26={14d} r27={14d} r28={13d} r29={13d} r30={13d} r31={13d} r32={13d} r33={13d} r34={13d} r35={13d} r36={14d} r37={14d} r38={13d} r39={13d} r44={13d} r45={13d} r46={13d} r47={13d} r48={13d} r49={13d} r50={13d} r51={13d} r52={13d} r53={13d} r54={13d} r55={13d} r56={13d} r57={13d} r58={13d} r59={13d} r60={13d} r61={13d} r62={13d} r63={13d} r64={13d} r65={13d} r66={13d} r67={13d} r68={13d} r69={13d} r70={13d} r71={13d} r72={13d} r73={13d} r74={13d} r75={13d} 
;;    total ref usage 1211{993d,205u,13e} in 138{125 regular + 13 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags] 82 110
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [7 tester+0 S8 A64])
        (reg:DI 5 di [ tester ])) "tester/file_tester.c":139:39 80 {*movdi_internal}
     (nil))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [4 offset+0 S4 A32])
        (reg:SI 4 si [ offset ])) "tester/file_tester.c":139:39 81 {*movsi_internal}
     (nil))
(insn 4 3 5 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [4 size+0 S4 A32])
        (reg:SI 1 dx [ size ])) "tester/file_tester.c":139:39 81 {*movsi_internal}
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 expected+0 S8 A64])
        (reg:DI 2 cx [ expected ])) "tester/file_tester.c":139:39 80 {*movdi_internal}
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [4 i+0 S4 A32])
        (const_int 0 [0])) "tester/file_tester.c":140:7 81 {*movsi_internal}
     (nil))
(insn 10 9 11 2 (set (reg/f:DI 0 ax [110])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [7 tester+0 S8 A64])) "tester/file_tester.c":141:13 80 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:SI 0 ax [orig:82 _1 ] [82])
        (mem:SI (plus:DI (reg/f:DI 0 ax [110])
                (const_int 32 [0x20])) [4 tester_36(D)->error+0 S4 A64])) "tester/file_tester.c":141:13 81 {*movsi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:82 _1 ] [82])
            (const_int 0 [0]))) "tester/file_tester.c":141:6 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 13 12 18 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 217)
            (pc))) "tester/file_tester.c":141:6 891 {*jcc}
     (nil)
 -> 217)
;;  succ:       21 tester/file_tester.c:142:5
;;              3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 83 111 112 113 114
(note 18 13 19 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 3 (set (reg:SI 1 dx [111])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [4 offset+0 S4 A32])) "tester/file_tester.c":143:3 81 {*movsi_internal}
     (nil))
(insn 20 19 22 3 (set (reg:SI 0 ax [112])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [4 size+0 S4 A32])) "tester/file_tester.c":143:3 81 {*movsi_internal}
     (nil))
(insn 22 20 23 3 (set (reg:SI 4 si)
        (reg:SI 0 ax [112])) "tester/file_tester.c":143:3 81 {*movsi_internal}
     (nil))
(insn 23 22 24 3 (set (reg:DI 0 ax [113])
        (symbol_ref/f:DI ("*.LC17") [flags 0x2]  <var_decl 0x7f20b70563f0 *.LC17>)) "tester/file_tester.c":143:3 80 {*movdi_internal}
     (nil))
(insn 24 23 25 3 (set (reg:DI 5 di)
        (reg:DI 0 ax [113])) "tester/file_tester.c":143:3 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC17") [flags 0x2]  <var_decl 0x7f20b70563f0 *.LC17>)
        (nil)))
(insn 25 24 26 3 (set (reg:QI 0 ax)
        (const_int 0 [0])) "tester/file_tester.c":143:3 83 {*movqi_internal}
     (nil))
(call_insn 26 25 27 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f20b72c6000 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "tester/file_tester.c":143:3 909 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
(insn 27 26 28 3 (set (reg/f:DI 0 ax [114])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [7 tester+0 S8 A64])) "tester/file_tester.c":145:14 80 {*movdi_internal}
     (nil))
(insn 28 27 29 3 (set (reg/f:DI 0 ax [orig:83 _2 ] [83])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [114])
                (const_int 24 [0x18])) [2 tester_36(D)->inner_file+0 S8 A64])) "tester/file_tester.c":145:14 80 {*movdi_internal}
     (nil))
(insn 29 28 30 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:83 _2 ] [83])
            (const_int 0 [0]))) "tester/file_tester.c":145:6 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 30 29 31 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 61)
            (pc))) "tester/file_tester.c":145:6 891 {*jcc}
     (nil)
 -> 61)
;;  succ:       4 (FALLTHRU)
;;              7
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 84 85 115 116 117
(note 31 30 32 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 33 4 (set (reg/f:DI 0 ax [115])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [7 tester+0 S8 A64])) "tester/file_tester.c":146:25 80 {*movdi_internal}
     (nil))
(insn 33 32 34 4 (set (reg/f:DI 0 ax [orig:84 _3 ] [84])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [115])
                (const_int 24 [0x18])) [2 tester_36(D)->inner_file+0 S8 A64])) "tester/file_tester.c":146:25 80 {*movdi_internal}
     (nil))
(insn 34 33 35 4 (set (reg:SI 1 dx [116])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [4 size+0 S4 A32])) "tester/file_tester.c":146:9 81 {*movsi_internal}
     (nil))
(insn 35 34 36 4 (set (reg:SI 4 si [117])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [4 offset+0 S4 A32])) "tester/file_tester.c":146:9 81 {*movsi_internal}
     (nil))
(insn 36 35 39 4 (set (reg:DI 2 cx)
        (const_int 0 [0])) "tester/file_tester.c":146:9 80 {*movdi_internal}
     (nil))
(insn 39 36 40 4 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:84 _3 ] [84])) "tester/file_tester.c":146:9 80 {*movdi_internal}
     (nil))
(call_insn 40 39 42 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("file_read") [flags 0x41]  <function_decl 0x7f20b7341700 file_read>) [0 file_read S1 A8])
            (const_int 0 [0]))) "tester/file_tester.c":146:9 909 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 42 40 43 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:85 _4 ] [85])
            (const_int 0 [0]))) "tester/file_tester.c":146:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 43 42 44 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 52)
            (pc))) "tester/file_tester.c":146:8 891 {*jcc}
     (nil)
 -> 52)
;;  succ:       5 (FALLTHRU)
;;              6
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 118 119
(note 44 43 45 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 45 44 46 5 (set (reg/f:DI 0 ax [118])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [7 tester+0 S8 A64])) "tester/file_tester.c":147:21 80 {*movdi_internal}
     (nil))
(insn 46 45 47 5 (set (mem:SI (plus:DI (reg/f:DI 0 ax [118])
                (const_int 32 [0x20])) [4 tester_36(D)->error+0 S4 A64])
        (const_int 1 [0x1])) "tester/file_tester.c":147:21 81 {*movsi_internal}
     (nil))
(insn 47 46 48 5 (set (reg:DI 0 ax [119])
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7f20b703c120 *.LC6>)) "tester/file_tester.c":148:7 80 {*movdi_internal}
     (nil))
(insn 48 47 49 5 (set (reg:DI 5 di)
        (reg:DI 0 ax [119])) "tester/file_tester.c":148:7 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7f20b703c120 *.LC6>)
        (nil)))
(call_insn 49 48 200 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f20b72c6700 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) "tester/file_tester.c":148:7 909 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 200 49 201 5 (set (pc)
        (label_ref 198)) "tester/file_tester.c":152:5 892 {jump}
     (nil)
 -> 198)
;;  succ:       20 [always]  tester/file_tester.c:152:5
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 201 200 52)
;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 7, flags: (RTL, MODIFIED)
;;  pred:       4
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 120
(code_label 52 201 53 6 35 (nil) [1 uses])
(note 53 52 54 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 54 53 55 6 (set (reg:DI 0 ax [120])
        (symbol_ref/f:DI ("*.LC14") [flags 0x2]  <var_decl 0x7f20b7047360 *.LC14>)) "tester/file_tester.c":150:7 80 {*movdi_internal}
     (nil))
(insn 55 54 56 6 (set (reg:DI 5 di)
        (reg:DI 0 ax [120])) "tester/file_tester.c":150:7 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC14") [flags 0x2]  <var_decl 0x7f20b7047360 *.LC14>)
        (nil)))
(call_insn 56 55 202 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f20b72c6700 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) "tester/file_tester.c":150:7 909 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 202 56 203 6 (set (pc)
        (label_ref 198)) "tester/file_tester.c":152:5 892 {jump}
     (nil)
 -> 198)
;;  succ:       20 [always]  tester/file_tester.c:152:5
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 203 202 61)
;; basic block 7, loop depth 0, maybe hot
;;  prev block 6, next block 8, flags: (RTL, MODIFIED)
;;  pred:       3
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 86 87 88 89 90 121 122 123 124 125
(code_label 61 203 62 7 34 (nil) [1 uses])
(note 62 61 63 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 63 62 64 7 (set (reg:SI 0 ax [121])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [4 size+0 S4 A32])) "tester/file_tester.c":154:36 81 {*movsi_internal}
     (nil))
(insn 64 63 65 7 (parallel [
            (set (reg:SI 0 ax [orig:86 _5 ] [86])
                (plus:SI (reg:SI 0 ax [121])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "tester/file_tester.c":154:36 229 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                    (const_int -32 [0xffffffffffffffe0])) [4 size+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 65 64 66 7 (set (reg:DI 0 ax [orig:87 _6 ] [87])
        (sign_extend:DI (reg:SI 0 ax [orig:86 _5 ] [86]))) "tester/file_tester.c":154:24 154 {*extendsidi2_rex64}
     (nil))
(insn 66 65 67 7 (set (reg:DI 4 si)
        (const_int 1 [0x1])) "tester/file_tester.c":154:24 80 {*movdi_internal}
     (nil))
(insn 67 66 68 7 (set (reg:DI 5 di)
        (reg:DI 0 ax [orig:87 _6 ] [87])) "tester/file_tester.c":154:24 80 {*movdi_internal}
     (nil))
(call_insn 68 67 70 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("calloc") [flags 0x41]  <function_decl 0x7f20b72d8500 calloc>) [0 __builtin_calloc S1 A8])
            (const_int 0 [0]))) "tester/file_tester.c":154:24 909 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 70 68 71 7 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [1 readout_data+0 S8 A64])
        (reg/f:DI 0 ax [122])) "tester/file_tester.c":154:24 80 {*movdi_internal}
     (nil))
(insn 71 70 72 7 (set (reg:SI 1 dx [123])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [4 offset+0 S4 A32])) "tester/file_tester.c":156:14 81 {*movsi_internal}
     (nil))
(insn 72 71 73 7 (set (reg:SI 0 ax [124])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [4 size+0 S4 A32])) "tester/file_tester.c":156:14 81 {*movsi_internal}
     (nil))
(insn 73 72 74 7 (parallel [
            (set (reg:SI 1 dx [orig:88 _7 ] [88])
                (plus:SI (reg:SI 1 dx [123])
                    (reg:SI 0 ax [124])))
            (clobber (reg:CC 17 flags))
        ]) "tester/file_tester.c":156:14 229 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                    (const_int -28 [0xffffffffffffffe4])) [4 offset+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                    (const_int -32 [0xffffffffffffffe0])) [4 size+0 S4 A32]))
        (nil)))
(insn 74 73 75 7 (set (reg/f:DI 0 ax [125])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [7 tester+0 S8 A64])) "tester/file_tester.c":156:29 80 {*movdi_internal}
     (nil))
(insn 75 74 76 7 (set (reg/f:DI 0 ax [orig:89 _8 ] [89])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [125])
                (const_int 24 [0x18])) [2 tester_36(D)->inner_file+0 S8 A64])) "tester/file_tester.c":156:29 80 {*movdi_internal}
     (nil))
(insn 76 75 77 7 (set (reg:SI 0 ax [orig:90 _9 ] [90])
        (mem:SI (plus:DI (reg/f:DI 0 ax [orig:89 _8 ] [89])
                (const_int 4 [0x4])) [4 _8->size+0 S4 A32])) "tester/file_tester.c":156:41 81 {*movsi_internal}
     (nil))
(insn 77 76 78 7 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 1 dx [orig:88 _7 ] [88])
            (reg:SI 0 ax [orig:90 _9 ] [90]))) "tester/file_tester.c":156:6 11 {*cmpsi_1}
     (nil))
(jump_insn 78 77 79 7 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 110)
            (pc))) "tester/file_tester.c":156:6 891 {*jcc}
     (nil)
 -> 110)
;;  succ:       8 (FALLTHRU)
;;              11
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 8, loop depth 0, maybe hot
;;  prev block 7, next block 9, flags: (RTL, MODIFIED)
;;  pred:       7 (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 91 92 126 127 128 129
(note 79 78 80 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 80 79 81 8 (set (reg/f:DI 0 ax [126])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [7 tester+0 S8 A64])) "tester/file_tester.c":157:25 80 {*movdi_internal}
     (nil))
(insn 81 80 82 8 (set (reg/f:DI 0 ax [orig:91 _10 ] [91])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [126])
                (const_int 24 [0x18])) [2 tester_36(D)->inner_file+0 S8 A64])) "tester/file_tester.c":157:25 80 {*movdi_internal}
     (nil))
(insn 82 81 83 8 (set (reg:DI 2 cx [127])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [1 readout_data+0 S8 A64])) "tester/file_tester.c":157:9 80 {*movdi_internal}
     (nil))
(insn 83 82 84 8 (set (reg:SI 1 dx [128])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [4 size+0 S4 A32])) "tester/file_tester.c":157:9 81 {*movsi_internal}
     (nil))
(insn 84 83 88 8 (set (reg:SI 4 si [129])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [4 offset+0 S4 A32])) "tester/file_tester.c":157:9 81 {*movsi_internal}
     (nil))
(insn 88 84 89 8 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:91 _10 ] [91])) "tester/file_tester.c":157:9 80 {*movdi_internal}
     (nil))
(call_insn 89 88 91 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("file_read") [flags 0x41]  <function_decl 0x7f20b7341700 file_read>) [0 file_read S1 A8])
            (const_int 0 [0]))) "tester/file_tester.c":157:9 909 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 91 89 92 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:92 _11 ] [92])
            (const_int 0 [0]))) "tester/file_tester.c":157:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 92 91 93 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 101)
            (pc))) "tester/file_tester.c":157:8 891 {*jcc}
     (nil)
 -> 101)
;;  succ:       9 (FALLTHRU)
;;              10
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 9, loop depth 0, maybe hot
;;  prev block 8, next block 10, flags: (RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 130 131
(note 93 92 94 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 94 93 95 9 (set (reg/f:DI 0 ax [130])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [7 tester+0 S8 A64])) "tester/file_tester.c":158:21 80 {*movdi_internal}
     (nil))
(insn 95 94 96 9 (set (mem:SI (plus:DI (reg/f:DI 0 ax [130])
                (const_int 32 [0x20])) [4 tester_36(D)->error+0 S4 A64])
        (const_int 1 [0x1])) "tester/file_tester.c":158:21 81 {*movsi_internal}
     (nil))
(insn 96 95 97 9 (set (reg:DI 0 ax [131])
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7f20b703c120 *.LC6>)) "tester/file_tester.c":159:7 80 {*movdi_internal}
     (nil))
(insn 97 96 98 9 (set (reg:DI 5 di)
        (reg:DI 0 ax [131])) "tester/file_tester.c":159:7 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7f20b703c120 *.LC6>)
        (nil)))
(call_insn 98 97 204 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f20b72c6700 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) "tester/file_tester.c":159:7 909 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 204 98 205 9 (set (pc)
        (label_ref 191)) "tester/file_tester.c":163:5 892 {jump}
     (nil)
 -> 191)
;;  succ:       19 [always]  tester/file_tester.c:163:5
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 205 204 101)
;; basic block 10, loop depth 0, maybe hot
;;  prev block 9, next block 11, flags: (RTL, MODIFIED)
;;  pred:       8
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 132
(code_label 101 205 102 10 38 (nil) [1 uses])
(note 102 101 103 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 103 102 104 10 (set (reg:DI 0 ax [132])
        (symbol_ref/f:DI ("*.LC14") [flags 0x2]  <var_decl 0x7f20b7047360 *.LC14>)) "tester/file_tester.c":161:7 80 {*movdi_internal}
     (nil))
(insn 104 103 105 10 (set (reg:DI 5 di)
        (reg:DI 0 ax [132])) "tester/file_tester.c":161:7 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC14") [flags 0x2]  <var_decl 0x7f20b7047360 *.LC14>)
        (nil)))
(call_insn 105 104 206 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f20b72c6700 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) "tester/file_tester.c":161:7 909 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 206 105 207 10 (set (pc)
        (label_ref 191)) "tester/file_tester.c":163:5 892 {jump}
     (nil)
 -> 191)
;;  succ:       19 [always]  tester/file_tester.c:163:5
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 207 206 110)
;; basic block 11, loop depth 0, maybe hot
;;  prev block 10, next block 12, flags: (RTL, MODIFIED)
;;  pred:       7
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 93 94 133 134 135 136 137
(code_label 110 207 111 11 37 (nil) [1 uses])
(note 111 110 112 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 112 111 113 11 (set (reg/f:DI 0 ax [133])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [7 tester+0 S8 A64])) "tester/file_tester.c":165:17 80 {*movdi_internal}
     (nil))
(insn 113 112 114 11 (set (mem:SI (plus:DI (reg/f:DI 0 ax [133])
                (const_int 32 [0x20])) [4 tester_36(D)->error+0 S4 A64])
        (const_int 1 [0x1])) "tester/file_tester.c":165:17 81 {*movsi_internal}
     (nil))
(insn 114 113 115 11 (set (reg/f:DI 0 ax [134])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [7 tester+0 S8 A64])) "tester/file_tester.c":167:24 80 {*movdi_internal}
     (nil))
(insn 115 114 116 11 (set (reg/f:DI 0 ax [orig:93 _12 ] [93])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [134])
                (const_int 24 [0x18])) [2 tester_36(D)->inner_file+0 S8 A64])) "tester/file_tester.c":167:24 80 {*movdi_internal}
     (nil))
(insn 116 115 117 11 (set (reg:DI 2 cx [135])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [1 readout_data+0 S8 A64])) "tester/file_tester.c":167:8 80 {*movdi_internal}
     (nil))
(insn 117 116 118 11 (set (reg:SI 1 dx [136])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [4 size+0 S4 A32])) "tester/file_tester.c":167:8 81 {*movsi_internal}
     (nil))
(insn 118 117 122 11 (set (reg:SI 4 si [137])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [4 offset+0 S4 A32])) "tester/file_tester.c":167:8 81 {*movsi_internal}
     (nil))
(insn 122 118 123 11 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:93 _12 ] [93])) "tester/file_tester.c":167:8 80 {*movdi_internal}
     (nil))
(call_insn 123 122 125 11 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("file_read") [flags 0x41]  <function_decl 0x7f20b7341700 file_read>) [0 file_read S1 A8])
            (const_int 0 [0]))) "tester/file_tester.c":167:8 909 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 125 123 126 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:94 _13 ] [94])
            (const_int 0 [0]))) "tester/file_tester.c":167:6 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 126 125 127 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 133)
            (pc))) "tester/file_tester.c":167:6 891 {*jcc}
     (nil)
 -> 133)
;;  succ:       12 (FALLTHRU)
;;              13
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 12, loop depth 0, maybe hot
;;  prev block 11, next block 13, flags: (RTL, MODIFIED)
;;  pred:       11 (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 138
(note 127 126 128 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 128 127 129 12 (set (reg:DI 0 ax [138])
        (symbol_ref/f:DI ("*.LC18") [flags 0x2]  <var_decl 0x7f20b7056480 *.LC18>)) "tester/file_tester.c":168:5 80 {*movdi_internal}
     (nil))
(insn 129 128 130 12 (set (reg:DI 5 di)
        (reg:DI 0 ax [138])) "tester/file_tester.c":168:5 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC18") [flags 0x2]  <var_decl 0x7f20b7056480 *.LC18>)
        (nil)))
(call_insn 130 129 208 12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f20b72c6700 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) "tester/file_tester.c":168:5 909 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 208 130 209 12 (set (pc)
        (label_ref 191)) "tester/file_tester.c":169:5 892 {jump}
     (nil)
 -> 191)
;;  succ:       19 [always]  tester/file_tester.c:169:5
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 209 208 133)
;; basic block 13, loop depth 0, maybe hot
;;  prev block 12, next block 14, flags: (RTL, MODIFIED)
;;  pred:       11
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(code_label 133 209 134 13 41 (nil) [1 uses])
(note 134 133 135 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 135 134 210 13 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [4 i+0 S4 A32])
        (const_int 0 [0])) "tester/file_tester.c":172:10 81 {*movsi_internal}
     (nil))
(jump_insn 210 135 211 13 (set (pc)
        (label_ref 179)) "tester/file_tester.c":172:3 892 {jump}
     (nil)
 -> 179)
;;  succ:       17 [always]  tester/file_tester.c:172:3
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 211 210 181)
;; basic block 14, loop depth 0, maybe hot
;;  prev block 13, next block 15, flags: (RTL, MODIFIED)
;;  pred:       17
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags] 95 96 97 98 99 100 139 140 141 142
(code_label 181 211 138 14 44 (nil) [1 uses])
(note 138 181 139 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 139 138 140 14 (set (reg:SI 0 ax [139])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [4 i+0 S4 A32])) "tester/file_tester.c":173:21 81 {*movsi_internal}
     (nil))
(insn 140 139 141 14 (set (reg:DI 1 dx [orig:95 _14 ] [95])
        (sign_extend:DI (reg:SI 0 ax [139]))) "tester/file_tester.c":173:21 154 {*extendsidi2_rex64}
     (nil))
(insn 141 140 142 14 (set (reg/f:DI 0 ax [140])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [1 readout_data+0 S8 A64])) "tester/file_tester.c":173:21 80 {*movdi_internal}
     (nil))
(insn 142 141 143 14 (parallel [
            (set (reg/f:DI 0 ax [orig:96 _15 ] [96])
                (plus:DI (reg/f:DI 0 ax [140])
                    (reg:DI 1 dx [orig:95 _14 ] [95])))
            (clobber (reg:CC 17 flags))
        ]) "tester/file_tester.c":173:21 230 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 readout_data+0 S8 A64])
            (reg:DI 1 dx [orig:95 _14 ] [95]))
        (nil)))
(insn 143 142 144 14 (set (reg:QI 1 dx [orig:97 _16 ] [97])
        (mem:QI (reg/f:DI 0 ax [orig:96 _15 ] [96]) [0 *_15+0 S1 A8])) "tester/file_tester.c":173:21 83 {*movqi_internal}
     (nil))
(insn 144 143 145 14 (set (reg:SI 0 ax [141])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [4 i+0 S4 A32])) "tester/file_tester.c":173:36 81 {*movsi_internal}
     (nil))
(insn 145 144 146 14 (set (reg:DI 2 cx [orig:98 _17 ] [98])
        (sign_extend:DI (reg:SI 0 ax [141]))) "tester/file_tester.c":173:36 154 {*extendsidi2_rex64}
     (nil))
(insn 146 145 147 14 (set (reg/f:DI 0 ax [142])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 expected+0 S8 A64])) "tester/file_tester.c":173:36 80 {*movdi_internal}
     (nil))
(insn 147 146 148 14 (parallel [
            (set (reg/f:DI 0 ax [orig:99 _18 ] [99])
                (plus:DI (reg/f:DI 0 ax [142])
                    (reg:DI 2 cx [orig:98 _17 ] [98])))
            (clobber (reg:CC 17 flags))
        ]) "tester/file_tester.c":173:36 230 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                    (const_int -40 [0xffffffffffffffd8])) [1 expected+0 S8 A64])
            (reg:DI 2 cx [orig:98 _17 ] [98]))
        (nil)))
(insn 148 147 149 14 (set (reg:QI 0 ax [orig:100 _19 ] [100])
        (mem:QI (reg/f:DI 0 ax [orig:99 _18 ] [99]) [0 *_18+0 S1 A8])) "tester/file_tester.c":173:36 83 {*movqi_internal}
     (nil))
(insn 149 148 150 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 1 dx [orig:97 _16 ] [97])
            (reg:QI 0 ax [orig:100 _19 ] [100]))) "tester/file_tester.c":173:8 9 {*cmpqi_1}
     (nil))
(jump_insn 150 149 151 14 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 176)
            (pc))) "tester/file_tester.c":173:8 891 {*jcc}
     (nil)
 -> 176)
;;  succ:       15 (FALLTHRU)
;;              16
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 15, loop depth 0, maybe hot
;;  prev block 14, next block 16, flags: (RTL, MODIFIED)
;;  pred:       14 (FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 101 102 103 104 105 106 107 108 109 143 144 145 146 147 148 149
(note 151 150 152 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 152 151 153 15 (set (reg:SI 0 ax [143])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [4 i+0 S4 A32])) "tester/file_tester.c":175:51 81 {*movsi_internal}
     (nil))
(insn 153 152 154 15 (set (reg:DI 1 dx [orig:101 _20 ] [101])
        (sign_extend:DI (reg:SI 0 ax [143]))) "tester/file_tester.c":175:51 154 {*extendsidi2_rex64}
     (nil))
(insn 154 153 155 15 (set (reg/f:DI 0 ax [144])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 expected+0 S8 A64])) "tester/file_tester.c":175:51 80 {*movdi_internal}
     (nil))
(insn 155 154 156 15 (parallel [
            (set (reg/f:DI 0 ax [orig:102 _21 ] [102])
                (plus:DI (reg/f:DI 0 ax [144])
                    (reg:DI 1 dx [orig:101 _20 ] [101])))
            (clobber (reg:CC 17 flags))
        ]) "tester/file_tester.c":175:51 230 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                    (const_int -40 [0xffffffffffffffd8])) [1 expected+0 S8 A64])
            (reg:DI 1 dx [orig:101 _20 ] [101]))
        (nil)))
(insn 156 155 157 15 (set (reg:QI 0 ax [orig:103 _22 ] [103])
        (mem:QI (reg/f:DI 0 ax [orig:102 _21 ] [102]) [0 *_21+0 S1 A8])) "tester/file_tester.c":175:51 83 {*movqi_internal}
     (nil))
(insn 157 156 158 15 (set (reg:SI 1 dx [orig:104 _23 ] [104])
        (sign_extend:SI (reg:QI 0 ax [orig:103 _22 ] [103]))) "tester/file_tester.c":174:7 160 {extendqisi2}
     (nil))
(insn 158 157 159 15 (set (reg:SI 0 ax [145])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [4 i+0 S4 A32])) "tester/file_tester.c":175:38 81 {*movsi_internal}
     (nil))
(insn 159 158 160 15 (set (reg:DI 2 cx [orig:105 _24 ] [105])
        (sign_extend:DI (reg:SI 0 ax [145]))) "tester/file_tester.c":175:38 154 {*extendsidi2_rex64}
     (nil))
(insn 160 159 161 15 (set (reg/f:DI 0 ax [146])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [1 readout_data+0 S8 A64])) "tester/file_tester.c":175:38 80 {*movdi_internal}
     (nil))
(insn 161 160 162 15 (parallel [
            (set (reg/f:DI 0 ax [orig:106 _25 ] [106])
                (plus:DI (reg/f:DI 0 ax [146])
                    (reg:DI 2 cx [orig:105 _24 ] [105])))
            (clobber (reg:CC 17 flags))
        ]) "tester/file_tester.c":175:38 230 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 readout_data+0 S8 A64])
            (reg:DI 2 cx [orig:105 _24 ] [105]))
        (nil)))
(insn 162 161 163 15 (set (reg:QI 0 ax [orig:107 _26 ] [107])
        (mem:QI (reg/f:DI 0 ax [orig:106 _25 ] [106]) [0 *_25+0 S1 A8])) "tester/file_tester.c":175:38 83 {*movqi_internal}
     (nil))
(insn 163 162 164 15 (set (reg:SI 0 ax [orig:108 _27 ] [108])
        (sign_extend:SI (reg:QI 0 ax [orig:107 _26 ] [107]))) "tester/file_tester.c":174:7 160 {extendqisi2}
     (nil))
(insn 164 163 165 15 (set (reg:SI 4 si [147])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [4 offset+0 S4 A32])) "tester/file_tester.c":174:7 81 {*movsi_internal}
     (nil))
(insn 165 164 166 15 (set (reg:SI 2 cx [148])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [4 i+0 S4 A32])) "tester/file_tester.c":174:7 81 {*movsi_internal}
     (nil))
(insn 166 165 167 15 (parallel [
            (set (reg:SI 4 si [orig:109 _28 ] [109])
                (plus:SI (reg:SI 4 si [147])
                    (reg:SI 2 cx [148])))
            (clobber (reg:CC 17 flags))
        ]) "tester/file_tester.c":174:7 229 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                    (const_int -28 [0xffffffffffffffe4])) [4 offset+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                    (const_int -12 [0xfffffffffffffff4])) [4 i+0 S4 A32]))
        (nil)))
(insn 167 166 168 15 (set (reg:SI 2 cx)
        (reg:SI 1 dx [orig:104 _23 ] [104])) "tester/file_tester.c":174:7 81 {*movsi_internal}
     (nil))
(insn 168 167 170 15 (set (reg:SI 1 dx)
        (reg:SI 0 ax [orig:108 _27 ] [108])) "tester/file_tester.c":174:7 81 {*movsi_internal}
     (nil))
(insn 170 168 171 15 (set (reg:DI 0 ax [149])
        (symbol_ref/f:DI ("*.LC16") [flags 0x2]  <var_decl 0x7f20b7047480 *.LC16>)) "tester/file_tester.c":174:7 80 {*movdi_internal}
     (nil))
(insn 171 170 172 15 (set (reg:DI 5 di)
        (reg:DI 0 ax [149])) "tester/file_tester.c":174:7 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC16") [flags 0x2]  <var_decl 0x7f20b7047480 *.LC16>)
        (nil)))
(insn 172 171 173 15 (set (reg:QI 0 ax)
        (const_int 0 [0])) "tester/file_tester.c":174:7 83 {*movqi_internal}
     (nil))
(call_insn 173 172 212 15 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f20b72c6000 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "tester/file_tester.c":174:7 909 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (expr_list:SI (use (reg:SI 2 cx))
                        (nil)))))))
(jump_insn 212 173 213 15 (set (pc)
        (label_ref 191)) "tester/file_tester.c":176:7 892 {jump}
     (nil)
 -> 191)
;;  succ:       19 [always]  tester/file_tester.c:176:7
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 213 212 176)
;; basic block 16, loop depth 0, maybe hot
;;  prev block 15, next block 17, flags: (RTL, MODIFIED)
;;  pred:       14
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags]
(code_label 176 213 177 16 43 (nil) [1 uses])
(note 177 176 178 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 178 177 179 16 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -12 [0xfffffffffffffff4])) [4 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -12 [0xfffffffffffffff4])) [4 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "tester/file_tester.c":172:26 229 {*addsi_1}
     (nil))
;;  succ:       17 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 17, loop depth 0, maybe hot
;;  prev block 16, next block 18, flags: (RTL, MODIFIED)
;;  pred:       16 (FALLTHRU,DFS_BACK)
;;              13 [always]  tester/file_tester.c:172:3
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags] 150
(code_label 179 178 180 17 42 (nil) [1 uses])
(note 180 179 182 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 182 180 183 17 (set (reg:SI 0 ax [150])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [4 i+0 S4 A32])) "tester/file_tester.c":172:17 81 {*movsi_internal}
     (nil))
(insn 183 182 184 17 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [150])
            (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -32 [0xffffffffffffffe0])) [4 size+0 S4 A32]))) "tester/file_tester.c":172:17 11 {*cmpsi_1}
     (nil))
(jump_insn 184 183 185 17 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 181)
            (pc))) "tester/file_tester.c":172:17 891 {*jcc}
     (nil)
 -> 181)
;;  succ:       14
;;              18 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 18, loop depth 0, maybe hot
;;  prev block 17, next block 19, flags: (RTL, MODIFIED)
;;  pred:       17 (FALLTHRU)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 151 152
(note 185 184 186 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 186 185 187 18 (set (reg/f:DI 0 ax [151])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [7 tester+0 S8 A64])) "tester/file_tester.c":179:17 80 {*movdi_internal}
     (nil))
(insn 187 186 188 18 (set (mem:SI (plus:DI (reg/f:DI 0 ax [151])
                (const_int 32 [0x20])) [4 tester_36(D)->error+0 S4 A64])
        (const_int 0 [0])) "tester/file_tester.c":179:17 81 {*movsi_internal}
     (nil))
(insn 188 187 189 18 (set (reg:DI 0 ax [152])
        (symbol_ref/f:DI ("*.LC19") [flags 0x2]  <var_decl 0x7f20b7056510 *.LC19>)) "tester/file_tester.c":180:3 80 {*movdi_internal}
     (nil))
(insn 189 188 190 18 (set (reg:DI 5 di)
        (reg:DI 0 ax [152])) "tester/file_tester.c":180:3 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC19") [flags 0x2]  <var_decl 0x7f20b7056510 *.LC19>)
        (nil)))
(call_insn 190 189 191 18 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f20b72c6700 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) "tester/file_tester.c":180:3 909 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       19 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 19, loop depth 0, maybe hot
;;  prev block 18, next block 21, flags: (RTL, MODIFIED)
;;  pred:       9 [always]  tester/file_tester.c:163:5
;;              10 [always]  tester/file_tester.c:163:5
;;              12 [always]  tester/file_tester.c:169:5
;;              18 (FALLTHRU)
;;              15 [always]  tester/file_tester.c:176:7
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 153
(code_label 191 190 192 19 40 ("test_read_clear") [4 uses])
(note 192 191 193 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 193 192 194 19 (set (reg:DI 0 ax [153])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [1 readout_data+0 S8 A64])) "tester/file_tester.c":182:3 80 {*movdi_internal}
     (nil))
(insn 194 193 195 19 (set (reg:DI 5 di)
        (reg:DI 0 ax [153])) "tester/file_tester.c":182:3 80 {*movdi_internal}
     (nil))
(call_insn 195 194 214 19 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f20b72ddc00 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) "tester/file_tester.c":182:3 898 {*call}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 214 195 215 19 (set (pc)
        (label_ref 198)) 892 {jump}
     (nil)
 -> 198)
;;  succ:       20
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 215 214 217)
;; basic block 21, loop depth 0, maybe hot
;;  prev block 19, next block 20, flags: (RTL, MODIFIED)
;;  pred:       2 tester/file_tester.c:142:5
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(code_label 217 215 216 21 45 (nil) [1 uses])
(note 216 217 218 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 218 216 198 21 (const_int 0 [0]) "tester/file_tester.c":142:5 928 {nop}
     (nil))
;;  succ:       20 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 20, loop depth 0, maybe hot
;;  prev block 21, next block 1, flags: (RTL, MODIFIED)
;;  pred:       6 [always]  tester/file_tester.c:152:5
;;              21 [always]  (FALLTHRU)
;;              5 [always]  tester/file_tester.c:152:5
;;              19
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(code_label 198 218 199 20 31 (nil) [3 uses])
(note 199 198 219 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(note 219 199 0 NOTE_INSN_DELETED)
