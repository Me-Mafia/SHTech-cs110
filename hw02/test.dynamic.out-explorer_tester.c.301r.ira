
;; Function explorer_tester_create (explorer_tester_create, funcdef_no=6, decl_uid=2097, cgraph_uid=7, symbol_order=6)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 8.
verify found no changes in insn with uid = 16.
verify found no changes in insn with uid = 17.
verify found no changes in insn with uid = 28.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r91: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r91,l0) best DIREG, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a8 (r88,l0) best SIREG, allocno GENERAL_REGS
    r87: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a9 (r87,l0) best AREG, allocno GENERAL_REGS
    r86: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r86,l0) best AREG, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r84,l0) best SIREG, allocno GENERAL_REGS
    r83: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r83,l0) best AREG, allocno GENERAL_REGS
    r82: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a7 (r82,l0) best DIREG, allocno GENERAL_REGS

  a0(r86,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:7000
  a1(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:6000 NO_REX_SSE_REGS:6000 SSE_REGS:6000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a2(r91,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a3(r84,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a4(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a5(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a6(r83,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:6000 NO_REX_SSE_REGS:6000 SSE_REGS:6000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a7(r82,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a8(r88,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a9(r87,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:6000 NO_REX_SSE_REGS:6000 SSE_REGS:6000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000

   Insn 37(l0): point = 0
   Insn 36(l0): point = 2
   Insn 32(l0): point = 4
   Insn 29(l0): point = 6
   Insn 28(l0): point = 8
   Insn 27(l0): point = 10
   Insn 26(l0): point = 12
   Insn 25(l0): point = 14
   Insn 24(l0): point = 16
   Insn 23(l0): point = 18
   Insn 22(l0): point = 20
   Insn 21(l0): point = 22
   Insn 20(l0): point = 24
   Insn 19(l0): point = 26
   Insn 18(l0): point = 28
   Insn 17(l0): point = 30
   Insn 16(l0): point = 32
   Insn 15(l0): point = 34
   Insn 14(l0): point = 36
   Insn 13(l0): point = 38
   Insn 12(l0): point = 40
   Insn 11(l0): point = 42
   Insn 10(l0): point = 44
   Insn 9(l0): point = 46
   Insn 8(l0): point = 48
   Insn 7(l0): point = 50
   Insn 6(l0): point = 52
   Insn 2(l0): point = 54
 a0(r86): [3..4]
 a1(r85): [5..6]
 a2(r91): [13..14]
 a3(r84): [17..18]
 a4(r90): [21..22]
 a5(r89): [25..26]
 a6(r83): [25..28]
 a7(r82): [35..42]
 a8(r88): [37..40]
 a9(r87): [45..46]
Compressing live ranges: from 57 to 16 - 28%
Ranges after the compression:
 a0(r86): [0..1]
 a1(r85): [2..3]
 a2(r91): [4..5]
 a3(r84): [6..7]
 a4(r90): [8..9]
 a5(r89): [10..11]
 a6(r83): [10..11]
 a7(r82): [12..13]
 a8(r88): [12..13]
 a9(r87): [14..15]
  pref0:a2(r91)<-hr5@1500
  pref1:a8(r88)<-hr4@1500
  pref2:a9(r87)<-hr0@1500
  pref3:a0(r86)<-hr0@1500
  pref4:a3(r84)<-hr4@1500
  pref5:a6(r83)<-hr0@1500
  pref6:a7(r82)<-hr5@1500
  regions=1, blocks=3, points=16
    allocnos=10 (big 0), copies=0, conflicts=0, ranges=10
Disposition:
    7:r82  l0     0    6:r83  l0     0    3:r84  l0     0    1:r85  l0     0
    0:r86  l0     0    9:r87  l0     0    8:r88  l0     2    5:r89  l0     1
    4:r90  l0     0    2:r91  l0     0
+++Costs: overall -7000, reg -7000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


explorer_tester_create

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;;  ref usage 	r0={7d,5u} r1={6d,1u} r2={5d} r4={8d,3u} r5={8d,4u} r6={1d,2u} r7={1d,6u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r16={1d,1u} r17={4d} r18={4d} r19={1d,10u} r20={5d} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={5d} r37={5d} r38={4d} r39={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r82={1d,1u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} 
;;    total ref usage 348{306d,42u,0e} in 28{24 regular + 4 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 82 83 84 85 86 87 88 89 90 91
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [1 name+0 S8 A64])
        (reg:DI 5 di [ name ])) "tester/explorer_tester.c":8:60 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ name ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 4 si)
        (const_int 40 [0x28])) "tester/explorer_tester.c":9:34 80 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:DI 5 di)
        (const_int 1 [0x1])) "tester/explorer_tester.c":9:34 80 {*movdi_internal}
     (nil))
(call_insn 8 7 9 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("calloc") [flags 0x41]  <function_decl 0x7fb9492d8500 calloc>) [0 __builtin_calloc S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":9:34 909 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 9 8 10 2 (set (reg/f:DI 87)
        (reg:DI 0 ax)) "tester/explorer_tester.c":9:34 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 87)
            (nil))))
(insn 10 9 11 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [11 self+0 S8 A64])
        (reg/f:DI 87)) "tester/explorer_tester.c":9:34 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87)
        (nil)))
(insn 11 10 12 2 (set (reg/f:DI 82 [ _1 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [11 self+0 S8 A64])) "tester/explorer_tester.c":10:15 80 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:DI 88)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [1 name+0 S8 A64])) "tester/explorer_tester.c":10:3 80 {*movdi_internal}
     (nil))
(insn 13 12 14 2 (set (reg:DI 1 dx)
        (const_int 20 [0x14])) "tester/explorer_tester.c":10:3 80 {*movdi_internal}
     (nil))
(insn 14 13 15 2 (set (reg:DI 4 si)
        (reg:DI 88)) "tester/explorer_tester.c":10:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88)
        (nil)))
(insn 15 14 16 2 (set (reg:DI 5 di)
        (reg/f:DI 82 [ _1 ])) "tester/explorer_tester.c":10:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 82 [ _1 ])
        (nil)))
(call_insn 16 15 17 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strncpy") [flags 0x41]  <function_decl 0x7fb9492c0e00 strncpy>) [0 __builtin_strncpy S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":10:3 909 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(call_insn 17 16 18 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("explorer_new") [flags 0x41]  <function_decl 0x7fb949341e00 explorer_new>) [0 explorer_new S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":11:25 909 {*call_value}
     (nil)
    (nil))
(insn 18 17 19 2 (set (reg/f:DI 83 [ _2 ])
        (reg:DI 0 ax)) "tester/explorer_tester.c":11:25 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 19 18 20 2 (set (reg/f:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [11 self+0 S8 A64])) "tester/explorer_tester.c":11:23 80 {*movdi_internal}
     (nil))
(insn 20 19 21 2 (set (mem/f:DI (plus:DI (reg/f:DI 89)
                (const_int 24 [0x18])) [2 self_6->inner_explore+0 S8 A64])
        (reg/f:DI 83 [ _2 ])) "tester/explorer_tester.c":11:23 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 89)
        (expr_list:REG_DEAD (reg/f:DI 83 [ _2 ])
            (nil))))
(insn 21 20 22 2 (set (reg/f:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [11 self+0 S8 A64])) "tester/explorer_tester.c":12:15 80 {*movdi_internal}
     (nil))
(insn 22 21 23 2 (set (mem:SI (plus:DI (reg/f:DI 90)
                (const_int 32 [0x20])) [4 self_6->error+0 S4 A64])
        (const_int 0 [0])) "tester/explorer_tester.c":12:15 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90)
        (nil)))
(insn 23 22 24 2 (set (reg/f:DI 84 [ _3 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [11 self+0 S8 A64])) "tester/explorer_tester.c":13:51 80 {*movdi_internal}
     (nil))
(insn 24 23 25 2 (set (reg:DI 4 si)
        (reg/f:DI 84 [ _3 ])) "tester/explorer_tester.c":13:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 84 [ _3 ])
        (nil)))
(insn 25 24 26 2 (set (reg:DI 91)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7fb949062510 *.LC0>)) "tester/explorer_tester.c":13:3 80 {*movdi_internal}
     (nil))
(insn 26 25 27 2 (set (reg:DI 5 di)
        (reg:DI 91)) "tester/explorer_tester.c":13:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 91)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7fb949062510 *.LC0>)
            (nil))))
(insn 27 26 28 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "tester/explorer_tester.c":13:3 83 {*movqi_internal}
     (nil))
(call_insn 28 27 29 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fb9492c6000 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":13:3 909 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 29 28 32 2 (set (reg/f:DI 85 [ _13 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [11 self+0 S8 A64])) "tester/explorer_tester.c":14:10 80 {*movdi_internal}
     (nil))
(insn 32 29 36 2 (set (reg/f:DI 86 [ <retval> ])
        (reg/f:DI 85 [ _13 ])) "tester/explorer_tester.c":14:10 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 85 [ _13 ])
        (nil)))
(insn 36 32 37 2 (set (reg/i:DI 0 ax)
        (reg/f:DI 86 [ <retval> ])) "tester/explorer_tester.c":15:1 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 86 [ <retval> ])
        (nil)))
(insn 37 36 0 2 (use (reg/i:DI 0 ax)) "tester/explorer_tester.c":15:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 19 [frame]


;; Function explorer_tester_destory (explorer_tester_destory, funcdef_no=7, decl_uid=2099, cgraph_uid=8, symbol_order=7)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 9 n_edges 10 count 9 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 8 }
;; 8 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 14.
verify found no changes in insn with uid = 24.
verify found no changes in insn with uid = 31.
verify found no changes in insn with uid = 36.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r90: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r90,l0) best DIREG, allocno GENERAL_REGS
    r89: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r89,l0) best DIREG, allocno GENERAL_REGS
    r88: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r88,l0) best DIREG, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r83,l0) best DIREG, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r90,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a1(r89,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a2(r88,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a3(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a4(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a5(r83,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a6(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a7(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a8(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000

   Insn 42(l0): point = 0
   Insn 36(l0): point = 3
   Insn 35(l0): point = 5
   Insn 34(l0): point = 7
   Insn 31(l0): point = 10
   Insn 30(l0): point = 12
   Insn 29(l0): point = 14
   Insn 39(l0): point = 17
   Insn 24(l0): point = 19
   Insn 23(l0): point = 21
   Insn 22(l0): point = 23
   Insn 20(l0): point = 26
   Insn 19(l0): point = 28
   Insn 18(l0): point = 30
   Insn 17(l0): point = 32
   Insn 14(l0): point = 35
   Insn 13(l0): point = 37
   Insn 12(l0): point = 39
   Insn 11(l0): point = 41
   Insn 9(l0): point = 44
   Insn 8(l0): point = 46
   Insn 7(l0): point = 48
   Insn 6(l0): point = 50
   Insn 2(l0): point = 52
 a0(r90): [6..7]
 a1(r89): [13..14]
 a2(r88): [22..23]
 a3(r84): [29..30]
 a4(r87): [31..32]
 a5(r83): [38..39]
 a6(r86): [40..41]
 a7(r82): [47..48]
 a8(r85): [49..50]
Compressing live ranges: from 55 to 18 - 32%
Ranges after the compression:
 a0(r90): [0..1]
 a1(r89): [2..3]
 a2(r88): [4..5]
 a3(r84): [6..7]
 a4(r87): [8..9]
 a5(r83): [10..11]
 a6(r86): [12..13]
 a7(r82): [14..15]
 a8(r85): [16..17]
  pref0:a0(r90)<-hr5@1500
  pref1:a1(r89)<-hr5@1500
  pref2:a2(r88)<-hr5@1500
  pref3:a5(r83)<-hr5@1500
  regions=1, blocks=9, points=18
    allocnos=9 (big 0), copies=0, conflicts=0, ranges=9
Disposition:
    7:r82  l0     0    5:r83  l0     0    3:r84  l0     0    8:r85  l0     0
    6:r86  l0     0    4:r87  l0     0    2:r88  l0     0    1:r89  l0     0
    0:r90  l0     0
+++Costs: overall -4000, reg -4000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


explorer_tester_destory

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;;  ref usage 	r0={5d} r1={5d} r2={5d} r4={5d} r5={9d,5u} r6={1d,8u} r7={1d,12u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r16={1d,7u} r17={6d,2u} r18={4d} r19={1d,13u} r20={5d} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={5d} r37={5d} r38={4d} r39={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r82={1d,1u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} 
;;    total ref usage 358{302d,56u,0e} in 24{20 regular + 4 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags] 82 85
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [11 self+0 S8 A64])
        (reg:DI 5 di [ self ])) "tester/explorer_tester.c":16:60 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ self ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 85)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [11 self+0 S8 A64])) "tester/explorer_tester.c":17:11 80 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg/f:DI 82 [ _1 ])
        (mem/f:DI (plus:DI (reg/f:DI 85)
                (const_int 24 [0x18])) [2 self_7(D)->inner_explore+0 S8 A64])) "tester/explorer_tester.c":17:11 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 85)
        (nil)))
(insn 8 7 9 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 82 [ _1 ])
            (const_int 0 [0]))) "tester/explorer_tester.c":17:6 8 {*cmpdi_ccno_1}
     (expr_list:REG_DEAD (reg/f:DI 82 [ _1 ])
        (nil)))
(jump_insn 9 8 10 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 15)
            (pc))) "tester/explorer_tester.c":17:6 891 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 15)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 83 86
(note 10 9 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 3 (set (reg/f:DI 86)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [11 self+0 S8 A64])) "tester/explorer_tester.c":18:5 80 {*movdi_internal}
     (nil))
(insn 12 11 13 3 (set (reg/f:DI 83 [ _2 ])
        (mem/f:DI (plus:DI (reg/f:DI 86)
                (const_int 24 [0x18])) [2 self_7(D)->inner_explore+0 S8 A64])) "tester/explorer_tester.c":18:5 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 86)
        (nil)))
(insn 13 12 14 3 (set (reg:DI 5 di)
        (reg/f:DI 83 [ _2 ])) "tester/explorer_tester.c":18:5 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 83 [ _2 ])
        (nil)))
(call_insn 14 13 15 3 (call (mem:QI (symbol_ref:DI ("explorer_release") [flags 0x41]  <function_decl 0x7fb949341f00 explorer_release>) [0 explorer_release S1 A8])
        (const_int 0 [0])) "tester/explorer_tester.c":18:5 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       2
;;              3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags] 84 87
(code_label 15 14 16 4 4 (nil) [1 uses])
(note 16 15 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 4 (set (reg/f:DI 87)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [11 self+0 S8 A64])) "tester/explorer_tester.c":20:11 80 {*movdi_internal}
     (nil))
(insn 18 17 19 4 (set (reg:SI 84 [ _3 ])
        (mem:SI (plus:DI (reg/f:DI 87)
                (const_int 32 [0x20])) [4 self_7(D)->error+0 S4 A64])) "tester/explorer_tester.c":20:11 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87)
        (nil)))
(insn 19 18 20 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 84 [ _3 ])
            (const_int 0 [0]))) "tester/explorer_tester.c":20:6 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 84 [ _3 ])
        (nil)))
(jump_insn 20 19 21 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 27)
            (pc))) "tester/explorer_tester.c":20:6 891 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 27)
;;  succ:       5 (FALLTHRU)
;;              6
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 88
(note 21 20 22 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 5 (set (reg:DI 88)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7fb949062a20 *.LC1>)) "tester/explorer_tester.c":21:5 80 {*movdi_internal}
     (nil))
(insn 23 22 24 5 (set (reg:DI 5 di)
        (reg:DI 88)) "tester/explorer_tester.c":21:5 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7fb949062a20 *.LC1>)
            (nil))))
(call_insn 24 23 39 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fb9492c6700 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":21:5 909 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 39 24 40 5 (set (pc)
        (label_ref 32)) 892 {jump}
     (nil)
 -> 32)
;;  succ:       7 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 40 39 27)
;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       4
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 89
(code_label 27 40 28 6 5 (nil) [1 uses])
(note 28 27 29 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 30 6 (set (reg:DI 89)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7fb949062ab0 *.LC2>)) "tester/explorer_tester.c":23:5 80 {*movdi_internal}
     (nil))
(insn 30 29 31 6 (set (reg:DI 5 di)
        (reg:DI 89)) "tester/explorer_tester.c":23:5 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 89)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7fb949062ab0 *.LC2>)
            (nil))))
(call_insn 31 30 32 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fb9492c6700 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":23:5 909 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       7 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 7, loop depth 0, maybe hot
;;  prev block 6, next block 8, flags: (RTL)
;;  pred:       6 (FALLTHRU)
;;              5 [always] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 90
(code_label 32 31 33 7 6 (nil) [1 uses])
(note 33 32 34 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 34 33 35 7 (set (reg:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [11 self+0 S8 A64])) "tester/explorer_tester.c":25:3 80 {*movdi_internal}
     (nil))
(insn 35 34 36 7 (set (reg:DI 5 di)
        (reg:DI 90)) "tester/explorer_tester.c":25:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 90)
        (nil)))
(call_insn 36 35 41 7 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7fb9492ddc00 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) "tester/explorer_tester.c":25:3 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       8 [always]  (FALLTHRU) tester/explorer_tester.c:26:1
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 8, loop depth 0, maybe hot
;;  prev block 7, next block 1, flags: (RTL)
;;  pred:       7 [always]  (FALLTHRU) tester/explorer_tester.c:26:1
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(note 41 36 42 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 0 8 (const_int 0 [0]) "tester/explorer_tester.c":26:1 928 {nop}
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]


;; Function explorer_tester_chdir (explorer_tester_chdir, funcdef_no=8, decl_uid=2107, cgraph_uid=9, symbol_order=8)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 10 n_edges 12 count 10 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 8 9 7
;; 2 succs { 8 3 }
;; 3 succs { 9 4 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 8 succs { 7 }
;; 9 succs { 7 }
;; 7 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 20.
verify found no changes in insn with uid = 26.
verify found no changes in insn with uid = 38.
verify found no changes in insn with uid = 56.
verify found no changes in insn with uid = 74.
verify found no changes in insn with uid = 81.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r109: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r109,l0) best DIREG, allocno GENERAL_REGS
    r108: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r108,l0) best DIREG, allocno GENERAL_REGS
    r107: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r107,l0) best DREG, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a11 (r104,l0) best SIREG, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a20 (r102,l0) best CREG, allocno GENERAL_REGS
    r101: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a17 (r101,l0) best DIREG, allocno GENERAL_REGS
    r100: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a18 (r100,l0) best SIREG, allocno GENERAL_REGS
    r99: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a23 (r99,l0) best SIREG, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a25 (r97,l0) best DIREG, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r95,l0) best SIREG, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a9 (r91,l0) best AREG, allocno GENERAL_REGS
    r90: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a10 (r90,l0) best DIREG, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a16 (r86,l0) best AREG, allocno GENERAL_REGS
    r85: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a19 (r85,l0) best DREG, allocno GENERAL_REGS
    r84: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a21 (r84,l0) best AREG, allocno GENERAL_REGS
    r83: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a22 (r83,l0) best DIREG, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r109,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a1(r108,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a2(r95,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:7000
  a3(r107,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a4(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:6000 NO_REX_SSE_REGS:6000 SSE_REGS:6000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a5(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a6(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a7(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a8(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a9(r91,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a10(r90,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:7000
  a11(r104,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a12(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:6000 NO_REX_SSE_REGS:6000 SSE_REGS:6000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a13(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a14(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a15(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a16(r86,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a17(r101,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a18(r100,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a19(r85,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a20(r102,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a21(r84,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a22(r83,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a23(r99,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a24(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a25(r97,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a26(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a27(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000

   Insn 97(l0): point = 1
   Insn 93(l0): point = 4
   Insn 92(l0): point = 6
   Insn 88(l0): point = 9
   Insn 81(l0): point = 11
   Insn 80(l0): point = 13
   Insn 79(l0): point = 15
   Insn 86(l0): point = 18
   Insn 74(l0): point = 20
   Insn 73(l0): point = 22
   Insn 72(l0): point = 24
   Insn 71(l0): point = 26
   Insn 70(l0): point = 28
   Insn 69(l0): point = 30
   Insn 68(l0): point = 32
   Insn 67(l0): point = 34
   Insn 66(l0): point = 36
   Insn 65(l0): point = 38
   Insn 64(l0): point = 40
   Insn 63(l0): point = 42
   Insn 62(l0): point = 44
   Insn 61(l0): point = 46
   Insn 59(l0): point = 49
   Insn 58(l0): point = 51
   Insn 57(l0): point = 53
   Insn 56(l0): point = 55
   Insn 55(l0): point = 57
   Insn 54(l0): point = 59
   Insn 53(l0): point = 61
   Insn 52(l0): point = 63
   Insn 51(l0): point = 65
   Insn 50(l0): point = 67
   Insn 49(l0): point = 69
   Insn 48(l0): point = 71
   Insn 47(l0): point = 73
   Insn 41(l0): point = 76
   Insn 40(l0): point = 78
   Insn 39(l0): point = 80
   Insn 38(l0): point = 82
   Insn 37(l0): point = 84
   Insn 36(l0): point = 86
   Insn 35(l0): point = 88
   Insn 34(l0): point = 90
   Insn 33(l0): point = 92
   Insn 32(l0): point = 94
   Insn 31(l0): point = 96
   Insn 30(l0): point = 98
   Insn 29(l0): point = 100
   Insn 28(l0): point = 102
   Insn 27(l0): point = 104
   Insn 26(l0): point = 106
   Insn 25(l0): point = 108
   Insn 24(l0): point = 110
   Insn 23(l0): point = 112
   Insn 22(l0): point = 114
   Insn 21(l0): point = 116
   Insn 20(l0): point = 118
   Insn 19(l0): point = 120
   Insn 18(l0): point = 122
   Insn 17(l0): point = 124
   Insn 11(l0): point = 127
   Insn 10(l0): point = 129
   Insn 9(l0): point = 131
   Insn 8(l0): point = 133
   Insn 4(l0): point = 135
   Insn 3(l0): point = 137
   Insn 2(l0): point = 139
 a0(r109): [14..15]
 a1(r108): [25..26]
 a2(r95): [29..34]
 a3(r107): [31..32]
 a4(r94): [35..36]
 a5(r93): [37..38]
 a6(r92): [39..40]
 a7(r106): [41..42]
 a8(r105): [45..46]
 a9(r91): [52..53]
 a10(r90): [58..65]
 a11(r104): [60..63]
 a12(r89): [66..67]
 a13(r88): [68..69]
 a14(r87): [70..71]
 a15(r103): [72..73]
 a16(r86): [79..80]
 a17(r101): [85..96]
 a18(r100): [87..98]
 a19(r85): [89..100]
 a20(r102): [91..92]
 a21(r84): [103..104]
 a22(r83): [109..114]
 a23(r99): [111..112]
 a24(r98): [115..116]
 a25(r97): [123..124]
 a26(r82): [130..131]
 a27(r96): [132..133]
Compressing live ranges: from 142 to 44 - 30%
Ranges after the compression:
 a0(r109): [0..1]
 a1(r108): [2..3]
 a2(r95): [4..5]
 a3(r107): [4..5]
 a4(r94): [6..7]
 a5(r93): [8..9]
 a6(r92): [10..11]
 a7(r106): [12..13]
 a8(r105): [14..15]
 a9(r91): [16..17]
 a10(r90): [18..19]
 a11(r104): [18..19]
 a12(r89): [20..21]
 a13(r88): [22..23]
 a14(r87): [24..25]
 a15(r103): [26..27]
 a16(r86): [28..29]
 a17(r101): [30..31]
 a18(r100): [30..31]
 a19(r85): [30..31]
 a20(r102): [30..31]
 a21(r84): [32..33]
 a22(r83): [34..35]
 a23(r99): [34..35]
 a24(r98): [36..37]
 a25(r97): [38..39]
 a26(r82): [40..41]
 a27(r96): [42..43]
  pref0:a0(r109)<-hr5@1500
  pref1:a1(r108)<-hr5@1500
  pref2:a3(r107)<-hr1@1500
  pref3:a11(r104)<-hr4@1500
  pref4:a20(r102)<-hr2@1500
  pref5:a17(r101)<-hr5@1500
  pref6:a18(r100)<-hr4@1500
  pref7:a23(r99)<-hr4@1500
  pref8:a25(r97)<-hr5@1500
  pref9:a2(r95)<-hr4@1500
  pref10:a9(r91)<-hr0@1500
  pref11:a10(r90)<-hr5@1500
  pref12:a16(r86)<-hr0@1500
  pref13:a19(r85)<-hr1@1500
  pref14:a21(r84)<-hr0@1500
  pref15:a22(r83)<-hr5@1500
  regions=1, blocks=10, points=44
    allocnos=28 (big 0), copies=0, conflicts=0, ranges=28
Disposition:
   26:r82  l0     0   22:r83  l0     0   21:r84  l0     0   19:r85  l0     1
   16:r86  l0     0   14:r87  l0     0   13:r88  l0     0   12:r89  l0     0
   10:r90  l0     2    9:r91  l0     0    6:r92  l0     0    5:r93  l0     0
    4:r94  l0     0    2:r95  l0     2   27:r96  l0     0   25:r97  l0     0
   24:r98  l0     0   23:r99  l0     1   18:r100 l0     4   17:r101 l0     0
   20:r102 l0     2   15:r103 l0     0   11:r104 l0     0    8:r105 l0     0
    7:r106 l0     0    3:r107 l0     0    1:r108 l0     0    0:r109 l0     0
+++Costs: overall -16000, reg -16000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


explorer_tester_chdir

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 36 [r8]
;;  ref usage 	r0={9d,5u} r1={10d,4u} r2={8d,1u} r4={11d,5u} r5={13d,7u} r6={1d,9u} r7={1d,15u} r8={6d} r9={6d} r10={6d} r11={6d} r12={6d} r13={6d} r14={6d} r15={6d} r16={1d,8u} r17={9d,3u} r18={6d} r19={1d,24u} r20={7d} r21={7d} r22={7d} r23={7d} r24={7d} r25={7d} r26={7d} r27={7d} r28={6d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={8d,1u} r37={7d} r38={6d} r39={6d} r44={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r82={1d,1u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} 
;;    total ref usage 579{469d,110u,0e} in 67{61 regular + 6 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags] 82 96
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [11 self+0 S8 A64])
        (reg:DI 5 di [ self ])) "tester/explorer_tester.c":29:42 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ self ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -32 [0xffffffffffffffe0])) [1 name+0 S8 A64])
        (reg:DI 4 si [ name ])) "tester/explorer_tester.c":29:42 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ name ])
        (nil)))
(insn 4 3 5 2 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -36 [0xffffffffffffffdc])) [4 success+0 S4 A32])
        (reg:SI 1 dx [ success ])) "tester/explorer_tester.c":29:42 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [ success ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg/f:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [11 self+0 S8 A64])) "tester/explorer_tester.c":30:11 80 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:SI 82 [ _1 ])
        (mem:SI (plus:DI (reg/f:DI 96)
                (const_int 32 [0x20])) [4 self_17(D)->error+0 S4 A64])) "tester/explorer_tester.c":30:11 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 96)
        (nil)))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 82 [ _1 ])
            (const_int 0 [0]))) "tester/explorer_tester.c":30:6 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 82 [ _1 ])
        (nil)))
(jump_insn 11 10 16 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 91)
            (pc))) "tester/explorer_tester.c":30:6 891 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 91)
;;  succ:       8 tester/explorer_tester.c:31:5
;;              3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 83 84 85 86 97 98 99 100 101 102
(note 16 11 17 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 3 (set (reg:DI 97)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7fb949071120 *.LC3>)) "tester/explorer_tester.c":33:3 80 {*movdi_internal}
     (nil))
(insn 18 17 19 3 (set (reg:DI 5 di)
        (reg:DI 97)) "tester/explorer_tester.c":33:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 97)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7fb949071120 *.LC3>)
            (nil))))
(insn 19 18 20 3 (set (reg:QI 0 ax)
        (const_int 0 [0])) "tester/explorer_tester.c":33:3 83 {*movqi_internal}
     (nil))
(call_insn 20 19 21 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fb9492c6000 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":33:3 909 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 21 20 22 3 (set (reg/f:DI 98)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [11 self+0 S8 A64])) "tester/explorer_tester.c":34:16 80 {*movdi_internal}
     (nil))
(insn 22 21 23 3 (set (reg/f:DI 83 [ _2 ])
        (mem/f:DI (plus:DI (reg/f:DI 98)
                (const_int 24 [0x18])) [2 self_17(D)->inner_explore+0 S8 A64])) "tester/explorer_tester.c":34:16 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 98)
        (nil)))
(insn 23 22 24 3 (set (reg:DI 99)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -32 [0xffffffffffffffe0])) [1 name+0 S8 A64])) "tester/explorer_tester.c":34:16 80 {*movdi_internal}
     (nil))
(insn 24 23 25 3 (set (reg:DI 4 si)
        (reg:DI 99)) "tester/explorer_tester.c":34:16 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 99)
        (nil)))
(insn 25 24 26 3 (set (reg:DI 5 di)
        (reg/f:DI 83 [ _2 ])) "tester/explorer_tester.c":34:16 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 83 [ _2 ])
        (nil)))
(call_insn 26 25 27 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("explorer_chdir") [flags 0x41]  <function_decl 0x7fb94936e700 explorer_chdir>) [0 explorer_chdir S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":34:16 909 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 27 26 28 3 (set (reg:SI 84 [ _3 ])
        (reg:SI 0 ax)) "tester/explorer_tester.c":34:16 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 28 27 29 3 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [4 result+0 S4 A32])
        (reg:SI 84 [ _3 ])) "tester/explorer_tester.c":34:7 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 84 [ _3 ])
        (nil)))
(insn 29 28 30 3 (set (reg:SI 85 [ result.0_4 ])
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [4 result+0 S4 A32])) "tester/explorer_tester.c":36:8 81 {*movsi_internal}
     (nil))
(insn 30 29 31 3 (set (reg:SI 100)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -36 [0xffffffffffffffdc])) [4 success+0 S4 A32])) "tester/explorer_tester.c":36:8 81 {*movsi_internal}
     (nil))
(insn 31 30 32 3 (set (reg:DI 101)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [11 self+0 S8 A64])) "tester/explorer_tester.c":36:8 80 {*movdi_internal}
     (nil))
(insn 32 31 33 3 (set (reg:DI 36 r8)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7fb9490711b0 *.LC4>)) "tester/explorer_tester.c":36:8 80 {*movdi_internal}
     (nil))
(insn 33 32 34 3 (set (reg:DI 102)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7fb949071240 *.LC5>)) "tester/explorer_tester.c":36:8 80 {*movdi_internal}
     (nil))
(insn 34 33 35 3 (set (reg:DI 2 cx)
        (reg:DI 102)) "tester/explorer_tester.c":36:8 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 102)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7fb949071240 *.LC5>)
            (nil))))
(insn 35 34 36 3 (set (reg:SI 1 dx)
        (reg:SI 85 [ result.0_4 ])) "tester/explorer_tester.c":36:8 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 85 [ result.0_4 ])
        (nil)))
(insn 36 35 37 3 (set (reg:SI 4 si)
        (reg:SI 100)) "tester/explorer_tester.c":36:8 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 100)
        (nil)))
(insn 37 36 38 3 (set (reg:DI 5 di)
        (reg:DI 101)) "tester/explorer_tester.c":36:8 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 101)
        (nil)))
(call_insn 38 37 39 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("check_success") [flags 0x3]  <function_decl 0x7fb94901d900 check_success>) [0 check_success S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":36:8 909 {*call_value}
     (expr_list:REG_DEAD (reg:DI 36 r8)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:SI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:SI 1 dx)
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 36 r8))
                        (nil)))))))
(insn 39 38 40 3 (set (reg:SI 86 [ _5 ])
        (reg:SI 0 ax)) "tester/explorer_tester.c":36:8 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 40 39 41 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 86 [ _5 ])
            (const_int 0 [0]))) "tester/explorer_tester.c":36:6 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 86 [ _5 ])
        (nil)))
(jump_insn 41 40 46 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 96)
            (pc))) "tester/explorer_tester.c":36:6 891 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 96)
;;  succ:       9 tester/explorer_tester.c:37:5
;;              4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 87 88 89 90 91 103 104
(note 46 41 47 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 47 46 48 4 (set (reg/f:DI 103)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [11 self+0 S8 A64])) "tester/explorer_tester.c":38:19 80 {*movdi_internal}
     (nil))
(insn 48 47 49 4 (set (reg/f:DI 87 [ _6 ])
        (mem/f:DI (plus:DI (reg/f:DI 103)
                (const_int 24 [0x18])) [2 self_17(D)->inner_explore+0 S8 A64])) "tester/explorer_tester.c":38:19 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 103)
        (nil)))
(insn 49 48 50 4 (set (reg/f:DI 88 [ _7 ])
        (mem/f:DI (reg/f:DI 87 [ _6 ]) [5 _6->cwd+0 S8 A64])) "tester/explorer_tester.c":38:34 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ _6 ])
        (nil)))
(insn 50 49 51 4 (set (reg/f:DI 89 [ _8 ])
        (mem/f:DI (plus:DI (reg/f:DI 88 [ _7 ])
                (const_int 24 [0x18])) [8 _7->base+0 S8 A64])) "tester/explorer_tester.c":38:39 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ _7 ])
        (nil)))
(insn 51 50 52 4 (set (reg/f:DI 90 [ _9 ])
        (reg/f:DI 89 [ _8 ])) "tester/explorer_tester.c":38:45 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 89 [ _8 ])
        (nil)))
(insn 52 51 53 4 (set (reg:DI 104)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -32 [0xffffffffffffffe0])) [1 name+0 S8 A64])) "tester/explorer_tester.c":38:7 80 {*movdi_internal}
     (nil))
(insn 53 52 54 4 (set (reg:DI 1 dx)
        (const_int 32 [0x20])) "tester/explorer_tester.c":38:7 80 {*movdi_internal}
     (nil))
(insn 54 53 55 4 (set (reg:DI 4 si)
        (reg:DI 104)) "tester/explorer_tester.c":38:7 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 104)
        (nil)))
(insn 55 54 56 4 (set (reg:DI 5 di)
        (reg/f:DI 90 [ _9 ])) "tester/explorer_tester.c":38:7 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90 [ _9 ])
        (nil)))
(call_insn/i 56 55 57 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strncmp") [flags 0x41]  <function_decl 0x7fb9492c0c00 strncmp>) [0 __builtin_strncmp S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":38:7 909 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 57 56 58 4 (set (reg:SI 91 [ _10 ])
        (reg:SI 0 ax)) "tester/explorer_tester.c":38:7 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 58 57 59 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 91 [ _10 ])
            (const_int 0 [0]))) "tester/explorer_tester.c":38:6 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 91 [ _10 ])
        (nil)))
(jump_insn 59 58 60 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 77)
            (pc))) "tester/explorer_tester.c":38:6 891 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 77)
;;  succ:       5 (FALLTHRU)
;;              6
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 92 93 94 95 105 106 107 108
(note 60 59 61 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 61 60 62 5 (set (reg/f:DI 105)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [11 self+0 S8 A64])) "tester/explorer_tester.c":39:17 80 {*movdi_internal}
     (nil))
(insn 62 61 63 5 (set (mem:SI (plus:DI (reg/f:DI 105)
                (const_int 32 [0x20])) [4 self_17(D)->error+0 S4 A64])
        (const_int 1 [0x1])) "tester/explorer_tester.c":39:17 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 105)
        (nil)))
(insn 63 62 64 5 (set (reg/f:DI 106)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [11 self+0 S8 A64])) "tester/explorer_tester.c":41:16 80 {*movdi_internal}
     (nil))
(insn 64 63 65 5 (set (reg/f:DI 92 [ _11 ])
        (mem/f:DI (plus:DI (reg/f:DI 106)
                (const_int 24 [0x18])) [2 self_17(D)->inner_explore+0 S8 A64])) "tester/explorer_tester.c":41:16 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 106)
        (nil)))
(insn 65 64 66 5 (set (reg/f:DI 93 [ _12 ])
        (mem/f:DI (reg/f:DI 92 [ _11 ]) [5 _11->cwd+0 S8 A64])) "tester/explorer_tester.c":41:31 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 92 [ _11 ])
        (nil)))
(insn 66 65 67 5 (set (reg/f:DI 94 [ _13 ])
        (mem/f:DI (plus:DI (reg/f:DI 93 [ _12 ])
                (const_int 24 [0x18])) [8 _12->base+0 S8 A64])) "tester/explorer_tester.c":41:36 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 93 [ _12 ])
        (nil)))
(insn 67 66 68 5 (set (reg/f:DI 95 [ _14 ])
        (reg/f:DI 94 [ _13 ])) "tester/explorer_tester.c":41:42 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 94 [ _13 ])
        (nil)))
(insn 68 67 69 5 (set (reg:DI 107)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -32 [0xffffffffffffffe0])) [1 name+0 S8 A64])) "tester/explorer_tester.c":40:5 80 {*movdi_internal}
     (nil))
(insn 69 68 70 5 (set (reg:DI 1 dx)
        (reg:DI 107)) "tester/explorer_tester.c":40:5 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 107)
        (nil)))
(insn 70 69 71 5 (set (reg:DI 4 si)
        (reg/f:DI 95 [ _14 ])) "tester/explorer_tester.c":40:5 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 95 [ _14 ])
        (nil)))
(insn 71 70 72 5 (set (reg:DI 108)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7fb9490712d0 *.LC6>)) "tester/explorer_tester.c":40:5 80 {*movdi_internal}
     (nil))
(insn 72 71 73 5 (set (reg:DI 5 di)
        (reg:DI 108)) "tester/explorer_tester.c":40:5 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 108)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7fb9490712d0 *.LC6>)
            (nil))))
(insn 73 72 74 5 (set (reg:QI 0 ax)
        (const_int 0 [0])) "tester/explorer_tester.c":40:5 83 {*movqi_internal}
     (nil))
(call_insn 74 73 86 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fb9492c6000 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":40:5 909 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (nil)))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(jump_insn 86 74 87 5 (set (pc)
        (label_ref 84)) "tester/explorer_tester.c":42:5 892 {jump}
     (nil)
 -> 84)
;;  succ:       7 [always]  tester/explorer_tester.c:42:5
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 87 86 77)
;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 8, flags: (RTL)
;;  pred:       4
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 109
(code_label 77 87 78 6 11 (nil) [1 uses])
(note 78 77 79 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 79 78 80 6 (set (reg:DI 109)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7fb949071360 *.LC7>)) "tester/explorer_tester.c":44:3 80 {*movdi_internal}
     (nil))
(insn 80 79 81 6 (set (reg:DI 5 di)
        (reg:DI 109)) "tester/explorer_tester.c":44:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 109)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7fb949071360 *.LC7>)
            (nil))))
(call_insn 81 80 88 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fb9492c6700 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":44:3 909 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 88 81 89 6 (set (pc)
        (label_ref 84)) 892 {jump}
     (nil)
 -> 84)
;;  succ:       7
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 89 88 91)
;; basic block 8, loop depth 0, maybe hot
;;  prev block 6, next block 9, flags: (RTL)
;;  pred:       2 tester/explorer_tester.c:31:5
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(code_label 91 89 90 8 12 (nil) [1 uses])
(note 90 91 92 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 92 90 93 8 (const_int 0 [0]) "tester/explorer_tester.c":31:5 928 {nop}
     (nil))
(jump_insn 93 92 94 8 (set (pc)
        (label_ref 84)) 892 {jump}
     (nil)
 -> 84)
;;  succ:       7 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 94 93 96)
;; basic block 9, loop depth 0, maybe hot
;;  prev block 8, next block 7, flags: (RTL)
;;  pred:       3 tester/explorer_tester.c:37:5
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(code_label 96 94 95 9 13 (nil) [1 uses])
(note 95 96 97 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 97 95 84 9 (const_int 0 [0]) "tester/explorer_tester.c":37:5 928 {nop}
     (nil))
;;  succ:       7 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 7, loop depth 0, maybe hot
;;  prev block 9, next block 1, flags: (RTL)
;;  pred:       5 [always]  tester/explorer_tester.c:42:5
;;              6
;;              9 [always]  (FALLTHRU)
;;              8 [always] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(code_label 84 97 85 7 7 (nil) [3 uses])
(note 85 84 0 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]


;; Function explorer_tester_support_file_type (explorer_tester_support_file_type, funcdef_no=9, decl_uid=2112, cgraph_uid=10, symbol_order=9)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 8 n_edges 9 count 8 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 6 7 5
;; 2 succs { 6 3 }
;; 3 succs { 7 4 }
;; 4 succs { 5 }
;; 6 succs { 5 }
;; 7 succs { 5 }
;; 5 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 21.
verify found no changes in insn with uid = 29.
verify found no changes in insn with uid = 41.
verify found no changes in insn with uid = 52.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r95: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r95,l0) best DIREG, allocno GENERAL_REGS
    r94: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r94,l0) best CREG, allocno GENERAL_REGS
    r93: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r93,l0) best DIREG, allocno GENERAL_REGS
    r92: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r92,l0) best SIREG, allocno GENERAL_REGS
    r91: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r91,l0) best DREG, allocno GENERAL_REGS
    r90: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r90,l0) best AREG, allocno GENERAL_REGS
    r89: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a8 (r89,l0) best SIREG, allocno GENERAL_REGS
    r88: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a9 (r88,l0) best DREG, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a11 (r86,l0) best DIREG, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r84,l0) best AREG, allocno GENERAL_REGS
    r83: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a7 (r83,l0) best DIREG, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r95,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a1(r84,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a2(r93,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a3(r92,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a4(r91,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a5(r94,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a6(r90,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a7(r83,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a8(r89,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a9(r88,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a10(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a11(r86,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a12(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a13(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000

   Insn 66(l0): point = 1
   Insn 62(l0): point = 4
   Insn 61(l0): point = 6
   Insn 57(l0): point = 9
   Insn 52(l0): point = 11
   Insn 51(l0): point = 13
   Insn 50(l0): point = 15
   Insn 44(l0): point = 18
   Insn 43(l0): point = 20
   Insn 42(l0): point = 22
   Insn 41(l0): point = 24
   Insn 40(l0): point = 26
   Insn 39(l0): point = 28
   Insn 38(l0): point = 30
   Insn 37(l0): point = 32
   Insn 36(l0): point = 34
   Insn 35(l0): point = 36
   Insn 34(l0): point = 38
   Insn 33(l0): point = 40
   Insn 32(l0): point = 42
   Insn 31(l0): point = 44
   Insn 30(l0): point = 46
   Insn 29(l0): point = 48
   Insn 28(l0): point = 50
   Insn 27(l0): point = 52
   Insn 26(l0): point = 54
   Insn 25(l0): point = 56
   Insn 24(l0): point = 58
   Insn 23(l0): point = 60
   Insn 22(l0): point = 62
   Insn 21(l0): point = 64
   Insn 20(l0): point = 66
   Insn 19(l0): point = 68
   Insn 18(l0): point = 70
   Insn 12(l0): point = 73
   Insn 11(l0): point = 75
   Insn 10(l0): point = 77
   Insn 9(l0): point = 79
   Insn 5(l0): point = 81
   Insn 4(l0): point = 83
   Insn 3(l0): point = 85
   Insn 2(l0): point = 87
 a0(r95): [14..15]
 a1(r84): [21..22]
 a2(r93): [27..38]
 a3(r92): [29..40]
 a4(r91): [31..42]
 a5(r94): [33..34]
 a6(r90): [45..46]
 a7(r83): [51..60]
 a8(r89): [53..56]
 a9(r88): [55..58]
 a10(r87): [61..62]
 a11(r86): [69..70]
 a12(r82): [76..77]
 a13(r85): [78..79]
Compressing live ranges: from 90 to 18 - 20%
Ranges after the compression:
 a0(r95): [0..1]
 a1(r84): [2..3]
 a2(r93): [4..5]
 a3(r92): [4..5]
 a4(r91): [4..5]
 a5(r94): [4..5]
 a6(r90): [6..7]
 a7(r83): [8..9]
 a8(r89): [8..9]
 a9(r88): [8..9]
 a10(r87): [10..11]
 a11(r86): [12..13]
 a12(r82): [14..15]
 a13(r85): [16..17]
  pref0:a0(r95)<-hr5@1500
  pref1:a5(r94)<-hr2@1500
  pref2:a2(r93)<-hr5@1500
  pref3:a3(r92)<-hr4@1500
  pref4:a4(r91)<-hr1@1500
  pref5:a6(r90)<-hr0@1500
  pref6:a8(r89)<-hr4@1500
  pref7:a9(r88)<-hr1@1500
  pref8:a11(r86)<-hr5@1500
  pref9:a1(r84)<-hr0@1500
  pref10:a7(r83)<-hr5@1500
  regions=1, blocks=8, points=18
    allocnos=14 (big 0), copies=0, conflicts=0, ranges=14
Disposition:
   12:r82  l0     0    7:r83  l0     0    1:r84  l0     0   13:r85  l0     0
   11:r86  l0     0   10:r87  l0     0    9:r88  l0     1    8:r89  l0     2
    6:r90  l0     0    4:r91  l0     1    3:r92  l0     4    2:r93  l0     0
    5:r94  l0     2    0:r95  l0     0
+++Costs: overall -11000, reg -11000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


explorer_tester_support_file_type

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 36 [r8]
;;  ref usage 	r0={6d,3u} r1={7d,3u} r2={6d,2u} r4={7d,3u} r5={9d,5u} r6={1d,7u} r7={1d,11u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r16={1d,6u} r17={6d,2u} r18={4d} r19={1d,19u} r20={5d} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={6d,1u} r37={5d} r38={4d} r39={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r82={1d,1u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} 
;;    total ref usage 390{314d,76u,0e} in 42{38 regular + 4 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags] 82 85
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [11 self+0 S8 A64])
        (reg:DI 5 di [ self ])) "tester/explorer_tester.c":47:74 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ self ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -28 [0xffffffffffffffe4])) [4 type+0 S4 A32])
        (reg:SI 4 si [ type ])) "tester/explorer_tester.c":47:74 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ type ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -40 [0xffffffffffffffd8])) [7 callback+0 S8 A64])
        (reg:DI 1 dx [ callback ])) "tester/explorer_tester.c":47:74 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ callback ])
        (nil)))
(insn 5 4 6 2 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -32 [0xffffffffffffffe0])) [4 success+0 S4 A32])
        (reg:SI 2 cx [ success ])) "tester/explorer_tester.c":47:74 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 cx [ success ])
        (nil)))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (reg/f:DI 85)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [11 self+0 S8 A64])) "tester/explorer_tester.c":48:11 80 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:SI 82 [ _1 ])
        (mem:SI (plus:DI (reg/f:DI 85)
                (const_int 32 [0x20])) [4 self_6(D)->error+0 S4 A64])) "tester/explorer_tester.c":48:11 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 85)
        (nil)))
(insn 11 10 12 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 82 [ _1 ])
            (const_int 0 [0]))) "tester/explorer_tester.c":48:6 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 82 [ _1 ])
        (nil)))
(jump_insn 12 11 17 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 60)
            (pc))) "tester/explorer_tester.c":48:6 891 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 60)
;;  succ:       6 tester/explorer_tester.c:49:5
;;              3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 83 84 86 87 88 89 90 91 92 93 94
(note 17 12 18 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 3 (set (reg:DI 86)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x7fb949071b40 *.LC8>)) "tester/explorer_tester.c":50:3 80 {*movdi_internal}
     (nil))
(insn 19 18 20 3 (set (reg:DI 5 di)
        (reg:DI 86)) "tester/explorer_tester.c":50:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 86)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x7fb949071b40 *.LC8>)
            (nil))))
(insn 20 19 21 3 (set (reg:QI 0 ax)
        (const_int 0 [0])) "tester/explorer_tester.c":50:3 83 {*movqi_internal}
     (nil))
(call_insn 21 20 22 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fb9492c6000 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":50:3 909 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 22 21 23 3 (set (reg/f:DI 87)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [11 self+0 S8 A64])) "tester/explorer_tester.c":51:17 80 {*movdi_internal}
     (nil))
(insn 23 22 24 3 (set (reg/f:DI 83 [ _2 ])
        (mem/f:DI (plus:DI (reg/f:DI 87)
                (const_int 24 [0x18])) [2 self_6(D)->inner_explore+0 S8 A64])) "tester/explorer_tester.c":51:17 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87)
        (nil)))
(insn 24 23 25 3 (set (reg:SI 88)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -28 [0xffffffffffffffe4])) [4 type+0 S4 A32])) "tester/explorer_tester.c":51:17 81 {*movsi_internal}
     (nil))
(insn 25 24 26 3 (set (reg:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -40 [0xffffffffffffffd8])) [7 callback+0 S8 A64])) "tester/explorer_tester.c":51:17 80 {*movdi_internal}
     (nil))
(insn 26 25 27 3 (set (reg:SI 1 dx)
        (reg:SI 88)) "tester/explorer_tester.c":51:17 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 88)
        (nil)))
(insn 27 26 28 3 (set (reg:DI 4 si)
        (reg:DI 89)) "tester/explorer_tester.c":51:17 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 89)
        (nil)))
(insn 28 27 29 3 (set (reg:DI 5 di)
        (reg/f:DI 83 [ _2 ])) "tester/explorer_tester.c":51:17 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 83 [ _2 ])
        (nil)))
(call_insn 29 28 30 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("explorer_support_filetype") [flags 0x41]  <function_decl 0x7fb94936e800 explorer_support_filetype>) [0 explorer_support_filetype S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":51:17 909 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 30 29 31 3 (set (reg:SI 90)
        (reg:SI 0 ax)) "tester/explorer_tester.c":51:17 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 31 30 32 3 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [4 result+0 S4 A32])
        (reg:SI 90)) "tester/explorer_tester.c":51:17 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 90)
        (nil)))
(insn 32 31 33 3 (set (reg:SI 91)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [4 result+0 S4 A32])) "tester/explorer_tester.c":52:8 81 {*movsi_internal}
     (nil))
(insn 33 32 34 3 (set (reg:SI 92)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -32 [0xffffffffffffffe0])) [4 success+0 S4 A32])) "tester/explorer_tester.c":52:8 81 {*movsi_internal}
     (nil))
(insn 34 33 35 3 (set (reg:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [11 self+0 S8 A64])) "tester/explorer_tester.c":52:8 80 {*movdi_internal}
     (nil))
(insn 35 34 36 3 (set (reg:DI 36 r8)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7fb9490711b0 *.LC4>)) "tester/explorer_tester.c":52:8 80 {*movdi_internal}
     (nil))
(insn 36 35 37 3 (set (reg:DI 94)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7fb949071240 *.LC5>)) "tester/explorer_tester.c":52:8 80 {*movdi_internal}
     (nil))
(insn 37 36 38 3 (set (reg:DI 2 cx)
        (reg:DI 94)) "tester/explorer_tester.c":52:8 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 94)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7fb949071240 *.LC5>)
            (nil))))
(insn 38 37 39 3 (set (reg:SI 1 dx)
        (reg:SI 91)) "tester/explorer_tester.c":52:8 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 91)
        (nil)))
(insn 39 38 40 3 (set (reg:SI 4 si)
        (reg:SI 92)) "tester/explorer_tester.c":52:8 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 92)
        (nil)))
(insn 40 39 41 3 (set (reg:DI 5 di)
        (reg:DI 93)) "tester/explorer_tester.c":52:8 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 93)
        (nil)))
(call_insn 41 40 42 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("check_success") [flags 0x3]  <function_decl 0x7fb94901d900 check_success>) [0 check_success S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":52:8 909 {*call_value}
     (expr_list:REG_DEAD (reg:DI 36 r8)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:SI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:SI 1 dx)
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 36 r8))
                        (nil)))))))
(insn 42 41 43 3 (set (reg:SI 84 [ _3 ])
        (reg:SI 0 ax)) "tester/explorer_tester.c":52:8 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 43 42 44 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 84 [ _3 ])
            (const_int 0 [0]))) "tester/explorer_tester.c":52:6 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 84 [ _3 ])
        (nil)))
(jump_insn 44 43 49 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 65)
            (pc))) "tester/explorer_tester.c":52:6 891 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 65)
;;  succ:       7 tester/explorer_tester.c:53:5
;;              4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 6, flags: (RTL)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 95
(note 49 44 50 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 50 49 51 4 (set (reg:DI 95)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7fb949071360 *.LC7>)) "tester/explorer_tester.c":54:3 80 {*movdi_internal}
     (nil))
(insn 51 50 52 4 (set (reg:DI 5 di)
        (reg:DI 95)) "tester/explorer_tester.c":54:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 95)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7fb949071360 *.LC7>)
            (nil))))
(call_insn 52 51 57 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fb9492c6700 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":54:3 909 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 57 52 58 4 (set (pc)
        (label_ref 55)) 892 {jump}
     (nil)
 -> 55)
;;  succ:       5
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 58 57 60)
;; basic block 6, loop depth 0, maybe hot
;;  prev block 4, next block 7, flags: (RTL)
;;  pred:       2 tester/explorer_tester.c:49:5
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(code_label 60 58 59 6 18 (nil) [1 uses])
(note 59 60 61 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 61 59 62 6 (const_int 0 [0]) "tester/explorer_tester.c":49:5 928 {nop}
     (nil))
(jump_insn 62 61 63 6 (set (pc)
        (label_ref 55)) 892 {jump}
     (nil)
 -> 55)
;;  succ:       5 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 63 62 65)
;; basic block 7, loop depth 0, maybe hot
;;  prev block 6, next block 5, flags: (RTL)
;;  pred:       3 tester/explorer_tester.c:53:5
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(code_label 65 63 64 7 19 (nil) [1 uses])
(note 64 65 66 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 66 64 55 7 (const_int 0 [0]) "tester/explorer_tester.c":53:5 928 {nop}
     (nil))
;;  succ:       5 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 5, loop depth 0, maybe hot
;;  prev block 7, next block 1, flags: (RTL)
;;  pred:       7 [always]  (FALLTHRU)
;;              4
;;              6 [always] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(code_label 55 66 56 5 14 (nil) [2 uses])
(note 56 55 0 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]


;; Function explorer_tester_cdpar (explorer_tester_cdpar, funcdef_no=10, decl_uid=2103, cgraph_uid=11, symbol_order=10)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 10 n_edges 12 count 10 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 8 9 7
;; 2 succs { 8 3 }
;; 3 succs { 9 4 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 8 succs { 7 }
;; 9 succs { 7 }
;; 7 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 20.
verify found no changes in insn with uid = 24.
verify found no changes in insn with uid = 36.
verify found no changes in insn with uid = 54.
verify found no changes in insn with uid = 70.
verify found no changes in insn with uid = 79.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r108: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r108,l0) best DIREG, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r106,l0) best DIREG, allocno GENERAL_REGS
    r105: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r105,l0) best DREG, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a11 (r103,l0) best SIREG, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a20 (r101,l0) best CREG, allocno GENERAL_REGS
    r100: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a17 (r100,l0) best DIREG, allocno GENERAL_REGS
    r99: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a18 (r99,l0) best SIREG, allocno GENERAL_REGS
    r98: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a19 (r98,l0) best DREG, allocno GENERAL_REGS
    r97: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a21 (r97,l0) best AREG, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a24 (r95,l0) best DIREG, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r93,l0) best SIREG, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a9 (r89,l0) best AREG, allocno GENERAL_REGS
    r88: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a10 (r88,l0) best DIREG, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a16 (r84,l0) best AREG, allocno GENERAL_REGS
    r83: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a22 (r83,l0) best DIREG, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r108,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a1(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a2(r106,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a3(r93,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:7000
  a4(r105,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a5(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:6000 NO_REX_SSE_REGS:6000 SSE_REGS:6000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a6(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a7(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a8(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a9(r89,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a10(r88,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:7000
  a11(r103,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a12(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:6000 NO_REX_SSE_REGS:6000 SSE_REGS:6000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a13(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a14(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a15(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a16(r84,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a17(r100,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a18(r99,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a19(r98,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a20(r101,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a21(r97,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a22(r83,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a23(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a24(r95,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a25(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a26(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000

   Insn 95(l0): point = 1
   Insn 91(l0): point = 4
   Insn 90(l0): point = 6
   Insn 86(l0): point = 9
   Insn 79(l0): point = 11
   Insn 78(l0): point = 13
   Insn 77(l0): point = 15
   Insn 84(l0): point = 18
   Insn 72(l0): point = 20
   Insn 71(l0): point = 22
   Insn 70(l0): point = 24
   Insn 69(l0): point = 26
   Insn 68(l0): point = 28
   Insn 67(l0): point = 30
   Insn 66(l0): point = 32
   Insn 65(l0): point = 34
   Insn 64(l0): point = 36
   Insn 63(l0): point = 38
   Insn 62(l0): point = 40
   Insn 61(l0): point = 42
   Insn 60(l0): point = 44
   Insn 59(l0): point = 46
   Insn 57(l0): point = 49
   Insn 56(l0): point = 51
   Insn 55(l0): point = 53
   Insn 54(l0): point = 55
   Insn 53(l0): point = 57
   Insn 52(l0): point = 59
   Insn 51(l0): point = 61
   Insn 50(l0): point = 63
   Insn 49(l0): point = 65
   Insn 48(l0): point = 67
   Insn 47(l0): point = 69
   Insn 46(l0): point = 71
   Insn 45(l0): point = 73
   Insn 39(l0): point = 76
   Insn 38(l0): point = 78
   Insn 37(l0): point = 80
   Insn 36(l0): point = 82
   Insn 35(l0): point = 84
   Insn 34(l0): point = 86
   Insn 33(l0): point = 88
   Insn 32(l0): point = 90
   Insn 31(l0): point = 92
   Insn 30(l0): point = 94
   Insn 29(l0): point = 96
   Insn 28(l0): point = 98
   Insn 27(l0): point = 100
   Insn 26(l0): point = 102
   Insn 25(l0): point = 104
   Insn 24(l0): point = 106
   Insn 23(l0): point = 108
   Insn 22(l0): point = 110
   Insn 21(l0): point = 112
   Insn 20(l0): point = 114
   Insn 19(l0): point = 116
   Insn 18(l0): point = 118
   Insn 17(l0): point = 120
   Insn 11(l0): point = 123
   Insn 10(l0): point = 125
   Insn 9(l0): point = 127
   Insn 8(l0): point = 129
   Insn 4(l0): point = 131
   Insn 3(l0): point = 133
   Insn 2(l0): point = 135
 a0(r108): [14..15]
 a1(r107): [21..22]
 a2(r106): [29..30]
 a3(r93): [33..38]
 a4(r105): [35..36]
 a5(r92): [39..40]
 a6(r91): [41..42]
 a7(r90): [43..44]
 a8(r104): [45..46]
 a9(r89): [52..53]
 a10(r88): [58..65]
 a11(r103): [60..63]
 a12(r87): [66..67]
 a13(r86): [68..69]
 a14(r85): [70..71]
 a15(r102): [72..73]
 a16(r84): [79..80]
 a17(r100): [85..96]
 a18(r99): [87..98]
 a19(r98): [89..100]
 a20(r101): [91..92]
 a21(r97): [103..104]
 a22(r83): [109..110]
 a23(r96): [111..112]
 a24(r95): [119..120]
 a25(r82): [126..127]
 a26(r94): [128..129]
Compressing live ranges: from 138 to 44 - 31%
Ranges after the compression:
 a0(r108): [0..1]
 a1(r107): [2..3]
 a2(r106): [4..5]
 a3(r93): [6..7]
 a4(r105): [6..7]
 a5(r92): [8..9]
 a6(r91): [10..11]
 a7(r90): [12..13]
 a8(r104): [14..15]
 a9(r89): [16..17]
 a10(r88): [18..19]
 a11(r103): [18..19]
 a12(r87): [20..21]
 a13(r86): [22..23]
 a14(r85): [24..25]
 a15(r102): [26..27]
 a16(r84): [28..29]
 a17(r100): [30..31]
 a18(r99): [30..31]
 a19(r98): [30..31]
 a20(r101): [30..31]
 a21(r97): [32..33]
 a22(r83): [34..35]
 a23(r96): [36..37]
 a24(r95): [38..39]
 a25(r82): [40..41]
 a26(r94): [42..43]
  pref0:a0(r108)<-hr5@1500
  pref1:a2(r106)<-hr5@1500
  pref2:a4(r105)<-hr1@1500
  pref3:a11(r103)<-hr4@1500
  pref4:a20(r101)<-hr2@1500
  pref5:a17(r100)<-hr5@1500
  pref6:a18(r99)<-hr4@1500
  pref7:a19(r98)<-hr1@1500
  pref8:a21(r97)<-hr0@1500
  pref9:a24(r95)<-hr5@1500
  pref10:a3(r93)<-hr4@1500
  pref11:a9(r89)<-hr0@1500
  pref12:a10(r88)<-hr5@1500
  pref13:a16(r84)<-hr0@1500
  pref14:a22(r83)<-hr5@1500
  regions=1, blocks=10, points=44
    allocnos=27 (big 0), copies=0, conflicts=0, ranges=27
Disposition:
   25:r82  l0     0   22:r83  l0     0   16:r84  l0     0   14:r85  l0     0
   13:r86  l0     0   12:r87  l0     0   10:r88  l0     2    9:r89  l0     0
    7:r90  l0     0    6:r91  l0     0    5:r92  l0     0    3:r93  l0     2
   26:r94  l0     0   24:r95  l0     0   23:r96  l0     0   21:r97  l0     0
   19:r98  l0     1   18:r99  l0     4   17:r100 l0     0   20:r101 l0     2
   15:r102 l0     0   11:r103 l0     0    8:r104 l0     0    4:r105 l0     0
    2:r106 l0     0    1:r107 l0     0    0:r108 l0     0
+++Costs: overall -15000, reg -15000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


explorer_tester_cdpar

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 36 [r8]
;;  ref usage 	r0={9d,5u} r1={10d,4u} r2={8d,1u} r4={10d,4u} r5={13d,7u} r6={1d,9u} r7={1d,15u} r8={6d} r9={6d} r10={6d} r11={6d} r12={6d} r13={6d} r14={6d} r15={6d} r16={1d,8u} r17={9d,3u} r18={6d} r19={1d,23u} r20={7d} r21={7d} r22={7d} r23={7d} r24={7d} r25={7d} r26={7d} r27={7d} r28={6d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={8d,1u} r37={7d} r38={6d} r39={6d} r44={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r82={1d,1u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} 
;;    total ref usage 574{467d,107u,0e} in 65{59 regular + 6 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags] 82 94
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [11 self+0 S8 A64])
        (reg:DI 5 di [ self ])) "tester/explorer_tester.c":58:42 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ self ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -32 [0xffffffffffffffe0])) [1 name+0 S8 A64])
        (reg:DI 4 si [ name ])) "tester/explorer_tester.c":58:42 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ name ])
        (nil)))
(insn 4 3 5 2 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -36 [0xffffffffffffffdc])) [4 success+0 S4 A32])
        (reg:SI 1 dx [ success ])) "tester/explorer_tester.c":58:42 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [ success ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg/f:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [11 self+0 S8 A64])) "tester/explorer_tester.c":59:11 80 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:SI 82 [ _1 ])
        (mem:SI (plus:DI (reg/f:DI 94)
                (const_int 32 [0x20])) [4 self_15(D)->error+0 S4 A64])) "tester/explorer_tester.c":59:11 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 94)
        (nil)))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 82 [ _1 ])
            (const_int 0 [0]))) "tester/explorer_tester.c":59:6 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 82 [ _1 ])
        (nil)))
(jump_insn 11 10 16 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 89)
            (pc))) "tester/explorer_tester.c":59:6 891 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 89)
;;  succ:       8 tester/explorer_tester.c:60:5
;;              3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 83 84 95 96 97 98 99 100 101
(note 16 11 17 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 3 (set (reg:DI 95)
        (symbol_ref/f:DI ("*.LC9") [flags 0x2]  <var_decl 0x7fb94907e240 *.LC9>)) "tester/explorer_tester.c":61:3 80 {*movdi_internal}
     (nil))
(insn 18 17 19 3 (set (reg:DI 5 di)
        (reg:DI 95)) "tester/explorer_tester.c":61:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 95)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC9") [flags 0x2]  <var_decl 0x7fb94907e240 *.LC9>)
            (nil))))
(insn 19 18 20 3 (set (reg:QI 0 ax)
        (const_int 0 [0])) "tester/explorer_tester.c":61:3 83 {*movqi_internal}
     (nil))
(call_insn 20 19 21 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fb9492c6000 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":61:3 909 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 21 20 22 3 (set (reg/f:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [11 self+0 S8 A64])) "tester/explorer_tester.c":62:17 80 {*movdi_internal}
     (nil))
(insn 22 21 23 3 (set (reg/f:DI 83 [ _2 ])
        (mem/f:DI (plus:DI (reg/f:DI 96)
                (const_int 24 [0x18])) [2 self_15(D)->inner_explore+0 S8 A64])) "tester/explorer_tester.c":62:17 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 96)
        (nil)))
(insn 23 22 24 3 (set (reg:DI 5 di)
        (reg/f:DI 83 [ _2 ])) "tester/explorer_tester.c":62:17 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 83 [ _2 ])
        (nil)))
(call_insn 24 23 25 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("explorer_cdpar") [flags 0x41]  <function_decl 0x7fb94936e600 explorer_cdpar>) [0 explorer_cdpar S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":62:17 909 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 25 24 26 3 (set (reg:SI 97)
        (reg:SI 0 ax)) "tester/explorer_tester.c":62:17 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 26 25 27 3 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [4 result+0 S4 A32])
        (reg:SI 97)) "tester/explorer_tester.c":62:17 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 97)
        (nil)))
(insn 27 26 28 3 (set (reg:SI 98)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [4 result+0 S4 A32])) "tester/explorer_tester.c":63:8 81 {*movsi_internal}
     (nil))
(insn 28 27 29 3 (set (reg:SI 99)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -36 [0xffffffffffffffdc])) [4 success+0 S4 A32])) "tester/explorer_tester.c":63:8 81 {*movsi_internal}
     (nil))
(insn 29 28 30 3 (set (reg:DI 100)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [11 self+0 S8 A64])) "tester/explorer_tester.c":63:8 80 {*movdi_internal}
     (nil))
(insn 30 29 31 3 (set (reg:DI 36 r8)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7fb9490711b0 *.LC4>)) "tester/explorer_tester.c":63:8 80 {*movdi_internal}
     (nil))
(insn 31 30 32 3 (set (reg:DI 101)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7fb949071240 *.LC5>)) "tester/explorer_tester.c":63:8 80 {*movdi_internal}
     (nil))
(insn 32 31 33 3 (set (reg:DI 2 cx)
        (reg:DI 101)) "tester/explorer_tester.c":63:8 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 101)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7fb949071240 *.LC5>)
            (nil))))
(insn 33 32 34 3 (set (reg:SI 1 dx)
        (reg:SI 98)) "tester/explorer_tester.c":63:8 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 98)
        (nil)))
(insn 34 33 35 3 (set (reg:SI 4 si)
        (reg:SI 99)) "tester/explorer_tester.c":63:8 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 99)
        (nil)))
(insn 35 34 36 3 (set (reg:DI 5 di)
        (reg:DI 100)) "tester/explorer_tester.c":63:8 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 100)
        (nil)))
(call_insn 36 35 37 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("check_success") [flags 0x3]  <function_decl 0x7fb94901d900 check_success>) [0 check_success S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":63:8 909 {*call_value}
     (expr_list:REG_DEAD (reg:DI 36 r8)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:SI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:SI 1 dx)
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 36 r8))
                        (nil)))))))
(insn 37 36 38 3 (set (reg:SI 84 [ _3 ])
        (reg:SI 0 ax)) "tester/explorer_tester.c":63:8 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 38 37 39 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 84 [ _3 ])
            (const_int 0 [0]))) "tester/explorer_tester.c":63:6 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 84 [ _3 ])
        (nil)))
(jump_insn 39 38 44 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 94)
            (pc))) "tester/explorer_tester.c":63:6 891 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 94)
;;  succ:       9 tester/explorer_tester.c:64:5
;;              4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 85 86 87 88 89 102 103
(note 44 39 45 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 45 44 46 4 (set (reg/f:DI 102)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [11 self+0 S8 A64])) "tester/explorer_tester.c":65:19 80 {*movdi_internal}
     (nil))
(insn 46 45 47 4 (set (reg/f:DI 85 [ _4 ])
        (mem/f:DI (plus:DI (reg/f:DI 102)
                (const_int 24 [0x18])) [2 self_15(D)->inner_explore+0 S8 A64])) "tester/explorer_tester.c":65:19 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 102)
        (nil)))
(insn 47 46 48 4 (set (reg/f:DI 86 [ _5 ])
        (mem/f:DI (reg/f:DI 85 [ _4 ]) [5 _4->cwd+0 S8 A64])) "tester/explorer_tester.c":65:34 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 85 [ _4 ])
        (nil)))
(insn 48 47 49 4 (set (reg/f:DI 87 [ _6 ])
        (mem/f:DI (plus:DI (reg/f:DI 86 [ _5 ])
                (const_int 24 [0x18])) [8 _5->base+0 S8 A64])) "tester/explorer_tester.c":65:39 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 86 [ _5 ])
        (nil)))
(insn 49 48 50 4 (set (reg/f:DI 88 [ _7 ])
        (reg/f:DI 87 [ _6 ])) "tester/explorer_tester.c":65:45 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ _6 ])
        (nil)))
(insn 50 49 51 4 (set (reg:DI 103)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -32 [0xffffffffffffffe0])) [1 name+0 S8 A64])) "tester/explorer_tester.c":65:7 80 {*movdi_internal}
     (nil))
(insn 51 50 52 4 (set (reg:DI 1 dx)
        (const_int 32 [0x20])) "tester/explorer_tester.c":65:7 80 {*movdi_internal}
     (nil))
(insn 52 51 53 4 (set (reg:DI 4 si)
        (reg:DI 103)) "tester/explorer_tester.c":65:7 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 103)
        (nil)))
(insn 53 52 54 4 (set (reg:DI 5 di)
        (reg/f:DI 88 [ _7 ])) "tester/explorer_tester.c":65:7 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ _7 ])
        (nil)))
(call_insn/i 54 53 55 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strncmp") [flags 0x41]  <function_decl 0x7fb9492c0c00 strncmp>) [0 __builtin_strncmp S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":65:7 909 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 55 54 56 4 (set (reg:SI 89 [ _8 ])
        (reg:SI 0 ax)) "tester/explorer_tester.c":65:7 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 56 55 57 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 89 [ _8 ])
            (const_int 0 [0]))) "tester/explorer_tester.c":65:6 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 89 [ _8 ])
        (nil)))
(jump_insn 57 56 58 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 75)
            (pc))) "tester/explorer_tester.c":65:6 891 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 75)
;;  succ:       5 (FALLTHRU)
;;              6
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 90 91 92 93 104 105 106 107
(note 58 57 59 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 59 58 60 5 (set (reg/f:DI 104)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [11 self+0 S8 A64])) "tester/explorer_tester.c":67:16 80 {*movdi_internal}
     (nil))
(insn 60 59 61 5 (set (reg/f:DI 90 [ _9 ])
        (mem/f:DI (plus:DI (reg/f:DI 104)
                (const_int 24 [0x18])) [2 self_15(D)->inner_explore+0 S8 A64])) "tester/explorer_tester.c":67:16 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 104)
        (nil)))
(insn 61 60 62 5 (set (reg/f:DI 91 [ _10 ])
        (mem/f:DI (reg/f:DI 90 [ _9 ]) [5 _9->cwd+0 S8 A64])) "tester/explorer_tester.c":67:31 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90 [ _9 ])
        (nil)))
(insn 62 61 63 5 (set (reg/f:DI 92 [ _11 ])
        (mem/f:DI (plus:DI (reg/f:DI 91 [ _10 ])
                (const_int 24 [0x18])) [8 _10->base+0 S8 A64])) "tester/explorer_tester.c":67:36 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91 [ _10 ])
        (nil)))
(insn 63 62 64 5 (set (reg/f:DI 93 [ _12 ])
        (reg/f:DI 92 [ _11 ])) "tester/explorer_tester.c":67:42 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 92 [ _11 ])
        (nil)))
(insn 64 63 65 5 (set (reg:DI 105)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -32 [0xffffffffffffffe0])) [1 name+0 S8 A64])) "tester/explorer_tester.c":66:5 80 {*movdi_internal}
     (nil))
(insn 65 64 66 5 (set (reg:DI 1 dx)
        (reg:DI 105)) "tester/explorer_tester.c":66:5 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 105)
        (nil)))
(insn 66 65 67 5 (set (reg:DI 4 si)
        (reg/f:DI 93 [ _12 ])) "tester/explorer_tester.c":66:5 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 93 [ _12 ])
        (nil)))
(insn 67 66 68 5 (set (reg:DI 106)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7fb94907e2d0 *.LC10>)) "tester/explorer_tester.c":66:5 80 {*movdi_internal}
     (nil))
(insn 68 67 69 5 (set (reg:DI 5 di)
        (reg:DI 106)) "tester/explorer_tester.c":66:5 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 106)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7fb94907e2d0 *.LC10>)
            (nil))))
(insn 69 68 70 5 (set (reg:QI 0 ax)
        (const_int 0 [0])) "tester/explorer_tester.c":66:5 83 {*movqi_internal}
     (nil))
(call_insn 70 69 71 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fb9492c6000 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":66:5 909 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (nil)))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 71 70 72 5 (set (reg/f:DI 107)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [11 self+0 S8 A64])) "tester/explorer_tester.c":68:17 80 {*movdi_internal}
     (nil))
(insn 72 71 84 5 (set (mem:SI (plus:DI (reg/f:DI 107)
                (const_int 32 [0x20])) [4 self_15(D)->error+0 S4 A64])
        (const_int 1 [0x1])) "tester/explorer_tester.c":68:17 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 107)
        (nil)))
(jump_insn 84 72 85 5 (set (pc)
        (label_ref 82)) "tester/explorer_tester.c":69:5 892 {jump}
     (nil)
 -> 82)
;;  succ:       7 [always]  tester/explorer_tester.c:69:5
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 85 84 75)
;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 8, flags: (RTL)
;;  pred:       4
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 108
(code_label 75 85 76 6 24 (nil) [1 uses])
(note 76 75 77 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 77 76 78 6 (set (reg:DI 108)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7fb949071360 *.LC7>)) "tester/explorer_tester.c":71:3 80 {*movdi_internal}
     (nil))
(insn 78 77 79 6 (set (reg:DI 5 di)
        (reg:DI 108)) "tester/explorer_tester.c":71:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 108)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7fb949071360 *.LC7>)
            (nil))))
(call_insn 79 78 86 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fb9492c6700 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":71:3 909 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 86 79 87 6 (set (pc)
        (label_ref 82)) 892 {jump}
     (nil)
 -> 82)
;;  succ:       7
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 87 86 89)
;; basic block 8, loop depth 0, maybe hot
;;  prev block 6, next block 9, flags: (RTL)
;;  pred:       2 tester/explorer_tester.c:60:5
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(code_label 89 87 88 8 25 (nil) [1 uses])
(note 88 89 90 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 90 88 91 8 (const_int 0 [0]) "tester/explorer_tester.c":60:5 928 {nop}
     (nil))
(jump_insn 91 90 92 8 (set (pc)
        (label_ref 82)) 892 {jump}
     (nil)
 -> 82)
;;  succ:       7 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 92 91 94)
;; basic block 9, loop depth 0, maybe hot
;;  prev block 8, next block 7, flags: (RTL)
;;  pred:       3 tester/explorer_tester.c:64:5
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(code_label 94 92 93 9 26 (nil) [1 uses])
(note 93 94 95 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 95 93 82 9 (const_int 0 [0]) "tester/explorer_tester.c":64:5 928 {nop}
     (nil))
;;  succ:       7 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 7, loop depth 0, maybe hot
;;  prev block 9, next block 1, flags: (RTL)
;;  pred:       5 [always]  tester/explorer_tester.c:69:5
;;              6
;;              9 [always]  (FALLTHRU)
;;              8 [always] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(code_label 82 95 83 7 20 (nil) [3 uses])
(note 83 82 0 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]


;; Function explorer_tester_open (explorer_tester_open, funcdef_no=11, decl_uid=2116, cgraph_uid=12, symbol_order=11)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 8 n_edges 9 count 8 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 6 7 5
;; 2 succs { 6 3 }
;; 3 succs { 7 4 }
;; 4 succs { 5 }
;; 6 succs { 5 }
;; 7 succs { 5 }
;; 5 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 22.
verify found no changes in insn with uid = 28.
verify found no changes in insn with uid = 40.
verify found no changes in insn with uid = 51.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r95: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r95,l0) best DIREG, allocno GENERAL_REGS
    r94: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r94,l0) best CREG, allocno GENERAL_REGS
    r93: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r93,l0) best DIREG, allocno GENERAL_REGS
    r92: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r92,l0) best SIREG, allocno GENERAL_REGS
    r91: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r91,l0) best DREG, allocno GENERAL_REGS
    r90: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r90,l0) best AREG, allocno GENERAL_REGS
    r89: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a8 (r89,l0) best SIREG, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a10 (r87,l0) best DIREG, allocno GENERAL_REGS
    r86: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a11 (r86,l0) best SIREG, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r84,l0) best AREG, allocno GENERAL_REGS
    r83: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a7 (r83,l0) best DIREG, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r95,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a1(r84,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a2(r93,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a3(r92,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a4(r91,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a5(r94,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a6(r90,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a7(r83,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a8(r89,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a9(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a10(r87,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a11(r86,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a12(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a13(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000

   Insn 65(l0): point = 1
   Insn 61(l0): point = 4
   Insn 60(l0): point = 6
   Insn 56(l0): point = 9
   Insn 51(l0): point = 11
   Insn 50(l0): point = 13
   Insn 49(l0): point = 15
   Insn 43(l0): point = 18
   Insn 42(l0): point = 20
   Insn 41(l0): point = 22
   Insn 40(l0): point = 24
   Insn 39(l0): point = 26
   Insn 38(l0): point = 28
   Insn 37(l0): point = 30
   Insn 36(l0): point = 32
   Insn 35(l0): point = 34
   Insn 34(l0): point = 36
   Insn 33(l0): point = 38
   Insn 32(l0): point = 40
   Insn 31(l0): point = 42
   Insn 30(l0): point = 44
   Insn 29(l0): point = 46
   Insn 28(l0): point = 48
   Insn 27(l0): point = 50
   Insn 26(l0): point = 52
   Insn 25(l0): point = 54
   Insn 24(l0): point = 56
   Insn 23(l0): point = 58
   Insn 22(l0): point = 60
   Insn 21(l0): point = 62
   Insn 20(l0): point = 64
   Insn 19(l0): point = 66
   Insn 18(l0): point = 68
   Insn 17(l0): point = 70
   Insn 11(l0): point = 73
   Insn 10(l0): point = 75
   Insn 9(l0): point = 77
   Insn 8(l0): point = 79
   Insn 4(l0): point = 81
   Insn 3(l0): point = 83
   Insn 2(l0): point = 85
 a0(r95): [14..15]
 a1(r84): [21..22]
 a2(r93): [27..38]
 a3(r92): [29..40]
 a4(r91): [31..42]
 a5(r94): [33..34]
 a6(r90): [45..46]
 a7(r83): [51..56]
 a8(r89): [53..54]
 a9(r88): [57..58]
 a10(r87): [65..66]
 a11(r86): [69..70]
 a12(r82): [76..77]
 a13(r85): [78..79]
Compressing live ranges: from 88 to 20 - 22%
Ranges after the compression:
 a0(r95): [0..1]
 a1(r84): [2..3]
 a2(r93): [4..5]
 a3(r92): [4..5]
 a4(r91): [4..5]
 a5(r94): [4..5]
 a6(r90): [6..7]
 a7(r83): [8..9]
 a8(r89): [8..9]
 a9(r88): [10..11]
 a10(r87): [12..13]
 a11(r86): [14..15]
 a12(r82): [16..17]
 a13(r85): [18..19]
  pref0:a0(r95)<-hr5@1500
  pref1:a5(r94)<-hr2@1500
  pref2:a2(r93)<-hr5@1500
  pref3:a3(r92)<-hr4@1500
  pref4:a4(r91)<-hr1@1500
  pref5:a6(r90)<-hr0@1500
  pref6:a8(r89)<-hr4@1500
  pref7:a10(r87)<-hr5@1500
  pref8:a11(r86)<-hr4@1500
  pref9:a1(r84)<-hr0@1500
  pref10:a7(r83)<-hr5@1500
  regions=1, blocks=8, points=20
    allocnos=14 (big 0), copies=0, conflicts=0, ranges=14
Disposition:
   12:r82  l0     0    7:r83  l0     0    1:r84  l0     0   13:r85  l0     0
   11:r86  l0     0   10:r87  l0     0    9:r88  l0     0    8:r89  l0     1
    6:r90  l0     0    4:r91  l0     1    3:r92  l0     4    2:r93  l0     0
    5:r94  l0     2    0:r95  l0     0
+++Costs: overall -11000, reg -11000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


explorer_tester_open

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 36 [r8]
;;  ref usage 	r0={6d,3u} r1={6d,2u} r2={6d,1u} r4={8d,4u} r5={9d,5u} r6={1d,7u} r7={1d,11u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r16={1d,6u} r17={6d,2u} r18={4d} r19={1d,18u} r20={5d} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={6d,1u} r37={5d} r38={4d} r39={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r82={1d,1u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} 
;;    total ref usage 388{314d,74u,0e} in 41{37 regular + 4 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags] 82 85
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [11 self+0 S8 A64])
        (reg:DI 5 di [ self ])) "tester/explorer_tester.c":74:41 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ self ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -32 [0xffffffffffffffe0])) [1 name+0 S8 A64])
        (reg:DI 4 si [ name ])) "tester/explorer_tester.c":74:41 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ name ])
        (nil)))
(insn 4 3 5 2 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -36 [0xffffffffffffffdc])) [4 success+0 S4 A32])
        (reg:SI 1 dx [ success ])) "tester/explorer_tester.c":74:41 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [ success ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg/f:DI 85)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [11 self+0 S8 A64])) "tester/explorer_tester.c":75:11 80 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:SI 82 [ _1 ])
        (mem:SI (plus:DI (reg/f:DI 85)
                (const_int 32 [0x20])) [4 self_6(D)->error+0 S4 A64])) "tester/explorer_tester.c":75:11 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 85)
        (nil)))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 82 [ _1 ])
            (const_int 0 [0]))) "tester/explorer_tester.c":75:6 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 82 [ _1 ])
        (nil)))
(jump_insn 11 10 16 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 59)
            (pc))) "tester/explorer_tester.c":75:6 891 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 59)
;;  succ:       6 tester/explorer_tester.c:76:5
;;              3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 83 84 86 87 88 89 90 91 92 93 94
(note 16 11 17 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 3 (set (reg:DI 86)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -32 [0xffffffffffffffe0])) [1 name+0 S8 A64])) "tester/explorer_tester.c":77:3 80 {*movdi_internal}
     (nil))
(insn 18 17 19 3 (set (reg:DI 4 si)
        (reg:DI 86)) "tester/explorer_tester.c":77:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 86)
        (nil)))
(insn 19 18 20 3 (set (reg:DI 87)
        (symbol_ref/f:DI ("*.LC11") [flags 0x2]  <var_decl 0x7fb94907eab0 *.LC11>)) "tester/explorer_tester.c":77:3 80 {*movdi_internal}
     (nil))
(insn 20 19 21 3 (set (reg:DI 5 di)
        (reg:DI 87)) "tester/explorer_tester.c":77:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 87)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC11") [flags 0x2]  <var_decl 0x7fb94907eab0 *.LC11>)
            (nil))))
(insn 21 20 22 3 (set (reg:QI 0 ax)
        (const_int 0 [0])) "tester/explorer_tester.c":77:3 83 {*movqi_internal}
     (nil))
(call_insn 22 21 23 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fb9492c6000 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":77:3 909 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 23 22 24 3 (set (reg/f:DI 88)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [11 self+0 S8 A64])) "tester/explorer_tester.c":78:35 80 {*movdi_internal}
     (nil))
(insn 24 23 25 3 (set (reg/f:DI 83 [ _2 ])
        (mem/f:DI (plus:DI (reg/f:DI 88)
                (const_int 24 [0x18])) [2 self_6(D)->inner_explore+0 S8 A64])) "tester/explorer_tester.c":78:35 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88)
        (nil)))
(insn 25 24 26 3 (set (reg:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -32 [0xffffffffffffffe0])) [1 name+0 S8 A64])) "tester/explorer_tester.c":78:17 80 {*movdi_internal}
     (nil))
(insn 26 25 27 3 (set (reg:DI 4 si)
        (reg:DI 89)) "tester/explorer_tester.c":78:17 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 89)
        (nil)))
(insn 27 26 28 3 (set (reg:DI 5 di)
        (reg/f:DI 83 [ _2 ])) "tester/explorer_tester.c":78:17 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 83 [ _2 ])
        (nil)))
(call_insn 28 27 29 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("explorer_open") [flags 0x41]  <function_decl 0x7fb94936e900 explorer_open>) [0 explorer_open S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":78:17 909 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 29 28 30 3 (set (reg:SI 90)
        (reg:SI 0 ax)) "tester/explorer_tester.c":78:17 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 30 29 31 3 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [4 result+0 S4 A32])
        (reg:SI 90)) "tester/explorer_tester.c":78:17 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 90)
        (nil)))
(insn 31 30 32 3 (set (reg:SI 91)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [4 result+0 S4 A32])) "tester/explorer_tester.c":79:8 81 {*movsi_internal}
     (nil))
(insn 32 31 33 3 (set (reg:SI 92)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -36 [0xffffffffffffffdc])) [4 success+0 S4 A32])) "tester/explorer_tester.c":79:8 81 {*movsi_internal}
     (nil))
(insn 33 32 34 3 (set (reg:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [11 self+0 S8 A64])) "tester/explorer_tester.c":79:8 80 {*movdi_internal}
     (nil))
(insn 34 33 35 3 (set (reg:DI 36 r8)
        (symbol_ref/f:DI ("*.LC12") [flags 0x2]  <var_decl 0x7fb94907eb40 *.LC12>)) "tester/explorer_tester.c":79:8 80 {*movdi_internal}
     (nil))
(insn 35 34 36 3 (set (reg:DI 94)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7fb949071240 *.LC5>)) "tester/explorer_tester.c":79:8 80 {*movdi_internal}
     (nil))
(insn 36 35 37 3 (set (reg:DI 2 cx)
        (reg:DI 94)) "tester/explorer_tester.c":79:8 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 94)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7fb949071240 *.LC5>)
            (nil))))
(insn 37 36 38 3 (set (reg:SI 1 dx)
        (reg:SI 91)) "tester/explorer_tester.c":79:8 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 91)
        (nil)))
(insn 38 37 39 3 (set (reg:SI 4 si)
        (reg:SI 92)) "tester/explorer_tester.c":79:8 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 92)
        (nil)))
(insn 39 38 40 3 (set (reg:DI 5 di)
        (reg:DI 93)) "tester/explorer_tester.c":79:8 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 93)
        (nil)))
(call_insn 40 39 41 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("check_success") [flags 0x3]  <function_decl 0x7fb94901d900 check_success>) [0 check_success S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":79:8 909 {*call_value}
     (expr_list:REG_DEAD (reg:DI 36 r8)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:SI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:SI 1 dx)
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 36 r8))
                        (nil)))))))
(insn 41 40 42 3 (set (reg:SI 84 [ _3 ])
        (reg:SI 0 ax)) "tester/explorer_tester.c":79:8 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 42 41 43 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 84 [ _3 ])
            (const_int 0 [0]))) "tester/explorer_tester.c":79:6 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 84 [ _3 ])
        (nil)))
(jump_insn 43 42 48 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 64)
            (pc))) "tester/explorer_tester.c":79:6 891 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 64)
;;  succ:       7 tester/explorer_tester.c:80:5
;;              4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 6, flags: (RTL)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 95
(note 48 43 49 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 49 48 50 4 (set (reg:DI 95)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7fb949071360 *.LC7>)) "tester/explorer_tester.c":81:3 80 {*movdi_internal}
     (nil))
(insn 50 49 51 4 (set (reg:DI 5 di)
        (reg:DI 95)) "tester/explorer_tester.c":81:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 95)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7fb949071360 *.LC7>)
            (nil))))
(call_insn 51 50 56 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fb9492c6700 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":81:3 909 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 56 51 57 4 (set (pc)
        (label_ref 54)) 892 {jump}
     (nil)
 -> 54)
;;  succ:       5
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 57 56 59)
;; basic block 6, loop depth 0, maybe hot
;;  prev block 4, next block 7, flags: (RTL)
;;  pred:       2 tester/explorer_tester.c:76:5
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(code_label 59 57 58 6 31 (nil) [1 uses])
(note 58 59 60 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 60 58 61 6 (const_int 0 [0]) "tester/explorer_tester.c":76:5 928 {nop}
     (nil))
(jump_insn 61 60 62 6 (set (pc)
        (label_ref 54)) 892 {jump}
     (nil)
 -> 54)
;;  succ:       5 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 62 61 64)
;; basic block 7, loop depth 0, maybe hot
;;  prev block 6, next block 5, flags: (RTL)
;;  pred:       3 tester/explorer_tester.c:80:5
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(code_label 64 62 63 7 32 (nil) [1 uses])
(note 63 64 65 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 65 63 54 7 (const_int 0 [0]) "tester/explorer_tester.c":80:5 928 {nop}
     (nil))
;;  succ:       5 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 5, loop depth 0, maybe hot
;;  prev block 7, next block 1, flags: (RTL)
;;  pred:       7 [always]  (FALLTHRU)
;;              4
;;              6 [always] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(code_label 54 65 55 5 27 (nil) [2 uses])
(note 55 54 0 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]


;; Function explorer_tester_read (explorer_tester_read, funcdef_no=12, decl_uid=2123, cgraph_uid=13, symbol_order=12)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 11 n_edges 13 count 11 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 10 7 9 8
;; 2 succs { 9 3 }
;; 3 succs { 10 4 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 10 succs { 7 }
;; 7 succs { 8 }
;; 9 succs { 8 }
;; 8 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 23.
verify found no changes in insn with uid = 29.
verify found no changes in insn with uid = 43.
verify found no changes in insn with uid = 55.
verify found no changes in insn with uid = 71.
verify found no changes in insn with uid = 83.
verify found no changes in insn with uid = 92.
verify found no changes in insn with uid = 97.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r111: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r111,l0) best DIREG, allocno GENERAL_REGS
    r110: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r110,l0) best DIREG, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r108,l0) best DIREG, allocno GENERAL_REGS
    r107: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r107,l0) best SIREG, allocno GENERAL_REGS
    r106: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r106,l0) best DREG, allocno GENERAL_REGS
    r105: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a7 (r105,l0) best DIREG, allocno GENERAL_REGS
    r104: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a8 (r104,l0) best SIREG, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a15 (r102,l0) best CREG, allocno GENERAL_REGS
    r101: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a12 (r101,l0) best DIREG, allocno GENERAL_REGS
    r100: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a13 (r100,l0) best SIREG, allocno GENERAL_REGS
    r99: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a14 (r99,l0) best DREG, allocno GENERAL_REGS
    r98: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a16 (r98,l0) best AREG, allocno GENERAL_REGS
    r97: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a18 (r97,l0) best SIREG, allocno GENERAL_REGS
    r96: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a19 (r96,l0) best DREG, allocno GENERAL_REGS
    r95: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a20 (r95,l0) best CREG, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a23 (r92,l0) best AREG, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a27 (r90,l0) best DIREG, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r88,l0) best AREG, allocno GENERAL_REGS
    r87: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a9 (r87,l0) best DREG, allocno GENERAL_REGS
    r86: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a11 (r86,l0) best AREG, allocno GENERAL_REGS
    r85: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a17 (r85,l0) best DIREG, allocno GENERAL_REGS
    r84: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a24 (r84,l0) best DIREG, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r111,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a1(r110,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a2(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a3(r108,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a4(r107,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a5(r106,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a6(r88,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a7(r105,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a8(r104,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a9(r87,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a10(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a11(r86,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a12(r101,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a13(r100,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a14(r99,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a15(r102,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a16(r98,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a17(r85,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a18(r97,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a19(r96,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a20(r95,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a21(r94,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a22(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a23(r92,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:6000 NO_REX_SSE_REGS:6000 SSE_REGS:6000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a24(r84,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a25(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a26(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a27(r90,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a28(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a29(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000

   Insn 108(l0): point = 1
   Insn 104(l0): point = 4
   Insn 97(l0): point = 6
   Insn 96(l0): point = 8
   Insn 95(l0): point = 10
   Insn 113(l0): point = 13
   Insn 109(l0): point = 16
   Insn 92(l0): point = 18
   Insn 91(l0): point = 20
   Insn 90(l0): point = 22
   Insn 102(l0): point = 25
   Insn 85(l0): point = 27
   Insn 84(l0): point = 29
   Insn 83(l0): point = 31
   Insn 82(l0): point = 33
   Insn 81(l0): point = 35
   Insn 80(l0): point = 37
   Insn 79(l0): point = 39
   Insn 78(l0): point = 41
   Insn 77(l0): point = 43
   Insn 76(l0): point = 45
   Insn 74(l0): point = 48
   Insn 73(l0): point = 50
   Insn 72(l0): point = 52
   Insn 71(l0): point = 54
   Insn 70(l0): point = 56
   Insn 69(l0): point = 58
   Insn 68(l0): point = 60
   Insn 67(l0): point = 62
   Insn 66(l0): point = 64
   Insn 65(l0): point = 66
   Insn 64(l0): point = 68
   Insn 58(l0): point = 71
   Insn 57(l0): point = 73
   Insn 56(l0): point = 75
   Insn 55(l0): point = 77
   Insn 54(l0): point = 79
   Insn 53(l0): point = 81
   Insn 52(l0): point = 83
   Insn 51(l0): point = 85
   Insn 50(l0): point = 87
   Insn 49(l0): point = 89
   Insn 48(l0): point = 91
   Insn 47(l0): point = 93
   Insn 46(l0): point = 95
   Insn 45(l0): point = 97
   Insn 44(l0): point = 99
   Insn 43(l0): point = 101
   Insn 42(l0): point = 103
   Insn 41(l0): point = 105
   Insn 40(l0): point = 107
   Insn 39(l0): point = 109
   Insn 38(l0): point = 111
   Insn 37(l0): point = 113
   Insn 36(l0): point = 115
   Insn 35(l0): point = 117
   Insn 34(l0): point = 119
   Insn 33(l0): point = 121
   Insn 32(l0): point = 123
   Insn 31(l0): point = 125
   Insn 30(l0): point = 127
   Insn 29(l0): point = 129
   Insn 28(l0): point = 131
   Insn 27(l0): point = 133
   Insn 26(l0): point = 135
   Insn 25(l0): point = 137
   Insn 24(l0): point = 139
   Insn 23(l0): point = 141
   Insn 22(l0): point = 143
   Insn 21(l0): point = 145
   Insn 20(l0): point = 147
   Insn 14(l0): point = 150
   Insn 13(l0): point = 152
   Insn 12(l0): point = 154
   Insn 11(l0): point = 156
   Insn 7(l0): point = 158
   Insn 6(l0): point = 160
   Insn 5(l0): point = 162
   Insn 4(l0): point = 164
   Insn 3(l0): point = 166
   Insn 2(l0): point = 168
 a0(r111): [9..10]
 a1(r110): [21..22]
 a2(r109): [28..29]
 a3(r108): [36..37]
 a4(r107): [40..43]
 a5(r106): [42..45]
 a6(r88): [51..52]
 a7(r105): [57..62]
 a8(r104): [59..64]
 a9(r87): [61..66]
 a10(r103): [67..68]
 a11(r86): [74..75]
 a12(r101): [80..91]
 a13(r100): [82..93]
 a14(r99): [84..95]
 a15(r102): [86..87]
 a16(r98): [98..99]
 a17(r85): [104..121]
 a18(r97): [106..113]
 a19(r96): [108..115]
 a20(r95): [110..117]
 a21(r94): [112..119]
 a22(r93): [122..123]
 a23(r92): [126..127]
 a24(r84): [132..135]
 a25(r83): [136..137]
 a26(r91): [138..139]
 a27(r90): [146..147]
 a28(r82): [153..154]
 a29(r89): [155..156]
Compressing live ranges: from 171 to 40 - 23%
Ranges after the compression:
 a0(r111): [0..1]
 a1(r110): [2..3]
 a2(r109): [4..5]
 a3(r108): [6..7]
 a4(r107): [8..9]
 a5(r106): [8..9]
 a6(r88): [10..11]
 a7(r105): [12..13]
 a8(r104): [12..13]
 a9(r87): [12..13]
 a10(r103): [14..15]
 a11(r86): [16..17]
 a12(r101): [18..19]
 a13(r100): [18..19]
 a14(r99): [18..19]
 a15(r102): [18..19]
 a16(r98): [20..21]
 a17(r85): [22..23]
 a18(r97): [22..23]
 a19(r96): [22..23]
 a20(r95): [22..23]
 a21(r94): [22..23]
 a22(r93): [24..25]
 a23(r92): [26..27]
 a24(r84): [28..29]
 a25(r83): [30..31]
 a26(r91): [32..33]
 a27(r90): [34..35]
 a28(r82): [36..37]
 a29(r89): [38..39]
  pref0:a0(r111)<-hr5@1500
  pref1:a1(r110)<-hr5@1500
  pref2:a3(r108)<-hr5@1500
  pref3:a4(r107)<-hr4@1500
  pref4:a5(r106)<-hr1@1500
  pref5:a7(r105)<-hr5@1500
  pref6:a8(r104)<-hr4@1500
  pref7:a15(r102)<-hr2@1500
  pref8:a12(r101)<-hr5@1500
  pref9:a13(r100)<-hr4@1500
  pref10:a14(r99)<-hr1@1500
  pref11:a16(r98)<-hr0@1500
  pref12:a18(r97)<-hr4@1500
  pref13:a19(r96)<-hr1@1500
  pref14:a20(r95)<-hr2@1500
  pref15:a23(r92)<-hr0@1500
  pref16:a27(r90)<-hr5@1500
  pref17:a6(r88)<-hr0@1500
  pref18:a9(r87)<-hr1@1500
  pref19:a11(r86)<-hr0@1500
  pref20:a17(r85)<-hr5@1500
  pref21:a24(r84)<-hr5@1500
  regions=1, blocks=11, points=40
    allocnos=30 (big 0), copies=0, conflicts=0, ranges=30
Disposition:
   28:r82  l0     0   25:r83  l0     0   24:r84  l0     0   17:r85  l0     0
   11:r86  l0     0    9:r87  l0     1    6:r88  l0     0   29:r89  l0     0
   27:r90  l0     0   26:r91  l0     0   23:r92  l0     0   22:r93  l0     0
   21:r94  l0     5   20:r95  l0     2   19:r96  l0     1   18:r97  l0     4
   16:r98  l0     0   14:r99  l0     1   13:r100 l0     4   12:r101 l0     0
   15:r102 l0     2   10:r103 l0     0    8:r104 l0     2    7:r105 l0     0
    5:r106 l0     1    4:r107 l0     0    3:r108 l0     0    2:r109 l0     0
    1:r110 l0     0    0:r111 l0     0
+++Costs: overall -20000, reg -20000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


explorer_tester_read

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 36 [r8] 37 [r9]
;;  ref usage 	r0={11d,6u} r1={13d,5u} r2={11d,3u} r4={14d,6u} r5={17d,9u} r6={1d,10u} r7={1d,18u} r8={8d} r9={8d} r10={8d} r11={8d} r12={8d} r13={8d} r14={8d} r15={8d} r16={1d,9u} r17={12d,3u} r18={8d} r19={1d,35u,1e} r20={9d} r21={9d} r22={9d} r23={9d} r24={9d} r25={9d} r26={9d} r27={9d} r28={8d} r29={8d} r30={8d} r31={8d} r32={8d} r33={8d} r34={8d} r35={8d} r36={11d,3u} r37={9d,1u} r38={8d} r39={8d} r44={8d} r45={8d} r46={8d} r47={8d} r48={8d} r49={8d} r50={8d} r51={8d} r52={8d} r53={8d} r54={8d} r55={8d} r56={8d} r57={8d} r58={8d} r59={8d} r60={8d} r61={8d} r62={8d} r63={8d} r64={8d} r65={8d} r66={8d} r67={8d} r68={8d} r69={8d} r70={8d} r71={8d} r72={8d} r73={8d} r74={8d} r75={8d} r82={1d,1u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} 
;;    total ref usage 751{612d,138u,1e} in 81{73 regular + 8 call} insns.
(note 1 0 9 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 36 [r8] 37 [r9]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 36 [r8] 37 [r9]
;; lr  def 	 17 [flags] 82 89
(note 9 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 9 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [11 self+0 S8 A64])
        (reg:DI 5 di [ self ])) "tester/explorer_tester.c":84:68 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ self ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -32 [0xffffffffffffffe0])) [1 name+0 S8 A64])
        (reg:DI 4 si [ name ])) "tester/explorer_tester.c":84:68 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ name ])
        (nil)))
(insn 4 3 5 2 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -36 [0xffffffffffffffdc])) [4 offset+0 S4 A32])
        (reg:SI 1 dx [ offset ])) "tester/explorer_tester.c":84:68 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [ offset ])
        (nil)))
(insn 5 4 6 2 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -40 [0xffffffffffffffd8])) [4 bytes+0 S4 A32])
        (reg:SI 2 cx [ bytes ])) "tester/explorer_tester.c":84:68 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 cx [ bytes ])
        (nil)))
(insn 6 5 7 2 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -44 [0xffffffffffffffd4])) [4 success+0 S4 A32])
        (reg:SI 36 r8 [ success ])) "tester/explorer_tester.c":84:68 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 36 r8 [ success ])
        (nil)))
(insn 7 6 8 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -56 [0xffffffffffffffc8])) [1 expected+0 S8 A64])
        (reg:DI 37 r9 [ expected ])) "tester/explorer_tester.c":84:68 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 37 r9 [ expected ])
        (nil)))
(note 8 7 11 2 NOTE_INSN_FUNCTION_BEG)
(insn 11 8 12 2 (set (reg/f:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [11 self+0 S8 A64])) "tester/explorer_tester.c":85:11 80 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:SI 82 [ _1 ])
        (mem:SI (plus:DI (reg/f:DI 89)
                (const_int 32 [0x20])) [4 self_11(D)->error+0 S4 A64])) "tester/explorer_tester.c":85:11 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 89)
        (nil)))
(insn 13 12 14 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 82 [ _1 ])
            (const_int 0 [0]))) "tester/explorer_tester.c":85:6 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 82 [ _1 ])
        (nil)))
(jump_insn 14 13 19 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 107)
            (pc))) "tester/explorer_tester.c":85:6 891 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 107)
;;  succ:       9 tester/explorer_tester.c:86:5
;;              3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 83 84 85 86 90 91 92 93 94 95 96 97 98 99 100 101 102
(note 19 14 20 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 3 (set (reg:DI 90)
        (symbol_ref/f:DI ("*.LC13") [flags 0x2]  <var_decl 0x7fb949089240 *.LC13>)) "tester/explorer_tester.c":87:3 80 {*movdi_internal}
     (nil))
(insn 21 20 22 3 (set (reg:DI 5 di)
        (reg:DI 90)) "tester/explorer_tester.c":87:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 90)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC13") [flags 0x2]  <var_decl 0x7fb949089240 *.LC13>)
            (nil))))
(insn 22 21 23 3 (set (reg:QI 0 ax)
        (const_int 0 [0])) "tester/explorer_tester.c":87:3 83 {*movqi_internal}
     (nil))
(call_insn 23 22 24 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fb9492c6000 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":87:3 909 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 24 23 25 3 (set (reg:SI 91)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -40 [0xffffffffffffffd8])) [4 bytes+0 S4 A32])) "tester/explorer_tester.c":88:28 81 {*movsi_internal}
     (nil))
(insn 25 24 26 3 (parallel [
            (set (reg:SI 83 [ _2 ])
                (plus:SI (reg:SI 91)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "tester/explorer_tester.c":88:28 229 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 91)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                            (const_int -40 [0xffffffffffffffd8])) [4 bytes+0 S4 A32])
                    (const_int 1 [0x1]))
                (nil)))))
(insn 26 25 27 3 (set (reg:DI 84 [ _3 ])
        (sign_extend:DI (reg:SI 83 [ _2 ]))) "tester/explorer_tester.c":88:15 154 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 83 [ _2 ])
        (nil)))
(insn 27 26 28 3 (set (reg:DI 4 si)
        (const_int 1 [0x1])) "tester/explorer_tester.c":88:15 80 {*movdi_internal}
     (nil))
(insn 28 27 29 3 (set (reg:DI 5 di)
        (reg:DI 84 [ _3 ])) "tester/explorer_tester.c":88:15 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 84 [ _3 ])
        (nil)))
(call_insn 29 28 30 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("calloc") [flags 0x41]  <function_decl 0x7fb9492d8500 calloc>) [0 __builtin_calloc S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":88:15 909 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 30 29 31 3 (set (reg/f:DI 92)
        (reg:DI 0 ax)) "tester/explorer_tester.c":88:15 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 92)
            (nil))))
(insn 31 30 32 3 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 buf+0 S8 A64])
        (reg/f:DI 92)) "tester/explorer_tester.c":88:15 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 92)
        (nil)))
(insn 32 31 33 3 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [11 self+0 S8 A64])) "tester/explorer_tester.c":89:35 80 {*movdi_internal}
     (nil))
(insn 33 32 34 3 (set (reg/f:DI 85 [ _4 ])
        (mem/f:DI (plus:DI (reg/f:DI 93)
                (const_int 24 [0x18])) [2 self_11(D)->inner_explore+0 S8 A64])) "tester/explorer_tester.c":89:35 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 93)
        (nil)))
(insn 34 33 35 3 (set (reg:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 buf+0 S8 A64])) "tester/explorer_tester.c":89:17 80 {*movdi_internal}
     (nil))
(insn 35 34 36 3 (set (reg:SI 95)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -40 [0xffffffffffffffd8])) [4 bytes+0 S4 A32])) "tester/explorer_tester.c":89:17 81 {*movsi_internal}
     (nil))
(insn 36 35 37 3 (set (reg:SI 96)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -36 [0xffffffffffffffdc])) [4 offset+0 S4 A32])) "tester/explorer_tester.c":89:17 81 {*movsi_internal}
     (nil))
(insn 37 36 38 3 (set (reg:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -32 [0xffffffffffffffe0])) [1 name+0 S8 A64])) "tester/explorer_tester.c":89:17 80 {*movdi_internal}
     (nil))
(insn 38 37 39 3 (set (reg:DI 36 r8)
        (reg:DI 94)) "tester/explorer_tester.c":89:17 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 94)
        (nil)))
(insn 39 38 40 3 (set (reg:SI 2 cx)
        (reg:SI 95)) "tester/explorer_tester.c":89:17 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 95)
        (nil)))
(insn 40 39 41 3 (set (reg:SI 1 dx)
        (reg:SI 96)) "tester/explorer_tester.c":89:17 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 96)
        (nil)))
(insn 41 40 42 3 (set (reg:DI 4 si)
        (reg:DI 97)) "tester/explorer_tester.c":89:17 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 97)
        (nil)))
(insn 42 41 43 3 (set (reg:DI 5 di)
        (reg/f:DI 85 [ _4 ])) "tester/explorer_tester.c":89:17 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 85 [ _4 ])
        (nil)))
(call_insn 43 42 44 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("explorer_read") [flags 0x41]  <function_decl 0x7fb94936e000 explorer_read>) [0 explorer_read S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":89:17 909 {*call_value}
     (expr_list:REG_DEAD (reg:DI 36 r8)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:SI 2 cx)
                    (expr_list:REG_DEAD (reg:SI 1 dx)
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:DI (use (reg:DI 36 r8))
                        (nil)))))))
(insn 44 43 45 3 (set (reg:SI 98)
        (reg:SI 0 ax)) "tester/explorer_tester.c":89:17 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 45 44 46 3 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [4 result+0 S4 A32])
        (reg:SI 98)) "tester/explorer_tester.c":89:17 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 98)
        (nil)))
(insn 46 45 47 3 (set (reg:SI 99)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [4 result+0 S4 A32])) "tester/explorer_tester.c":90:8 81 {*movsi_internal}
     (nil))
(insn 47 46 48 3 (set (reg:SI 100)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -44 [0xffffffffffffffd4])) [4 success+0 S4 A32])) "tester/explorer_tester.c":90:8 81 {*movsi_internal}
     (nil))
(insn 48 47 49 3 (set (reg:DI 101)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [11 self+0 S8 A64])) "tester/explorer_tester.c":90:8 80 {*movdi_internal}
     (nil))
(insn 49 48 50 3 (set (reg:DI 36 r8)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7fb9490711b0 *.LC4>)) "tester/explorer_tester.c":90:8 80 {*movdi_internal}
     (nil))
(insn 50 49 51 3 (set (reg:DI 102)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7fb949071240 *.LC5>)) "tester/explorer_tester.c":90:8 80 {*movdi_internal}
     (nil))
(insn 51 50 52 3 (set (reg:DI 2 cx)
        (reg:DI 102)) "tester/explorer_tester.c":90:8 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 102)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7fb949071240 *.LC5>)
            (nil))))
(insn 52 51 53 3 (set (reg:SI 1 dx)
        (reg:SI 99)) "tester/explorer_tester.c":90:8 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 99)
        (nil)))
(insn 53 52 54 3 (set (reg:SI 4 si)
        (reg:SI 100)) "tester/explorer_tester.c":90:8 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 100)
        (nil)))
(insn 54 53 55 3 (set (reg:DI 5 di)
        (reg:DI 101)) "tester/explorer_tester.c":90:8 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 101)
        (nil)))
(call_insn 55 54 56 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("check_success") [flags 0x3]  <function_decl 0x7fb94901d900 check_success>) [0 check_success S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":90:8 909 {*call_value}
     (expr_list:REG_DEAD (reg:DI 36 r8)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:SI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:SI 1 dx)
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 36 r8))
                        (nil)))))))
(insn 56 55 57 3 (set (reg:SI 86 [ _5 ])
        (reg:SI 0 ax)) "tester/explorer_tester.c":90:8 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 57 56 58 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 86 [ _5 ])
            (const_int 0 [0]))) "tester/explorer_tester.c":90:6 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 86 [ _5 ])
        (nil)))
(jump_insn 58 57 63 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 112)
            (pc))) "tester/explorer_tester.c":90:6 891 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 112)
;;  succ:       10 tester/explorer_tester.c:91:5
;;              4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 87 88 103 104 105
(note 63 58 64 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 64 63 65 4 (set (reg:SI 103)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -40 [0xffffffffffffffd8])) [4 bytes+0 S4 A32])) "tester/explorer_tester.c":92:7 81 {*movsi_internal}
     (nil))
(insn 65 64 66 4 (set (reg:DI 87 [ _6 ])
        (sign_extend:DI (reg:SI 103))) "tester/explorer_tester.c":92:7 154 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 103)
        (nil)))
(insn 66 65 67 4 (set (reg:DI 104)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -56 [0xffffffffffffffc8])) [1 expected+0 S8 A64])) "tester/explorer_tester.c":92:7 80 {*movdi_internal}
     (nil))
(insn 67 66 68 4 (set (reg:DI 105)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 buf+0 S8 A64])) "tester/explorer_tester.c":92:7 80 {*movdi_internal}
     (nil))
(insn 68 67 69 4 (set (reg:DI 1 dx)
        (reg:DI 87 [ _6 ])) "tester/explorer_tester.c":92:7 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 87 [ _6 ])
        (nil)))
(insn 69 68 70 4 (set (reg:DI 4 si)
        (reg:DI 104)) "tester/explorer_tester.c":92:7 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 104)
        (nil)))
(insn 70 69 71 4 (set (reg:DI 5 di)
        (reg:DI 105)) "tester/explorer_tester.c":92:7 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 105)
        (nil)))
(call_insn/i 71 70 72 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strncmp") [flags 0x41]  <function_decl 0x7fb9492c0c00 strncmp>) [0 __builtin_strncmp S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":92:7 909 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 72 71 73 4 (set (reg:SI 88 [ _7 ])
        (reg:SI 0 ax)) "tester/explorer_tester.c":92:7 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 73 72 74 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 88 [ _7 ])
            (const_int 0 [0]))) "tester/explorer_tester.c":92:6 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 88 [ _7 ])
        (nil)))
(jump_insn 74 73 75 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 88)
            (pc))) "tester/explorer_tester.c":92:6 891 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 88)
;;  succ:       5 (FALLTHRU)
;;              6
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 106 107 108 109
(note 75 74 76 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 76 75 77 5 (set (reg:DI 106)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -56 [0xffffffffffffffc8])) [1 expected+0 S8 A64])) "tester/explorer_tester.c":93:5 80 {*movdi_internal}
     (nil))
(insn 77 76 78 5 (set (reg:DI 107)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 buf+0 S8 A64])) "tester/explorer_tester.c":93:5 80 {*movdi_internal}
     (nil))
(insn 78 77 79 5 (set (reg:DI 1 dx)
        (reg:DI 106)) "tester/explorer_tester.c":93:5 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 106)
        (nil)))
(insn 79 78 80 5 (set (reg:DI 4 si)
        (reg:DI 107)) "tester/explorer_tester.c":93:5 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 107)
        (nil)))
(insn 80 79 81 5 (set (reg:DI 108)
        (symbol_ref/f:DI ("*.LC14") [flags 0x2]  <var_decl 0x7fb9490892d0 *.LC14>)) "tester/explorer_tester.c":93:5 80 {*movdi_internal}
     (nil))
(insn 81 80 82 5 (set (reg:DI 5 di)
        (reg:DI 108)) "tester/explorer_tester.c":93:5 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 108)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC14") [flags 0x2]  <var_decl 0x7fb9490892d0 *.LC14>)
            (nil))))
(insn 82 81 83 5 (set (reg:QI 0 ax)
        (const_int 0 [0])) "tester/explorer_tester.c":93:5 83 {*movqi_internal}
     (nil))
(call_insn 83 82 84 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fb9492c6000 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":93:5 909 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (nil)))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 84 83 85 5 (set (reg/f:DI 109)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [11 self+0 S8 A64])) "tester/explorer_tester.c":94:17 80 {*movdi_internal}
     (nil))
(insn 85 84 102 5 (set (mem:SI (plus:DI (reg/f:DI 109)
                (const_int 32 [0x20])) [4 self_11(D)->error+0 S4 A64])
        (const_int 1 [0x1])) "tester/explorer_tester.c":94:17 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 109)
        (nil)))
(jump_insn 102 85 103 5 (set (pc)
        (label_ref 93)) "tester/explorer_tester.c":95:5 892 {jump}
     (nil)
 -> 93)
;;  succ:       7 [always]  tester/explorer_tester.c:95:5
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 103 102 88)
;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 10, flags: (RTL)
;;  pred:       4
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 110
(code_label 88 103 89 6 38 (nil) [1 uses])
(note 89 88 90 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 90 89 91 6 (set (reg:DI 110)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7fb949071360 *.LC7>)) "tester/explorer_tester.c":97:3 80 {*movdi_internal}
     (nil))
(insn 91 90 92 6 (set (reg:DI 5 di)
        (reg:DI 110)) "tester/explorer_tester.c":97:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 110)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7fb949071360 *.LC7>)
            (nil))))
(call_insn 92 91 109 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fb9492c6700 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":97:3 909 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 109 92 110 6 (set (pc)
        (label_ref 93)) 892 {jump}
     (nil)
 -> 93)
;;  succ:       7
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 110 109 112)
;; basic block 10, loop depth 0, maybe hot
;;  prev block 6, next block 7, flags: (RTL)
;;  pred:       3 tester/explorer_tester.c:91:5
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(code_label 112 110 111 10 40 (nil) [1 uses])
(note 111 112 113 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 113 111 93 10 (const_int 0 [0]) "tester/explorer_tester.c":91:5 928 {nop}
     (nil))
;;  succ:       7 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 7, loop depth 0, maybe hot
;;  prev block 10, next block 9, flags: (RTL)
;;  pred:       10 [always]  (FALLTHRU)
;;              5 [always]  tester/explorer_tester.c:95:5
;;              6
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 111
(code_label 93 113 94 7 37 ("clear") [2 uses])
(note 94 93 95 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 95 94 96 7 (set (reg:DI 111)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 buf+0 S8 A64])) "tester/explorer_tester.c":99:3 80 {*movdi_internal}
     (nil))
(insn 96 95 97 7 (set (reg:DI 5 di)
        (reg:DI 111)) "tester/explorer_tester.c":99:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 111)
        (nil)))
(call_insn 97 96 104 7 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7fb9492ddc00 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) "tester/explorer_tester.c":99:3 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 104 97 105 7 (set (pc)
        (label_ref 100)) 892 {jump}
     (nil)
 -> 100)
;;  succ:       8
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 105 104 107)
;; basic block 9, loop depth 0, maybe hot
;;  prev block 7, next block 8, flags: (RTL)
;;  pred:       2 tester/explorer_tester.c:86:5
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(code_label 107 105 106 9 39 (nil) [1 uses])
(note 106 107 108 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 108 106 100 9 (const_int 0 [0]) "tester/explorer_tester.c":86:5 928 {nop}
     (nil))
;;  succ:       8 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 8, loop depth 0, maybe hot
;;  prev block 9, next block 1, flags: (RTL)
;;  pred:       9 [always]  (FALLTHRU)
;;              7
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(code_label 100 108 101 8 33 (nil) [1 uses])
(note 101 100 0 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]


;; Function explorer_tester_write (explorer_tester_write, funcdef_no=13, decl_uid=2130, cgraph_uid=14, symbol_order=13)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 8 n_edges 9 count 8 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 6 7 5
;; 2 succs { 6 3 }
;; 3 succs { 7 4 }
;; 4 succs { 5 }
;; 6 succs { 5 }
;; 7 succs { 5 }
;; 5 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 23.
verify found no changes in insn with uid = 35.
verify found no changes in insn with uid = 47.
verify found no changes in insn with uid = 58.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r97: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r97,l0) best DIREG, allocno GENERAL_REGS
    r96: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r96,l0) best CREG, allocno GENERAL_REGS
    r95: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r95,l0) best DIREG, allocno GENERAL_REGS
    r94: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r94,l0) best SIREG, allocno GENERAL_REGS
    r93: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r93,l0) best DREG, allocno GENERAL_REGS
    r92: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r92,l0) best AREG, allocno GENERAL_REGS
    r91: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a8 (r91,l0) best SIREG, allocno GENERAL_REGS
    r90: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a9 (r90,l0) best DREG, allocno GENERAL_REGS
    r89: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a10 (r89,l0) best CREG, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a13 (r86,l0) best DIREG, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r84,l0) best AREG, allocno GENERAL_REGS
    r83: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a7 (r83,l0) best DIREG, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r97,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a1(r84,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a2(r95,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a3(r94,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a4(r93,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a5(r96,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a6(r92,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a7(r83,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a8(r91,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a9(r90,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a10(r89,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a11(r88,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a12(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a13(r86,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a14(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a15(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000

   Insn 72(l0): point = 1
   Insn 68(l0): point = 4
   Insn 67(l0): point = 6
   Insn 63(l0): point = 9
   Insn 58(l0): point = 11
   Insn 57(l0): point = 13
   Insn 56(l0): point = 15
   Insn 50(l0): point = 18
   Insn 49(l0): point = 20
   Insn 48(l0): point = 22
   Insn 47(l0): point = 24
   Insn 46(l0): point = 26
   Insn 45(l0): point = 28
   Insn 44(l0): point = 30
   Insn 43(l0): point = 32
   Insn 42(l0): point = 34
   Insn 41(l0): point = 36
   Insn 40(l0): point = 38
   Insn 39(l0): point = 40
   Insn 38(l0): point = 42
   Insn 37(l0): point = 44
   Insn 36(l0): point = 46
   Insn 35(l0): point = 48
   Insn 34(l0): point = 50
   Insn 33(l0): point = 52
   Insn 32(l0): point = 54
   Insn 31(l0): point = 56
   Insn 30(l0): point = 58
   Insn 29(l0): point = 60
   Insn 28(l0): point = 62
   Insn 27(l0): point = 64
   Insn 26(l0): point = 66
   Insn 25(l0): point = 68
   Insn 24(l0): point = 70
   Insn 23(l0): point = 72
   Insn 22(l0): point = 74
   Insn 21(l0): point = 76
   Insn 20(l0): point = 78
   Insn 14(l0): point = 81
   Insn 13(l0): point = 83
   Insn 12(l0): point = 85
   Insn 11(l0): point = 87
   Insn 7(l0): point = 89
   Insn 6(l0): point = 91
   Insn 5(l0): point = 93
   Insn 4(l0): point = 95
   Insn 3(l0): point = 97
   Insn 2(l0): point = 99
 a0(r97): [14..15]
 a1(r84): [21..22]
 a2(r95): [27..38]
 a3(r94): [29..40]
 a4(r93): [31..42]
 a5(r96): [33..34]
 a6(r92): [45..46]
 a7(r83): [51..68]
 a8(r91): [53..60]
 a9(r90): [55..62]
 a10(r89): [57..64]
 a11(r88): [59..66]
 a12(r87): [69..70]
 a13(r86): [77..78]
 a14(r82): [84..85]
 a15(r85): [86..87]
Compressing live ranges: from 102 to 18 - 17%
Ranges after the compression:
 a0(r97): [0..1]
 a1(r84): [2..3]
 a2(r95): [4..5]
 a3(r94): [4..5]
 a4(r93): [4..5]
 a5(r96): [4..5]
 a6(r92): [6..7]
 a7(r83): [8..9]
 a8(r91): [8..9]
 a9(r90): [8..9]
 a10(r89): [8..9]
 a11(r88): [8..9]
 a12(r87): [10..11]
 a13(r86): [12..13]
 a14(r82): [14..15]
 a15(r85): [16..17]
  pref0:a0(r97)<-hr5@1500
  pref1:a5(r96)<-hr2@1500
  pref2:a2(r95)<-hr5@1500
  pref3:a3(r94)<-hr4@1500
  pref4:a4(r93)<-hr1@1500
  pref5:a6(r92)<-hr0@1500
  pref6:a8(r91)<-hr4@1500
  pref7:a9(r90)<-hr1@1500
  pref8:a10(r89)<-hr2@1500
  pref9:a13(r86)<-hr5@1500
  pref10:a1(r84)<-hr0@1500
  pref11:a7(r83)<-hr5@1500
  regions=1, blocks=8, points=18
    allocnos=16 (big 0), copies=0, conflicts=0, ranges=16
Disposition:
   14:r82  l0     0    7:r83  l0     0    1:r84  l0     0   15:r85  l0     0
   13:r86  l0     0   12:r87  l0     0   11:r88  l0     5   10:r89  l0     2
    9:r90  l0     1    8:r91  l0     4    6:r92  l0     0    4:r93  l0     1
    3:r94  l0     4    2:r95  l0     0    5:r96  l0     2    0:r97  l0     0
+++Costs: overall -10000, reg -10000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


explorer_tester_write

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 36 [r8] 37 [r9]
;;  ref usage 	r0={6d,3u} r1={7d,3u} r2={7d,3u} r4={7d,3u} r5={9d,5u} r6={1d,7u} r7={1d,11u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r16={1d,6u} r17={6d,2u} r18={4d} r19={1d,23u} r20={5d} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={7d,3u} r37={5d,1u} r38={4d} r39={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r82={1d,1u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} 
;;    total ref usage 404{318d,86u,0e} in 48{44 regular + 4 call} insns.
(note 1 0 9 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 36 [r8] 37 [r9]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 36 [r8] 37 [r9]
;; lr  def 	 17 [flags] 82 85
(note 9 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 9 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [11 self+0 S8 A64])
        (reg:DI 5 di [ self ])) "tester/explorer_tester.c":102:70 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ self ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -32 [0xffffffffffffffe0])) [1 name+0 S8 A64])
        (reg:DI 4 si [ name ])) "tester/explorer_tester.c":102:70 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ name ])
        (nil)))
(insn 4 3 5 2 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -36 [0xffffffffffffffdc])) [4 offset+0 S4 A32])
        (reg:SI 1 dx [ offset ])) "tester/explorer_tester.c":102:70 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [ offset ])
        (nil)))
(insn 5 4 6 2 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -40 [0xffffffffffffffd8])) [4 bytes+0 S4 A32])
        (reg:SI 2 cx [ bytes ])) "tester/explorer_tester.c":102:70 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 cx [ bytes ])
        (nil)))
(insn 6 5 7 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -48 [0xffffffffffffffd0])) [1 buf+0 S8 A64])
        (reg:DI 36 r8 [ buf ])) "tester/explorer_tester.c":102:70 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 36 r8 [ buf ])
        (nil)))
(insn 7 6 8 2 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -52 [0xffffffffffffffcc])) [4 success+0 S4 A32])
        (reg:SI 37 r9 [ success ])) "tester/explorer_tester.c":102:70 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 37 r9 [ success ])
        (nil)))
(note 8 7 11 2 NOTE_INSN_FUNCTION_BEG)
(insn 11 8 12 2 (set (reg/f:DI 85)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [11 self+0 S8 A64])) "tester/explorer_tester.c":103:11 80 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:SI 82 [ _1 ])
        (mem:SI (plus:DI (reg/f:DI 85)
                (const_int 32 [0x20])) [4 self_6(D)->error+0 S4 A64])) "tester/explorer_tester.c":103:11 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 85)
        (nil)))
(insn 13 12 14 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 82 [ _1 ])
            (const_int 0 [0]))) "tester/explorer_tester.c":103:6 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 82 [ _1 ])
        (nil)))
(jump_insn 14 13 19 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 66)
            (pc))) "tester/explorer_tester.c":103:6 891 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 66)
;;  succ:       6 tester/explorer_tester.c:104:5
;;              3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 83 84 86 87 88 89 90 91 92 93 94 95 96
(note 19 14 20 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 3 (set (reg:DI 86)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x7fb949089c60 *.LC15>)) "tester/explorer_tester.c":105:3 80 {*movdi_internal}
     (nil))
(insn 21 20 22 3 (set (reg:DI 5 di)
        (reg:DI 86)) "tester/explorer_tester.c":105:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 86)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x7fb949089c60 *.LC15>)
            (nil))))
(insn 22 21 23 3 (set (reg:QI 0 ax)
        (const_int 0 [0])) "tester/explorer_tester.c":105:3 83 {*movqi_internal}
     (nil))
(call_insn 23 22 24 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fb9492c6000 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":105:3 909 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 24 23 25 3 (set (reg/f:DI 87)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [11 self+0 S8 A64])) "tester/explorer_tester.c":106:17 80 {*movdi_internal}
     (nil))
(insn 25 24 26 3 (set (reg/f:DI 83 [ _2 ])
        (mem/f:DI (plus:DI (reg/f:DI 87)
                (const_int 24 [0x18])) [2 self_6(D)->inner_explore+0 S8 A64])) "tester/explorer_tester.c":106:17 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87)
        (nil)))
(insn 26 25 27 3 (set (reg:DI 88)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -48 [0xffffffffffffffd0])) [1 buf+0 S8 A64])) "tester/explorer_tester.c":106:17 80 {*movdi_internal}
     (nil))
(insn 27 26 28 3 (set (reg:SI 89)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -40 [0xffffffffffffffd8])) [4 bytes+0 S4 A32])) "tester/explorer_tester.c":106:17 81 {*movsi_internal}
     (nil))
(insn 28 27 29 3 (set (reg:SI 90)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -36 [0xffffffffffffffdc])) [4 offset+0 S4 A32])) "tester/explorer_tester.c":106:17 81 {*movsi_internal}
     (nil))
(insn 29 28 30 3 (set (reg:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -32 [0xffffffffffffffe0])) [1 name+0 S8 A64])) "tester/explorer_tester.c":106:17 80 {*movdi_internal}
     (nil))
(insn 30 29 31 3 (set (reg:DI 36 r8)
        (reg:DI 88)) "tester/explorer_tester.c":106:17 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88)
        (nil)))
(insn 31 30 32 3 (set (reg:SI 2 cx)
        (reg:SI 89)) "tester/explorer_tester.c":106:17 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 89)
        (nil)))
(insn 32 31 33 3 (set (reg:SI 1 dx)
        (reg:SI 90)) "tester/explorer_tester.c":106:17 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 90)
        (nil)))
(insn 33 32 34 3 (set (reg:DI 4 si)
        (reg:DI 91)) "tester/explorer_tester.c":106:17 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 91)
        (nil)))
(insn 34 33 35 3 (set (reg:DI 5 di)
        (reg/f:DI 83 [ _2 ])) "tester/explorer_tester.c":106:17 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 83 [ _2 ])
        (nil)))
(call_insn 35 34 36 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("explorer_write") [flags 0x41]  <function_decl 0x7fb94936e100 explorer_write>) [0 explorer_write S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":106:17 909 {*call_value}
     (expr_list:REG_DEAD (reg:DI 36 r8)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:SI 2 cx)
                    (expr_list:REG_DEAD (reg:SI 1 dx)
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:DI (use (reg:DI 36 r8))
                        (nil)))))))
(insn 36 35 37 3 (set (reg:SI 92)
        (reg:SI 0 ax)) "tester/explorer_tester.c":106:17 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 37 36 38 3 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [4 result+0 S4 A32])
        (reg:SI 92)) "tester/explorer_tester.c":106:17 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 92)
        (nil)))
(insn 38 37 39 3 (set (reg:SI 93)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [4 result+0 S4 A32])) "tester/explorer_tester.c":107:8 81 {*movsi_internal}
     (nil))
(insn 39 38 40 3 (set (reg:SI 94)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -52 [0xffffffffffffffcc])) [4 success+0 S4 A32])) "tester/explorer_tester.c":107:8 81 {*movsi_internal}
     (nil))
(insn 40 39 41 3 (set (reg:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [11 self+0 S8 A64])) "tester/explorer_tester.c":107:8 80 {*movdi_internal}
     (nil))
(insn 41 40 42 3 (set (reg:DI 36 r8)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7fb9490711b0 *.LC4>)) "tester/explorer_tester.c":107:8 80 {*movdi_internal}
     (nil))
(insn 42 41 43 3 (set (reg:DI 96)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7fb949071240 *.LC5>)) "tester/explorer_tester.c":107:8 80 {*movdi_internal}
     (nil))
(insn 43 42 44 3 (set (reg:DI 2 cx)
        (reg:DI 96)) "tester/explorer_tester.c":107:8 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 96)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7fb949071240 *.LC5>)
            (nil))))
(insn 44 43 45 3 (set (reg:SI 1 dx)
        (reg:SI 93)) "tester/explorer_tester.c":107:8 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 93)
        (nil)))
(insn 45 44 46 3 (set (reg:SI 4 si)
        (reg:SI 94)) "tester/explorer_tester.c":107:8 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 94)
        (nil)))
(insn 46 45 47 3 (set (reg:DI 5 di)
        (reg:DI 95)) "tester/explorer_tester.c":107:8 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 95)
        (nil)))
(call_insn 47 46 48 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("check_success") [flags 0x3]  <function_decl 0x7fb94901d900 check_success>) [0 check_success S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":107:8 909 {*call_value}
     (expr_list:REG_DEAD (reg:DI 36 r8)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:SI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:SI 1 dx)
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 36 r8))
                        (nil)))))))
(insn 48 47 49 3 (set (reg:SI 84 [ _3 ])
        (reg:SI 0 ax)) "tester/explorer_tester.c":107:8 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 49 48 50 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 84 [ _3 ])
            (const_int 0 [0]))) "tester/explorer_tester.c":107:6 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 84 [ _3 ])
        (nil)))
(jump_insn 50 49 55 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 71)
            (pc))) "tester/explorer_tester.c":107:6 891 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 71)
;;  succ:       7 tester/explorer_tester.c:108:5
;;              4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 6, flags: (RTL)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 97
(note 55 50 56 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 56 55 57 4 (set (reg:DI 97)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7fb949071360 *.LC7>)) "tester/explorer_tester.c":110:3 80 {*movdi_internal}
     (nil))
(insn 57 56 58 4 (set (reg:DI 5 di)
        (reg:DI 97)) "tester/explorer_tester.c":110:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 97)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7fb949071360 *.LC7>)
            (nil))))
(call_insn 58 57 63 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fb9492c6700 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":110:3 909 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 63 58 64 4 (set (pc)
        (label_ref 61)) 892 {jump}
     (nil)
 -> 61)
;;  succ:       5
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 64 63 66)
;; basic block 6, loop depth 0, maybe hot
;;  prev block 4, next block 7, flags: (RTL)
;;  pred:       2 tester/explorer_tester.c:104:5
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(code_label 66 64 65 6 45 (nil) [1 uses])
(note 65 66 67 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 67 65 68 6 (const_int 0 [0]) "tester/explorer_tester.c":104:5 928 {nop}
     (nil))
(jump_insn 68 67 69 6 (set (pc)
        (label_ref 61)) 892 {jump}
     (nil)
 -> 61)
;;  succ:       5 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 69 68 71)
;; basic block 7, loop depth 0, maybe hot
;;  prev block 6, next block 5, flags: (RTL)
;;  pred:       3 tester/explorer_tester.c:108:5
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(code_label 71 69 70 7 46 (nil) [1 uses])
(note 70 71 72 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 72 70 61 7 (const_int 0 [0]) "tester/explorer_tester.c":108:5 928 {nop}
     (nil))
;;  succ:       5 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 5, loop depth 0, maybe hot
;;  prev block 7, next block 1, flags: (RTL)
;;  pred:       7 [always]  (FALLTHRU)
;;              4
;;              6 [always] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(code_label 61 72 62 5 41 (nil) [2 uses])
(note 62 61 0 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]


;; Function explorer_tester_create_file (explorer_tester_create_file, funcdef_no=14, decl_uid=2135, cgraph_uid=15, symbol_order=14)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 10 n_edges 12 count 10 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 8 9 7
;; 2 succs { 8 3 }
;; 3 succs { 9 4 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 8 succs { 7 }
;; 9 succs { 7 }
;; 7 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 21.
verify found no changes in insn with uid = 29.
verify found no changes in insn with uid = 41.
verify found no changes in insn with uid = 55.
verify found no changes in insn with uid = 64.
verify found no changes in insn with uid = 71.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r101: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r101,l0) best DIREG, allocno GENERAL_REGS
    r100: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r100,l0) best DIREG, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r98,l0) best SIREG, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a11 (r96,l0) best CREG, allocno GENERAL_REGS
    r95: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a8 (r95,l0) best DIREG, allocno GENERAL_REGS
    r94: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a9 (r94,l0) best SIREG, allocno GENERAL_REGS
    r93: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a10 (r93,l0) best DREG, allocno GENERAL_REGS
    r92: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a12 (r92,l0) best AREG, allocno GENERAL_REGS
    r91: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a14 (r91,l0) best SIREG, allocno GENERAL_REGS
    r90: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a15 (r90,l0) best DREG, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a17 (r88,l0) best DIREG, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r86,l0) best AREG, allocno GENERAL_REGS
    r85: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r85,l0) best DIREG, allocno GENERAL_REGS
    r84: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a7 (r84,l0) best AREG, allocno GENERAL_REGS
    r83: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a13 (r83,l0) best DIREG, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r101,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a1(r100,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a2(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a3(r86,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a4(r85,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a5(r98,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a6(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a7(r84,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a8(r95,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a9(r94,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a10(r93,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a11(r96,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a12(r92,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a13(r83,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a14(r91,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a15(r90,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a16(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a17(r88,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a18(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a19(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000

   Insn 87(l0): point = 1
   Insn 83(l0): point = 4
   Insn 82(l0): point = 6
   Insn 78(l0): point = 9
   Insn 71(l0): point = 11
   Insn 70(l0): point = 13
   Insn 69(l0): point = 15
   Insn 76(l0): point = 18
   Insn 64(l0): point = 20
   Insn 63(l0): point = 22
   Insn 62(l0): point = 24
   Insn 61(l0): point = 26
   Insn 60(l0): point = 28
   Insn 58(l0): point = 31
   Insn 57(l0): point = 33
   Insn 56(l0): point = 35
   Insn 55(l0): point = 37
   Insn 54(l0): point = 39
   Insn 53(l0): point = 41
   Insn 52(l0): point = 43
   Insn 51(l0): point = 45
   Insn 50(l0): point = 47
   Insn 44(l0): point = 50
   Insn 43(l0): point = 52
   Insn 42(l0): point = 54
   Insn 41(l0): point = 56
   Insn 40(l0): point = 58
   Insn 39(l0): point = 60
   Insn 38(l0): point = 62
   Insn 37(l0): point = 64
   Insn 36(l0): point = 66
   Insn 35(l0): point = 68
   Insn 34(l0): point = 70
   Insn 33(l0): point = 72
   Insn 32(l0): point = 74
   Insn 31(l0): point = 76
   Insn 30(l0): point = 78
   Insn 29(l0): point = 80
   Insn 28(l0): point = 82
   Insn 27(l0): point = 84
   Insn 26(l0): point = 86
   Insn 25(l0): point = 88
   Insn 24(l0): point = 90
   Insn 23(l0): point = 92
   Insn 22(l0): point = 94
   Insn 21(l0): point = 96
   Insn 20(l0): point = 98
   Insn 19(l0): point = 100
   Insn 18(l0): point = 102
   Insn 12(l0): point = 105
   Insn 11(l0): point = 107
   Insn 10(l0): point = 109
   Insn 9(l0): point = 111
   Insn 5(l0): point = 113
   Insn 4(l0): point = 115
   Insn 3(l0): point = 117
   Insn 2(l0): point = 119
 a0(r101): [14..15]
 a1(r100): [23..24]
 a2(r99): [27..28]
 a3(r86): [34..35]
 a4(r85): [40..45]
 a5(r98): [42..43]
 a6(r97): [46..47]
 a7(r84): [53..54]
 a8(r95): [59..70]
 a9(r94): [61..72]
 a10(r93): [63..74]
 a11(r96): [65..66]
 a12(r92): [77..78]
 a13(r83): [83..92]
 a14(r91): [85..88]
 a15(r90): [87..90]
 a16(r89): [93..94]
 a17(r88): [101..102]
 a18(r82): [108..109]
 a19(r87): [110..111]
Compressing live ranges: from 122 to 28 - 22%
Ranges after the compression:
 a0(r101): [0..1]
 a1(r100): [2..3]
 a2(r99): [4..5]
 a3(r86): [6..7]
 a4(r85): [8..9]
 a5(r98): [8..9]
 a6(r97): [10..11]
 a7(r84): [12..13]
 a8(r95): [14..15]
 a9(r94): [14..15]
 a10(r93): [14..15]
 a11(r96): [14..15]
 a12(r92): [16..17]
 a13(r83): [18..19]
 a14(r91): [18..19]
 a15(r90): [18..19]
 a16(r89): [20..21]
 a17(r88): [22..23]
 a18(r82): [24..25]
 a19(r87): [26..27]
  pref0:a0(r101)<-hr5@1500
  pref1:a1(r100)<-hr5@1500
  pref2:a5(r98)<-hr4@1500
  pref3:a11(r96)<-hr2@1500
  pref4:a8(r95)<-hr5@1500
  pref5:a9(r94)<-hr4@1500
  pref6:a10(r93)<-hr1@1500
  pref7:a12(r92)<-hr0@1500
  pref8:a14(r91)<-hr4@1500
  pref9:a15(r90)<-hr1@1500
  pref10:a17(r88)<-hr5@1500
  pref11:a3(r86)<-hr0@1500
  pref12:a4(r85)<-hr5@1500
  pref13:a7(r84)<-hr0@1500
  pref14:a13(r83)<-hr5@1500
  regions=1, blocks=10, points=28
    allocnos=20 (big 0), copies=0, conflicts=0, ranges=20
Disposition:
   18:r82  l0     0   13:r83  l0     0    7:r84  l0     0    4:r85  l0     0
    3:r86  l0     0   19:r87  l0     0   17:r88  l0     0   16:r89  l0     0
   15:r90  l0     1   14:r91  l0     2   12:r92  l0     0   10:r93  l0     1
    9:r94  l0     4    8:r95  l0     0   11:r96  l0     2    6:r97  l0     0
    5:r98  l0     1    2:r99  l0     0    1:r100 l0     0    0:r101 l0     0
+++Costs: overall -15000, reg -15000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


explorer_tester_create_file

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 36 [r8]
;;  ref usage 	r0={8d,4u} r1={9d,3u} r2={8d,2u} r4={10d,4u} r5={13d,7u} r6={1d,9u} r7={1d,15u} r8={6d} r9={6d} r10={6d} r11={6d} r12={6d} r13={6d} r14={6d} r15={6d} r16={1d,8u} r17={9d,3u} r18={6d} r19={1d,24u} r20={7d} r21={7d} r22={7d} r23={7d} r24={7d} r25={7d} r26={7d} r27={7d} r28={6d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={8d,1u} r37={7d} r38={6d} r39={6d} r44={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r82={1d,1u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} 
;;    total ref usage 558{458d,100u,0e} in 57{51 regular + 6 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags] 82 87
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [11 self+0 S8 A64])
        (reg:DI 5 di [ self ])) "tester/explorer_tester.c":113:58 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ self ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -32 [0xffffffffffffffe0])) [1 name+0 S8 A64])
        (reg:DI 4 si [ name ])) "tester/explorer_tester.c":113:58 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ name ])
        (nil)))
(insn 4 3 5 2 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -36 [0xffffffffffffffdc])) [4 type+0 S4 A32])
        (reg:SI 1 dx [ type ])) "tester/explorer_tester.c":113:58 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [ type ])
        (nil)))
(insn 5 4 6 2 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -40 [0xffffffffffffffd8])) [4 success+0 S4 A32])
        (reg:SI 2 cx [ success ])) "tester/explorer_tester.c":113:58 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 cx [ success ])
        (nil)))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (reg/f:DI 87)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [11 self+0 S8 A64])) "tester/explorer_tester.c":114:11 80 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:SI 82 [ _1 ])
        (mem:SI (plus:DI (reg/f:DI 87)
                (const_int 32 [0x20])) [4 self_8(D)->error+0 S4 A64])) "tester/explorer_tester.c":114:11 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87)
        (nil)))
(insn 11 10 12 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 82 [ _1 ])
            (const_int 0 [0]))) "tester/explorer_tester.c":114:6 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 82 [ _1 ])
        (nil)))
(jump_insn 12 11 17 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 81)
            (pc))) "tester/explorer_tester.c":114:6 891 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 81)
;;  succ:       8 tester/explorer_tester.c:115:5
;;              3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 83 84 88 89 90 91 92 93 94 95 96
(note 17 12 18 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 3 (set (reg:DI 88)
        (symbol_ref/f:DI ("*.LC16") [flags 0x2]  <var_decl 0x7fb949095360 *.LC16>)) "tester/explorer_tester.c":116:3 80 {*movdi_internal}
     (nil))
(insn 19 18 20 3 (set (reg:DI 5 di)
        (reg:DI 88)) "tester/explorer_tester.c":116:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC16") [flags 0x2]  <var_decl 0x7fb949095360 *.LC16>)
            (nil))))
(insn 20 19 21 3 (set (reg:QI 0 ax)
        (const_int 0 [0])) "tester/explorer_tester.c":116:3 83 {*movqi_internal}
     (nil))
(call_insn 21 20 22 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fb9492c6000 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":116:3 909 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 22 21 23 3 (set (reg/f:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [11 self+0 S8 A64])) "tester/explorer_tester.c":117:17 80 {*movdi_internal}
     (nil))
(insn 23 22 24 3 (set (reg/f:DI 83 [ _2 ])
        (mem/f:DI (plus:DI (reg/f:DI 89)
                (const_int 24 [0x18])) [2 self_8(D)->inner_explore+0 S8 A64])) "tester/explorer_tester.c":117:17 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 89)
        (nil)))
(insn 24 23 25 3 (set (reg:SI 90)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -36 [0xffffffffffffffdc])) [4 type+0 S4 A32])) "tester/explorer_tester.c":117:17 81 {*movsi_internal}
     (nil))
(insn 25 24 26 3 (set (reg:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -32 [0xffffffffffffffe0])) [1 name+0 S8 A64])) "tester/explorer_tester.c":117:17 80 {*movdi_internal}
     (nil))
(insn 26 25 27 3 (set (reg:SI 1 dx)
        (reg:SI 90)) "tester/explorer_tester.c":117:17 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 90)
        (nil)))
(insn 27 26 28 3 (set (reg:DI 4 si)
        (reg:DI 91)) "tester/explorer_tester.c":117:17 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 91)
        (nil)))
(insn 28 27 29 3 (set (reg:DI 5 di)
        (reg/f:DI 83 [ _2 ])) "tester/explorer_tester.c":117:17 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 83 [ _2 ])
        (nil)))
(call_insn 29 28 30 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("explorer_create") [flags 0x41]  <function_decl 0x7fb94936e200 explorer_create>) [0 explorer_create S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":117:17 909 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 30 29 31 3 (set (reg:SI 92)
        (reg:SI 0 ax)) "tester/explorer_tester.c":117:17 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 31 30 32 3 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [4 result+0 S4 A32])
        (reg:SI 92)) "tester/explorer_tester.c":117:17 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 92)
        (nil)))
(insn 32 31 33 3 (set (reg:SI 93)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [4 result+0 S4 A32])) "tester/explorer_tester.c":118:8 81 {*movsi_internal}
     (nil))
(insn 33 32 34 3 (set (reg:SI 94)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -40 [0xffffffffffffffd8])) [4 success+0 S4 A32])) "tester/explorer_tester.c":118:8 81 {*movsi_internal}
     (nil))
(insn 34 33 35 3 (set (reg:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [11 self+0 S8 A64])) "tester/explorer_tester.c":118:8 80 {*movdi_internal}
     (nil))
(insn 35 34 36 3 (set (reg:DI 36 r8)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7fb9490711b0 *.LC4>)) "tester/explorer_tester.c":118:8 80 {*movdi_internal}
     (nil))
(insn 36 35 37 3 (set (reg:DI 96)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7fb949071240 *.LC5>)) "tester/explorer_tester.c":118:8 80 {*movdi_internal}
     (nil))
(insn 37 36 38 3 (set (reg:DI 2 cx)
        (reg:DI 96)) "tester/explorer_tester.c":118:8 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 96)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7fb949071240 *.LC5>)
            (nil))))
(insn 38 37 39 3 (set (reg:SI 1 dx)
        (reg:SI 93)) "tester/explorer_tester.c":118:8 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 93)
        (nil)))
(insn 39 38 40 3 (set (reg:SI 4 si)
        (reg:SI 94)) "tester/explorer_tester.c":118:8 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 94)
        (nil)))
(insn 40 39 41 3 (set (reg:DI 5 di)
        (reg:DI 95)) "tester/explorer_tester.c":118:8 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 95)
        (nil)))
(call_insn 41 40 42 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("check_success") [flags 0x3]  <function_decl 0x7fb94901d900 check_success>) [0 check_success S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":118:8 909 {*call_value}
     (expr_list:REG_DEAD (reg:DI 36 r8)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:SI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:SI 1 dx)
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 36 r8))
                        (nil)))))))
(insn 42 41 43 3 (set (reg:SI 84 [ _3 ])
        (reg:SI 0 ax)) "tester/explorer_tester.c":118:8 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 43 42 44 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 84 [ _3 ])
            (const_int 0 [0]))) "tester/explorer_tester.c":118:6 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 84 [ _3 ])
        (nil)))
(jump_insn 44 43 49 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 86)
            (pc))) "tester/explorer_tester.c":118:6 891 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 86)
;;  succ:       9 tester/explorer_tester.c:119:5
;;              4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 85 86 97 98
(note 49 44 50 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 50 49 51 4 (set (reg/f:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [11 self+0 S8 A64])) "tester/explorer_tester.c":120:8 80 {*movdi_internal}
     (nil))
(insn 51 50 52 4 (set (reg/f:DI 85 [ _4 ])
        (mem/f:DI (plus:DI (reg/f:DI 97)
                (const_int 24 [0x18])) [2 self_8(D)->inner_explore+0 S8 A64])) "tester/explorer_tester.c":120:8 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 97)
        (nil)))
(insn 52 51 53 4 (set (reg:DI 98)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -32 [0xffffffffffffffe0])) [1 name+0 S8 A64])) "tester/explorer_tester.c":120:8 80 {*movdi_internal}
     (nil))
(insn 53 52 54 4 (set (reg:DI 4 si)
        (reg:DI 98)) "tester/explorer_tester.c":120:8 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 98)
        (nil)))
(insn 54 53 55 4 (set (reg:DI 5 di)
        (reg/f:DI 85 [ _4 ])) "tester/explorer_tester.c":120:8 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 85 [ _4 ])
        (nil)))
(call_insn 55 54 56 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("explorer_contain") [flags 0x41]  <function_decl 0x7fb94936e500 explorer_contain>) [0 explorer_contain S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":120:8 909 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 56 55 57 4 (set (reg:SI 86 [ _5 ])
        (reg:SI 0 ax)) "tester/explorer_tester.c":120:8 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 57 56 58 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 86 [ _5 ])
            (const_int 0 [0]))) "tester/explorer_tester.c":120:6 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 86 [ _5 ])
        (nil)))
(jump_insn 58 57 59 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 67)
            (pc))) "tester/explorer_tester.c":120:6 891 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 67)
;;  succ:       5 (FALLTHRU)
;;              6
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 99 100
(note 59 58 60 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 60 59 61 5 (set (reg/f:DI 99)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [11 self+0 S8 A64])) "tester/explorer_tester.c":121:17 80 {*movdi_internal}
     (nil))
(insn 61 60 62 5 (set (mem:SI (plus:DI (reg/f:DI 99)
                (const_int 32 [0x20])) [4 self_8(D)->error+0 S4 A64])
        (const_int 1 [0x1])) "tester/explorer_tester.c":121:17 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 99)
        (nil)))
(insn 62 61 63 5 (set (reg:DI 100)
        (symbol_ref/f:DI ("*.LC17") [flags 0x2]  <var_decl 0x7fb9490953f0 *.LC17>)) "tester/explorer_tester.c":122:5 80 {*movdi_internal}
     (nil))
(insn 63 62 64 5 (set (reg:DI 5 di)
        (reg:DI 100)) "tester/explorer_tester.c":122:5 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 100)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC17") [flags 0x2]  <var_decl 0x7fb9490953f0 *.LC17>)
            (nil))))
(call_insn 64 63 76 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fb9492c6700 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":122:5 909 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 76 64 77 5 (set (pc)
        (label_ref 74)) "tester/explorer_tester.c":123:5 892 {jump}
     (nil)
 -> 74)
;;  succ:       7 [always]  tester/explorer_tester.c:123:5
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 77 76 67)
;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 8, flags: (RTL)
;;  pred:       4
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 101
(code_label 67 77 68 6 51 (nil) [1 uses])
(note 68 67 69 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 69 68 70 6 (set (reg:DI 101)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7fb949071360 *.LC7>)) "tester/explorer_tester.c":125:3 80 {*movdi_internal}
     (nil))
(insn 70 69 71 6 (set (reg:DI 5 di)
        (reg:DI 101)) "tester/explorer_tester.c":125:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 101)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7fb949071360 *.LC7>)
            (nil))))
(call_insn 71 70 78 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fb9492c6700 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":125:3 909 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 78 71 79 6 (set (pc)
        (label_ref 74)) 892 {jump}
     (nil)
 -> 74)
;;  succ:       7
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 79 78 81)
;; basic block 8, loop depth 0, maybe hot
;;  prev block 6, next block 9, flags: (RTL)
;;  pred:       2 tester/explorer_tester.c:115:5
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(code_label 81 79 80 8 52 (nil) [1 uses])
(note 80 81 82 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 82 80 83 8 (const_int 0 [0]) "tester/explorer_tester.c":115:5 928 {nop}
     (nil))
(jump_insn 83 82 84 8 (set (pc)
        (label_ref 74)) 892 {jump}
     (nil)
 -> 74)
;;  succ:       7 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 84 83 86)
;; basic block 9, loop depth 0, maybe hot
;;  prev block 8, next block 7, flags: (RTL)
;;  pred:       3 tester/explorer_tester.c:119:5
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(code_label 86 84 85 9 53 (nil) [1 uses])
(note 85 86 87 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 87 85 74 9 (const_int 0 [0]) "tester/explorer_tester.c":119:5 928 {nop}
     (nil))
;;  succ:       7 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 7, loop depth 0, maybe hot
;;  prev block 9, next block 1, flags: (RTL)
;;  pred:       5 [always]  tester/explorer_tester.c:123:5
;;              6
;;              9 [always]  (FALLTHRU)
;;              8 [always] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(code_label 74 87 75 7 47 (nil) [3 uses])
(note 75 74 0 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]


;; Function explorer_tester_mkdir (explorer_tester_mkdir, funcdef_no=15, decl_uid=2139, cgraph_uid=16, symbol_order=15)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 10 n_edges 12 count 10 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 8 9 7
;; 2 succs { 8 3 }
;; 3 succs { 9 4 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 8 succs { 7 }
;; 9 succs { 7 }
;; 7 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 20.
verify found no changes in insn with uid = 26.
verify found no changes in insn with uid = 38.
verify found no changes in insn with uid = 52.
verify found no changes in insn with uid = 61.
verify found no changes in insn with uid = 68.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r100: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r100,l0) best DIREG, allocno GENERAL_REGS
    r99: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r99,l0) best DIREG, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r97,l0) best SIREG, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a11 (r95,l0) best CREG, allocno GENERAL_REGS
    r94: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a8 (r94,l0) best DIREG, allocno GENERAL_REGS
    r93: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a9 (r93,l0) best SIREG, allocno GENERAL_REGS
    r92: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a10 (r92,l0) best DREG, allocno GENERAL_REGS
    r91: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a12 (r91,l0) best AREG, allocno GENERAL_REGS
    r90: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a14 (r90,l0) best SIREG, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a16 (r88,l0) best DIREG, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r86,l0) best AREG, allocno GENERAL_REGS
    r85: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r85,l0) best DIREG, allocno GENERAL_REGS
    r84: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a7 (r84,l0) best AREG, allocno GENERAL_REGS
    r83: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a13 (r83,l0) best DIREG, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r100,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a1(r99,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a2(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a3(r86,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a4(r85,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a5(r97,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a6(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a7(r84,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a8(r94,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a9(r93,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a10(r92,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a11(r95,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a12(r91,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a13(r83,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a14(r90,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a15(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a16(r88,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a17(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a18(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000

   Insn 84(l0): point = 1
   Insn 80(l0): point = 4
   Insn 79(l0): point = 6
   Insn 75(l0): point = 9
   Insn 68(l0): point = 11
   Insn 67(l0): point = 13
   Insn 66(l0): point = 15
   Insn 73(l0): point = 18
   Insn 61(l0): point = 20
   Insn 60(l0): point = 22
   Insn 59(l0): point = 24
   Insn 58(l0): point = 26
   Insn 57(l0): point = 28
   Insn 55(l0): point = 31
   Insn 54(l0): point = 33
   Insn 53(l0): point = 35
   Insn 52(l0): point = 37
   Insn 51(l0): point = 39
   Insn 50(l0): point = 41
   Insn 49(l0): point = 43
   Insn 48(l0): point = 45
   Insn 47(l0): point = 47
   Insn 41(l0): point = 50
   Insn 40(l0): point = 52
   Insn 39(l0): point = 54
   Insn 38(l0): point = 56
   Insn 37(l0): point = 58
   Insn 36(l0): point = 60
   Insn 35(l0): point = 62
   Insn 34(l0): point = 64
   Insn 33(l0): point = 66
   Insn 32(l0): point = 68
   Insn 31(l0): point = 70
   Insn 30(l0): point = 72
   Insn 29(l0): point = 74
   Insn 28(l0): point = 76
   Insn 27(l0): point = 78
   Insn 26(l0): point = 80
   Insn 25(l0): point = 82
   Insn 24(l0): point = 84
   Insn 23(l0): point = 86
   Insn 22(l0): point = 88
   Insn 21(l0): point = 90
   Insn 20(l0): point = 92
   Insn 19(l0): point = 94
   Insn 18(l0): point = 96
   Insn 17(l0): point = 98
   Insn 11(l0): point = 101
   Insn 10(l0): point = 103
   Insn 9(l0): point = 105
   Insn 8(l0): point = 107
   Insn 4(l0): point = 109
   Insn 3(l0): point = 111
   Insn 2(l0): point = 113
 a0(r100): [14..15]
 a1(r99): [23..24]
 a2(r98): [27..28]
 a3(r86): [34..35]
 a4(r85): [40..45]
 a5(r97): [42..43]
 a6(r96): [46..47]
 a7(r84): [53..54]
 a8(r94): [59..70]
 a9(r93): [61..72]
 a10(r92): [63..74]
 a11(r95): [65..66]
 a12(r91): [77..78]
 a13(r83): [83..88]
 a14(r90): [85..86]
 a15(r89): [89..90]
 a16(r88): [97..98]
 a17(r82): [104..105]
 a18(r87): [106..107]
Compressing live ranges: from 116 to 28 - 24%
Ranges after the compression:
 a0(r100): [0..1]
 a1(r99): [2..3]
 a2(r98): [4..5]
 a3(r86): [6..7]
 a4(r85): [8..9]
 a5(r97): [8..9]
 a6(r96): [10..11]
 a7(r84): [12..13]
 a8(r94): [14..15]
 a9(r93): [14..15]
 a10(r92): [14..15]
 a11(r95): [14..15]
 a12(r91): [16..17]
 a13(r83): [18..19]
 a14(r90): [18..19]
 a15(r89): [20..21]
 a16(r88): [22..23]
 a17(r82): [24..25]
 a18(r87): [26..27]
  pref0:a0(r100)<-hr5@1500
  pref1:a1(r99)<-hr5@1500
  pref2:a5(r97)<-hr4@1500
  pref3:a11(r95)<-hr2@1500
  pref4:a8(r94)<-hr5@1500
  pref5:a9(r93)<-hr4@1500
  pref6:a10(r92)<-hr1@1500
  pref7:a12(r91)<-hr0@1500
  pref8:a14(r90)<-hr4@1500
  pref9:a16(r88)<-hr5@1500
  pref10:a3(r86)<-hr0@1500
  pref11:a4(r85)<-hr5@1500
  pref12:a7(r84)<-hr0@1500
  pref13:a13(r83)<-hr5@1500
  regions=1, blocks=10, points=28
    allocnos=19 (big 0), copies=0, conflicts=0, ranges=19
Disposition:
   17:r82  l0     0   13:r83  l0     0    7:r84  l0     0    4:r85  l0     0
    3:r86  l0     0   18:r87  l0     0   16:r88  l0     0   15:r89  l0     0
   14:r90  l0     1   12:r91  l0     0   10:r92  l0     1    9:r93  l0     4
    8:r94  l0     0   11:r95  l0     2    6:r96  l0     0    5:r97  l0     1
    2:r98  l0     0    1:r99  l0     0    0:r100 l0     0
+++Costs: overall -14000, reg -14000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


explorer_tester_mkdir

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 36 [r8]
;;  ref usage 	r0={8d,4u} r1={8d,2u} r2={8d,1u} r4={10d,4u} r5={13d,7u} r6={1d,9u} r7={1d,15u} r8={6d} r9={6d} r10={6d} r11={6d} r12={6d} r13={6d} r14={6d} r15={6d} r16={1d,8u} r17={9d,3u} r18={6d} r19={1d,22u} r20={7d} r21={7d} r22={7d} r23={7d} r24={7d} r25={7d} r26={7d} r27={7d} r28={6d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={8d,1u} r37={7d} r38={6d} r39={6d} r44={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r82={1d,1u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} 
;;    total ref usage 551{456d,95u,0e} in 54{48 regular + 6 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags] 82 87
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [11 self+0 S8 A64])
        (reg:DI 5 di [ self ])) "tester/explorer_tester.c":128:42 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ self ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -32 [0xffffffffffffffe0])) [1 name+0 S8 A64])
        (reg:DI 4 si [ name ])) "tester/explorer_tester.c":128:42 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ name ])
        (nil)))
(insn 4 3 5 2 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -36 [0xffffffffffffffdc])) [4 success+0 S4 A32])
        (reg:SI 1 dx [ success ])) "tester/explorer_tester.c":128:42 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [ success ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg/f:DI 87)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [11 self+0 S8 A64])) "tester/explorer_tester.c":129:11 80 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:SI 82 [ _1 ])
        (mem:SI (plus:DI (reg/f:DI 87)
                (const_int 32 [0x20])) [4 self_8(D)->error+0 S4 A64])) "tester/explorer_tester.c":129:11 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87)
        (nil)))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 82 [ _1 ])
            (const_int 0 [0]))) "tester/explorer_tester.c":129:6 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 82 [ _1 ])
        (nil)))
(jump_insn 11 10 16 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 78)
            (pc))) "tester/explorer_tester.c":129:6 891 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 78)
;;  succ:       8 tester/explorer_tester.c:130:5
;;              3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 83 84 88 89 90 91 92 93 94 95
(note 16 11 17 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 3 (set (reg:DI 88)
        (symbol_ref/f:DI ("*.LC18") [flags 0x2]  <var_decl 0x7fb949095c60 *.LC18>)) "tester/explorer_tester.c":131:3 80 {*movdi_internal}
     (nil))
(insn 18 17 19 3 (set (reg:DI 5 di)
        (reg:DI 88)) "tester/explorer_tester.c":131:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC18") [flags 0x2]  <var_decl 0x7fb949095c60 *.LC18>)
            (nil))))
(insn 19 18 20 3 (set (reg:QI 0 ax)
        (const_int 0 [0])) "tester/explorer_tester.c":131:3 83 {*movqi_internal}
     (nil))
(call_insn 20 19 21 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fb9492c6000 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":131:3 909 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 21 20 22 3 (set (reg/f:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [11 self+0 S8 A64])) "tester/explorer_tester.c":132:17 80 {*movdi_internal}
     (nil))
(insn 22 21 23 3 (set (reg/f:DI 83 [ _2 ])
        (mem/f:DI (plus:DI (reg/f:DI 89)
                (const_int 24 [0x18])) [2 self_8(D)->inner_explore+0 S8 A64])) "tester/explorer_tester.c":132:17 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 89)
        (nil)))
(insn 23 22 24 3 (set (reg:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -32 [0xffffffffffffffe0])) [1 name+0 S8 A64])) "tester/explorer_tester.c":132:17 80 {*movdi_internal}
     (nil))
(insn 24 23 25 3 (set (reg:DI 4 si)
        (reg:DI 90)) "tester/explorer_tester.c":132:17 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 90)
        (nil)))
(insn 25 24 26 3 (set (reg:DI 5 di)
        (reg/f:DI 83 [ _2 ])) "tester/explorer_tester.c":132:17 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 83 [ _2 ])
        (nil)))
(call_insn 26 25 27 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("explorer_mkdir") [flags 0x41]  <function_decl 0x7fb94936e300 explorer_mkdir>) [0 explorer_mkdir S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":132:17 909 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 27 26 28 3 (set (reg:SI 91)
        (reg:SI 0 ax)) "tester/explorer_tester.c":132:17 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 28 27 29 3 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [4 result+0 S4 A32])
        (reg:SI 91)) "tester/explorer_tester.c":132:17 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 91)
        (nil)))
(insn 29 28 30 3 (set (reg:SI 92)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [4 result+0 S4 A32])) "tester/explorer_tester.c":133:8 81 {*movsi_internal}
     (nil))
(insn 30 29 31 3 (set (reg:SI 93)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -36 [0xffffffffffffffdc])) [4 success+0 S4 A32])) "tester/explorer_tester.c":133:8 81 {*movsi_internal}
     (nil))
(insn 31 30 32 3 (set (reg:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [11 self+0 S8 A64])) "tester/explorer_tester.c":133:8 80 {*movdi_internal}
     (nil))
(insn 32 31 33 3 (set (reg:DI 36 r8)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7fb9490711b0 *.LC4>)) "tester/explorer_tester.c":133:8 80 {*movdi_internal}
     (nil))
(insn 33 32 34 3 (set (reg:DI 95)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7fb949071240 *.LC5>)) "tester/explorer_tester.c":133:8 80 {*movdi_internal}
     (nil))
(insn 34 33 35 3 (set (reg:DI 2 cx)
        (reg:DI 95)) "tester/explorer_tester.c":133:8 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 95)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7fb949071240 *.LC5>)
            (nil))))
(insn 35 34 36 3 (set (reg:SI 1 dx)
        (reg:SI 92)) "tester/explorer_tester.c":133:8 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 92)
        (nil)))
(insn 36 35 37 3 (set (reg:SI 4 si)
        (reg:SI 93)) "tester/explorer_tester.c":133:8 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 93)
        (nil)))
(insn 37 36 38 3 (set (reg:DI 5 di)
        (reg:DI 94)) "tester/explorer_tester.c":133:8 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 94)
        (nil)))
(call_insn 38 37 39 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("check_success") [flags 0x3]  <function_decl 0x7fb94901d900 check_success>) [0 check_success S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":133:8 909 {*call_value}
     (expr_list:REG_DEAD (reg:DI 36 r8)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:SI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:SI 1 dx)
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 36 r8))
                        (nil)))))))
(insn 39 38 40 3 (set (reg:SI 84 [ _3 ])
        (reg:SI 0 ax)) "tester/explorer_tester.c":133:8 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 40 39 41 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 84 [ _3 ])
            (const_int 0 [0]))) "tester/explorer_tester.c":133:6 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 84 [ _3 ])
        (nil)))
(jump_insn 41 40 46 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 83)
            (pc))) "tester/explorer_tester.c":133:6 891 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 83)
;;  succ:       9 tester/explorer_tester.c:134:5
;;              4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 85 86 96 97
(note 46 41 47 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 47 46 48 4 (set (reg/f:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [11 self+0 S8 A64])) "tester/explorer_tester.c":135:8 80 {*movdi_internal}
     (nil))
(insn 48 47 49 4 (set (reg/f:DI 85 [ _4 ])
        (mem/f:DI (plus:DI (reg/f:DI 96)
                (const_int 24 [0x18])) [2 self_8(D)->inner_explore+0 S8 A64])) "tester/explorer_tester.c":135:8 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 96)
        (nil)))
(insn 49 48 50 4 (set (reg:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -32 [0xffffffffffffffe0])) [1 name+0 S8 A64])) "tester/explorer_tester.c":135:8 80 {*movdi_internal}
     (nil))
(insn 50 49 51 4 (set (reg:DI 4 si)
        (reg:DI 97)) "tester/explorer_tester.c":135:8 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 97)
        (nil)))
(insn 51 50 52 4 (set (reg:DI 5 di)
        (reg/f:DI 85 [ _4 ])) "tester/explorer_tester.c":135:8 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 85 [ _4 ])
        (nil)))
(call_insn 52 51 53 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("explorer_contain") [flags 0x41]  <function_decl 0x7fb94936e500 explorer_contain>) [0 explorer_contain S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":135:8 909 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 53 52 54 4 (set (reg:SI 86 [ _5 ])
        (reg:SI 0 ax)) "tester/explorer_tester.c":135:8 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 54 53 55 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 86 [ _5 ])
            (const_int 0 [0]))) "tester/explorer_tester.c":135:6 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 86 [ _5 ])
        (nil)))
(jump_insn 55 54 56 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 64)
            (pc))) "tester/explorer_tester.c":135:6 891 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 64)
;;  succ:       5 (FALLTHRU)
;;              6
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 98 99
(note 56 55 57 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 57 56 58 5 (set (reg/f:DI 98)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [11 self+0 S8 A64])) "tester/explorer_tester.c":136:17 80 {*movdi_internal}
     (nil))
(insn 58 57 59 5 (set (mem:SI (plus:DI (reg/f:DI 98)
                (const_int 32 [0x20])) [4 self_8(D)->error+0 S4 A64])
        (const_int 1 [0x1])) "tester/explorer_tester.c":136:17 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 98)
        (nil)))
(insn 59 58 60 5 (set (reg:DI 99)
        (symbol_ref/f:DI ("*.LC17") [flags 0x2]  <var_decl 0x7fb9490953f0 *.LC17>)) "tester/explorer_tester.c":137:5 80 {*movdi_internal}
     (nil))
(insn 60 59 61 5 (set (reg:DI 5 di)
        (reg:DI 99)) "tester/explorer_tester.c":137:5 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 99)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC17") [flags 0x2]  <var_decl 0x7fb9490953f0 *.LC17>)
            (nil))))
(call_insn 61 60 73 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fb9492c6700 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":137:5 909 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 73 61 74 5 (set (pc)
        (label_ref 71)) "tester/explorer_tester.c":138:5 892 {jump}
     (nil)
 -> 71)
;;  succ:       7 [always]  tester/explorer_tester.c:138:5
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 74 73 64)
;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 8, flags: (RTL)
;;  pred:       4
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 100
(code_label 64 74 65 6 58 (nil) [1 uses])
(note 65 64 66 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 66 65 67 6 (set (reg:DI 100)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7fb949071360 *.LC7>)) "tester/explorer_tester.c":140:3 80 {*movdi_internal}
     (nil))
(insn 67 66 68 6 (set (reg:DI 5 di)
        (reg:DI 100)) "tester/explorer_tester.c":140:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 100)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7fb949071360 *.LC7>)
            (nil))))
(call_insn 68 67 75 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fb9492c6700 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":140:3 909 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 75 68 76 6 (set (pc)
        (label_ref 71)) 892 {jump}
     (nil)
 -> 71)
;;  succ:       7
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 76 75 78)
;; basic block 8, loop depth 0, maybe hot
;;  prev block 6, next block 9, flags: (RTL)
;;  pred:       2 tester/explorer_tester.c:130:5
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(code_label 78 76 77 8 59 (nil) [1 uses])
(note 77 78 79 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 79 77 80 8 (const_int 0 [0]) "tester/explorer_tester.c":130:5 928 {nop}
     (nil))
(jump_insn 80 79 81 8 (set (pc)
        (label_ref 71)) 892 {jump}
     (nil)
 -> 71)
;;  succ:       7 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 81 80 83)
;; basic block 9, loop depth 0, maybe hot
;;  prev block 8, next block 7, flags: (RTL)
;;  pred:       3 tester/explorer_tester.c:134:5
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(code_label 83 81 82 9 60 (nil) [1 uses])
(note 82 83 84 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 84 82 71 9 (const_int 0 [0]) "tester/explorer_tester.c":134:5 928 {nop}
     (nil))
;;  succ:       7 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 7, loop depth 0, maybe hot
;;  prev block 9, next block 1, flags: (RTL)
;;  pred:       5 [always]  tester/explorer_tester.c:138:5
;;              6
;;              9 [always]  (FALLTHRU)
;;              8 [always] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(code_label 71 84 72 7 54 (nil) [3 uses])
(note 72 71 0 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]


;; Function explorer_tester_delete (explorer_tester_delete, funcdef_no=16, decl_uid=2143, cgraph_uid=17, symbol_order=16)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 10 n_edges 12 count 10 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 8 9 7
;; 2 succs { 8 3 }
;; 3 succs { 9 4 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 8 succs { 7 }
;; 9 succs { 7 }
;; 7 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 20.
verify found no changes in insn with uid = 26.
verify found no changes in insn with uid = 38.
verify found no changes in insn with uid = 52.
verify found no changes in insn with uid = 61.
verify found no changes in insn with uid = 68.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r100: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r100,l0) best DIREG, allocno GENERAL_REGS
    r99: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r99,l0) best DIREG, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r97,l0) best SIREG, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a11 (r95,l0) best CREG, allocno GENERAL_REGS
    r94: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a8 (r94,l0) best DIREG, allocno GENERAL_REGS
    r93: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a9 (r93,l0) best SIREG, allocno GENERAL_REGS
    r92: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a10 (r92,l0) best DREG, allocno GENERAL_REGS
    r91: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a12 (r91,l0) best AREG, allocno GENERAL_REGS
    r90: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a14 (r90,l0) best SIREG, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a16 (r88,l0) best DIREG, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r86,l0) best AREG, allocno GENERAL_REGS
    r85: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r85,l0) best DIREG, allocno GENERAL_REGS
    r84: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a7 (r84,l0) best AREG, allocno GENERAL_REGS
    r83: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a13 (r83,l0) best DIREG, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r100,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a1(r99,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a2(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a3(r86,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a4(r85,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a5(r97,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a6(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a7(r84,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a8(r94,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a9(r93,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a10(r92,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a11(r95,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a12(r91,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a13(r83,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a14(r90,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a15(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a16(r88,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a17(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a18(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000

   Insn 84(l0): point = 1
   Insn 80(l0): point = 4
   Insn 79(l0): point = 6
   Insn 75(l0): point = 9
   Insn 68(l0): point = 11
   Insn 67(l0): point = 13
   Insn 66(l0): point = 15
   Insn 73(l0): point = 18
   Insn 61(l0): point = 20
   Insn 60(l0): point = 22
   Insn 59(l0): point = 24
   Insn 58(l0): point = 26
   Insn 57(l0): point = 28
   Insn 55(l0): point = 31
   Insn 54(l0): point = 33
   Insn 53(l0): point = 35
   Insn 52(l0): point = 37
   Insn 51(l0): point = 39
   Insn 50(l0): point = 41
   Insn 49(l0): point = 43
   Insn 48(l0): point = 45
   Insn 47(l0): point = 47
   Insn 41(l0): point = 50
   Insn 40(l0): point = 52
   Insn 39(l0): point = 54
   Insn 38(l0): point = 56
   Insn 37(l0): point = 58
   Insn 36(l0): point = 60
   Insn 35(l0): point = 62
   Insn 34(l0): point = 64
   Insn 33(l0): point = 66
   Insn 32(l0): point = 68
   Insn 31(l0): point = 70
   Insn 30(l0): point = 72
   Insn 29(l0): point = 74
   Insn 28(l0): point = 76
   Insn 27(l0): point = 78
   Insn 26(l0): point = 80
   Insn 25(l0): point = 82
   Insn 24(l0): point = 84
   Insn 23(l0): point = 86
   Insn 22(l0): point = 88
   Insn 21(l0): point = 90
   Insn 20(l0): point = 92
   Insn 19(l0): point = 94
   Insn 18(l0): point = 96
   Insn 17(l0): point = 98
   Insn 11(l0): point = 101
   Insn 10(l0): point = 103
   Insn 9(l0): point = 105
   Insn 8(l0): point = 107
   Insn 4(l0): point = 109
   Insn 3(l0): point = 111
   Insn 2(l0): point = 113
 a0(r100): [14..15]
 a1(r99): [23..24]
 a2(r98): [27..28]
 a3(r86): [34..35]
 a4(r85): [40..45]
 a5(r97): [42..43]
 a6(r96): [46..47]
 a7(r84): [53..54]
 a8(r94): [59..70]
 a9(r93): [61..72]
 a10(r92): [63..74]
 a11(r95): [65..66]
 a12(r91): [77..78]
 a13(r83): [83..88]
 a14(r90): [85..86]
 a15(r89): [89..90]
 a16(r88): [97..98]
 a17(r82): [104..105]
 a18(r87): [106..107]
Compressing live ranges: from 116 to 28 - 24%
Ranges after the compression:
 a0(r100): [0..1]
 a1(r99): [2..3]
 a2(r98): [4..5]
 a3(r86): [6..7]
 a4(r85): [8..9]
 a5(r97): [8..9]
 a6(r96): [10..11]
 a7(r84): [12..13]
 a8(r94): [14..15]
 a9(r93): [14..15]
 a10(r92): [14..15]
 a11(r95): [14..15]
 a12(r91): [16..17]
 a13(r83): [18..19]
 a14(r90): [18..19]
 a15(r89): [20..21]
 a16(r88): [22..23]
 a17(r82): [24..25]
 a18(r87): [26..27]
  pref0:a0(r100)<-hr5@1500
  pref1:a1(r99)<-hr5@1500
  pref2:a5(r97)<-hr4@1500
  pref3:a11(r95)<-hr2@1500
  pref4:a8(r94)<-hr5@1500
  pref5:a9(r93)<-hr4@1500
  pref6:a10(r92)<-hr1@1500
  pref7:a12(r91)<-hr0@1500
  pref8:a14(r90)<-hr4@1500
  pref9:a16(r88)<-hr5@1500
  pref10:a3(r86)<-hr0@1500
  pref11:a4(r85)<-hr5@1500
  pref12:a7(r84)<-hr0@1500
  pref13:a13(r83)<-hr5@1500
  regions=1, blocks=10, points=28
    allocnos=19 (big 0), copies=0, conflicts=0, ranges=19
Disposition:
   17:r82  l0     0   13:r83  l0     0    7:r84  l0     0    4:r85  l0     0
    3:r86  l0     0   18:r87  l0     0   16:r88  l0     0   15:r89  l0     0
   14:r90  l0     1   12:r91  l0     0   10:r92  l0     1    9:r93  l0     4
    8:r94  l0     0   11:r95  l0     2    6:r96  l0     0    5:r97  l0     1
    2:r98  l0     0    1:r99  l0     0    0:r100 l0     0
+++Costs: overall -14000, reg -14000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


explorer_tester_delete

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 36 [r8]
;;  ref usage 	r0={8d,4u} r1={8d,2u} r2={8d,1u} r4={10d,4u} r5={13d,7u} r6={1d,9u} r7={1d,15u} r8={6d} r9={6d} r10={6d} r11={6d} r12={6d} r13={6d} r14={6d} r15={6d} r16={1d,8u} r17={9d,3u} r18={6d} r19={1d,22u} r20={7d} r21={7d} r22={7d} r23={7d} r24={7d} r25={7d} r26={7d} r27={7d} r28={6d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={8d,1u} r37={7d} r38={6d} r39={6d} r44={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r82={1d,1u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} 
;;    total ref usage 551{456d,95u,0e} in 54{48 regular + 6 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags] 82 87
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [11 self+0 S8 A64])
        (reg:DI 5 di [ self ])) "tester/explorer_tester.c":143:43 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ self ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -32 [0xffffffffffffffe0])) [1 name+0 S8 A64])
        (reg:DI 4 si [ name ])) "tester/explorer_tester.c":143:43 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ name ])
        (nil)))
(insn 4 3 5 2 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -36 [0xffffffffffffffdc])) [4 success+0 S4 A32])
        (reg:SI 1 dx [ success ])) "tester/explorer_tester.c":143:43 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [ success ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg/f:DI 87)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [11 self+0 S8 A64])) "tester/explorer_tester.c":145:13 80 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:SI 82 [ _1 ])
        (mem:SI (plus:DI (reg/f:DI 87)
                (const_int 32 [0x20])) [4 self_8(D)->error+0 S4 A64])) "tester/explorer_tester.c":145:13 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87)
        (nil)))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 82 [ _1 ])
            (const_int 0 [0]))) "tester/explorer_tester.c":145:8 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 82 [ _1 ])
        (nil)))
(jump_insn 11 10 16 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 78)
            (pc))) "tester/explorer_tester.c":145:8 891 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 78)
;;  succ:       8 tester/explorer_tester.c:146:7
;;              3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 83 84 88 89 90 91 92 93 94 95
(note 16 11 17 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 3 (set (reg:DI 88)
        (symbol_ref/f:DI ("*.LC19") [flags 0x2]  <var_decl 0x7fb9490a2480 *.LC19>)) "tester/explorer_tester.c":147:5 80 {*movdi_internal}
     (nil))
(insn 18 17 19 3 (set (reg:DI 5 di)
        (reg:DI 88)) "tester/explorer_tester.c":147:5 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC19") [flags 0x2]  <var_decl 0x7fb9490a2480 *.LC19>)
            (nil))))
(insn 19 18 20 3 (set (reg:QI 0 ax)
        (const_int 0 [0])) "tester/explorer_tester.c":147:5 83 {*movqi_internal}
     (nil))
(call_insn 20 19 21 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fb9492c6000 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":147:5 909 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 21 20 22 3 (set (reg/f:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [11 self+0 S8 A64])) "tester/explorer_tester.c":148:19 80 {*movdi_internal}
     (nil))
(insn 22 21 23 3 (set (reg/f:DI 83 [ _2 ])
        (mem/f:DI (plus:DI (reg/f:DI 89)
                (const_int 24 [0x18])) [2 self_8(D)->inner_explore+0 S8 A64])) "tester/explorer_tester.c":148:19 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 89)
        (nil)))
(insn 23 22 24 3 (set (reg:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -32 [0xffffffffffffffe0])) [1 name+0 S8 A64])) "tester/explorer_tester.c":148:19 80 {*movdi_internal}
     (nil))
(insn 24 23 25 3 (set (reg:DI 4 si)
        (reg:DI 90)) "tester/explorer_tester.c":148:19 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 90)
        (nil)))
(insn 25 24 26 3 (set (reg:DI 5 di)
        (reg/f:DI 83 [ _2 ])) "tester/explorer_tester.c":148:19 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 83 [ _2 ])
        (nil)))
(call_insn 26 25 27 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("explorer_delete") [flags 0x41]  <function_decl 0x7fb94936e400 explorer_delete>) [0 explorer_delete S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":148:19 909 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 27 26 28 3 (set (reg:SI 91)
        (reg:SI 0 ax)) "tester/explorer_tester.c":148:19 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 28 27 29 3 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [4 result+0 S4 A32])
        (reg:SI 91)) "tester/explorer_tester.c":148:19 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 91)
        (nil)))
(insn 29 28 30 3 (set (reg:SI 92)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [4 result+0 S4 A32])) "tester/explorer_tester.c":149:10 81 {*movsi_internal}
     (nil))
(insn 30 29 31 3 (set (reg:SI 93)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -36 [0xffffffffffffffdc])) [4 success+0 S4 A32])) "tester/explorer_tester.c":149:10 81 {*movsi_internal}
     (nil))
(insn 31 30 32 3 (set (reg:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [11 self+0 S8 A64])) "tester/explorer_tester.c":149:10 80 {*movdi_internal}
     (nil))
(insn 32 31 33 3 (set (reg:DI 36 r8)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7fb9490711b0 *.LC4>)) "tester/explorer_tester.c":149:10 80 {*movdi_internal}
     (nil))
(insn 33 32 34 3 (set (reg:DI 95)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7fb949071240 *.LC5>)) "tester/explorer_tester.c":149:10 80 {*movdi_internal}
     (nil))
(insn 34 33 35 3 (set (reg:DI 2 cx)
        (reg:DI 95)) "tester/explorer_tester.c":149:10 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 95)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7fb949071240 *.LC5>)
            (nil))))
(insn 35 34 36 3 (set (reg:SI 1 dx)
        (reg:SI 92)) "tester/explorer_tester.c":149:10 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 92)
        (nil)))
(insn 36 35 37 3 (set (reg:SI 4 si)
        (reg:SI 93)) "tester/explorer_tester.c":149:10 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 93)
        (nil)))
(insn 37 36 38 3 (set (reg:DI 5 di)
        (reg:DI 94)) "tester/explorer_tester.c":149:10 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 94)
        (nil)))
(call_insn 38 37 39 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("check_success") [flags 0x3]  <function_decl 0x7fb94901d900 check_success>) [0 check_success S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":149:10 909 {*call_value}
     (expr_list:REG_DEAD (reg:DI 36 r8)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:SI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:SI 1 dx)
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 36 r8))
                        (nil)))))))
(insn 39 38 40 3 (set (reg:SI 84 [ _3 ])
        (reg:SI 0 ax)) "tester/explorer_tester.c":149:10 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 40 39 41 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 84 [ _3 ])
            (const_int 0 [0]))) "tester/explorer_tester.c":149:8 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 84 [ _3 ])
        (nil)))
(jump_insn 41 40 46 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 83)
            (pc))) "tester/explorer_tester.c":149:8 891 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 83)
;;  succ:       9 tester/explorer_tester.c:150:7
;;              4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 85 86 96 97
(note 46 41 47 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 47 46 48 4 (set (reg/f:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [11 self+0 S8 A64])) "tester/explorer_tester.c":151:9 80 {*movdi_internal}
     (nil))
(insn 48 47 49 4 (set (reg/f:DI 85 [ _4 ])
        (mem/f:DI (plus:DI (reg/f:DI 96)
                (const_int 24 [0x18])) [2 self_8(D)->inner_explore+0 S8 A64])) "tester/explorer_tester.c":151:9 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 96)
        (nil)))
(insn 49 48 50 4 (set (reg:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -32 [0xffffffffffffffe0])) [1 name+0 S8 A64])) "tester/explorer_tester.c":151:9 80 {*movdi_internal}
     (nil))
(insn 50 49 51 4 (set (reg:DI 4 si)
        (reg:DI 97)) "tester/explorer_tester.c":151:9 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 97)
        (nil)))
(insn 51 50 52 4 (set (reg:DI 5 di)
        (reg/f:DI 85 [ _4 ])) "tester/explorer_tester.c":151:9 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 85 [ _4 ])
        (nil)))
(call_insn 52 51 53 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("explorer_contain") [flags 0x41]  <function_decl 0x7fb94936e500 explorer_contain>) [0 explorer_contain S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":151:9 909 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 53 52 54 4 (set (reg:SI 86 [ _5 ])
        (reg:SI 0 ax)) "tester/explorer_tester.c":151:9 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 54 53 55 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 86 [ _5 ])
            (const_int 0 [0]))) "tester/explorer_tester.c":151:8 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 86 [ _5 ])
        (nil)))
(jump_insn 55 54 56 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 64)
            (pc))) "tester/explorer_tester.c":151:8 891 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 64)
;;  succ:       5 (FALLTHRU)
;;              6
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 98 99
(note 56 55 57 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 57 56 58 5 (set (reg/f:DI 98)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [11 self+0 S8 A64])) "tester/explorer_tester.c":152:19 80 {*movdi_internal}
     (nil))
(insn 58 57 59 5 (set (mem:SI (plus:DI (reg/f:DI 98)
                (const_int 32 [0x20])) [4 self_8(D)->error+0 S4 A64])
        (const_int 1 [0x1])) "tester/explorer_tester.c":152:19 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 98)
        (nil)))
(insn 59 58 60 5 (set (reg:DI 99)
        (symbol_ref/f:DI ("*.LC20") [flags 0x2]  <var_decl 0x7fb9490a2510 *.LC20>)) "tester/explorer_tester.c":153:7 80 {*movdi_internal}
     (nil))
(insn 60 59 61 5 (set (reg:DI 5 di)
        (reg:DI 99)) "tester/explorer_tester.c":153:7 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 99)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC20") [flags 0x2]  <var_decl 0x7fb9490a2510 *.LC20>)
            (nil))))
(call_insn 61 60 73 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fb9492c6700 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":153:7 909 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 73 61 74 5 (set (pc)
        (label_ref 71)) "tester/explorer_tester.c":154:7 892 {jump}
     (nil)
 -> 71)
;;  succ:       7 [always]  tester/explorer_tester.c:154:7
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 74 73 64)
;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 8, flags: (RTL)
;;  pred:       4
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 100
(code_label 64 74 65 6 65 (nil) [1 uses])
(note 65 64 66 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 66 65 67 6 (set (reg:DI 100)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7fb949071360 *.LC7>)) "tester/explorer_tester.c":156:5 80 {*movdi_internal}
     (nil))
(insn 67 66 68 6 (set (reg:DI 5 di)
        (reg:DI 100)) "tester/explorer_tester.c":156:5 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 100)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7fb949071360 *.LC7>)
            (nil))))
(call_insn 68 67 75 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fb9492c6700 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":156:5 909 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 75 68 76 6 (set (pc)
        (label_ref 71)) 892 {jump}
     (nil)
 -> 71)
;;  succ:       7
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 76 75 78)
;; basic block 8, loop depth 0, maybe hot
;;  prev block 6, next block 9, flags: (RTL)
;;  pred:       2 tester/explorer_tester.c:146:7
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(code_label 78 76 77 8 66 (nil) [1 uses])
(note 77 78 79 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 79 77 80 8 (const_int 0 [0]) "tester/explorer_tester.c":146:7 928 {nop}
     (nil))
(jump_insn 80 79 81 8 (set (pc)
        (label_ref 71)) 892 {jump}
     (nil)
 -> 71)
;;  succ:       7 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 81 80 83)
;; basic block 9, loop depth 0, maybe hot
;;  prev block 8, next block 7, flags: (RTL)
;;  pred:       3 tester/explorer_tester.c:150:7
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(code_label 83 81 82 9 67 (nil) [1 uses])
(note 82 83 84 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 84 82 71 9 (const_int 0 [0]) "tester/explorer_tester.c":150:7 928 {nop}
     (nil))
;;  succ:       7 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 7, loop depth 0, maybe hot
;;  prev block 9, next block 1, flags: (RTL)
;;  pred:       5 [always]  tester/explorer_tester.c:154:7
;;              6
;;              9 [always]  (FALLTHRU)
;;              8 [always] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(code_label 71 84 72 7 61 (nil) [3 uses])
(note 72 71 0 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]


;; Function explorer_tester_search_recursive (explorer_tester_search_recursive, funcdef_no=17, decl_uid=3335, cgraph_uid=18, symbol_order=17)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 6 n_edges 6 count 6 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 5 4
;; 2 succs { 5 3 }
;; 3 succs { 4 }
;; 5 succs { 4 }
;; 4 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 18.
verify found no changes in insn with uid = 24.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r87: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best SIREG, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r85,l0) best DIREG, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r83,l0) best DIREG, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r83,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a1(r87,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a2(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a3(r85,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a4(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a5(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000

   Insn 33(l0): point = 1
   Insn 29(l0): point = 4
   Insn 24(l0): point = 6
   Insn 23(l0): point = 8
   Insn 22(l0): point = 10
   Insn 21(l0): point = 12
   Insn 20(l0): point = 14
   Insn 19(l0): point = 16
   Insn 18(l0): point = 18
   Insn 17(l0): point = 20
   Insn 16(l0): point = 22
   Insn 10(l0): point = 25
   Insn 9(l0): point = 27
   Insn 8(l0): point = 29
   Insn 7(l0): point = 31
   Insn 3(l0): point = 33
   Insn 2(l0): point = 35
 a0(r83): [9..14]
 a1(r87): [11..12]
 a2(r86): [15..16]
 a3(r85): [21..22]
 a4(r82): [28..29]
 a5(r84): [30..31]
Compressing live ranges: from 38 to 10 - 26%
Ranges after the compression:
 a0(r83): [0..1]
 a1(r87): [0..1]
 a2(r86): [2..3]
 a3(r85): [4..5]
 a4(r82): [6..7]
 a5(r84): [8..9]
  pref0:a1(r87)<-hr4@1500
  pref1:a3(r85)<-hr5@1500
  pref2:a0(r83)<-hr5@1500
  regions=1, blocks=6, points=10
    allocnos=6 (big 0), copies=0, conflicts=0, ranges=6
Disposition:
    4:r82  l0     0    0:r83  l0     0    5:r84  l0     0    3:r85  l0     0
    2:r86  l0     0    1:r87  l0     1
+++Costs: overall -3000, reg -3000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


explorer_tester_search_recursive

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;;  ref usage 	r0={3d} r1={3d} r2={3d} r4={4d,2u} r5={5d,3u} r6={1d,5u} r7={1d,7u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,4u} r17={3d,1u} r18={2d} r19={1d,10u} r20={3d} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={3d} r37={3d} r38={2d} r39={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r82={1d,1u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} 
;;    total ref usage 201{163d,38u,0e} in 17{15 regular + 2 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags] 82 84
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [11 self+0 S8 A64])
        (reg:DI 5 di [ self ])) "tester/explorer_tester.c":160:57 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ self ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [1 name+0 S8 A64])
        (reg:DI 4 si [ name ])) "tester/explorer_tester.c":160:57 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ name ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg/f:DI 84)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [11 self+0 S8 A64])) "tester/explorer_tester.c":161:11 80 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:SI 82 [ _1 ])
        (mem:SI (plus:DI (reg/f:DI 84)
                (const_int 32 [0x20])) [4 self_5(D)->error+0 S4 A64])) "tester/explorer_tester.c":161:11 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 84)
        (nil)))
(insn 9 8 10 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 82 [ _1 ])
            (const_int 0 [0]))) "tester/explorer_tester.c":161:6 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 82 [ _1 ])
        (nil)))
(jump_insn 10 9 15 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 32)
            (pc))) "tester/explorer_tester.c":161:6 891 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 32)
;;  succ:       5 tester/explorer_tester.c:162:5
;;              3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 5, flags: (RTL)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 83 85 86 87
(note 15 10 16 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 3 (set (reg:DI 85)
        (symbol_ref/f:DI ("*.LC21") [flags 0x2]  <var_decl 0x7fb9490a2cf0 *.LC21>)) "tester/explorer_tester.c":163:3 80 {*movdi_internal}
     (nil))
(insn 17 16 18 3 (set (reg:DI 5 di)
        (reg:DI 85)) "tester/explorer_tester.c":163:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 85)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC21") [flags 0x2]  <var_decl 0x7fb9490a2cf0 *.LC21>)
            (nil))))
(call_insn 18 17 19 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fb9492c6700 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":163:3 909 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 19 18 20 3 (set (reg/f:DI 86)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [11 self+0 S8 A64])) "tester/explorer_tester.c":164:21 80 {*movdi_internal}
     (nil))
(insn 20 19 21 3 (set (reg/f:DI 83 [ _2 ])
        (mem/f:DI (plus:DI (reg/f:DI 86)
                (const_int 24 [0x18])) [2 self_5(D)->inner_explore+0 S8 A64])) "tester/explorer_tester.c":164:21 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 86)
        (nil)))
(insn 21 20 22 3 (set (reg:DI 87)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [1 name+0 S8 A64])) "tester/explorer_tester.c":164:3 80 {*movdi_internal}
     (nil))
(insn 22 21 23 3 (set (reg:DI 4 si)
        (reg:DI 87)) "tester/explorer_tester.c":164:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 87)
        (nil)))
(insn 23 22 24 3 (set (reg:DI 5 di)
        (reg/f:DI 83 [ _2 ])) "tester/explorer_tester.c":164:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 83 [ _2 ])
        (nil)))
(call_insn 24 23 29 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("explorer_open") [flags 0x41]  <function_decl 0x7fb94936e900 explorer_open>) [0 explorer_open S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":164:3 909 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(jump_insn 29 24 30 3 (set (pc)
        (label_ref 27)) 892 {jump}
     (nil)
 -> 27)
;;  succ:       4
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 30 29 32)
;; basic block 5, loop depth 0, maybe hot
;;  prev block 3, next block 4, flags: (RTL)
;;  pred:       2 tester/explorer_tester.c:162:5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(code_label 32 30 31 5 71 (nil) [1 uses])
(note 31 32 33 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 33 31 27 5 (const_int 0 [0]) "tester/explorer_tester.c":162:5 928 {nop}
     (nil))
;;  succ:       4 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 4, loop depth 0, maybe hot
;;  prev block 5, next block 1, flags: (RTL)
;;  pred:       5 [always]  (FALLTHRU)
;;              3
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(code_label 27 33 28 4 68 (nil) [1 uses])
(note 28 27 0 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]


;; Function check_success (check_success, funcdef_no=18, decl_uid=3261, cgraph_uid=19, symbol_order=18)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 11 n_edges 13 count 11 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;; 2 succs { 3 7 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 10 }
;; 7 succs { 8 9 }
;; 8 succs { 10 }
;; 9 succs { 10 }
;; 10 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 24.
verify found no changes in insn with uid = 36.
verify found no changes in insn with uid = 54.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r93: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r93,l0) best DIREG, allocno GENERAL_REGS
    r92: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r92,l0) best SIREG, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r90,l0) best DIREG, allocno GENERAL_REGS
    r89: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r89,l0) best SIREG, allocno GENERAL_REGS
    r88: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a7 (r88,l0) best DREG, allocno GENERAL_REGS
    r87: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a8 (r87,l0) best DIREG, allocno GENERAL_REGS
    r86: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a9 (r86,l0) best SIREG, allocno GENERAL_REGS
    r85: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a10 (r85,l0) best DREG, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r83,l0) best AREG, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r83,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:7000
  a1(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24000 NO_REX_SSE_REGS:24000 SSE_REGS:24000 MMX_REGS:31000 INT_SSE_REGS:31000 ALL_REGS:512000 MEM:8000
  a2(r93,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a3(r92,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a4(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a5(r90,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a6(r89,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a7(r88,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a8(r87,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a9(r86,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a10(r85,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a11(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000

   Insn 68(l0): point = 0
   Insn 67(l0): point = 2
   Insn 63(l0): point = 4
   Insn 60(l0): point = 7
   Insn 74(l0): point = 10
   Insn 55(l0): point = 12
   Insn 54(l0): point = 14
   Insn 53(l0): point = 16
   Insn 52(l0): point = 18
   Insn 51(l0): point = 20
   Insn 50(l0): point = 22
   Insn 49(l0): point = 24
   Insn 47(l0): point = 27
   Insn 46(l0): point = 29
   Insn 72(l0): point = 32
   Insn 41(l0): point = 34
   Insn 40(l0): point = 36
   Insn 39(l0): point = 38
   Insn 36(l0): point = 41
   Insn 35(l0): point = 43
   Insn 34(l0): point = 45
   Insn 33(l0): point = 47
   Insn 32(l0): point = 49
   Insn 31(l0): point = 51
   Insn 30(l0): point = 53
   Insn 29(l0): point = 55
   Insn 70(l0): point = 58
   Insn 24(l0): point = 60
   Insn 23(l0): point = 62
   Insn 22(l0): point = 64
   Insn 21(l0): point = 66
   Insn 20(l0): point = 68
   Insn 19(l0): point = 70
   Insn 18(l0): point = 72
   Insn 17(l0): point = 74
   Insn 15(l0): point = 77
   Insn 14(l0): point = 79
   Insn 12(l0): point = 82
   Insn 11(l0): point = 84
   Insn 10(l0): point = 86
   Insn 6(l0): point = 88
   Insn 5(l0): point = 90
   Insn 4(l0): point = 92
   Insn 3(l0): point = 94
   Insn 2(l0): point = 96
 a0(r83): [3..4]
 a1(r82): [32..34] [10..12] [5..7]
 a2(r93): [19..20]
 a3(r92): [23..24]
 a4(r91): [37..38]
 a5(r90): [46..47]
 a6(r89): [50..53]
 a7(r88): [52..55]
 a8(r87): [65..66]
 a9(r86): [69..72]
 a10(r85): [71..74]
 a11(r84): [85..86]
Compressing live ranges: from 99 to 24 - 24%
Ranges after the compression:
 a0(r83): [0..1]
 a1(r82): [10..11] [2..5]
 a2(r93): [6..7]
 a3(r92): [8..9]
 a4(r91): [12..13]
 a5(r90): [14..15]
 a6(r89): [16..17]
 a7(r88): [16..17]
 a8(r87): [18..19]
 a9(r86): [20..21]
 a10(r85): [20..21]
 a11(r84): [22..23]
  pref0:a2(r93)<-hr5@1500
  pref1:a3(r92)<-hr4@1500
  pref2:a5(r90)<-hr5@1500
  pref3:a6(r89)<-hr4@1500
  pref4:a7(r88)<-hr1@1500
  pref5:a8(r87)<-hr5@1500
  pref6:a9(r86)<-hr4@1500
  pref7:a10(r85)<-hr1@1500
  pref8:a0(r83)<-hr0@1500
  regions=1, blocks=11, points=24
    allocnos=12 (big 0), copies=0, conflicts=0, ranges=13
Disposition:
    1:r82  l0     0    0:r83  l0     0   11:r84  l0     0   10:r85  l0     1
    9:r86  l0     0    8:r87  l0     0    7:r88  l0     1    6:r89  l0     0
    5:r90  l0     0    4:r91  l0     0    3:r92  l0     0    2:r93  l0     0
+++Costs: overall -9000, reg -9000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


check_success

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 36 [r8]
;;  ref usage 	r0={8d,5u} r1={6d,3u} r2={4d,1u} r4={7d,4u} r5={7d,4u} r6={1d,10u} r7={1d,13u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r16={1d,9u} r17={6d,3u} r18={3d} r19={1d,25u} r20={4d} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={4d,1u} r37={4d} r38={3d} r39={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r82={3d,1u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} 
;;    total ref usage 339{249d,90u,0e} in 45{42 regular + 3 call} insns.
(note 1 0 8 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 36 [r8]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 36 [r8]
;; lr  def 	 17 [flags] 84
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [11 self+0 S8 A64])
        (reg:DI 5 di [ self ])) "tester/explorer_tester.c":168:77 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ self ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [4 success+0 S4 A32])
        (reg:SI 4 si [ success ])) "tester/explorer_tester.c":168:77 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ success ])
        (nil)))
(insn 4 3 5 2 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [4 result+0 S4 A32])
        (reg:SI 1 dx [ result ])) "tester/explorer_tester.c":168:77 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [ result ])
        (nil)))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [1 success_tip+0 S8 A64])
        (reg:DI 2 cx [ success_tip ])) "tester/explorer_tester.c":168:77 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [ success_tip ])
        (nil)))
(insn 6 5 7 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -32 [0xffffffffffffffe0])) [1 failed_tip+0 S8 A64])
        (reg:DI 36 r8 [ failed_tip ])) "tester/explorer_tester.c":168:77 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 36 r8 [ failed_tip ])
        (nil)))
(note 7 6 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 7 11 2 (set (reg:SI 84)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [4 success+0 S4 A32])) "tester/explorer_tester.c":170:6 81 {*movsi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 84)
            (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                    (const_int -16 [0xfffffffffffffff0])) [4 result+0 S4 A32]))) "tester/explorer_tester.c":170:6 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 84)
        (nil)))
(jump_insn 12 11 13 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 44)
            (pc))) "tester/explorer_tester.c":170:6 891 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 44)
;;  succ:       3 (FALLTHRU)
;;              7
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags]
(note 13 12 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 15 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                    (const_int -16 [0xfffffffffffffff0])) [4 result+0 S4 A32])
            (const_int 0 [0]))) "tester/explorer_tester.c":171:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 15 14 16 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 27)
            (pc))) "tester/explorer_tester.c":171:8 891 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 27)
;;  succ:       4 (FALLTHRU)
;;              5
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 85 86 87
(note 16 15 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 4 (set (reg:DI 85)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -32 [0xffffffffffffffe0])) [1 failed_tip+0 S8 A64])) "tester/explorer_tester.c":172:7 80 {*movdi_internal}
     (nil))
(insn 18 17 19 4 (set (reg:DI 86)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [1 success_tip+0 S8 A64])) "tester/explorer_tester.c":172:7 80 {*movdi_internal}
     (nil))
(insn 19 18 20 4 (set (reg:DI 1 dx)
        (reg:DI 85)) "tester/explorer_tester.c":172:7 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 85)
        (nil)))
(insn 20 19 21 4 (set (reg:DI 4 si)
        (reg:DI 86)) "tester/explorer_tester.c":172:7 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 86)
        (nil)))
(insn 21 20 22 4 (set (reg:DI 87)
        (symbol_ref/f:DI ("*.LC22") [flags 0x2]  <var_decl 0x7fb9490aa2d0 *.LC22>)) "tester/explorer_tester.c":172:7 80 {*movdi_internal}
     (nil))
(insn 22 21 23 4 (set (reg:DI 5 di)
        (reg:DI 87)) "tester/explorer_tester.c":172:7 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 87)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC22") [flags 0x2]  <var_decl 0x7fb9490aa2d0 *.LC22>)
            (nil))))
(insn 23 22 24 4 (set (reg:QI 0 ax)
        (const_int 0 [0])) "tester/explorer_tester.c":172:7 83 {*movqi_internal}
     (nil))
(call_insn 24 23 70 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fb9492c6000 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":172:7 909 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (nil)))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(jump_insn 70 24 71 4 (set (pc)
        (label_ref 37)) 892 {jump}
     (nil)
 -> 37)
;;  succ:       6 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 71 70 27)
;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       3
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 88 89 90
(code_label 27 71 28 5 74 (nil) [1 uses])
(note 28 27 29 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 30 5 (set (reg:DI 88)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [1 success_tip+0 S8 A64])) "tester/explorer_tester.c":175:7 80 {*movdi_internal}
     (nil))
(insn 30 29 31 5 (set (reg:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -32 [0xffffffffffffffe0])) [1 failed_tip+0 S8 A64])) "tester/explorer_tester.c":175:7 80 {*movdi_internal}
     (nil))
(insn 31 30 32 5 (set (reg:DI 1 dx)
        (reg:DI 88)) "tester/explorer_tester.c":175:7 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88)
        (nil)))
(insn 32 31 33 5 (set (reg:DI 4 si)
        (reg:DI 89)) "tester/explorer_tester.c":175:7 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 89)
        (nil)))
(insn 33 32 34 5 (set (reg:DI 90)
        (symbol_ref/f:DI ("*.LC22") [flags 0x2]  <var_decl 0x7fb9490aa2d0 *.LC22>)) "tester/explorer_tester.c":175:7 80 {*movdi_internal}
     (nil))
(insn 34 33 35 5 (set (reg:DI 5 di)
        (reg:DI 90)) "tester/explorer_tester.c":175:7 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 90)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC22") [flags 0x2]  <var_decl 0x7fb9490aa2d0 *.LC22>)
            (nil))))
(insn 35 34 36 5 (set (reg:QI 0 ax)
        (const_int 0 [0])) "tester/explorer_tester.c":175:7 83 {*movqi_internal}
     (nil))
(call_insn 36 35 37 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fb9492c6000 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":175:7 909 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (nil)))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
;;  succ:       6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       5 (FALLTHRU)
;;              4 [always] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 82 91
(code_label 37 36 38 6 75 (nil) [1 uses])
(note 38 37 39 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 40 6 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [11 self+0 S8 A64])) "tester/explorer_tester.c":178:17 80 {*movdi_internal}
     (nil))
(insn 40 39 41 6 (set (mem:SI (plus:DI (reg/f:DI 91)
                (const_int 32 [0x20])) [4 self_14(D)->error+0 S4 A64])
        (const_int 1 [0x1])) "tester/explorer_tester.c":178:17 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91)
        (nil)))
(insn 41 40 72 6 (set (reg:SI 82 [ _1 ])
        (const_int 0 [0])) "tester/explorer_tester.c":179:12 81 {*movsi_internal}
     (nil))
(jump_insn 72 41 73 6 (set (pc)
        (label_ref 61)) "tester/explorer_tester.c":179:12 892 {jump}
     (nil)
 -> 61)
;;  succ:       10 [always]  tester/explorer_tester.c:179:12
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82

(barrier 73 72 44)
;; basic block 7, loop depth 0, maybe hot
;;  prev block 6, next block 8, flags: (RTL)
;;  pred:       2
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags]
(code_label 44 73 45 7 73 (nil) [1 uses])
(note 45 44 46 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 46 45 47 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                    (const_int -16 [0xfffffffffffffff0])) [4 result+0 S4 A32])
            (const_int 0 [0]))) "tester/explorer_tester.c":181:6 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 47 46 48 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 58)
            (pc))) "tester/explorer_tester.c":181:6 891 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 58)
;;  succ:       8 (FALLTHRU)
;;              9
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 8, loop depth 0, maybe hot
;;  prev block 7, next block 9, flags: (RTL)
;;  pred:       7 (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 82 92 93
(note 48 47 49 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 49 48 50 8 (set (reg:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -32 [0xffffffffffffffe0])) [1 failed_tip+0 S8 A64])) "tester/explorer_tester.c":182:5 80 {*movdi_internal}
     (nil))
(insn 50 49 51 8 (set (reg:DI 4 si)
        (reg:DI 92)) "tester/explorer_tester.c":182:5 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 92)
        (nil)))
(insn 51 50 52 8 (set (reg:DI 93)
        (symbol_ref/f:DI ("*.LC23") [flags 0x2]  <var_decl 0x7fb9490aa360 *.LC23>)) "tester/explorer_tester.c":182:5 80 {*movdi_internal}
     (nil))
(insn 52 51 53 8 (set (reg:DI 5 di)
        (reg:DI 93)) "tester/explorer_tester.c":182:5 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 93)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC23") [flags 0x2]  <var_decl 0x7fb9490aa360 *.LC23>)
            (nil))))
(insn 53 52 54 8 (set (reg:QI 0 ax)
        (const_int 0 [0])) "tester/explorer_tester.c":182:5 83 {*movqi_internal}
     (nil))
(call_insn 54 53 55 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fb9492c6000 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":182:5 909 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 55 54 74 8 (set (reg:SI 82 [ _1 ])
        (const_int 0 [0])) "tester/explorer_tester.c":183:12 81 {*movsi_internal}
     (nil))
(jump_insn 74 55 75 8 (set (pc)
        (label_ref 61)) "tester/explorer_tester.c":183:12 892 {jump}
     (nil)
 -> 61)
;;  succ:       10 [always]  tester/explorer_tester.c:183:12
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82

(barrier 75 74 58)
;; basic block 9, loop depth 0, maybe hot
;;  prev block 8, next block 10, flags: (RTL)
;;  pred:       7
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 82
(code_label 58 75 59 9 77 (nil) [1 uses])
(note 59 58 60 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 60 59 61 9 (set (reg:SI 82 [ _1 ])
        (const_int 1 [0x1])) "tester/explorer_tester.c":185:10 81 {*movsi_internal}
     (nil))
;;  succ:       10 (FALLTHRU) tester/explorer_tester.c:185:10
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82

;; basic block 10, loop depth 0, maybe hot
;;  prev block 9, next block 1, flags: (RTL)
;;  pred:       9 (FALLTHRU) tester/explorer_tester.c:185:10
;;              6 [always]  tester/explorer_tester.c:179:12
;;              8 [always]  tester/explorer_tester.c:183:12
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82
;; lr  def 	 0 [ax] 83
(code_label 61 60 62 10 76 (nil) [2 uses])
(note 62 61 63 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 63 62 67 10 (set (reg:SI 83 [ <retval> ])
        (reg:SI 82 [ _1 ])) "tester/explorer_tester.c":186:1 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 82 [ _1 ])
        (nil)))
(insn 67 63 68 10 (set (reg/i:SI 0 ax)
        (reg:SI 83 [ <retval> ])) "tester/explorer_tester.c":186:1 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 83 [ <retval> ])
        (nil)))
(insn 68 67 0 10 (use (reg/i:SI 0 ax)) "tester/explorer_tester.c":186:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 19 [frame]

