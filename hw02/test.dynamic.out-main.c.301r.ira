
;; Function fill_random (fill_random, funcdef_no=6, decl_uid=3325, cgraph_uid=7, symbol_order=6)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 11 n_edges 12 count 11 (    1)
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 9 8 10
;;
;; Loop 1
;;  header 7, latch 6
;;  depth 1, outer 0
;;  nodes: 7 6 5 4 3
;; 2 succs { 7 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 3 9 }
;; 9 succs { 8 }
;; 8 succs { 10 }
;; 10 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 12.
verify found no changes in insn with uid = 19.
verify found no changes in insn with uid = 41.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a10 (r92,l0) best AREG, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a25 (r85,l0) best AREG, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a33 (r82,l0) best AREG, allocno GENERAL_REGS

  a0(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a1(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a2(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a3(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a4(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a5(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a6(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a7(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a8(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:16000
  a9(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a10(r92,l0) costs: AREG:4000 DREG:4000 CREG:4000 BREG:4000 SIREG:4000 DIREG:4000 AD_REGS:4000 CLOBBERED_REGS:4000 Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 SSE_FIRST_REG:26000 NO_REX_SSE_REGS:26000 SSE_REGS:26000 MMX_REGS:54000 INT_SSE_REGS:54000 ALL_REGS:850000 MEM:23000
  a11(r111,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:28000 INT_SSE_REGS:28000 ALL_REGS:426000 MEM:13000
  a12(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a13(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a14(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a15(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a16(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a17(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a18(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a19(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a20(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a21(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a22(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a23(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:16000
  a24(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a25(r85,l0) costs: AREG:4000 DREG:4000 CREG:4000 BREG:4000 SIREG:4000 DIREG:4000 AD_REGS:4000 CLOBBERED_REGS:4000 Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 SSE_FIRST_REG:26000 NO_REX_SSE_REGS:26000 SSE_REGS:26000 MMX_REGS:54000 INT_SSE_REGS:54000 ALL_REGS:850000 MEM:23000
  a26(r103,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:28000 INT_SSE_REGS:28000 ALL_REGS:426000 MEM:13000
  a27(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a28(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a29(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a30(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a31(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a32(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a33(r82,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000

   Insn 78(l0): point = 0
   Insn 76(l0): point = 4
   Insn 17(l0): point = 7
   Insn 16(l0): point = 9
   Insn 15(l0): point = 11
   Insn 14(l0): point = 13
   Insn 13(l0): point = 15
   Insn 12(l0): point = 17
   Insn 67(l0): point = 20
   Insn 66(l0): point = 22
   Insn 65(l0): point = 24
   Insn 61(l0): point = 27
   Insn 58(l0): point = 30
   Insn 57(l0): point = 32
   Insn 56(l0): point = 34
   Insn 55(l0): point = 36
   Insn 54(l0): point = 38
   Insn 53(l0): point = 40
   Insn 52(l0): point = 42
   Insn 51(l0): point = 44
   Insn 50(l0): point = 46
   Insn 49(l0): point = 49
   Insn 48(l0): point = 51
   Insn 47(l0): point = 54
   Insn 46(l0): point = 56
   Insn 45(l0): point = 58
   Insn 44(l0): point = 60
   Insn 43(l0): point = 62
   Insn 42(l0): point = 64
   Insn 41(l0): point = 66
   Insn 73(l0): point = 69
   Insn 36(l0): point = 71
   Insn 35(l0): point = 73
   Insn 34(l0): point = 75
   Insn 33(l0): point = 77
   Insn 32(l0): point = 79
   Insn 31(l0): point = 81
   Insn 30(l0): point = 83
   Insn 29(l0): point = 85
   Insn 28(l0): point = 87
   Insn 27(l0): point = 90
   Insn 26(l0): point = 92
   Insn 25(l0): point = 95
   Insn 24(l0): point = 97
   Insn 23(l0): point = 99
   Insn 22(l0): point = 101
   Insn 21(l0): point = 103
   Insn 20(l0): point = 105
   Insn 19(l0): point = 107
   Insn 71(l0): point = 110
   Insn 8(l0): point = 112
   Insn 7(l0): point = 114
   Insn 3(l0): point = 116
   Insn 2(l0): point = 118
 a0(r115): [23..24]
 a1(r97): [31..34]
 a2(r98): [31..32]
 a3(r95): [33..42]
 a4(r114): [35..36]
 a5(r96): [35..38]
 a6(r113): [39..40]
 a7(r94): [43..44]
 a8(r93): [50..52] [45..47]
 a9(r112): [47..49]
 a10(r92): [48..64]
 a11(r111): [52..54]
 a12(r110): [53..56]
 a13(r109): [57..58]
 a14(r108): [59..60]
 a15(r107): [61..62]
 a16(r90): [72..75]
 a17(r91): [72..73]
 a18(r88): [74..83]
 a19(r106): [76..77]
 a20(r89): [76..79]
 a21(r105): [80..81]
 a22(r87): [84..85]
 a23(r86): [91..93] [86..88]
 a24(r104): [88..90]
 a25(r85): [89..105]
 a26(r103): [93..95]
 a27(r102): [94..97]
 a28(r101): [98..99]
 a29(r100): [100..101]
 a30(r99): [102..103]
 a31(r84): [10..11]
 a32(r83): [12..13]
 a33(r82): [14..15]
Compressing live ranges: from 121 to 56 - 46%
Ranges after the compression:
 a0(r115): [6..7]
 a1(r97): [8..11]
 a2(r98): [8..9]
 a3(r95): [10..15]
 a4(r114): [12..13]
 a5(r96): [12..13]
 a6(r113): [14..15]
 a7(r94): [16..17]
 a8(r93): [22..23] [18..19]
 a9(r112): [19..21]
 a10(r92): [20..31]
 a11(r111): [23..25]
 a12(r110): [24..25]
 a13(r109): [26..27]
 a14(r108): [28..29]
 a15(r107): [30..31]
 a16(r90): [32..35]
 a17(r91): [32..33]
 a18(r88): [34..39]
 a19(r106): [36..37]
 a20(r89): [36..37]
 a21(r105): [38..39]
 a22(r87): [40..41]
 a23(r86): [46..47] [42..43]
 a24(r104): [43..45]
 a25(r85): [44..55]
 a26(r103): [47..49]
 a27(r102): [48..49]
 a28(r101): [50..51]
 a29(r100): [52..53]
 a30(r99): [54..55]
 a31(r84): [0..1]
 a32(r83): [2..3]
 a33(r82): [4..5]
  pref0:a10(r92)<-hr0@1500
  pref1:a25(r85)<-hr0@1500
  pref2:a33(r82)<-hr0@1500
  regions=1, blocks=11, points=56
    allocnos=34 (big 0), copies=0, conflicts=0, ranges=36
Disposition:
   33:r82  l0     0   32:r83  l0     0   31:r84  l0     0   25:r85  l0     0
   23:r86  l0     1   22:r87  l0     0   18:r88  l0     2   20:r89  l0     1
   16:r90  l0     0   17:r91  l0     1   10:r92  l0     0    8:r93  l0     1
    7:r94  l0     0    3:r95  l0     2    5:r96  l0     1    1:r97  l0     0
    2:r98  l0     1   30:r99  l0     1   29:r100 l0     1   28:r101 l0     1
   27:r102 l0     1   26:r103 l0     2   24:r104 l0     2   21:r105 l0     0
   19:r106 l0     0   15:r107 l0     1   14:r108 l0     1   13:r109 l0     1
   12:r110 l0     1   11:r111 l0     2    9:r112 l0     2    6:r113 l0     0
    4:r114 l0     0    0:r115 l0     0
+++Costs: overall 5000, reg 5000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


fill_random

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;;  ref usage 	r0={4d,3u} r1={4d} r2={4d} r4={4d,1u} r5={4d,1u} r6={1d,10u} r7={1d,13u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r16={1d,9u} r17={25d,2u} r18={3d} r19={1d,22u,2e} r20={4d} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={4d} r37={4d} r38={3d} r39={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r82={1d,1u} r83={1d,1u} r84={1d,1u} r85={1d,3u,1e} r86={2d,2u} r87={1d,1u} r88={1d,1u} r89={1d,1u,1e} r90={1d,1u} r91={1d,1u} r92={1d,3u,1e} r93={2d,2u} r94={1d,1u} r95={1d,1u} r96={1d,1u,1e} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} 
;;    total ref usage 385{278d,101u,6e} in 54{51 regular + 3 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [3 buf+0 S8 A64])
        (reg:DI 5 di [ buf ])) "main.c":14:46 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ buf ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -28 [0xffffffffffffffe4])) [1 size+0 S4 A32])
        (reg:SI 4 si [ size ])) "main.c":14:46 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ size ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
        (const_int 0 [0])) "main.c":15:7 81 {*movsi_internal}
     (nil))
(insn 8 7 71 2 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
        (const_int 0 [0])) "main.c":16:10 81 {*movsi_internal}
     (nil))
(jump_insn 71 8 72 2 (set (pc)
        (label_ref 62)) "main.c":16:3 892 {jump}
     (nil)
 -> 62)
;;  succ:       7 [always]  main.c:16:3
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 72 71 64)
;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       7
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 82 83 84
(code_label 64 72 11 3 5 (nil) [1 uses])
(note 11 64 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(call_insn 12 11 13 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("rand") [flags 0x41]  <function_decl 0x7fa610bed200 rand>) [0 rand S1 A8])
            (const_int 0 [0]))) "main.c":17:9 909 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
(insn 13 12 14 3 (set (reg:SI 82 [ _1 ])
        (reg:SI 0 ax)) "main.c":17:9 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 14 13 15 3 (set (reg:SI 83 [ _2 ])
        (reg:SI 82 [ _1 ])) "main.c":17:9 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 82 [ _1 ])
        (nil)))
(insn 15 14 16 3 (parallel [
            (set (reg:SI 84 [ _3 ])
                (and:SI (reg:SI 83 [ _2 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":17:9 533 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 83 [ _2 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 16 15 17 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 84 [ _3 ])
            (const_int 0 [0]))) "main.c":17:8 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 84 [ _3 ])
        (nil)))
(jump_insn 17 16 18 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 39)
            (pc))) "main.c":17:8 891 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 39)
;;  succ:       4 (FALLTHRU)
;;              5
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 85 86 87 88 89 90 91 99 100 101 102 103 104 105 106
(note 18 17 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(call_insn 19 18 20 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("rand") [flags 0x41]  <function_decl 0x7fa610bed200 rand>) [0 rand S1 A8])
            (const_int 0 [0]))) "main.c":18:22 909 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
(insn 20 19 21 4 (set (reg:SI 85 [ _4 ])
        (reg:SI 0 ax)) "main.c":18:22 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 21 20 22 4 (set (reg:DI 99)
        (sign_extend:DI (reg:SI 85 [ _4 ]))) "main.c":18:29 154 {*extendsidi2_rex64}
     (nil))
(insn 22 21 23 4 (parallel [
            (set (reg:DI 100)
                (mult:DI (reg:DI 99)
                    (const_int 1321528399 [0x4ec4ec4f])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":18:29 445 {*muldi3_1}
     (expr_list:REG_DEAD (reg:DI 99)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 23 22 24 4 (parallel [
            (set (reg:DI 101)
                (lshiftrt:DI (reg:DI 100)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":18:29 768 {*lshrdi3_1}
     (expr_list:REG_DEAD (reg:DI 100)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 24 23 25 4 (parallel [
            (set (reg:SI 102)
                (ashiftrt:SI (subreg:SI (reg:DI 101) 0)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":18:29 765 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:DI 101)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 25 24 26 4 (parallel [
            (set (reg:SI 103)
                (ashiftrt:SI (reg:SI 85 [ _4 ])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":18:29 758 {ashrsi3_cvt}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 26 25 27 4 (parallel [
            (set (reg:SI 86 [ _5 ])
                (minus:SI (reg:SI 102)
                    (reg:SI 103)))
            (clobber (reg:CC 17 flags))
        ]) "main.c":18:29 302 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 103)
        (expr_list:REG_DEAD (reg:SI 102)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (div:SI (reg:SI 85 [ _4 ])
                        (const_int 26 [0x1a]))
                    (nil))))))
(insn 27 26 28 4 (parallel [
            (set (reg:SI 104)
                (mult:SI (reg:SI 86 [ _5 ])
                    (const_int 26 [0x1a])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":18:29 444 {*mulsi3_1}
     (expr_list:REG_DEAD (reg:SI 86 [ _5 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 28 27 29 4 (parallel [
            (set (reg:SI 86 [ _5 ])
                (minus:SI (reg:SI 85 [ _4 ])
                    (reg:SI 104)))
            (clobber (reg:CC 17 flags))
        ]) "main.c":18:29 302 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 104)
        (expr_list:REG_DEAD (reg:SI 85 [ _4 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 29 28 30 4 (set (reg:QI 87 [ _6 ])
        (subreg:QI (reg:SI 86 [ _5 ]) 0)) "main.c":18:20 83 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 86 [ _5 ])
        (nil)))
(insn 30 29 31 4 (parallel [
            (set (reg:QI 88 [ _7 ])
                (plus:QI (reg:QI 87 [ _6 ])
                    (const_int 65 [0x41])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":18:20 233 {*addqi_1}
     (expr_list:REG_DEAD (reg:QI 87 [ _6 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 31 30 32 4 (set (reg:SI 105)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "main.c":18:10 81 {*movsi_internal}
     (nil))
(insn 32 31 33 4 (set (reg:DI 89 [ _8 ])
        (sign_extend:DI (reg:SI 105))) "main.c":18:10 154 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 105)
        (nil)))
(insn 33 32 34 4 (set (reg/f:DI 106)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [3 buf+0 S8 A64])) "main.c":18:10 80 {*movdi_internal}
     (nil))
(insn 34 33 35 4 (parallel [
            (set (reg/f:DI 90 [ _9 ])
                (plus:DI (reg:DI 89 [ _8 ])
                    (reg/f:DI 106)))
            (clobber (reg:CC 17 flags))
        ]) "main.c":18:10 230 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 106)
        (expr_list:REG_DEAD (reg:DI 89 [ _8 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                                (const_int -24 [0xffffffffffffffe8])) [3 buf+0 S8 A64])
                        (reg:DI 89 [ _8 ]))
                    (nil))))))
(insn 35 34 36 4 (set (reg:QI 91 [ _10 ])
        (reg:QI 88 [ _7 ])) "main.c":18:20 83 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 88 [ _7 ])
        (nil)))
(insn 36 35 73 4 (set (mem:QI (reg/f:DI 90 [ _9 ]) [0 *_9+0 S1 A8])
        (reg:QI 91 [ _10 ])) "main.c":18:14 83 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 91 [ _10 ])
        (expr_list:REG_DEAD (reg/f:DI 90 [ _9 ])
            (nil))))
(jump_insn 73 36 74 4 (set (pc)
        (label_ref 59)) 892 {jump}
     (nil)
 -> 59)
;;  succ:       6 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 74 73 39)
;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       3
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 92 93 94 95 96 97 98 107 108 109 110 111 112 113 114
(code_label 39 74 40 5 3 (nil) [1 uses])
(note 40 39 41 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(call_insn 41 40 42 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("rand") [flags 0x41]  <function_decl 0x7fa610bed200 rand>) [0 rand S1 A8])
            (const_int 0 [0]))) "main.c":20:22 909 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
(insn 42 41 43 5 (set (reg:SI 92 [ _11 ])
        (reg:SI 0 ax)) "main.c":20:22 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 43 42 44 5 (set (reg:DI 107)
        (sign_extend:DI (reg:SI 92 [ _11 ]))) "main.c":20:29 154 {*extendsidi2_rex64}
     (nil))
(insn 44 43 45 5 (parallel [
            (set (reg:DI 108)
                (mult:DI (reg:DI 107)
                    (const_int 1321528399 [0x4ec4ec4f])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":20:29 445 {*muldi3_1}
     (expr_list:REG_DEAD (reg:DI 107)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 45 44 46 5 (parallel [
            (set (reg:DI 109)
                (lshiftrt:DI (reg:DI 108)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":20:29 768 {*lshrdi3_1}
     (expr_list:REG_DEAD (reg:DI 108)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 46 45 47 5 (parallel [
            (set (reg:SI 110)
                (ashiftrt:SI (subreg:SI (reg:DI 109) 0)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":20:29 765 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:DI 109)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 47 46 48 5 (parallel [
            (set (reg:SI 111)
                (ashiftrt:SI (reg:SI 92 [ _11 ])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":20:29 758 {ashrsi3_cvt}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 48 47 49 5 (parallel [
            (set (reg:SI 93 [ _12 ])
                (minus:SI (reg:SI 110)
                    (reg:SI 111)))
            (clobber (reg:CC 17 flags))
        ]) "main.c":20:29 302 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 111)
        (expr_list:REG_DEAD (reg:SI 110)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (div:SI (reg:SI 92 [ _11 ])
                        (const_int 26 [0x1a]))
                    (nil))))))
(insn 49 48 50 5 (parallel [
            (set (reg:SI 112)
                (mult:SI (reg:SI 93 [ _12 ])
                    (const_int 26 [0x1a])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":20:29 444 {*mulsi3_1}
     (expr_list:REG_DEAD (reg:SI 93 [ _12 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 50 49 51 5 (parallel [
            (set (reg:SI 93 [ _12 ])
                (minus:SI (reg:SI 92 [ _11 ])
                    (reg:SI 112)))
            (clobber (reg:CC 17 flags))
        ]) "main.c":20:29 302 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 112)
        (expr_list:REG_DEAD (reg:SI 92 [ _11 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 51 50 52 5 (set (reg:QI 94 [ _13 ])
        (subreg:QI (reg:SI 93 [ _12 ]) 0)) "main.c":20:20 83 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 93 [ _12 ])
        (nil)))
(insn 52 51 53 5 (parallel [
            (set (reg:QI 95 [ _14 ])
                (plus:QI (reg:QI 94 [ _13 ])
                    (const_int 97 [0x61])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":20:20 233 {*addqi_1}
     (expr_list:REG_DEAD (reg:QI 94 [ _13 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 53 52 54 5 (set (reg:SI 113)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "main.c":20:10 81 {*movsi_internal}
     (nil))
(insn 54 53 55 5 (set (reg:DI 96 [ _15 ])
        (sign_extend:DI (reg:SI 113))) "main.c":20:10 154 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 113)
        (nil)))
(insn 55 54 56 5 (set (reg/f:DI 114)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [3 buf+0 S8 A64])) "main.c":20:10 80 {*movdi_internal}
     (nil))
(insn 56 55 57 5 (parallel [
            (set (reg/f:DI 97 [ _16 ])
                (plus:DI (reg:DI 96 [ _15 ])
                    (reg/f:DI 114)))
            (clobber (reg:CC 17 flags))
        ]) "main.c":20:10 230 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 114)
        (expr_list:REG_DEAD (reg:DI 96 [ _15 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                                (const_int -24 [0xffffffffffffffe8])) [3 buf+0 S8 A64])
                        (reg:DI 96 [ _15 ]))
                    (nil))))))
(insn 57 56 58 5 (set (reg:QI 98 [ _17 ])
        (reg:QI 95 [ _14 ])) "main.c":20:20 83 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 95 [ _14 ])
        (nil)))
(insn 58 57 59 5 (set (mem:QI (reg/f:DI 97 [ _16 ]) [0 *_16+0 S1 A8])
        (reg:QI 98 [ _17 ])) "main.c":20:14 83 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 98 [ _17 ])
        (expr_list:REG_DEAD (reg/f:DI 97 [ _16 ])
            (nil))))
;;  succ:       6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       5 (FALLTHRU)
;;              4 [always] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags]
(code_label 59 58 60 6 4 (nil) [1 uses])
(note 60 59 61 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 61 60 62 6 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                        (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":16:26 229 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       7 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 7, loop depth 0, maybe hot
;;  prev block 6, next block 9, flags: (RTL)
;;  pred:       6 (FALLTHRU,DFS_BACK)
;;              2 [always]  main.c:16:3
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags] 115
(code_label 62 61 63 7 2 (nil) [1 uses])
(note 63 62 65 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 65 63 66 7 (set (reg:SI 115)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "main.c":16:17 81 {*movsi_internal}
     (nil))
(insn 66 65 67 7 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 115)
            (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                    (const_int -28 [0xffffffffffffffe4])) [1 size+0 S4 A32]))) "main.c":16:17 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 115)
        (nil)))
(jump_insn 67 66 75 7 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 64)
            (pc))) "main.c":16:17 891 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 64)
;;  succ:       3
;;              9 (FALLTHRU) main.c:23:1
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 9, loop depth 0, maybe hot
;;  prev block 7, next block 8, flags: (RTL)
;;  pred:       7 (FALLTHRU) main.c:23:1
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(note 75 67 76 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 76 75 68 9 (const_int 0 [0]) "main.c":23:1 928 {nop}
     (nil))
;;  succ:       8 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 8, loop depth 0, maybe hot
;;  prev block 9, next block 10, flags: (RTL)
;;  pred:       9 [always]  (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(note 68 76 77 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
;;  succ:       10 [always]  (FALLTHRU) main.c:23:1
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 10, loop depth 0, maybe hot
;;  prev block 8, next block 1, flags: (RTL)
;;  pred:       8 [always]  (FALLTHRU) main.c:23:1
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(note 77 68 78 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 78 77 0 10 (const_int 0 [0]) "main.c":23:1 928 {nop}
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]


;; Function test_file_init (test_file_init, funcdef_no=7, decl_uid=3333, cgraph_uid=8, symbol_order=8)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 4 n_edges 3 count 4 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 7.
verify found no changes in insn with uid = 15.
verify found no changes in insn with uid = 18.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r86: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r86,l0) best DIREG, allocno GENERAL_REGS
    r85: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r85,l0) best DREG, allocno GENERAL_REGS
    r84: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r84,l0) best DIREG, allocno GENERAL_REGS
    r83: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r83,l0) best AREG, allocno GENERAL_REGS
    r82: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r82,l0) best DIREG, allocno GENERAL_REGS

  a0(r86,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a1(r84,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a2(r85,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a3(r83,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:6000 NO_REX_SSE_REGS:6000 SSE_REGS:6000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a4(r82,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000

   Insn 22(l0): point = 0
   Insn 18(l0): point = 3
   Insn 17(l0): point = 5
   Insn 16(l0): point = 7
   Insn 15(l0): point = 9
   Insn 14(l0): point = 11
   Insn 13(l0): point = 13
   Insn 12(l0): point = 15
   Insn 11(l0): point = 17
   Insn 10(l0): point = 19
   Insn 9(l0): point = 21
   Insn 8(l0): point = 23
   Insn 7(l0): point = 25
   Insn 6(l0): point = 27
   Insn 5(l0): point = 29
 a0(r86): [6..7]
 a1(r84): [12..19]
 a2(r85): [16..17]
 a3(r83): [22..23]
 a4(r82): [28..29]
Compressing live ranges: from 32 to 8 - 25%
Ranges after the compression:
 a0(r86): [0..1]
 a1(r84): [2..3]
 a2(r85): [2..3]
 a3(r83): [4..5]
 a4(r82): [6..7]
  pref0:a0(r86)<-hr5@1500
  pref1:a2(r85)<-hr1@1500
  pref2:a1(r84)<-hr5@1500
  pref3:a3(r83)<-hr0@1500
  pref4:a4(r82)<-hr5@1500
  regions=1, blocks=4, points=8
    allocnos=5 (big 0), copies=0, conflicts=0, ranges=5
Disposition:
    4:r82  l0     0    3:r83  l0     0    1:r84  l0     0    2:r85  l0     1
    0:r86  l0     0
+++Costs: overall -5000, reg -5000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


test_file_init

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;;  ref usage 	r0={4d,1u} r1={5d,1u} r2={4d} r4={5d,1u} r5={7d,3u} r6={1d,3u} r7={1d,6u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r16={1d,2u} r17={3d} r18={3d} r19={1d,6u} r20={4d} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={4d} r37={4d} r38={3d} r39={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r82={1d,1u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} 
;;    total ref usage 258{230d,28u,0e} in 15{12 regular + 3 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 82 83 84 85 86
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:DI 82)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7fa6108a1630 *.LC0>)) "main.c":28:32 80 {*movdi_internal}
     (nil))
(insn 6 5 7 2 (set (reg:DI 5 di)
        (reg:DI 82)) "main.c":28:32 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 82)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7fa6108a1630 *.LC0>)
            (nil))))
(call_insn 7 6 8 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("file_tester_create") [flags 0x41]  <function_decl 0x7fa610b72e00 file_tester_create>) [0 file_tester_create S1 A8])
            (const_int 0 [0]))) "main.c":28:32 909 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 8 7 9 2 (set (reg:DI 83)
        (reg:DI 0 ax)) "main.c":28:32 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 9 8 10 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [8 tester+0 S8 A64])
        (reg:DI 83)) "main.c":28:32 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 83)
        (nil)))
(insn 10 9 11 2 (set (reg:DI 84)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [8 tester+0 S8 A64])) "main.c":29:3 80 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:DI 85)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7fa6108a16c0 *.LC1>)) "main.c":29:3 80 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:DI 1 dx)
        (reg:DI 85)) "main.c":29:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 85)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7fa6108a16c0 *.LC1>)
            (nil))))
(insn 13 12 14 2 (set (reg:SI 4 si)
        (const_int 0 [0])) "main.c":29:3 81 {*movsi_internal}
     (nil))
(insn 14 13 15 2 (set (reg:DI 5 di)
        (reg:DI 84)) "main.c":29:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 84)
        (nil)))
(call_insn 15 14 16 2 (call (mem:QI (symbol_ref:DI ("file_tester_init") [flags 0x41]  <function_decl 0x7fa610b77000 file_tester_init>) [0 file_tester_init S1 A8])
        (const_int 0 [0])) "main.c":29:3 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 16 15 17 2 (set (reg:DI 86)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [8 tester+0 S8 A64])) "main.c":30:3 80 {*movdi_internal}
     (nil))
(insn 17 16 18 2 (set (reg:DI 5 di)
        (reg:DI 86)) "main.c":30:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 86)
        (nil)))
(call_insn 18 17 21 2 (call (mem:QI (symbol_ref:DI ("file_tester_destory") [flags 0x41]  <function_decl 0x7fa610b72f00 file_tester_destory>) [0 file_tester_destory S1 A8])
        (const_int 0 [0])) "main.c":30:3 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       3 [always]  (FALLTHRU) main.c:31:1
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 1, flags: (RTL)
;;  pred:       2 [always]  (FALLTHRU) main.c:31:1
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(note 21 18 22 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 0 3 (const_int 0 [0]) "main.c":31:1 928 {nop}
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]


;; Function test_file_write_inbound (test_file_write_inbound, funcdef_no=8, decl_uid=3336, cgraph_uid=9, symbol_order=9)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 5 n_edges 4 count 5 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { }
;; 4 succs { 1 }
Removing SCRATCH to p128 in insn #3 (nop 2)
rescanning insn with uid = 3.
Removing SCRATCH to p129 in insn #79 (nop 3)
rescanning insn with uid = 79.
Building IRA IR
verify found no changes in insn with uid = 44.
verify found no changes in insn with uid = 47.
verify found no changes in insn with uid = 55.
verify found no changes in insn with uid = 63.
verify found no changes in insn with uid = 71.
verify found no changes in insn with uid = 74.
verify found no changes in insn with uid = 81.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 5 n_edges 4 count 5 (    1)

Pass 0 for finding pseudo/allocno costs

    r129: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r129,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r128: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a41 (r128,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r127: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r127,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r126: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r126,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r125: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r125,l0) best DIREG, allocno GENERAL_REGS
    r124: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r124,l0) best DIREG, allocno GENERAL_REGS
    r123: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r123,l0) best CREG, allocno GENERAL_REGS
    r122: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r122,l0) best DIREG, allocno GENERAL_REGS
    r121: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a8 (r121,l0) best CREG, allocno GENERAL_REGS
    r120: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a10 (r120,l0) best DREG, allocno GENERAL_REGS
    r119: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a9 (r119,l0) best DIREG, allocno GENERAL_REGS
    r118: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a11 (r118,l0) best AREG, allocno GENERAL_REGS
    r117: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a12 (r117,l0) best DIREG, allocno GENERAL_REGS
    r116: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a13 (r116,l0) best DIREG, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a21 (r112,l0) best DREG, allocno GENERAL_REGS
    r111: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a18 (r111,l0) best AREG, allocno GENERAL_REGS
    r109: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a20 (r109,l0) best AREG, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a40 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r105,l0) best DREG, allocno GENERAL_REGS
    r104: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a7 (r104,l0) best DREG, allocno GENERAL_REGS
    r103: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a14 (r103,l0) best SIREG, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a35 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a36 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a37 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a38 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a39 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r129,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:6000 NO_REX_SSE_REGS:6000 SSE_REGS:6000 MMX_REGS:13000 INT_SSE_REGS:13000 ALL_REGS:212000 MEM:6000
  a1(r106,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:7000
  a2(r125,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a3(r124,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a4(r105,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:7000
  a5(r123,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a6(r122,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a7(r104,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:7000
  a8(r121,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a9(r119,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a10(r120,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a11(r118,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:6000 NO_REX_SSE_REGS:6000 SSE_REGS:6000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a12(r117,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a13(r116,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a14(r103,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:7000
  a15(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:6000 NO_REX_SSE_REGS:6000 SSE_REGS:6000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a16(r114,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a17(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a18(r111,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a19(r127,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a20(r109,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a21(r112,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:6000 NO_REX_SSE_REGS:6000 SSE_REGS:6000 MMX_REGS:13000 INT_SSE_REGS:13000 ALL_REGS:212000 MEM:6000
  a22(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a23(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a24(r126,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a25(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a26(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a27(r98,l0) costs: AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:2000
  a28(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:6000 NO_REX_SSE_REGS:6000 SSE_REGS:6000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a29(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a30(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a31(r90,l0) costs: AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:2000
  a32(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:6000 NO_REX_SSE_REGS:6000 SSE_REGS:6000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a33(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a34(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a35(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:6000 NO_REX_SSE_REGS:6000 SSE_REGS:6000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:7000
  a36(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:6000 NO_REX_SSE_REGS:6000 SSE_REGS:6000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a37(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a38(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a39(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a40(r107,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:6000 NO_REX_SSE_REGS:6000 SSE_REGS:6000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a41(r128,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:6000 NO_REX_SSE_REGS:6000 SSE_REGS:6000 MMX_REGS:13000 INT_SSE_REGS:13000 ALL_REGS:212000 MEM:6000

   Insn 81(l0): point = 1
   Insn 80(l0): point = 4
   Insn 79(l0): point = 6
   Insn 87(l0): point = 8
   Insn 77(l0): point = 10
   Insn 76(l0): point = 12
   Insn 75(l0): point = 14
   Insn 74(l0): point = 16
   Insn 73(l0): point = 18
   Insn 72(l0): point = 20
   Insn 71(l0): point = 22
   Insn 70(l0): point = 24
   Insn 69(l0): point = 26
   Insn 68(l0): point = 28
   Insn 67(l0): point = 30
   Insn 66(l0): point = 32
   Insn 65(l0): point = 34
   Insn 64(l0): point = 36
   Insn 63(l0): point = 38
   Insn 62(l0): point = 40
   Insn 61(l0): point = 42
   Insn 60(l0): point = 44
   Insn 59(l0): point = 46
   Insn 58(l0): point = 48
   Insn 57(l0): point = 50
   Insn 56(l0): point = 52
   Insn 55(l0): point = 54
   Insn 54(l0): point = 56
   Insn 53(l0): point = 58
   Insn 52(l0): point = 60
   Insn 51(l0): point = 62
   Insn 50(l0): point = 64
   Insn 49(l0): point = 66
   Insn 48(l0): point = 68
   Insn 47(l0): point = 70
   Insn 46(l0): point = 72
   Insn 45(l0): point = 74
   Insn 44(l0): point = 76
   Insn 43(l0): point = 78
   Insn 42(l0): point = 80
   Insn 41(l0): point = 82
   Insn 40(l0): point = 84
   Insn 39(l0): point = 86
   Insn 38(l0): point = 88
   Insn 37(l0): point = 90
   Insn 36(l0): point = 92
   Insn 35(l0): point = 94
   Insn 34(l0): point = 96
   Insn 89(l0): point = 99
   Insn 33(l0): point = 101
   Insn 32(l0): point = 103
   Insn 88(l0): point = 105
   Insn 31(l0): point = 107
   Insn 30(l0): point = 109
   Insn 29(l0): point = 111
   Insn 27(l0): point = 113
   Insn 26(l0): point = 115
   Insn 25(l0): point = 117
   Insn 24(l0): point = 119
   Insn 23(l0): point = 121
   Insn 18(l0): point = 123
   Insn 17(l0): point = 125
   Insn 16(l0): point = 127
   Insn 15(l0): point = 129
   Insn 14(l0): point = 131
   Insn 13(l0): point = 133
   Insn 12(l0): point = 135
   Insn 11(l0): point = 137
   Insn 10(l0): point = 139
   Insn 9(l0): point = 141
   Insn 8(l0): point = 143
   Insn 7(l0): point = 145
   Insn 6(l0): point = 147
   Insn 3(l0): point = 149
 a0(r129): [6..6]
 a1(r106): [11..145]
 a2(r125): [19..20]
 a3(r124): [25..32]
 a4(r105): [29..36]
 a5(r123): [31..34]
 a6(r122): [41..48]
 a7(r104): [45..52]
 a8(r121): [47..50]
 a9(r119): [57..64]
 a10(r120): [61..62]
 a11(r118): [67..68]
 a12(r117): [73..74]
 a13(r116): [79..82]
 a14(r103): [81..84]
 a15(r115): [87..88]
 a16(r114): [89..90]
 a17(r113): [93..94]
 a18(r111): [95..96]
 a19(r127): [97..99]
 a20(r109): [98..101]
 a21(r112): [96..97]
 a22(r108): [102..103]
 a23(r102): [102..107]
 a24(r126): [104..105]
 a25(r101): [108..109]
 a26(r100): [110..111]
 a27(r98 [0]): [114..151]
 a27(r98 [1]): [113..151]
 a28(r97): [116..117]
 a29(r96): [118..119]
 a30(r95): [120..121]
 a31(r90 [0]): [124..151]
 a31(r90 [1]): [123..151]
 a32(r89): [126..127]
 a33(r88): [128..129]
 a34(r87): [130..131]
 a35(r86): [134..135]
 a36(r85): [136..137]
 a37(r84): [138..139]
 a38(r83): [140..141]
 a39(r82): [142..143]
 a40(r107): [146..147]
 a41(r128): [149..149]
Compressing live ranges: from 152 to 60 - 39%
Ranges after the compression:
 a0(r129): [0..0]
 a1(r106): [1..55]
 a2(r125): [1..2]
 a3(r124): [3..4]
 a4(r105): [3..4]
 a5(r123): [3..4]
 a6(r122): [5..6]
 a7(r104): [5..6]
 a8(r121): [5..6]
 a9(r119): [7..8]
 a10(r120): [7..8]
 a11(r118): [9..10]
 a12(r117): [11..12]
 a13(r116): [13..14]
 a14(r103): [13..14]
 a15(r115): [15..16]
 a16(r114): [17..18]
 a17(r113): [19..20]
 a18(r111): [21..22]
 a19(r127): [23..25]
 a20(r109): [24..25]
 a21(r112): [22..23]
 a22(r108): [26..27]
 a23(r102): [26..29]
 a24(r126): [28..29]
 a25(r101): [30..31]
 a26(r100): [32..33]
 a27(r98 [0]): [34..59]
 a27(r98 [1]): [34..59]
 a28(r97): [34..35]
 a29(r96): [36..37]
 a30(r95): [38..39]
 a31(r90 [0]): [40..59]
 a31(r90 [1]): [40..59]
 a32(r89): [40..41]
 a33(r88): [42..43]
 a34(r87): [44..45]
 a35(r86): [46..47]
 a36(r85): [48..49]
 a37(r84): [50..51]
 a38(r83): [52..53]
 a39(r82): [54..55]
 a40(r107): [56..57]
 a41(r128): [58..58]
  pref0:a2(r125)<-hr5@1500
  pref1:a3(r124)<-hr5@1500
  pref2:a5(r123)<-hr2@1500
  pref3:a6(r122)<-hr5@1500
  pref4:a8(r121)<-hr2@1500
  pref5:a10(r120)<-hr1@1500
  pref6:a9(r119)<-hr5@1500
  pref7:a11(r118)<-hr0@1500
  pref8:a12(r117)<-hr5@1500
  pref9:a13(r116)<-hr5@1500
  pref10:a21(r112)<-hr1@1000
  pref11:a18(r111)<-hr0@1000
  pref12:a20(r109)<-hr0@1000
  pref13:a4(r105)<-hr1@1500
  pref14:a7(r104)<-hr1@1500
  pref15:a14(r103)<-hr4@1500
  regions=1, blocks=5, points=60
    allocnos=42 (big 2), copies=0, conflicts=0, ranges=44
Disposition:
   39:r82  l0     0   38:r83  l0     0   37:r84  l0     0   36:r85  l0     0
   35:r86  l0     0   34:r87  l0     0   33:r88  l0     0   32:r89  l0     0
   31:r90  l0    36   30:r95  l0     0   29:r96  l0     0   28:r97  l0     0
   27:r98  l0     4   26:r100 l0     0   25:r101 l0     0   23:r102 l0     0
   14:r103 l0     1    7:r104 l0     4    4:r105 l0     4    1:r106 l0     3
   40:r107 l0     0   22:r108 l0     1   20:r109 l0     0   18:r111 l0     0
   21:r112 l0     2   17:r113 l0     0   16:r114 l0     0   15:r115 l0     0
   13:r116 l0     0   12:r117 l0     0   11:r118 l0     0    9:r119 l0     0
   10:r120 l0     1    8:r121 l0     1    6:r122 l0     0    5:r123 l0     1
    3:r124 l0     0    2:r125 l0     0   24:r126 l0     1   19:r127 l0     1
   41:r128 l0     0    0:r129 l0     0
+++Costs: overall -7000, reg -7000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


test_file_write_inbound

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;;  ref usage 	r0={8d,1u} r1={11d,3u} r2={10d,2u} r4={12d,4u} r5={14d,6u} r6={1d,4u} r7={3d,17u} r8={7d} r9={7d} r10={7d} r11={7d} r12={7d} r13={7d} r14={7d} r15={7d} r16={1d,3u} r17={20d,1u} r18={7d} r19={1d,16u} r20={8d} r21={8d} r22={8d} r23={8d} r24={8d} r25={8d} r26={8d} r27={8d} r28={7d} r29={7d} r30={7d} r31={7d} r32={7d} r33={7d} r34={7d} r35={7d} r36={8d} r37={8d} r38={7d} r39={7d} r44={7d} r45={7d} r46={7d} r47={7d} r48={7d} r49={7d} r50={7d} r51={7d} r52={7d} r53={7d} r54={7d} r55={7d} r56={7d} r57={7d} r58={7d} r59={7d} r60={7d} r61={7d} r62={7d} r63={7d} r64={7d} r65={7d} r66={7d} r67={7d} r68={7d} r69={7d} r70={7d} r71={7d} r72={7d} r73={7d} r74={7d} r75={7d} r82={1d,1u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={2d,2u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={2d,2u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,2u} r111={1d,1u} r112={1d} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,2u} r128={1d} r129={1d} 
;;    total ref usage 662{562d,100u,0e} in 74{67 regular + 7 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 90 98
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 90 98
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 82 83 84 85 86 87 88 89 90 95 96 97 98 100 101 102 103 104 105 106 107 108 109 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 4 3 2 NOTE_INSN_FUNCTION_BEG)
(insn 3 2 6 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 19 frame)
                        (const_int -8 [0xfffffffffffffff8])) [9 D.3538+0 S8 A64])
                (unspec:DI [
                        (mem/v/f:DI (const_int 40 [0x28]) [0 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_SET))
            (set (reg:DI 128)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "main.c":33:32 1265 {stack_protect_set_1_di}
     (expr_list:REG_UNUSED (reg:DI 128)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 6 3 7 2 (set (reg:DI 107)
        (reg/f:DI 7 sp)) "main.c":33:32 80 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg/f:DI 106 [ saved_stack.9_27 ])
        (reg:DI 107)) "main.c":33:32 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 107)
        (nil)))
(insn 8 7 9 2 (set (reg:SI 82 [ FILE_SIZE.0_1 ])
        (const_int 10 [0xa])) "main.c":34:28 81 {*movsi_internal}
     (nil))
(insn 9 8 10 2 (parallel [
            (set (reg:SI 83 [ _2 ])
                (plus:SI (reg:SI 82 [ FILE_SIZE.0_1 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":34:28 229 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 82 [ FILE_SIZE.0_1 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 10 9 11 2 (set (reg:DI 84 [ _3 ])
        (sign_extend:DI (reg:SI 83 [ _2 ]))) "main.c":34:28 154 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 83 [ _2 ])
        (nil)))
(insn 11 10 12 2 (parallel [
            (set (reg:DI 85 [ _4 ])
                (plus:DI (reg:DI 84 [ _3 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":34:8 230 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 84 [ _3 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 12 11 13 2 (set (reg:DI 86 [ _5 ])
        (reg:DI 85 [ _4 ])) "main.c":34:8 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 85 [ _4 ])
        (nil)))
(insn 13 12 14 2 (set (mem/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -32 [0xffffffffffffffe0])) [10 D.3445+0 S8 A128])
        (reg:DI 86 [ _5 ])) "main.c":34:8 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 86 [ _5 ])
        (nil)))
(insn 14 13 15 2 (set (reg:SI 87 [ FILE_SIZE.1_6 ])
        (const_int 10 [0xa])) "main.c":34:28 81 {*movsi_internal}
     (nil))
(insn 15 14 16 2 (parallel [
            (set (reg:SI 88 [ _7 ])
                (plus:SI (reg:SI 87 [ FILE_SIZE.1_6 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":34:28 229 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 87 [ FILE_SIZE.1_6 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 16 15 17 2 (set (reg:DI 89 [ _8 ])
        (sign_extend:DI (reg:SI 88 [ _7 ]))) "main.c":34:8 154 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 88 [ _7 ])
        (nil)))
(insn 17 16 18 2 (set (subreg:DI (reg:TI 90 [ _9 ]) 0)
        (reg:DI 89 [ _8 ])) "main.c":34:8 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 89 [ _8 ])
        (nil)))
(insn 18 17 23 2 (set (subreg:DI (reg:TI 90 [ _9 ]) 8)
        (const_int 0 [0])) "main.c":34:8 80 {*movdi_internal}
     (expr_list:REG_UNUSED (reg:TI 90 [ _9 ])
        (nil)))
(insn 23 18 24 2 (set (reg:SI 95 [ FILE_SIZE.3_14 ])
        (const_int 10 [0xa])) "main.c":34:28 81 {*movsi_internal}
     (nil))
(insn 24 23 25 2 (parallel [
            (set (reg:SI 96 [ _15 ])
                (plus:SI (reg:SI 95 [ FILE_SIZE.3_14 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":34:28 229 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 95 [ FILE_SIZE.3_14 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 25 24 26 2 (set (reg:DI 97 [ _16 ])
        (sign_extend:DI (reg:SI 96 [ _15 ]))) "main.c":34:8 154 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 96 [ _15 ])
        (nil)))
(insn 26 25 27 2 (set (subreg:DI (reg:TI 98 [ _17 ]) 0)
        (reg:DI 97 [ _16 ])) "main.c":34:8 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 97 [ _16 ])
        (nil)))
(insn 27 26 29 2 (set (subreg:DI (reg:TI 98 [ _17 ]) 8)
        (const_int 0 [0])) "main.c":34:8 80 {*movdi_internal}
     (expr_list:REG_UNUSED (reg:TI 98 [ _17 ])
        (nil)))
(insn 29 27 30 2 (set (reg:SI 100 [ FILE_SIZE.4_19 ])
        (const_int 10 [0xa])) "main.c":34:28 81 {*movsi_internal}
     (nil))
(insn 30 29 31 2 (parallel [
            (set (reg:SI 101 [ _20 ])
                (plus:SI (reg:SI 100 [ FILE_SIZE.4_19 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":34:28 229 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 100 [ FILE_SIZE.4_19 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 31 30 88 2 (set (reg:DI 102 [ _21 ])
        (sign_extend:DI (reg:SI 101 [ _20 ]))) "main.c":34:8 154 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 101 [ _20 ])
        (nil)))
(insn 88 31 32 2 (set (reg:DI 126)
        (const_int 16 [0x10])) "main.c":34:8 80 {*movdi_internal}
     (nil))
(insn 32 88 33 2 (parallel [
            (set (reg:DI 108)
                (plus:DI (reg:DI 126)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":34:8 230 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 126)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 33 32 89 2 (parallel [
            (set (reg:DI 109)
                (plus:DI (reg:DI 102 [ _21 ])
                    (reg:DI 108)))
            (clobber (reg:CC 17 flags))
        ]) "main.c":34:8 230 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 108)
        (expr_list:REG_DEAD (reg:DI 102 [ _21 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 89 33 34 2 (set (reg:DI 127)
        (const_int 16 [0x10])) "main.c":34:8 80 {*movdi_internal}
     (nil))
(insn 34 89 35 2 (parallel [
            (set (reg:DI 111)
                (udiv:DI (reg:DI 109)
                    (reg:DI 127)))
            (set (reg:DI 112)
                (umod:DI (reg:DI 109)
                    (reg:DI 127)))
            (clobber (reg:CC 17 flags))
        ]) "main.c":34:8 492 {*udivmoddi4}
     (expr_list:REG_DEAD (reg:DI 127)
        (expr_list:REG_DEAD (reg:DI 109)
            (expr_list:REG_UNUSED (reg:DI 112)
                (expr_list:REG_UNUSED (reg:CC 17 flags)
                    (nil))))))
(insn 35 34 36 2 (parallel [
            (set (reg:DI 113)
                (mult:DI (reg:DI 111)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":34:8 445 {*muldi3_1}
     (expr_list:REG_DEAD (reg:DI 111)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 36 35 37 2 (parallel [
            (set (reg/f:DI 7 sp)
                (minus:DI (reg/f:DI 7 sp)
                    (reg:DI 113)))
            (clobber (reg:CC 17 flags))
        ]) "main.c":34:8 303 {*subdi_1}
     (expr_list:REG_DEAD (reg:DI 113)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 37 36 38 2 (set (reg:DI 114)
        (reg/f:DI 7 sp)) "main.c":34:8 80 {*movdi_internal}
     (nil))
(insn 38 37 39 2 (parallel [
            (set (reg/f:DI 115)
                (plus:DI (reg:DI 114)
                    (const_int 0 [0])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":34:8 230 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 114)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 39 38 40 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [3 buf_write.5+0 S8 A64])
        (reg/f:DI 115)) "main.c":34:8 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 115)
        (nil)))
(insn 40 39 41 2 (set (reg:SI 103 [ FILE_SIZE.6_22 ])
        (const_int 10 [0xa])) "main.c":35:3 81 {*movsi_internal}
     (nil))
(insn 41 40 42 2 (set (reg:DI 116)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [3 buf_write.5+0 S8 A64])) "main.c":35:3 80 {*movdi_internal}
     (nil))
(insn 42 41 43 2 (set (reg:SI 4 si)
        (reg:SI 103 [ FILE_SIZE.6_22 ])) "main.c":35:3 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 103 [ FILE_SIZE.6_22 ])
        (nil)))
(insn 43 42 44 2 (set (reg:DI 5 di)
        (reg:DI 116)) "main.c":35:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 116)
        (nil)))
(call_insn 44 43 45 2 (call (mem:QI (symbol_ref:DI ("fill_random") [flags 0x3]  <function_decl 0x7fa610820900 fill_random>) [0 fill_random S1 A8])
        (const_int 0 [0])) "main.c":35:3 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 45 44 46 2 (set (reg:DI 117)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7fa6108a1ab0 *.LC2>)) "main.c":37:32 80 {*movdi_internal}
     (nil))
(insn 46 45 47 2 (set (reg:DI 5 di)
        (reg:DI 117)) "main.c":37:32 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 117)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7fa6108a1ab0 *.LC2>)
            (nil))))
(call_insn 47 46 48 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("file_tester_create") [flags 0x41]  <function_decl 0x7fa610b72e00 file_tester_create>) [0 file_tester_create S1 A8])
            (const_int 0 [0]))) "main.c":37:32 909 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 48 47 49 2 (set (reg:DI 118)
        (reg:DI 0 ax)) "main.c":37:32 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 49 48 50 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [8 tester+0 S8 A128])
        (reg:DI 118)) "main.c":37:32 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 118)
        (nil)))
(insn 50 49 51 2 (set (reg:DI 119)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [8 tester+0 S8 A128])) "main.c":38:3 80 {*movdi_internal}
     (nil))
(insn 51 50 52 2 (set (reg:DI 120)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7fa6108a1b40 *.LC3>)) "main.c":38:3 80 {*movdi_internal}
     (nil))
(insn 52 51 53 2 (set (reg:DI 1 dx)
        (reg:DI 120)) "main.c":38:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 120)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7fa6108a1b40 *.LC3>)
            (nil))))
(insn 53 52 54 2 (set (reg:SI 4 si)
        (const_int 0 [0])) "main.c":38:3 81 {*movsi_internal}
     (nil))
(insn 54 53 55 2 (set (reg:DI 5 di)
        (reg:DI 119)) "main.c":38:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 119)
        (nil)))
(call_insn 55 54 56 2 (call (mem:QI (symbol_ref:DI ("file_tester_init") [flags 0x41]  <function_decl 0x7fa610b77000 file_tester_init>) [0 file_tester_init S1 A8])
        (const_int 0 [0])) "main.c":38:3 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 56 55 57 2 (set (reg:SI 104 [ FILE_SIZE.7_23 ])
        (const_int 10 [0xa])) "main.c":39:3 81 {*movsi_internal}
     (nil))
(insn 57 56 58 2 (set (reg:DI 121)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [3 buf_write.5+0 S8 A64])) "main.c":39:3 80 {*movdi_internal}
     (nil))
(insn 58 57 59 2 (set (reg:DI 122)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [8 tester+0 S8 A128])) "main.c":39:3 80 {*movdi_internal}
     (nil))
(insn 59 58 60 2 (set (reg:DI 2 cx)
        (reg:DI 121)) "main.c":39:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 121)
        (nil)))
(insn 60 59 61 2 (set (reg:SI 1 dx)
        (reg:SI 104 [ FILE_SIZE.7_23 ])) "main.c":39:3 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 104 [ FILE_SIZE.7_23 ])
        (nil)))
(insn 61 60 62 2 (set (reg:SI 4 si)
        (const_int 0 [0])) "main.c":39:3 81 {*movsi_internal}
     (nil))
(insn 62 61 63 2 (set (reg:DI 5 di)
        (reg:DI 122)) "main.c":39:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 122)
        (nil)))
(call_insn 63 62 64 2 (call (mem:QI (symbol_ref:DI ("file_tester_write") [flags 0x41]  <function_decl 0x7fa610b77100 file_tester_write>) [0 file_tester_write S1 A8])
        (const_int 0 [0])) "main.c":39:3 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:SI 1 dx)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 64 63 65 2 (set (reg:SI 105 [ FILE_SIZE.8_24 ])
        (const_int 10 [0xa])) "main.c":40:3 81 {*movsi_internal}
     (nil))
(insn 65 64 66 2 (set (reg:DI 123)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [3 buf_write.5+0 S8 A64])) "main.c":40:3 80 {*movdi_internal}
     (nil))
(insn 66 65 67 2 (set (reg:DI 124)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [8 tester+0 S8 A128])) "main.c":40:3 80 {*movdi_internal}
     (nil))
(insn 67 66 68 2 (set (reg:DI 2 cx)
        (reg:DI 123)) "main.c":40:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 123)
        (nil)))
(insn 68 67 69 2 (set (reg:SI 1 dx)
        (reg:SI 105 [ FILE_SIZE.8_24 ])) "main.c":40:3 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 105 [ FILE_SIZE.8_24 ])
        (nil)))
(insn 69 68 70 2 (set (reg:SI 4 si)
        (const_int 0 [0])) "main.c":40:3 81 {*movsi_internal}
     (nil))
(insn 70 69 71 2 (set (reg:DI 5 di)
        (reg:DI 124)) "main.c":40:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 124)
        (nil)))
(call_insn 71 70 72 2 (call (mem:QI (symbol_ref:DI ("file_tester_read") [flags 0x41]  <function_decl 0x7fa610b77200 file_tester_read>) [0 file_tester_read S1 A8])
        (const_int 0 [0])) "main.c":40:3 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:SI 1 dx)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 72 71 73 2 (set (reg:DI 125)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [8 tester+0 S8 A128])) "main.c":41:3 80 {*movdi_internal}
     (nil))
(insn 73 72 74 2 (set (reg:DI 5 di)
        (reg:DI 125)) "main.c":41:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 125)
        (nil)))
(call_insn 74 73 75 2 (call (mem:QI (symbol_ref:DI ("file_tester_destory") [flags 0x41]  <function_decl 0x7fa610b72f00 file_tester_destory>) [0 file_tester_destory S1 A8])
        (const_int 0 [0])) "main.c":41:3 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 75 74 76 2 (clobber (mem:BLK (scratch) [0  A8])) -1
     (nil))
(insn 76 75 77 2 (clobber (mem:BLK (reg/f:DI 7 sp) [0  A8])) -1
     (nil))
(insn 77 76 87 2 (set (reg/f:DI 7 sp)
        (reg/f:DI 106 [ saved_stack.9_27 ])) 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 106 [ saved_stack.9_27 ])
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 87 77 79 2 (const_int 0 [0]) "main.c":42:1 928 {nop}
     (nil))
(insn 79 87 80 2 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 19 frame)
                                (const_int -8 [0xfffffffffffffff8])) [9 D.3538+0 S8 A64])
                        (mem/v/f:DI (const_int 40 [0x28]) [0 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_TEST))
            (clobber (reg:DI 129))
        ]) "main.c":42:1 1270 {stack_protect_test_1_di}
     (expr_list:REG_UNUSED (reg:DI 129)
        (nil)))
(jump_insn 80 79 85 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 83)
            (pc))) "main.c":42:1 891 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 83)
;;  succ:       4
;;              3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
(note 85 80 81 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(call_insn 81 85 82 3 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fa61088e500 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) "main.c":42:1 898 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 19 [frame]

(barrier 82 81 83)
;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 1, flags: (RTL)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(code_label 83 82 86 4 8 (nil) [1 uses])
(note 86 83 0 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]


;; Function test_file_write_outbound (test_file_write_outbound, funcdef_no=9, decl_uid=3340, cgraph_uid=10, symbol_order=10)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 5 n_edges 4 count 5 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { }
;; 4 succs { 1 }
Removing SCRATCH to p140 in insn #3 (nop 2)
rescanning insn with uid = 3.
Removing SCRATCH to p141 in insn #92 (nop 3)
rescanning insn with uid = 92.
Building IRA IR
verify found no changes in insn with uid = 55.
verify found no changes in insn with uid = 58.
verify found no changes in insn with uid = 66.
verify found no changes in insn with uid = 75.
verify found no changes in insn with uid = 84.
verify found no changes in insn with uid = 87.
verify found no changes in insn with uid = 94.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 5 n_edges 4 count 5 (    1)

Pass 0 for finding pseudo/allocno costs

    r141: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r141,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a51 (r140,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r139,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r138,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r137: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r137,l0) best DIREG, allocno GENERAL_REGS
    r136: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r136,l0) best DIREG, allocno GENERAL_REGS
    r135: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r135,l0) best SIREG, allocno GENERAL_REGS
    r134: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r134,l0) best CREG, allocno GENERAL_REGS
    r133: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a7 (r133,l0) best DIREG, allocno GENERAL_REGS
    r132: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a8 (r132,l0) best SIREG, allocno GENERAL_REGS
    r131: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a10 (r131,l0) best CREG, allocno GENERAL_REGS
    r130: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a12 (r130,l0) best DREG, allocno GENERAL_REGS
    r129: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a11 (r129,l0) best DIREG, allocno GENERAL_REGS
    r128: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a13 (r128,l0) best AREG, allocno GENERAL_REGS
    r127: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a14 (r127,l0) best DIREG, allocno GENERAL_REGS
    r126: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a15 (r126,l0) best DIREG, allocno GENERAL_REGS
    r125: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r125,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r124: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r124,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r123,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a23 (r122,l0) best DREG, allocno GENERAL_REGS
    r121: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a20 (r121,l0) best AREG, allocno GENERAL_REGS
    r119: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a22 (r119,l0) best AREG, allocno GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a35 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a41 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a48 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a50 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r110,l0) best DREG, allocno GENERAL_REGS
    r109: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a9 (r109,l0) best DREG, allocno GENERAL_REGS
    r108: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a16 (r108,l0) best SIREG, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a36 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a37 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a38 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a39 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a40 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a42 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a43 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a44 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a45 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a46 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a47 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a49 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r141,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:6000 NO_REX_SSE_REGS:6000 SSE_REGS:6000 MMX_REGS:13000 INT_SSE_REGS:13000 ALL_REGS:212000 MEM:6000
  a1(r111,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:7000
  a2(r137,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a3(r136,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a4(r135,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a5(r110,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:7000
  a6(r134,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a7(r133,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a8(r132,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a9(r109,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:7000
  a10(r131,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a11(r129,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a12(r130,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a13(r128,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:6000 NO_REX_SSE_REGS:6000 SSE_REGS:6000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a14(r127,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a15(r126,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a16(r108,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:7000
  a17(r125,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:6000 NO_REX_SSE_REGS:6000 SSE_REGS:6000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a18(r124,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a19(r123,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a20(r121,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a21(r139,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a22(r119,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a23(r122,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:6000 NO_REX_SSE_REGS:6000 SSE_REGS:6000 MMX_REGS:13000 INT_SSE_REGS:13000 ALL_REGS:212000 MEM:6000
  a24(r118,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a25(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a26(r138,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a27(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a28(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a29(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a30(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a31(r102,l0) costs: AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:2000
  a32(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:6000 NO_REX_SSE_REGS:6000 SSE_REGS:6000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a33(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a34(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a35(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a36(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a37(r92,l0) costs: AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:2000
  a38(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:6000 NO_REX_SSE_REGS:6000 SSE_REGS:6000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a39(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a40(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a41(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a42(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a43(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:6000 NO_REX_SSE_REGS:6000 SSE_REGS:6000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:7000
  a44(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:6000 NO_REX_SSE_REGS:6000 SSE_REGS:6000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a45(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a46(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a47(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a48(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a49(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a50(r112,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:6000 NO_REX_SSE_REGS:6000 SSE_REGS:6000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a51(r140,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:6000 NO_REX_SSE_REGS:6000 SSE_REGS:6000 MMX_REGS:13000 INT_SSE_REGS:13000 ALL_REGS:212000 MEM:6000

   Insn 94(l0): point = 1
   Insn 93(l0): point = 4
   Insn 92(l0): point = 6
   Insn 100(l0): point = 8
   Insn 90(l0): point = 10
   Insn 89(l0): point = 12
   Insn 88(l0): point = 14
   Insn 87(l0): point = 16
   Insn 86(l0): point = 18
   Insn 85(l0): point = 20
   Insn 84(l0): point = 22
   Insn 83(l0): point = 24
   Insn 82(l0): point = 26
   Insn 81(l0): point = 28
   Insn 80(l0): point = 30
   Insn 79(l0): point = 32
   Insn 78(l0): point = 34
   Insn 77(l0): point = 36
   Insn 76(l0): point = 38
   Insn 75(l0): point = 40
   Insn 74(l0): point = 42
   Insn 73(l0): point = 44
   Insn 72(l0): point = 46
   Insn 71(l0): point = 48
   Insn 70(l0): point = 50
   Insn 69(l0): point = 52
   Insn 68(l0): point = 54
   Insn 67(l0): point = 56
   Insn 66(l0): point = 58
   Insn 65(l0): point = 60
   Insn 64(l0): point = 62
   Insn 63(l0): point = 64
   Insn 62(l0): point = 66
   Insn 61(l0): point = 68
   Insn 60(l0): point = 70
   Insn 59(l0): point = 72
   Insn 58(l0): point = 74
   Insn 57(l0): point = 76
   Insn 56(l0): point = 78
   Insn 55(l0): point = 80
   Insn 54(l0): point = 82
   Insn 53(l0): point = 84
   Insn 52(l0): point = 86
   Insn 51(l0): point = 88
   Insn 50(l0): point = 90
   Insn 49(l0): point = 92
   Insn 48(l0): point = 94
   Insn 47(l0): point = 96
   Insn 46(l0): point = 98
   Insn 45(l0): point = 100
   Insn 102(l0): point = 103
   Insn 44(l0): point = 105
   Insn 43(l0): point = 107
   Insn 101(l0): point = 109
   Insn 42(l0): point = 111
   Insn 41(l0): point = 113
   Insn 40(l0): point = 115
   Insn 39(l0): point = 117
   Insn 38(l0): point = 119
   Insn 36(l0): point = 121
   Insn 35(l0): point = 123
   Insn 34(l0): point = 125
   Insn 33(l0): point = 127
   Insn 32(l0): point = 129
   Insn 31(l0): point = 131
   Insn 30(l0): point = 133
   Insn 23(l0): point = 135
   Insn 22(l0): point = 137
   Insn 21(l0): point = 139
   Insn 20(l0): point = 141
   Insn 19(l0): point = 143
   Insn 18(l0): point = 145
   Insn 17(l0): point = 147
   Insn 16(l0): point = 149
   Insn 15(l0): point = 151
   Insn 14(l0): point = 153
   Insn 13(l0): point = 155
   Insn 12(l0): point = 157
   Insn 11(l0): point = 159
   Insn 10(l0): point = 161
   Insn 9(l0): point = 163
   Insn 8(l0): point = 165
   Insn 7(l0): point = 167
   Insn 6(l0): point = 169
   Insn 3(l0): point = 171
 a0(r141): [6..6]
 a1(r111): [11..167]
 a2(r137): [19..20]
 a3(r136): [25..32]
 a4(r135): [27..34]
 a5(r110): [29..38]
 a6(r134): [31..36]
 a7(r133): [43..50]
 a8(r132): [45..52]
 a9(r109): [47..56]
 a10(r131): [49..54]
 a11(r129): [61..68]
 a12(r130): [65..66]
 a13(r128): [71..72]
 a14(r127): [77..78]
 a15(r126): [83..86]
 a16(r108): [85..88]
 a17(r125): [91..92]
 a18(r124): [93..94]
 a19(r123): [97..98]
 a20(r121): [99..100]
 a21(r139): [101..103]
 a22(r119): [102..105]
 a23(r122): [100..101]
 a24(r118): [106..107]
 a25(r107): [106..111]
 a26(r138): [108..109]
 a27(r106): [112..113]
 a28(r105): [114..115]
 a29(r117): [116..117]
 a30(r104): [116..119]
 a31(r102 [0]): [122..173]
 a31(r102 [1]): [121..173]
 a32(r101): [124..125]
 a33(r100): [126..127]
 a34(r99): [128..129]
 a35(r116): [130..131]
 a36(r98): [130..133]
 a37(r92 [0]): [136..173]
 a37(r92 [1]): [135..173]
 a38(r91): [138..139]
 a39(r90): [140..141]
 a40(r89): [142..143]
 a41(r114): [144..145]
 a42(r88): [144..147]
 a43(r87): [150..151]
 a44(r86): [152..153]
 a45(r85): [154..155]
 a46(r84): [156..157]
 a47(r83): [158..159]
 a48(r113): [160..161]
 a49(r82): [160..163]
 a50(r112): [168..169]
 a51(r140): [171..171]
Compressing live ranges: from 174 to 68 - 39%
Ranges after the compression:
 a0(r141): [0..0]
 a1(r111): [1..63]
 a2(r137): [1..2]
 a3(r136): [3..4]
 a4(r135): [3..4]
 a5(r110): [3..4]
 a6(r134): [3..4]
 a7(r133): [5..6]
 a8(r132): [5..6]
 a9(r109): [5..6]
 a10(r131): [5..6]
 a11(r129): [7..8]
 a12(r130): [7..8]
 a13(r128): [9..10]
 a14(r127): [11..12]
 a15(r126): [13..14]
 a16(r108): [13..14]
 a17(r125): [15..16]
 a18(r124): [17..18]
 a19(r123): [19..20]
 a20(r121): [21..22]
 a21(r139): [23..25]
 a22(r119): [24..25]
 a23(r122): [22..23]
 a24(r118): [26..27]
 a25(r107): [26..29]
 a26(r138): [28..29]
 a27(r106): [30..31]
 a28(r105): [32..33]
 a29(r117): [34..35]
 a30(r104): [34..35]
 a31(r102 [0]): [36..67]
 a31(r102 [1]): [36..67]
 a32(r101): [36..37]
 a33(r100): [38..39]
 a34(r99): [40..41]
 a35(r116): [42..43]
 a36(r98): [42..43]
 a37(r92 [0]): [44..67]
 a37(r92 [1]): [44..67]
 a38(r91): [44..45]
 a39(r90): [46..47]
 a40(r89): [48..49]
 a41(r114): [50..51]
 a42(r88): [50..51]
 a43(r87): [52..53]
 a44(r86): [54..55]
 a45(r85): [56..57]
 a46(r84): [58..59]
 a47(r83): [60..61]
 a48(r113): [62..63]
 a49(r82): [62..63]
 a50(r112): [64..65]
 a51(r140): [66..66]
  pref0:a2(r137)<-hr5@1500
  pref1:a3(r136)<-hr5@1500
  pref2:a4(r135)<-hr4@1500
  pref3:a6(r134)<-hr2@1500
  pref4:a7(r133)<-hr5@1500
  pref5:a8(r132)<-hr4@1500
  pref6:a10(r131)<-hr2@1500
  pref7:a12(r130)<-hr1@1500
  pref8:a11(r129)<-hr5@1500
  pref9:a13(r128)<-hr0@1500
  pref10:a14(r127)<-hr5@1500
  pref11:a15(r126)<-hr5@1500
  pref12:a23(r122)<-hr1@1000
  pref13:a20(r121)<-hr0@1000
  pref14:a22(r119)<-hr0@1000
  pref15:a5(r110)<-hr1@1500
  pref16:a9(r109)<-hr1@1500
  pref17:a16(r108)<-hr4@1500
  regions=1, blocks=5, points=68
    allocnos=52 (big 2), copies=0, conflicts=0, ranges=54
Disposition:
   49:r82  l0     1   47:r83  l0     0   46:r84  l0     0   45:r85  l0     0
   44:r86  l0     0   43:r87  l0     0   42:r88  l0     1   40:r89  l0     0
   39:r90  l0     0   38:r91  l0     0   37:r92  l0    36   36:r98  l0     1
   34:r99  l0     0   33:r100 l0     0   32:r101 l0     0   31:r102 l0     4
   30:r104 l0     1   28:r105 l0     0   27:r106 l0     0   25:r107 l0     0
   16:r108 l0     1    9:r109 l0     5    5:r110 l0     5    1:r111 l0     3
   50:r112 l0     0   48:r113 l0     0   41:r114 l0     0   35:r116 l0     0
   29:r117 l0     0   24:r118 l0     1   22:r119 l0     0   20:r121 l0     0
   23:r122 l0     2   19:r123 l0     0   18:r124 l0     0   17:r125 l0     0
   15:r126 l0     0   14:r127 l0     0   13:r128 l0     0   11:r129 l0     0
   12:r130 l0     1   10:r131 l0     1    8:r132 l0     4    7:r133 l0     0
    6:r134 l0     1    4:r135 l0     4    3:r136 l0     0    2:r137 l0     0
   26:r138 l0     1   21:r139 l0     1   51:r140 l0     0    0:r141 l0     0
+++Costs: overall -9000, reg -9000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


test_file_write_outbound

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;;  ref usage 	r0={8d,1u} r1={11d,3u} r2={10d,2u} r4={12d,4u} r5={14d,6u} r6={1d,4u} r7={3d,17u} r8={7d} r9={7d} r10={7d} r11={7d} r12={7d} r13={7d} r14={7d} r15={7d} r16={1d,3u} r17={24d,1u} r18={7d} r19={1d,23u,4e} r20={8d} r21={8d} r22={8d} r23={8d} r24={8d} r25={8d} r26={8d} r27={8d} r28={7d} r29={7d} r30={7d} r31={7d} r32={7d} r33={7d} r34={7d} r35={7d} r36={8d} r37={8d} r38={7d} r39={7d} r44={7d} r45={7d} r46={7d} r47={7d} r48={7d} r49={7d} r50={7d} r51={7d} r52={7d} r53={7d} r54={7d} r55={7d} r56={7d} r57={7d} r58={7d} r59={7d} r60={7d} r61={7d} r62={7d} r63={7d} r64={7d} r65={7d} r66={7d} r67={7d} r68={7d} r69={7d} r70={7d} r71={7d} r72={7d} r73={7d} r74={7d} r75={7d} r82={1d,1u,1e} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u,1e} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={2d,2u} r98={1d,1u,1e} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={2d,2u} r104={1d,1u,1e} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,2u} r121={1d,1u} r122={1d} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} r128={1d,1u} r129={1d,1u} r130={1d,1u} r131={1d,1u} r132={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,2u} r140={1d} r141={1d} 
;;    total ref usage 701{576d,117u,8e} in 85{78 regular + 7 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 92 102
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 92 102
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 82 83 84 85 86 87 88 89 90 91 92 98 99 100 101 102 104 105 106 107 108 109 110 111 112 113 114 116 117 118 119 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 4 3 2 NOTE_INSN_FUNCTION_BEG)
(insn 3 2 6 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 19 frame)
                        (const_int -8 [0xfffffffffffffff8])) [9 D.3543+0 S8 A64])
                (unspec:DI [
                        (mem/v/f:DI (const_int 40 [0x28]) [0 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_SET))
            (set (reg:DI 140)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "main.c":44:33 1265 {stack_protect_set_1_di}
     (expr_list:REG_UNUSED (reg:DI 140)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 6 3 7 2 (set (reg:DI 112)
        (reg/f:DI 7 sp)) "main.c":44:33 80 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg/f:DI 111 [ saved_stack.19_32 ])
        (reg:DI 112)) "main.c":44:33 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 112)
        (nil)))
(insn 8 7 9 2 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -36 [0xffffffffffffffdc])) [1 WRITE_OFFSET+0 S4 A32])
        (const_int 5 [0x5])) "main.c":46:13 81 {*movsi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:SI 82 [ FILE_SIZE.10_1 ])
        (const_int 10 [0xa])) "main.c":47:28 81 {*movsi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:SI 113)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -36 [0xffffffffffffffdc])) [1 WRITE_OFFSET+0 S4 A32])) "main.c":47:28 81 {*movsi_internal}
     (nil))
(insn 11 10 12 2 (parallel [
            (set (reg:SI 83 [ _2 ])
                (plus:SI (reg:SI 82 [ FILE_SIZE.10_1 ])
                    (reg:SI 113)))
            (clobber (reg:CC 17 flags))
        ]) "main.c":47:28 229 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 113)
        (expr_list:REG_DEAD (reg:SI 82 [ FILE_SIZE.10_1 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:SI (reg:SI 82 [ FILE_SIZE.10_1 ])
                        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                                (const_int -36 [0xffffffffffffffdc])) [1 WRITE_OFFSET+0 S4 A32]))
                    (nil))))))
(insn 12 11 13 2 (parallel [
            (set (reg:SI 84 [ _3 ])
                (plus:SI (reg:SI 83 [ _2 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":47:43 229 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 83 [ _2 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 13 12 14 2 (set (reg:DI 85 [ _4 ])
        (sign_extend:DI (reg:SI 84 [ _3 ]))) "main.c":47:43 154 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 84 [ _3 ])
        (nil)))
(insn 14 13 15 2 (parallel [
            (set (reg:DI 86 [ _5 ])
                (plus:DI (reg:DI 85 [ _4 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":47:8 230 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 85 [ _4 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 15 14 16 2 (set (reg:DI 87 [ _6 ])
        (reg:DI 86 [ _5 ])) "main.c":47:8 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 86 [ _5 ])
        (nil)))
(insn 16 15 17 2 (set (mem/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -32 [0xffffffffffffffe0])) [10 D.3452+0 S8 A128])
        (reg:DI 87 [ _6 ])) "main.c":47:8 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 87 [ _6 ])
        (nil)))
(insn 17 16 18 2 (set (reg:SI 88 [ FILE_SIZE.11_7 ])
        (const_int 10 [0xa])) "main.c":47:28 81 {*movsi_internal}
     (nil))
(insn 18 17 19 2 (set (reg:SI 114)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -36 [0xffffffffffffffdc])) [1 WRITE_OFFSET+0 S4 A32])) "main.c":47:28 81 {*movsi_internal}
     (nil))
(insn 19 18 20 2 (parallel [
            (set (reg:SI 89 [ _8 ])
                (plus:SI (reg:SI 88 [ FILE_SIZE.11_7 ])
                    (reg:SI 114)))
            (clobber (reg:CC 17 flags))
        ]) "main.c":47:28 229 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 114)
        (expr_list:REG_DEAD (reg:SI 88 [ FILE_SIZE.11_7 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:SI (reg:SI 88 [ FILE_SIZE.11_7 ])
                        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                                (const_int -36 [0xffffffffffffffdc])) [1 WRITE_OFFSET+0 S4 A32]))
                    (nil))))))
(insn 20 19 21 2 (parallel [
            (set (reg:SI 90 [ _9 ])
                (plus:SI (reg:SI 89 [ _8 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":47:43 229 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 89 [ _8 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 21 20 22 2 (set (reg:DI 91 [ _10 ])
        (sign_extend:DI (reg:SI 90 [ _9 ]))) "main.c":47:8 154 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 90 [ _9 ])
        (nil)))
(insn 22 21 23 2 (set (subreg:DI (reg:TI 92 [ _11 ]) 0)
        (reg:DI 91 [ _10 ])) "main.c":47:8 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 91 [ _10 ])
        (nil)))
(insn 23 22 30 2 (set (subreg:DI (reg:TI 92 [ _11 ]) 8)
        (const_int 0 [0])) "main.c":47:8 80 {*movdi_internal}
     (expr_list:REG_UNUSED (reg:TI 92 [ _11 ])
        (nil)))
(insn 30 23 31 2 (set (reg:SI 98 [ FILE_SIZE.13_17 ])
        (const_int 10 [0xa])) "main.c":47:28 81 {*movsi_internal}
     (nil))
(insn 31 30 32 2 (set (reg:SI 116)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -36 [0xffffffffffffffdc])) [1 WRITE_OFFSET+0 S4 A32])) "main.c":47:28 81 {*movsi_internal}
     (nil))
(insn 32 31 33 2 (parallel [
            (set (reg:SI 99 [ _18 ])
                (plus:SI (reg:SI 98 [ FILE_SIZE.13_17 ])
                    (reg:SI 116)))
            (clobber (reg:CC 17 flags))
        ]) "main.c":47:28 229 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 116)
        (expr_list:REG_DEAD (reg:SI 98 [ FILE_SIZE.13_17 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:SI (reg:SI 98 [ FILE_SIZE.13_17 ])
                        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                                (const_int -36 [0xffffffffffffffdc])) [1 WRITE_OFFSET+0 S4 A32]))
                    (nil))))))
(insn 33 32 34 2 (parallel [
            (set (reg:SI 100 [ _19 ])
                (plus:SI (reg:SI 99 [ _18 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":47:43 229 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 99 [ _18 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 34 33 35 2 (set (reg:DI 101 [ _20 ])
        (sign_extend:DI (reg:SI 100 [ _19 ]))) "main.c":47:8 154 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 100 [ _19 ])
        (nil)))
(insn 35 34 36 2 (set (subreg:DI (reg:TI 102 [ _21 ]) 0)
        (reg:DI 101 [ _20 ])) "main.c":47:8 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 101 [ _20 ])
        (nil)))
(insn 36 35 38 2 (set (subreg:DI (reg:TI 102 [ _21 ]) 8)
        (const_int 0 [0])) "main.c":47:8 80 {*movdi_internal}
     (expr_list:REG_UNUSED (reg:TI 102 [ _21 ])
        (nil)))
(insn 38 36 39 2 (set (reg:SI 104 [ FILE_SIZE.14_23 ])
        (const_int 10 [0xa])) "main.c":47:28 81 {*movsi_internal}
     (nil))
(insn 39 38 40 2 (set (reg:SI 117)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -36 [0xffffffffffffffdc])) [1 WRITE_OFFSET+0 S4 A32])) "main.c":47:28 81 {*movsi_internal}
     (nil))
(insn 40 39 41 2 (parallel [
            (set (reg:SI 105 [ _24 ])
                (plus:SI (reg:SI 104 [ FILE_SIZE.14_23 ])
                    (reg:SI 117)))
            (clobber (reg:CC 17 flags))
        ]) "main.c":47:28 229 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 117)
        (expr_list:REG_DEAD (reg:SI 104 [ FILE_SIZE.14_23 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:SI (reg:SI 104 [ FILE_SIZE.14_23 ])
                        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                                (const_int -36 [0xffffffffffffffdc])) [1 WRITE_OFFSET+0 S4 A32]))
                    (nil))))))
(insn 41 40 42 2 (parallel [
            (set (reg:SI 106 [ _25 ])
                (plus:SI (reg:SI 105 [ _24 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":47:43 229 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 105 [ _24 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 42 41 101 2 (set (reg:DI 107 [ _26 ])
        (sign_extend:DI (reg:SI 106 [ _25 ]))) "main.c":47:8 154 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 106 [ _25 ])
        (nil)))
(insn 101 42 43 2 (set (reg:DI 138)
        (const_int 16 [0x10])) "main.c":47:8 80 {*movdi_internal}
     (nil))
(insn 43 101 44 2 (parallel [
            (set (reg:DI 118)
                (plus:DI (reg:DI 138)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":47:8 230 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 138)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 44 43 102 2 (parallel [
            (set (reg:DI 119)
                (plus:DI (reg:DI 107 [ _26 ])
                    (reg:DI 118)))
            (clobber (reg:CC 17 flags))
        ]) "main.c":47:8 230 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 118)
        (expr_list:REG_DEAD (reg:DI 107 [ _26 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 102 44 45 2 (set (reg:DI 139)
        (const_int 16 [0x10])) "main.c":47:8 80 {*movdi_internal}
     (nil))
(insn 45 102 46 2 (parallel [
            (set (reg:DI 121)
                (udiv:DI (reg:DI 119)
                    (reg:DI 139)))
            (set (reg:DI 122)
                (umod:DI (reg:DI 119)
                    (reg:DI 139)))
            (clobber (reg:CC 17 flags))
        ]) "main.c":47:8 492 {*udivmoddi4}
     (expr_list:REG_DEAD (reg:DI 139)
        (expr_list:REG_DEAD (reg:DI 119)
            (expr_list:REG_UNUSED (reg:DI 122)
                (expr_list:REG_UNUSED (reg:CC 17 flags)
                    (nil))))))
(insn 46 45 47 2 (parallel [
            (set (reg:DI 123)
                (mult:DI (reg:DI 121)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":47:8 445 {*muldi3_1}
     (expr_list:REG_DEAD (reg:DI 121)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 47 46 48 2 (parallel [
            (set (reg/f:DI 7 sp)
                (minus:DI (reg/f:DI 7 sp)
                    (reg:DI 123)))
            (clobber (reg:CC 17 flags))
        ]) "main.c":47:8 303 {*subdi_1}
     (expr_list:REG_DEAD (reg:DI 123)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 48 47 49 2 (set (reg:DI 124)
        (reg/f:DI 7 sp)) "main.c":47:8 80 {*movdi_internal}
     (nil))
(insn 49 48 50 2 (parallel [
            (set (reg/f:DI 125)
                (plus:DI (reg:DI 124)
                    (const_int 0 [0])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":47:8 230 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 124)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 50 49 51 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [3 buf_write.15+0 S8 A64])
        (reg/f:DI 125)) "main.c":47:8 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 125)
        (nil)))
(insn 51 50 52 2 (set (reg:SI 108 [ FILE_SIZE.16_27 ])
        (const_int 10 [0xa])) "main.c":48:3 81 {*movsi_internal}
     (nil))
(insn 52 51 53 2 (set (reg:DI 126)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [3 buf_write.15+0 S8 A64])) "main.c":48:3 80 {*movdi_internal}
     (nil))
(insn 53 52 54 2 (set (reg:SI 4 si)
        (reg:SI 108 [ FILE_SIZE.16_27 ])) "main.c":48:3 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 108 [ FILE_SIZE.16_27 ])
        (nil)))
(insn 54 53 55 2 (set (reg:DI 5 di)
        (reg:DI 126)) "main.c":48:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 126)
        (nil)))
(call_insn 55 54 56 2 (call (mem:QI (symbol_ref:DI ("fill_random") [flags 0x3]  <function_decl 0x7fa610820900 fill_random>) [0 fill_random S1 A8])
        (const_int 0 [0])) "main.c":48:3 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 56 55 57 2 (set (reg:DI 127)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7fa6108ae000 *.LC4>)) "main.c":50:32 80 {*movdi_internal}
     (nil))
(insn 57 56 58 2 (set (reg:DI 5 di)
        (reg:DI 127)) "main.c":50:32 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 127)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7fa6108ae000 *.LC4>)
            (nil))))
(call_insn 58 57 59 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("file_tester_create") [flags 0x41]  <function_decl 0x7fa610b72e00 file_tester_create>) [0 file_tester_create S1 A8])
            (const_int 0 [0]))) "main.c":50:32 909 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 59 58 60 2 (set (reg:DI 128)
        (reg:DI 0 ax)) "main.c":50:32 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 60 59 61 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [8 tester+0 S8 A128])
        (reg:DI 128)) "main.c":50:32 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 128)
        (nil)))
(insn 61 60 62 2 (set (reg:DI 129)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [8 tester+0 S8 A128])) "main.c":51:3 80 {*movdi_internal}
     (nil))
(insn 62 61 63 2 (set (reg:DI 130)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7fa6108ae090 *.LC5>)) "main.c":51:3 80 {*movdi_internal}
     (nil))
(insn 63 62 64 2 (set (reg:DI 1 dx)
        (reg:DI 130)) "main.c":51:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 130)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7fa6108ae090 *.LC5>)
            (nil))))
(insn 64 63 65 2 (set (reg:SI 4 si)
        (const_int 0 [0])) "main.c":51:3 81 {*movsi_internal}
     (nil))
(insn 65 64 66 2 (set (reg:DI 5 di)
        (reg:DI 129)) "main.c":51:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 129)
        (nil)))
(call_insn 66 65 67 2 (call (mem:QI (symbol_ref:DI ("file_tester_init") [flags 0x41]  <function_decl 0x7fa610b77000 file_tester_init>) [0 file_tester_init S1 A8])
        (const_int 0 [0])) "main.c":51:3 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 67 66 68 2 (set (reg:SI 109 [ FILE_SIZE.17_28 ])
        (const_int 10 [0xa])) "main.c":52:3 81 {*movsi_internal}
     (nil))
(insn 68 67 69 2 (set (reg:DI 131)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [3 buf_write.15+0 S8 A64])) "main.c":52:3 80 {*movdi_internal}
     (nil))
(insn 69 68 70 2 (set (reg:SI 132)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -36 [0xffffffffffffffdc])) [1 WRITE_OFFSET+0 S4 A32])) "main.c":52:3 81 {*movsi_internal}
     (nil))
(insn 70 69 71 2 (set (reg:DI 133)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [8 tester+0 S8 A128])) "main.c":52:3 80 {*movdi_internal}
     (nil))
(insn 71 70 72 2 (set (reg:DI 2 cx)
        (reg:DI 131)) "main.c":52:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 131)
        (nil)))
(insn 72 71 73 2 (set (reg:SI 1 dx)
        (reg:SI 109 [ FILE_SIZE.17_28 ])) "main.c":52:3 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 109 [ FILE_SIZE.17_28 ])
        (nil)))
(insn 73 72 74 2 (set (reg:SI 4 si)
        (reg:SI 132)) "main.c":52:3 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 132)
        (nil)))
(insn 74 73 75 2 (set (reg:DI 5 di)
        (reg:DI 133)) "main.c":52:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 133)
        (nil)))
(call_insn 75 74 76 2 (call (mem:QI (symbol_ref:DI ("file_tester_write") [flags 0x41]  <function_decl 0x7fa610b77100 file_tester_write>) [0 file_tester_write S1 A8])
        (const_int 0 [0])) "main.c":52:3 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:SI 1 dx)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 76 75 77 2 (set (reg:SI 110 [ FILE_SIZE.18_29 ])
        (const_int 10 [0xa])) "main.c":53:3 81 {*movsi_internal}
     (nil))
(insn 77 76 78 2 (set (reg:DI 134)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [3 buf_write.15+0 S8 A64])) "main.c":53:3 80 {*movdi_internal}
     (nil))
(insn 78 77 79 2 (set (reg:SI 135)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -36 [0xffffffffffffffdc])) [1 WRITE_OFFSET+0 S4 A32])) "main.c":53:3 81 {*movsi_internal}
     (nil))
(insn 79 78 80 2 (set (reg:DI 136)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [8 tester+0 S8 A128])) "main.c":53:3 80 {*movdi_internal}
     (nil))
(insn 80 79 81 2 (set (reg:DI 2 cx)
        (reg:DI 134)) "main.c":53:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 134)
        (nil)))
(insn 81 80 82 2 (set (reg:SI 1 dx)
        (reg:SI 110 [ FILE_SIZE.18_29 ])) "main.c":53:3 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 110 [ FILE_SIZE.18_29 ])
        (nil)))
(insn 82 81 83 2 (set (reg:SI 4 si)
        (reg:SI 135)) "main.c":53:3 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 135)
        (nil)))
(insn 83 82 84 2 (set (reg:DI 5 di)
        (reg:DI 136)) "main.c":53:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 136)
        (nil)))
(call_insn 84 83 85 2 (call (mem:QI (symbol_ref:DI ("file_tester_read") [flags 0x41]  <function_decl 0x7fa610b77200 file_tester_read>) [0 file_tester_read S1 A8])
        (const_int 0 [0])) "main.c":53:3 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:SI 1 dx)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 85 84 86 2 (set (reg:DI 137)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [8 tester+0 S8 A128])) "main.c":54:3 80 {*movdi_internal}
     (nil))
(insn 86 85 87 2 (set (reg:DI 5 di)
        (reg:DI 137)) "main.c":54:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 137)
        (nil)))
(call_insn 87 86 88 2 (call (mem:QI (symbol_ref:DI ("file_tester_destory") [flags 0x41]  <function_decl 0x7fa610b72f00 file_tester_destory>) [0 file_tester_destory S1 A8])
        (const_int 0 [0])) "main.c":54:3 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 88 87 89 2 (clobber (mem:BLK (scratch) [0  A8])) -1
     (nil))
(insn 89 88 90 2 (clobber (mem:BLK (reg/f:DI 7 sp) [0  A8])) -1
     (nil))
(insn 90 89 100 2 (set (reg/f:DI 7 sp)
        (reg/f:DI 111 [ saved_stack.19_32 ])) 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 111 [ saved_stack.19_32 ])
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 100 90 92 2 (const_int 0 [0]) "main.c":55:1 928 {nop}
     (nil))
(insn 92 100 93 2 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 19 frame)
                                (const_int -8 [0xfffffffffffffff8])) [9 D.3543+0 S8 A64])
                        (mem/v/f:DI (const_int 40 [0x28]) [0 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_TEST))
            (clobber (reg:DI 141))
        ]) "main.c":55:1 1270 {stack_protect_test_1_di}
     (expr_list:REG_UNUSED (reg:DI 141)
        (nil)))
(jump_insn 93 92 98 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 96)
            (pc))) "main.c":55:1 891 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 96)
;;  succ:       4
;;              3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
(note 98 93 94 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(call_insn 94 98 95 3 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fa61088e500 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) "main.c":55:1 898 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 19 [frame]

(barrier 95 94 96)
;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 1, flags: (RTL)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(code_label 96 95 99 4 10 (nil) [1 uses])
(note 99 96 0 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]


;; Function test_file_read_inbound (test_file_read_inbound, funcdef_no=10, decl_uid=3345, cgraph_uid=11, symbol_order=11)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 4 n_edges 3 count 4 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 7.
verify found no changes in insn with uid = 15.
verify found no changes in insn with uid = 22.
verify found no changes in insn with uid = 29.
verify found no changes in insn with uid = 36.
verify found no changes in insn with uid = 43.
verify found no changes in insn with uid = 46.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r94: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r94,l0) best DIREG, allocno GENERAL_REGS
    r93: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r93,l0) best CREG, allocno GENERAL_REGS
    r92: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r92,l0) best DIREG, allocno GENERAL_REGS
    r91: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r91,l0) best CREG, allocno GENERAL_REGS
    r90: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r90,l0) best DIREG, allocno GENERAL_REGS
    r89: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r89,l0) best CREG, allocno GENERAL_REGS
    r88: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r88,l0) best DIREG, allocno GENERAL_REGS
    r87: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a8 (r87,l0) best CREG, allocno GENERAL_REGS
    r86: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a7 (r86,l0) best DIREG, allocno GENERAL_REGS
    r85: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a10 (r85,l0) best DREG, allocno GENERAL_REGS
    r84: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a9 (r84,l0) best DIREG, allocno GENERAL_REGS
    r83: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a11 (r83,l0) best AREG, allocno GENERAL_REGS
    r82: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a12 (r82,l0) best DIREG, allocno GENERAL_REGS

  a0(r94,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a1(r92,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a2(r93,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a3(r90,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a4(r91,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a5(r88,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a6(r89,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a7(r86,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a8(r87,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a9(r84,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a10(r85,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a11(r83,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:6000 NO_REX_SSE_REGS:6000 SSE_REGS:6000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a12(r82,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000

   Insn 50(l0): point = 0
   Insn 46(l0): point = 3
   Insn 45(l0): point = 5
   Insn 44(l0): point = 7
   Insn 43(l0): point = 9
   Insn 42(l0): point = 11
   Insn 41(l0): point = 13
   Insn 40(l0): point = 15
   Insn 39(l0): point = 17
   Insn 38(l0): point = 19
   Insn 37(l0): point = 21
   Insn 36(l0): point = 23
   Insn 35(l0): point = 25
   Insn 34(l0): point = 27
   Insn 33(l0): point = 29
   Insn 32(l0): point = 31
   Insn 31(l0): point = 33
   Insn 30(l0): point = 35
   Insn 29(l0): point = 37
   Insn 28(l0): point = 39
   Insn 27(l0): point = 41
   Insn 26(l0): point = 43
   Insn 25(l0): point = 45
   Insn 24(l0): point = 47
   Insn 23(l0): point = 49
   Insn 22(l0): point = 51
   Insn 21(l0): point = 53
   Insn 20(l0): point = 55
   Insn 19(l0): point = 57
   Insn 18(l0): point = 59
   Insn 17(l0): point = 61
   Insn 16(l0): point = 63
   Insn 15(l0): point = 65
   Insn 14(l0): point = 67
   Insn 13(l0): point = 69
   Insn 12(l0): point = 71
   Insn 11(l0): point = 73
   Insn 10(l0): point = 75
   Insn 9(l0): point = 77
   Insn 8(l0): point = 79
   Insn 7(l0): point = 81
   Insn 6(l0): point = 83
   Insn 5(l0): point = 85
 a0(r94): [6..7]
 a1(r92): [12..21]
 a2(r93): [18..19]
 a3(r90): [26..35]
 a4(r91): [32..33]
 a5(r88): [40..49]
 a6(r89): [46..47]
 a7(r86): [54..63]
 a8(r87): [60..61]
 a9(r84): [68..75]
 a10(r85): [72..73]
 a11(r83): [78..79]
 a12(r82): [84..85]
Compressing live ranges: from 88 to 16 - 18%
Ranges after the compression:
 a0(r94): [0..1]
 a1(r92): [2..3]
 a2(r93): [2..3]
 a3(r90): [4..5]
 a4(r91): [4..5]
 a5(r88): [6..7]
 a6(r89): [6..7]
 a7(r86): [8..9]
 a8(r87): [8..9]
 a9(r84): [10..11]
 a10(r85): [10..11]
 a11(r83): [12..13]
 a12(r82): [14..15]
  pref0:a0(r94)<-hr5@1500
  pref1:a2(r93)<-hr2@1500
  pref2:a1(r92)<-hr5@1500
  pref3:a4(r91)<-hr2@1500
  pref4:a3(r90)<-hr5@1500
  pref5:a6(r89)<-hr2@1500
  pref6:a5(r88)<-hr5@1500
  pref7:a8(r87)<-hr2@1500
  pref8:a7(r86)<-hr5@1500
  pref9:a10(r85)<-hr1@1500
  pref10:a9(r84)<-hr5@1500
  pref11:a11(r83)<-hr0@1500
  pref12:a12(r82)<-hr5@1500
  regions=1, blocks=4, points=16
    allocnos=13 (big 0), copies=0, conflicts=0, ranges=13
Disposition:
   12:r82  l0     0   11:r83  l0     0    9:r84  l0     0   10:r85  l0     1
    7:r86  l0     0    8:r87  l0     1    5:r88  l0     0    6:r89  l0     1
    3:r90  l0     0    4:r91  l0     1    1:r92  l0     0    2:r93  l0     1
    0:r94  l0     0
+++Costs: overall -13000, reg -13000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


test_file_read_inbound

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;;  ref usage 	r0={8d,1u} r1={13d,5u} r2={12d,4u} r4={13d,5u} r5={15d,7u} r6={1d,3u} r7={1d,10u} r8={7d} r9={7d} r10={7d} r11={7d} r12={7d} r13={7d} r14={7d} r15={7d} r16={1d,2u} r17={7d} r18={7d} r19={1d,10u} r20={8d} r21={8d} r22={8d} r23={8d} r24={8d} r25={8d} r26={8d} r27={8d} r28={7d} r29={7d} r30={7d} r31={7d} r32={7d} r33={7d} r34={7d} r35={7d} r36={8d} r37={8d} r38={7d} r39={7d} r44={7d} r45={7d} r46={7d} r47={7d} r48={7d} r49={7d} r50={7d} r51={7d} r52={7d} r53={7d} r54={7d} r55={7d} r56={7d} r57={7d} r58={7d} r59={7d} r60={7d} r61={7d} r62={7d} r63={7d} r64={7d} r65={7d} r66={7d} r67={7d} r68={7d} r69={7d} r70={7d} r71={7d} r72={7d} r73={7d} r74={7d} r75={7d} r82={1d,1u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} 
;;    total ref usage 582{522d,60u,0e} in 43{36 regular + 7 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 82 83 84 85 86 87 88 89 90 91 92 93 94
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:DI 82)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7fa6108ae480 *.LC6>)) "main.c":58:32 80 {*movdi_internal}
     (nil))
(insn 6 5 7 2 (set (reg:DI 5 di)
        (reg:DI 82)) "main.c":58:32 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 82)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7fa6108ae480 *.LC6>)
            (nil))))
(call_insn 7 6 8 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("file_tester_create") [flags 0x41]  <function_decl 0x7fa610b72e00 file_tester_create>) [0 file_tester_create S1 A8])
            (const_int 0 [0]))) "main.c":58:32 909 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 8 7 9 2 (set (reg:DI 83)
        (reg:DI 0 ax)) "main.c":58:32 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 9 8 10 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [8 tester+0 S8 A64])
        (reg:DI 83)) "main.c":58:32 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 83)
        (nil)))
(insn 10 9 11 2 (set (reg:DI 84)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [8 tester+0 S8 A64])) "main.c":59:3 80 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:DI 85)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7fa6108ae480 *.LC6>)) "main.c":59:3 80 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:DI 1 dx)
        (reg:DI 85)) "main.c":59:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 85)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7fa6108ae480 *.LC6>)
            (nil))))
(insn 13 12 14 2 (set (reg:SI 4 si)
        (const_int 0 [0])) "main.c":59:3 81 {*movsi_internal}
     (nil))
(insn 14 13 15 2 (set (reg:DI 5 di)
        (reg:DI 84)) "main.c":59:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 84)
        (nil)))
(call_insn 15 14 16 2 (call (mem:QI (symbol_ref:DI ("file_tester_init") [flags 0x41]  <function_decl 0x7fa610b77000 file_tester_init>) [0 file_tester_init S1 A8])
        (const_int 0 [0])) "main.c":59:3 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 16 15 17 2 (set (reg:DI 86)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [8 tester+0 S8 A64])) "main.c":60:3 80 {*movdi_internal}
     (nil))
(insn 17 16 18 2 (set (reg:DI 87)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7fa6108ae510 *.LC7>)) "main.c":60:3 80 {*movdi_internal}
     (nil))
(insn 18 17 19 2 (set (reg:DI 2 cx)
        (reg:DI 87)) "main.c":60:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 87)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7fa6108ae510 *.LC7>)
            (nil))))
(insn 19 18 20 2 (set (reg:SI 1 dx)
        (const_int 10 [0xa])) "main.c":60:3 81 {*movsi_internal}
     (nil))
(insn 20 19 21 2 (set (reg:SI 4 si)
        (const_int 0 [0])) "main.c":60:3 81 {*movsi_internal}
     (nil))
(insn 21 20 22 2 (set (reg:DI 5 di)
        (reg:DI 86)) "main.c":60:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 86)
        (nil)))
(call_insn 22 21 23 2 (call (mem:QI (symbol_ref:DI ("file_tester_write") [flags 0x41]  <function_decl 0x7fa610b77100 file_tester_write>) [0 file_tester_write S1 A8])
        (const_int 0 [0])) "main.c":60:3 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:SI 1 dx)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 23 22 24 2 (set (reg:DI 88)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [8 tester+0 S8 A64])) "main.c":61:3 80 {*movdi_internal}
     (nil))
(insn 24 23 25 2 (set (reg:DI 89)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x7fa6108ae5a0 *.LC8>)) "main.c":61:3 80 {*movdi_internal}
     (nil))
(insn 25 24 26 2 (set (reg:DI 2 cx)
        (reg:DI 89)) "main.c":61:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 89)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x7fa6108ae5a0 *.LC8>)
            (nil))))
(insn 26 25 27 2 (set (reg:SI 1 dx)
        (const_int 3 [0x3])) "main.c":61:3 81 {*movsi_internal}
     (nil))
(insn 27 26 28 2 (set (reg:SI 4 si)
        (const_int 0 [0])) "main.c":61:3 81 {*movsi_internal}
     (nil))
(insn 28 27 29 2 (set (reg:DI 5 di)
        (reg:DI 88)) "main.c":61:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88)
        (nil)))
(call_insn 29 28 30 2 (call (mem:QI (symbol_ref:DI ("file_tester_read") [flags 0x41]  <function_decl 0x7fa610b77200 file_tester_read>) [0 file_tester_read S1 A8])
        (const_int 0 [0])) "main.c":61:3 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:SI 1 dx)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 30 29 31 2 (set (reg:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [8 tester+0 S8 A64])) "main.c":62:3 80 {*movdi_internal}
     (nil))
(insn 31 30 32 2 (set (reg:DI 91)
        (symbol_ref/f:DI ("*.LC9") [flags 0x2]  <var_decl 0x7fa6108ae630 *.LC9>)) "main.c":62:3 80 {*movdi_internal}
     (nil))
(insn 32 31 33 2 (set (reg:DI 2 cx)
        (reg:DI 91)) "main.c":62:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 91)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC9") [flags 0x2]  <var_decl 0x7fa6108ae630 *.LC9>)
            (nil))))
(insn 33 32 34 2 (set (reg:SI 1 dx)
        (const_int 3 [0x3])) "main.c":62:3 81 {*movsi_internal}
     (nil))
(insn 34 33 35 2 (set (reg:SI 4 si)
        (const_int 7 [0x7])) "main.c":62:3 81 {*movsi_internal}
     (nil))
(insn 35 34 36 2 (set (reg:DI 5 di)
        (reg:DI 90)) "main.c":62:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 90)
        (nil)))
(call_insn 36 35 37 2 (call (mem:QI (symbol_ref:DI ("file_tester_read") [flags 0x41]  <function_decl 0x7fa610b77200 file_tester_read>) [0 file_tester_read S1 A8])
        (const_int 0 [0])) "main.c":62:3 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:SI 1 dx)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 37 36 38 2 (set (reg:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [8 tester+0 S8 A64])) "main.c":63:3 80 {*movdi_internal}
     (nil))
(insn 38 37 39 2 (set (reg:DI 93)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7fa6108ae6c0 *.LC10>)) "main.c":63:3 80 {*movdi_internal}
     (nil))
(insn 39 38 40 2 (set (reg:DI 2 cx)
        (reg:DI 93)) "main.c":63:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 93)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7fa6108ae6c0 *.LC10>)
            (nil))))
(insn 40 39 41 2 (set (reg:SI 1 dx)
        (const_int 0 [0])) "main.c":63:3 81 {*movsi_internal}
     (nil))
(insn 41 40 42 2 (set (reg:SI 4 si)
        (const_int 10 [0xa])) "main.c":63:3 81 {*movsi_internal}
     (nil))
(insn 42 41 43 2 (set (reg:DI 5 di)
        (reg:DI 92)) "main.c":63:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 92)
        (nil)))
(call_insn 43 42 44 2 (call (mem:QI (symbol_ref:DI ("file_tester_read") [flags 0x41]  <function_decl 0x7fa610b77200 file_tester_read>) [0 file_tester_read S1 A8])
        (const_int 0 [0])) "main.c":63:3 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:SI 1 dx)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 44 43 45 2 (set (reg:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [8 tester+0 S8 A64])) "main.c":64:3 80 {*movdi_internal}
     (nil))
(insn 45 44 46 2 (set (reg:DI 5 di)
        (reg:DI 94)) "main.c":64:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 94)
        (nil)))
(call_insn 46 45 49 2 (call (mem:QI (symbol_ref:DI ("file_tester_destory") [flags 0x41]  <function_decl 0x7fa610b72f00 file_tester_destory>) [0 file_tester_destory S1 A8])
        (const_int 0 [0])) "main.c":64:3 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       3 [always]  (FALLTHRU) main.c:65:1
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 1, flags: (RTL)
;;  pred:       2 [always]  (FALLTHRU) main.c:65:1
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(note 49 46 50 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 50 49 0 3 (const_int 0 [0]) "main.c":65:1 928 {nop}
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]


;; Function test_file_read_outbound (test_file_read_outbound, funcdef_no=11, decl_uid=3348, cgraph_uid=12, symbol_order=12)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 4 n_edges 3 count 4 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 7.
verify found no changes in insn with uid = 15.
verify found no changes in insn with uid = 22.
verify found no changes in insn with uid = 29.
verify found no changes in insn with uid = 36.
verify found no changes in insn with uid = 43.
verify found no changes in insn with uid = 46.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r94: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r94,l0) best DIREG, allocno GENERAL_REGS
    r93: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r93,l0) best CREG, allocno GENERAL_REGS
    r92: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r92,l0) best DIREG, allocno GENERAL_REGS
    r91: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r91,l0) best CREG, allocno GENERAL_REGS
    r90: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r90,l0) best DIREG, allocno GENERAL_REGS
    r89: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r89,l0) best CREG, allocno GENERAL_REGS
    r88: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r88,l0) best DIREG, allocno GENERAL_REGS
    r87: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a8 (r87,l0) best CREG, allocno GENERAL_REGS
    r86: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a7 (r86,l0) best DIREG, allocno GENERAL_REGS
    r85: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a10 (r85,l0) best DREG, allocno GENERAL_REGS
    r84: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a9 (r84,l0) best DIREG, allocno GENERAL_REGS
    r83: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a11 (r83,l0) best AREG, allocno GENERAL_REGS
    r82: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a12 (r82,l0) best DIREG, allocno GENERAL_REGS

  a0(r94,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a1(r92,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a2(r93,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a3(r90,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a4(r91,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a5(r88,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a6(r89,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a7(r86,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a8(r87,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a9(r84,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a10(r85,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a11(r83,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:6000 NO_REX_SSE_REGS:6000 SSE_REGS:6000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a12(r82,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000

   Insn 50(l0): point = 0
   Insn 46(l0): point = 3
   Insn 45(l0): point = 5
   Insn 44(l0): point = 7
   Insn 43(l0): point = 9
   Insn 42(l0): point = 11
   Insn 41(l0): point = 13
   Insn 40(l0): point = 15
   Insn 39(l0): point = 17
   Insn 38(l0): point = 19
   Insn 37(l0): point = 21
   Insn 36(l0): point = 23
   Insn 35(l0): point = 25
   Insn 34(l0): point = 27
   Insn 33(l0): point = 29
   Insn 32(l0): point = 31
   Insn 31(l0): point = 33
   Insn 30(l0): point = 35
   Insn 29(l0): point = 37
   Insn 28(l0): point = 39
   Insn 27(l0): point = 41
   Insn 26(l0): point = 43
   Insn 25(l0): point = 45
   Insn 24(l0): point = 47
   Insn 23(l0): point = 49
   Insn 22(l0): point = 51
   Insn 21(l0): point = 53
   Insn 20(l0): point = 55
   Insn 19(l0): point = 57
   Insn 18(l0): point = 59
   Insn 17(l0): point = 61
   Insn 16(l0): point = 63
   Insn 15(l0): point = 65
   Insn 14(l0): point = 67
   Insn 13(l0): point = 69
   Insn 12(l0): point = 71
   Insn 11(l0): point = 73
   Insn 10(l0): point = 75
   Insn 9(l0): point = 77
   Insn 8(l0): point = 79
   Insn 7(l0): point = 81
   Insn 6(l0): point = 83
   Insn 5(l0): point = 85
 a0(r94): [6..7]
 a1(r92): [12..21]
 a2(r93): [18..19]
 a3(r90): [26..35]
 a4(r91): [32..33]
 a5(r88): [40..49]
 a6(r89): [46..47]
 a7(r86): [54..63]
 a8(r87): [60..61]
 a9(r84): [68..75]
 a10(r85): [72..73]
 a11(r83): [78..79]
 a12(r82): [84..85]
Compressing live ranges: from 88 to 16 - 18%
Ranges after the compression:
 a0(r94): [0..1]
 a1(r92): [2..3]
 a2(r93): [2..3]
 a3(r90): [4..5]
 a4(r91): [4..5]
 a5(r88): [6..7]
 a6(r89): [6..7]
 a7(r86): [8..9]
 a8(r87): [8..9]
 a9(r84): [10..11]
 a10(r85): [10..11]
 a11(r83): [12..13]
 a12(r82): [14..15]
  pref0:a0(r94)<-hr5@1500
  pref1:a2(r93)<-hr2@1500
  pref2:a1(r92)<-hr5@1500
  pref3:a4(r91)<-hr2@1500
  pref4:a3(r90)<-hr5@1500
  pref5:a6(r89)<-hr2@1500
  pref6:a5(r88)<-hr5@1500
  pref7:a8(r87)<-hr2@1500
  pref8:a7(r86)<-hr5@1500
  pref9:a10(r85)<-hr1@1500
  pref10:a9(r84)<-hr5@1500
  pref11:a11(r83)<-hr0@1500
  pref12:a12(r82)<-hr5@1500
  regions=1, blocks=4, points=16
    allocnos=13 (big 0), copies=0, conflicts=0, ranges=13
Disposition:
   12:r82  l0     0   11:r83  l0     0    9:r84  l0     0   10:r85  l0     1
    7:r86  l0     0    8:r87  l0     1    5:r88  l0     0    6:r89  l0     1
    3:r90  l0     0    4:r91  l0     1    1:r92  l0     0    2:r93  l0     1
    0:r94  l0     0
+++Costs: overall -13000, reg -13000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


test_file_read_outbound

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;;  ref usage 	r0={8d,1u} r1={13d,5u} r2={12d,4u} r4={13d,5u} r5={15d,7u} r6={1d,3u} r7={1d,10u} r8={7d} r9={7d} r10={7d} r11={7d} r12={7d} r13={7d} r14={7d} r15={7d} r16={1d,2u} r17={7d} r18={7d} r19={1d,10u} r20={8d} r21={8d} r22={8d} r23={8d} r24={8d} r25={8d} r26={8d} r27={8d} r28={7d} r29={7d} r30={7d} r31={7d} r32={7d} r33={7d} r34={7d} r35={7d} r36={8d} r37={8d} r38={7d} r39={7d} r44={7d} r45={7d} r46={7d} r47={7d} r48={7d} r49={7d} r50={7d} r51={7d} r52={7d} r53={7d} r54={7d} r55={7d} r56={7d} r57={7d} r58={7d} r59={7d} r60={7d} r61={7d} r62={7d} r63={7d} r64={7d} r65={7d} r66={7d} r67={7d} r68={7d} r69={7d} r70={7d} r71={7d} r72={7d} r73={7d} r74={7d} r75={7d} r82={1d,1u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} 
;;    total ref usage 582{522d,60u,0e} in 43{36 regular + 7 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 82 83 84 85 86 87 88 89 90 91 92 93 94
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:DI 82)
        (symbol_ref/f:DI ("*.LC11") [flags 0x2]  <var_decl 0x7fa6108aea20 *.LC11>)) "main.c":68:32 80 {*movdi_internal}
     (nil))
(insn 6 5 7 2 (set (reg:DI 5 di)
        (reg:DI 82)) "main.c":68:32 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 82)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC11") [flags 0x2]  <var_decl 0x7fa6108aea20 *.LC11>)
            (nil))))
(call_insn 7 6 8 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("file_tester_create") [flags 0x41]  <function_decl 0x7fa610b72e00 file_tester_create>) [0 file_tester_create S1 A8])
            (const_int 0 [0]))) "main.c":68:32 909 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 8 7 9 2 (set (reg:DI 83)
        (reg:DI 0 ax)) "main.c":68:32 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 9 8 10 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [8 tester+0 S8 A64])
        (reg:DI 83)) "main.c":68:32 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 83)
        (nil)))
(insn 10 9 11 2 (set (reg:DI 84)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [8 tester+0 S8 A64])) "main.c":69:3 80 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:DI 85)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7fa6108a16c0 *.LC1>)) "main.c":69:3 80 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:DI 1 dx)
        (reg:DI 85)) "main.c":69:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 85)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7fa6108a16c0 *.LC1>)
            (nil))))
(insn 13 12 14 2 (set (reg:SI 4 si)
        (const_int 0 [0])) "main.c":69:3 81 {*movsi_internal}
     (nil))
(insn 14 13 15 2 (set (reg:DI 5 di)
        (reg:DI 84)) "main.c":69:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 84)
        (nil)))
(call_insn 15 14 16 2 (call (mem:QI (symbol_ref:DI ("file_tester_init") [flags 0x41]  <function_decl 0x7fa610b77000 file_tester_init>) [0 file_tester_init S1 A8])
        (const_int 0 [0])) "main.c":69:3 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 16 15 17 2 (set (reg:DI 86)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [8 tester+0 S8 A64])) "main.c":70:3 80 {*movdi_internal}
     (nil))
(insn 17 16 18 2 (set (reg:DI 87)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7fa6108ae510 *.LC7>)) "main.c":70:3 80 {*movdi_internal}
     (nil))
(insn 18 17 19 2 (set (reg:DI 2 cx)
        (reg:DI 87)) "main.c":70:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 87)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7fa6108ae510 *.LC7>)
            (nil))))
(insn 19 18 20 2 (set (reg:SI 1 dx)
        (const_int 10 [0xa])) "main.c":70:3 81 {*movsi_internal}
     (nil))
(insn 20 19 21 2 (set (reg:SI 4 si)
        (const_int 0 [0])) "main.c":70:3 81 {*movsi_internal}
     (nil))
(insn 21 20 22 2 (set (reg:DI 5 di)
        (reg:DI 86)) "main.c":70:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 86)
        (nil)))
(call_insn 22 21 23 2 (call (mem:QI (symbol_ref:DI ("file_tester_write") [flags 0x41]  <function_decl 0x7fa610b77100 file_tester_write>) [0 file_tester_write S1 A8])
        (const_int 0 [0])) "main.c":70:3 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:SI 1 dx)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 23 22 24 2 (set (reg:DI 88)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [8 tester+0 S8 A64])) "main.c":71:3 80 {*movdi_internal}
     (nil))
(insn 24 23 25 2 (set (reg:DI 89)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7fa6108ae6c0 *.LC10>)) "main.c":71:3 80 {*movdi_internal}
     (nil))
(insn 25 24 26 2 (set (reg:DI 2 cx)
        (reg:DI 89)) "main.c":71:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 89)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7fa6108ae6c0 *.LC10>)
            (nil))))
(insn 26 25 27 2 (set (reg:SI 1 dx)
        (const_int 11 [0xb])) "main.c":71:3 81 {*movsi_internal}
     (nil))
(insn 27 26 28 2 (set (reg:SI 4 si)
        (const_int 11 [0xb])) "main.c":71:3 81 {*movsi_internal}
     (nil))
(insn 28 27 29 2 (set (reg:DI 5 di)
        (reg:DI 88)) "main.c":71:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88)
        (nil)))
(call_insn 29 28 30 2 (call (mem:QI (symbol_ref:DI ("file_tester_read") [flags 0x41]  <function_decl 0x7fa610b77200 file_tester_read>) [0 file_tester_read S1 A8])
        (const_int 0 [0])) "main.c":71:3 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:SI 1 dx)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 30 29 31 2 (set (reg:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [8 tester+0 S8 A64])) "main.c":72:3 80 {*movdi_internal}
     (nil))
(insn 31 30 32 2 (set (reg:DI 91)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7fa6108ae6c0 *.LC10>)) "main.c":72:3 80 {*movdi_internal}
     (nil))
(insn 32 31 33 2 (set (reg:DI 2 cx)
        (reg:DI 91)) "main.c":72:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 91)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7fa6108ae6c0 *.LC10>)
            (nil))))
(insn 33 32 34 2 (set (reg:SI 1 dx)
        (const_int 0 [0])) "main.c":72:3 81 {*movsi_internal}
     (nil))
(insn 34 33 35 2 (set (reg:SI 4 si)
        (const_int 11 [0xb])) "main.c":72:3 81 {*movsi_internal}
     (nil))
(insn 35 34 36 2 (set (reg:DI 5 di)
        (reg:DI 90)) "main.c":72:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 90)
        (nil)))
(call_insn 36 35 37 2 (call (mem:QI (symbol_ref:DI ("file_tester_read") [flags 0x41]  <function_decl 0x7fa610b77200 file_tester_read>) [0 file_tester_read S1 A8])
        (const_int 0 [0])) "main.c":72:3 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:SI 1 dx)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 37 36 38 2 (set (reg:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [8 tester+0 S8 A64])) "main.c":73:3 80 {*movdi_internal}
     (nil))
(insn 38 37 39 2 (set (reg:DI 93)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7fa6108ae6c0 *.LC10>)) "main.c":73:3 80 {*movdi_internal}
     (nil))
(insn 39 38 40 2 (set (reg:DI 2 cx)
        (reg:DI 93)) "main.c":73:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 93)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7fa6108ae6c0 *.LC10>)
            (nil))))
(insn 40 39 41 2 (set (reg:SI 1 dx)
        (const_int 11 [0xb])) "main.c":73:3 81 {*movsi_internal}
     (nil))
(insn 41 40 42 2 (set (reg:SI 4 si)
        (const_int 0 [0])) "main.c":73:3 81 {*movsi_internal}
     (nil))
(insn 42 41 43 2 (set (reg:DI 5 di)
        (reg:DI 92)) "main.c":73:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 92)
        (nil)))
(call_insn 43 42 44 2 (call (mem:QI (symbol_ref:DI ("file_tester_read") [flags 0x41]  <function_decl 0x7fa610b77200 file_tester_read>) [0 file_tester_read S1 A8])
        (const_int 0 [0])) "main.c":73:3 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:SI 1 dx)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 44 43 45 2 (set (reg:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [8 tester+0 S8 A64])) "main.c":74:3 80 {*movdi_internal}
     (nil))
(insn 45 44 46 2 (set (reg:DI 5 di)
        (reg:DI 94)) "main.c":74:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 94)
        (nil)))
(call_insn 46 45 49 2 (call (mem:QI (symbol_ref:DI ("file_tester_destory") [flags 0x41]  <function_decl 0x7fa610b72f00 file_tester_destory>) [0 file_tester_destory S1 A8])
        (const_int 0 [0])) "main.c":74:3 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       3 [always]  (FALLTHRU) main.c:75:1
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 1, flags: (RTL)
;;  pred:       2 [always]  (FALLTHRU) main.c:75:1
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(note 49 46 50 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 50 49 0 3 (const_int 0 [0]) "main.c":75:1 928 {nop}
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]


;; Function test_file_read_write (test_file_read_write, funcdef_no=12, decl_uid=3351, cgraph_uid=13, symbol_order=13)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 4 n_edges 3 count 4 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 7.
verify found no changes in insn with uid = 15.
verify found no changes in insn with uid = 22.
verify found no changes in insn with uid = 29.
verify found no changes in insn with uid = 36.
verify found no changes in insn with uid = 43.
verify found no changes in insn with uid = 50.
verify found no changes in insn with uid = 53.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r96: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r96,l0) best DIREG, allocno GENERAL_REGS
    r95: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r95,l0) best CREG, allocno GENERAL_REGS
    r94: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r94,l0) best DIREG, allocno GENERAL_REGS
    r93: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r93,l0) best CREG, allocno GENERAL_REGS
    r92: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r92,l0) best DIREG, allocno GENERAL_REGS
    r91: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r91,l0) best CREG, allocno GENERAL_REGS
    r90: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r90,l0) best DIREG, allocno GENERAL_REGS
    r89: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a8 (r89,l0) best CREG, allocno GENERAL_REGS
    r88: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a7 (r88,l0) best DIREG, allocno GENERAL_REGS
    r87: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a10 (r87,l0) best CREG, allocno GENERAL_REGS
    r86: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a9 (r86,l0) best DIREG, allocno GENERAL_REGS
    r85: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a12 (r85,l0) best DREG, allocno GENERAL_REGS
    r84: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a11 (r84,l0) best DIREG, allocno GENERAL_REGS
    r83: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a13 (r83,l0) best AREG, allocno GENERAL_REGS
    r82: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a14 (r82,l0) best DIREG, allocno GENERAL_REGS

  a0(r96,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a1(r94,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a2(r95,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a3(r92,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a4(r93,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a5(r90,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a6(r91,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a7(r88,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a8(r89,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a9(r86,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a10(r87,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a11(r84,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a12(r85,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a13(r83,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:6000 NO_REX_SSE_REGS:6000 SSE_REGS:6000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a14(r82,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000

   Insn 57(l0): point = 0
   Insn 53(l0): point = 3
   Insn 52(l0): point = 5
   Insn 51(l0): point = 7
   Insn 50(l0): point = 9
   Insn 49(l0): point = 11
   Insn 48(l0): point = 13
   Insn 47(l0): point = 15
   Insn 46(l0): point = 17
   Insn 45(l0): point = 19
   Insn 44(l0): point = 21
   Insn 43(l0): point = 23
   Insn 42(l0): point = 25
   Insn 41(l0): point = 27
   Insn 40(l0): point = 29
   Insn 39(l0): point = 31
   Insn 38(l0): point = 33
   Insn 37(l0): point = 35
   Insn 36(l0): point = 37
   Insn 35(l0): point = 39
   Insn 34(l0): point = 41
   Insn 33(l0): point = 43
   Insn 32(l0): point = 45
   Insn 31(l0): point = 47
   Insn 30(l0): point = 49
   Insn 29(l0): point = 51
   Insn 28(l0): point = 53
   Insn 27(l0): point = 55
   Insn 26(l0): point = 57
   Insn 25(l0): point = 59
   Insn 24(l0): point = 61
   Insn 23(l0): point = 63
   Insn 22(l0): point = 65
   Insn 21(l0): point = 67
   Insn 20(l0): point = 69
   Insn 19(l0): point = 71
   Insn 18(l0): point = 73
   Insn 17(l0): point = 75
   Insn 16(l0): point = 77
   Insn 15(l0): point = 79
   Insn 14(l0): point = 81
   Insn 13(l0): point = 83
   Insn 12(l0): point = 85
   Insn 11(l0): point = 87
   Insn 10(l0): point = 89
   Insn 9(l0): point = 91
   Insn 8(l0): point = 93
   Insn 7(l0): point = 95
   Insn 6(l0): point = 97
   Insn 5(l0): point = 99
 a0(r96): [6..7]
 a1(r94): [12..21]
 a2(r95): [18..19]
 a3(r92): [26..35]
 a4(r93): [32..33]
 a5(r90): [40..49]
 a6(r91): [46..47]
 a7(r88): [54..63]
 a8(r89): [60..61]
 a9(r86): [68..77]
 a10(r87): [74..75]
 a11(r84): [82..89]
 a12(r85): [86..87]
 a13(r83): [92..93]
 a14(r82): [98..99]
Compressing live ranges: from 102 to 18 - 17%
Ranges after the compression:
 a0(r96): [0..1]
 a1(r94): [2..3]
 a2(r95): [2..3]
 a3(r92): [4..5]
 a4(r93): [4..5]
 a5(r90): [6..7]
 a6(r91): [6..7]
 a7(r88): [8..9]
 a8(r89): [8..9]
 a9(r86): [10..11]
 a10(r87): [10..11]
 a11(r84): [12..13]
 a12(r85): [12..13]
 a13(r83): [14..15]
 a14(r82): [16..17]
  pref0:a0(r96)<-hr5@1500
  pref1:a2(r95)<-hr2@1500
  pref2:a1(r94)<-hr5@1500
  pref3:a4(r93)<-hr2@1500
  pref4:a3(r92)<-hr5@1500
  pref5:a6(r91)<-hr2@1500
  pref6:a5(r90)<-hr5@1500
  pref7:a8(r89)<-hr2@1500
  pref8:a7(r88)<-hr5@1500
  pref9:a10(r87)<-hr2@1500
  pref10:a9(r86)<-hr5@1500
  pref11:a12(r85)<-hr1@1500
  pref12:a11(r84)<-hr5@1500
  pref13:a13(r83)<-hr0@1500
  pref14:a14(r82)<-hr5@1500
  regions=1, blocks=4, points=18
    allocnos=15 (big 0), copies=0, conflicts=0, ranges=15
Disposition:
   14:r82  l0     0   13:r83  l0     0   11:r84  l0     0   12:r85  l0     1
    9:r86  l0     0   10:r87  l0     1    7:r88  l0     0    8:r89  l0     1
    5:r90  l0     0    6:r91  l0     1    3:r92  l0     0    4:r93  l0     1
    1:r94  l0     0    2:r95  l0     1    0:r96  l0     0
+++Costs: overall -15000, reg -15000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


test_file_read_write

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;;  ref usage 	r0={9d,1u} r1={15d,6u} r2={14d,5u} r4={15d,6u} r5={17d,8u} r6={1d,3u} r7={1d,11u} r8={8d} r9={8d} r10={8d} r11={8d} r12={8d} r13={8d} r14={8d} r15={8d} r16={1d,2u} r17={8d} r18={8d} r19={1d,11u} r20={9d} r21={9d} r22={9d} r23={9d} r24={9d} r25={9d} r26={9d} r27={9d} r28={8d} r29={8d} r30={8d} r31={8d} r32={8d} r33={8d} r34={8d} r35={8d} r36={9d} r37={9d} r38={8d} r39={8d} r44={8d} r45={8d} r46={8d} r47={8d} r48={8d} r49={8d} r50={8d} r51={8d} r52={8d} r53={8d} r54={8d} r55={8d} r56={8d} r57={8d} r58={8d} r59={8d} r60={8d} r61={8d} r62={8d} r63={8d} r64={8d} r65={8d} r66={8d} r67={8d} r68={8d} r69={8d} r70={8d} r71={8d} r72={8d} r73={8d} r74={8d} r75={8d} r82={1d,1u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} 
;;    total ref usage 663{595d,68u,0e} in 50{42 regular + 8 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:DI 82)
        (symbol_ref/f:DI ("*.LC12") [flags 0x2]  <var_decl 0x7fa6108aed80 *.LC12>)) "main.c":78:32 80 {*movdi_internal}
     (nil))
(insn 6 5 7 2 (set (reg:DI 5 di)
        (reg:DI 82)) "main.c":78:32 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 82)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC12") [flags 0x2]  <var_decl 0x7fa6108aed80 *.LC12>)
            (nil))))
(call_insn 7 6 8 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("file_tester_create") [flags 0x41]  <function_decl 0x7fa610b72e00 file_tester_create>) [0 file_tester_create S1 A8])
            (const_int 0 [0]))) "main.c":78:32 909 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 8 7 9 2 (set (reg:DI 83)
        (reg:DI 0 ax)) "main.c":78:32 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 9 8 10 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [8 tester+0 S8 A64])
        (reg:DI 83)) "main.c":78:32 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 83)
        (nil)))
(insn 10 9 11 2 (set (reg:DI 84)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [8 tester+0 S8 A64])) "main.c":79:3 80 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:DI 85)
        (symbol_ref/f:DI ("*.LC13") [flags 0x2]  <var_decl 0x7fa6108aee10 *.LC13>)) "main.c":79:3 80 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:DI 1 dx)
        (reg:DI 85)) "main.c":79:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 85)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC13") [flags 0x2]  <var_decl 0x7fa6108aee10 *.LC13>)
            (nil))))
(insn 13 12 14 2 (set (reg:SI 4 si)
        (const_int 0 [0])) "main.c":79:3 81 {*movsi_internal}
     (nil))
(insn 14 13 15 2 (set (reg:DI 5 di)
        (reg:DI 84)) "main.c":79:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 84)
        (nil)))
(call_insn 15 14 16 2 (call (mem:QI (symbol_ref:DI ("file_tester_init") [flags 0x41]  <function_decl 0x7fa610b77000 file_tester_init>) [0 file_tester_init S1 A8])
        (const_int 0 [0])) "main.c":79:3 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 16 15 17 2 (set (reg:DI 86)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [8 tester+0 S8 A64])) "main.c":80:3 80 {*movdi_internal}
     (nil))
(insn 17 16 18 2 (set (reg:DI 87)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x7fa6108ae5a0 *.LC8>)) "main.c":80:3 80 {*movdi_internal}
     (nil))
(insn 18 17 19 2 (set (reg:DI 2 cx)
        (reg:DI 87)) "main.c":80:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 87)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x7fa6108ae5a0 *.LC8>)
            (nil))))
(insn 19 18 20 2 (set (reg:SI 1 dx)
        (const_int 3 [0x3])) "main.c":80:3 81 {*movsi_internal}
     (nil))
(insn 20 19 21 2 (set (reg:SI 4 si)
        (const_int 0 [0])) "main.c":80:3 81 {*movsi_internal}
     (nil))
(insn 21 20 22 2 (set (reg:DI 5 di)
        (reg:DI 86)) "main.c":80:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 86)
        (nil)))
(call_insn 22 21 23 2 (call (mem:QI (symbol_ref:DI ("file_tester_write") [flags 0x41]  <function_decl 0x7fa610b77100 file_tester_write>) [0 file_tester_write S1 A8])
        (const_int 0 [0])) "main.c":80:3 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:SI 1 dx)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 23 22 24 2 (set (reg:DI 88)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [8 tester+0 S8 A64])) "main.c":81:3 80 {*movdi_internal}
     (nil))
(insn 24 23 25 2 (set (reg:DI 89)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x7fa6108ae5a0 *.LC8>)) "main.c":81:3 80 {*movdi_internal}
     (nil))
(insn 25 24 26 2 (set (reg:DI 2 cx)
        (reg:DI 89)) "main.c":81:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 89)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x7fa6108ae5a0 *.LC8>)
            (nil))))
(insn 26 25 27 2 (set (reg:SI 1 dx)
        (const_int 3 [0x3])) "main.c":81:3 81 {*movsi_internal}
     (nil))
(insn 27 26 28 2 (set (reg:SI 4 si)
        (const_int 0 [0])) "main.c":81:3 81 {*movsi_internal}
     (nil))
(insn 28 27 29 2 (set (reg:DI 5 di)
        (reg:DI 88)) "main.c":81:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88)
        (nil)))
(call_insn 29 28 30 2 (call (mem:QI (symbol_ref:DI ("file_tester_read") [flags 0x41]  <function_decl 0x7fa610b77200 file_tester_read>) [0 file_tester_read S1 A8])
        (const_int 0 [0])) "main.c":81:3 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:SI 1 dx)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 30 29 31 2 (set (reg:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [8 tester+0 S8 A64])) "main.c":82:3 80 {*movdi_internal}
     (nil))
(insn 31 30 32 2 (set (reg:DI 91)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7fa6108ae6c0 *.LC10>)) "main.c":82:3 80 {*movdi_internal}
     (nil))
(insn 32 31 33 2 (set (reg:DI 2 cx)
        (reg:DI 91)) "main.c":82:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 91)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7fa6108ae6c0 *.LC10>)
            (nil))))
(insn 33 32 34 2 (set (reg:SI 1 dx)
        (const_int 3 [0x3])) "main.c":82:3 81 {*movsi_internal}
     (nil))
(insn 34 33 35 2 (set (reg:SI 4 si)
        (const_int 3 [0x3])) "main.c":82:3 81 {*movsi_internal}
     (nil))
(insn 35 34 36 2 (set (reg:DI 5 di)
        (reg:DI 90)) "main.c":82:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 90)
        (nil)))
(call_insn 36 35 37 2 (call (mem:QI (symbol_ref:DI ("file_tester_read") [flags 0x41]  <function_decl 0x7fa610b77200 file_tester_read>) [0 file_tester_read S1 A8])
        (const_int 0 [0])) "main.c":82:3 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:SI 1 dx)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 37 36 38 2 (set (reg:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [8 tester+0 S8 A64])) "main.c":83:3 80 {*movdi_internal}
     (nil))
(insn 38 37 39 2 (set (reg:DI 93)
        (symbol_ref/f:DI ("*.LC14") [flags 0x2]  <var_decl 0x7fa6108aeea0 *.LC14>)) "main.c":83:3 80 {*movdi_internal}
     (nil))
(insn 39 38 40 2 (set (reg:DI 2 cx)
        (reg:DI 93)) "main.c":83:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 93)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC14") [flags 0x2]  <var_decl 0x7fa6108aeea0 *.LC14>)
            (nil))))
(insn 40 39 41 2 (set (reg:SI 1 dx)
        (const_int 3 [0x3])) "main.c":83:3 81 {*movsi_internal}
     (nil))
(insn 41 40 42 2 (set (reg:SI 4 si)
        (const_int 3 [0x3])) "main.c":83:3 81 {*movsi_internal}
     (nil))
(insn 42 41 43 2 (set (reg:DI 5 di)
        (reg:DI 92)) "main.c":83:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 92)
        (nil)))
(call_insn 43 42 44 2 (call (mem:QI (symbol_ref:DI ("file_tester_write") [flags 0x41]  <function_decl 0x7fa610b77100 file_tester_write>) [0 file_tester_write S1 A8])
        (const_int 0 [0])) "main.c":83:3 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:SI 1 dx)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 44 43 45 2 (set (reg:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [8 tester+0 S8 A64])) "main.c":84:3 80 {*movdi_internal}
     (nil))
(insn 45 44 46 2 (set (reg:DI 95)
        (symbol_ref/f:DI ("*.LC14") [flags 0x2]  <var_decl 0x7fa6108aeea0 *.LC14>)) "main.c":84:3 80 {*movdi_internal}
     (nil))
(insn 46 45 47 2 (set (reg:DI 2 cx)
        (reg:DI 95)) "main.c":84:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 95)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC14") [flags 0x2]  <var_decl 0x7fa6108aeea0 *.LC14>)
            (nil))))
(insn 47 46 48 2 (set (reg:SI 1 dx)
        (const_int 3 [0x3])) "main.c":84:3 81 {*movsi_internal}
     (nil))
(insn 48 47 49 2 (set (reg:SI 4 si)
        (const_int 3 [0x3])) "main.c":84:3 81 {*movsi_internal}
     (nil))
(insn 49 48 50 2 (set (reg:DI 5 di)
        (reg:DI 94)) "main.c":84:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 94)
        (nil)))
(call_insn 50 49 51 2 (call (mem:QI (symbol_ref:DI ("file_tester_read") [flags 0x41]  <function_decl 0x7fa610b77200 file_tester_read>) [0 file_tester_read S1 A8])
        (const_int 0 [0])) "main.c":84:3 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:SI 1 dx)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 51 50 52 2 (set (reg:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [8 tester+0 S8 A64])) "main.c":85:3 80 {*movdi_internal}
     (nil))
(insn 52 51 53 2 (set (reg:DI 5 di)
        (reg:DI 96)) "main.c":85:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 96)
        (nil)))
(call_insn 53 52 56 2 (call (mem:QI (symbol_ref:DI ("file_tester_destory") [flags 0x41]  <function_decl 0x7fa610b72f00 file_tester_destory>) [0 file_tester_destory S1 A8])
        (const_int 0 [0])) "main.c":85:3 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       3 [always]  (FALLTHRU) main.c:86:1
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 1, flags: (RTL)
;;  pred:       2 [always]  (FALLTHRU) main.c:86:1
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(note 56 53 57 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 57 56 0 3 (const_int 0 [0]) "main.c":86:1 928 {nop}
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]


;; Function test_dir_add_file (test_dir_add_file, funcdef_no=13, decl_uid=3354, cgraph_uid=14, symbol_order=14)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 4 n_edges 3 count 4 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 7.
verify found no changes in insn with uid = 16.
verify found no changes in insn with uid = 23.
verify found no changes in insn with uid = 26.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r88: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r88,l0) best DIREG, allocno GENERAL_REGS
    r87: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r87,l0) best DREG, allocno GENERAL_REGS
    r86: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r86,l0) best DIREG, allocno GENERAL_REGS
    r85: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r85,l0) best DREG, allocno GENERAL_REGS
    r84: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r84,l0) best DIREG, allocno GENERAL_REGS
    r83: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r83,l0) best AREG, allocno GENERAL_REGS
    r82: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r82,l0) best DIREG, allocno GENERAL_REGS

  a0(r88,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a1(r86,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a2(r87,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a3(r84,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a4(r85,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a5(r83,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:6000 NO_REX_SSE_REGS:6000 SSE_REGS:6000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a6(r82,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000

   Insn 30(l0): point = 0
   Insn 26(l0): point = 3
   Insn 25(l0): point = 5
   Insn 24(l0): point = 7
   Insn 23(l0): point = 9
   Insn 22(l0): point = 11
   Insn 21(l0): point = 13
   Insn 20(l0): point = 15
   Insn 19(l0): point = 17
   Insn 18(l0): point = 19
   Insn 17(l0): point = 21
   Insn 16(l0): point = 23
   Insn 15(l0): point = 25
   Insn 14(l0): point = 27
   Insn 13(l0): point = 29
   Insn 12(l0): point = 31
   Insn 11(l0): point = 33
   Insn 10(l0): point = 35
   Insn 9(l0): point = 37
   Insn 8(l0): point = 39
   Insn 7(l0): point = 41
   Insn 6(l0): point = 43
   Insn 5(l0): point = 45
 a0(r88): [6..7]
 a1(r86): [12..21]
 a2(r87): [16..17]
 a3(r84): [26..35]
 a4(r85): [30..31]
 a5(r83): [38..39]
 a6(r82): [44..45]
Compressing live ranges: from 48 to 10 - 20%
Ranges after the compression:
 a0(r88): [0..1]
 a1(r86): [2..3]
 a2(r87): [2..3]
 a3(r84): [4..5]
 a4(r85): [4..5]
 a5(r83): [6..7]
 a6(r82): [8..9]
  pref0:a0(r88)<-hr5@1500
  pref1:a2(r87)<-hr1@1500
  pref2:a1(r86)<-hr5@1500
  pref3:a4(r85)<-hr1@1500
  pref4:a3(r84)<-hr5@1500
  pref5:a5(r83)<-hr0@1500
  pref6:a6(r82)<-hr5@1500
  regions=1, blocks=4, points=10
    allocnos=7 (big 0), copies=0, conflicts=0, ranges=7
Disposition:
    6:r82  l0     0    5:r83  l0     0    3:r84  l0     0    4:r85  l0     1
    1:r86  l0     0    2:r87  l0     1    0:r88  l0     0
+++Costs: overall -7000, reg -7000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


test_dir_add_file

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;;  ref usage 	r0={5d,1u} r1={7d,2u} r2={7d,2u} r4={7d,2u} r5={9d,4u} r6={1d,3u} r7={1d,7u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r16={1d,2u} r17={4d} r18={4d} r19={1d,7u} r20={5d} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={5d} r37={5d} r38={4d} r39={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r82={1d,1u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} 
;;    total ref usage 341{304d,37u,0e} in 23{19 regular + 4 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 82 83 84 85 86 87 88
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:DI 82)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x7fa6108bd240 *.LC15>)) "main.c":91:31 80 {*movdi_internal}
     (nil))
(insn 6 5 7 2 (set (reg:DI 5 di)
        (reg:DI 82)) "main.c":91:31 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 82)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x7fa6108bd240 *.LC15>)
            (nil))))
(call_insn 7 6 8 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("dir_tester_create") [flags 0x41]  <function_decl 0x7fa610b6eb00 dir_tester_create>) [0 dir_tester_create S1 A8])
            (const_int 0 [0]))) "main.c":91:31 909 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 8 7 9 2 (set (reg:DI 83)
        (reg:DI 0 ax)) "main.c":91:31 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 9 8 10 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [12 tester+0 S8 A64])
        (reg:DI 83)) "main.c":91:31 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 83)
        (nil)))
(insn 10 9 11 2 (set (reg:DI 84)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [12 tester+0 S8 A64])) "main.c":92:3 80 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:SI 2 cx)
        (const_int 1 [0x1])) "main.c":92:3 81 {*movsi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:DI 85)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7fa6108a16c0 *.LC1>)) "main.c":92:3 80 {*movdi_internal}
     (nil))
(insn 13 12 14 2 (set (reg:DI 1 dx)
        (reg:DI 85)) "main.c":92:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 85)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7fa6108a16c0 *.LC1>)
            (nil))))
(insn 14 13 15 2 (set (reg:SI 4 si)
        (const_int 1 [0x1])) "main.c":92:3 81 {*movsi_internal}
     (nil))
(insn 15 14 16 2 (set (reg:DI 5 di)
        (reg:DI 84)) "main.c":92:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 84)
        (nil)))
(call_insn 16 15 17 2 (call (mem:QI (symbol_ref:DI ("dir_tester_add_file") [flags 0x41]  <function_decl 0x7fa610b6ee00 dir_tester_add_file>) [0 dir_tester_add_file S1 A8])
        (const_int 0 [0])) "main.c":92:3 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:SI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 17 16 18 2 (set (reg:DI 86)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [12 tester+0 S8 A64])) "main.c":93:3 80 {*movdi_internal}
     (nil))
(insn 18 17 19 2 (set (reg:SI 2 cx)
        (const_int 0 [0])) "main.c":93:3 81 {*movsi_internal}
     (nil))
(insn 19 18 20 2 (set (reg:DI 87)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7fa6108a16c0 *.LC1>)) "main.c":93:3 80 {*movdi_internal}
     (nil))
(insn 20 19 21 2 (set (reg:DI 1 dx)
        (reg:DI 87)) "main.c":93:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 87)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7fa6108a16c0 *.LC1>)
            (nil))))
(insn 21 20 22 2 (set (reg:SI 4 si)
        (const_int 1 [0x1])) "main.c":93:3 81 {*movsi_internal}
     (nil))
(insn 22 21 23 2 (set (reg:DI 5 di)
        (reg:DI 86)) "main.c":93:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 86)
        (nil)))
(call_insn 23 22 24 2 (call (mem:QI (symbol_ref:DI ("dir_tester_add_file") [flags 0x41]  <function_decl 0x7fa610b6ee00 dir_tester_add_file>) [0 dir_tester_add_file S1 A8])
        (const_int 0 [0])) "main.c":93:3 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:SI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 24 23 25 2 (set (reg:DI 88)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [12 tester+0 S8 A64])) "main.c":94:3 80 {*movdi_internal}
     (nil))
(insn 25 24 26 2 (set (reg:DI 5 di)
        (reg:DI 88)) "main.c":94:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88)
        (nil)))
(call_insn 26 25 29 2 (call (mem:QI (symbol_ref:DI ("dir_tester_destory") [flags 0x41]  <function_decl 0x7fa610b6ec00 dir_tester_destory>) [0 dir_tester_destory S1 A8])
        (const_int 0 [0])) "main.c":94:3 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       3 [always]  (FALLTHRU) main.c:95:1
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 1, flags: (RTL)
;;  pred:       2 [always]  (FALLTHRU) main.c:95:1
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(note 29 26 30 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 0 3 (const_int 0 [0]) "main.c":95:1 928 {nop}
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]


;; Function test_dir_add_dir (test_dir_add_dir, funcdef_no=14, decl_uid=3357, cgraph_uid=15, symbol_order=15)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 4 n_edges 3 count 4 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 7.
verify found no changes in insn with uid = 15.
verify found no changes in insn with uid = 22.
verify found no changes in insn with uid = 28.
verify found no changes in insn with uid = 31.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r90: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r90,l0) best DIREG, allocno GENERAL_REGS
    r89: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r89,l0) best SIREG, allocno GENERAL_REGS
    r88: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r88,l0) best DIREG, allocno GENERAL_REGS
    r87: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r87,l0) best DREG, allocno GENERAL_REGS
    r86: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r86,l0) best DIREG, allocno GENERAL_REGS
    r85: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r85,l0) best SIREG, allocno GENERAL_REGS
    r84: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r84,l0) best DIREG, allocno GENERAL_REGS
    r83: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a7 (r83,l0) best AREG, allocno GENERAL_REGS
    r82: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a8 (r82,l0) best DIREG, allocno GENERAL_REGS

  a0(r90,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a1(r88,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a2(r89,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a3(r86,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a4(r87,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a5(r84,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a6(r85,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a7(r83,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:6000 NO_REX_SSE_REGS:6000 SSE_REGS:6000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a8(r82,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000

   Insn 35(l0): point = 0
   Insn 31(l0): point = 3
   Insn 30(l0): point = 5
   Insn 29(l0): point = 7
   Insn 28(l0): point = 9
   Insn 27(l0): point = 11
   Insn 26(l0): point = 13
   Insn 25(l0): point = 15
   Insn 24(l0): point = 17
   Insn 23(l0): point = 19
   Insn 22(l0): point = 21
   Insn 21(l0): point = 23
   Insn 20(l0): point = 25
   Insn 19(l0): point = 27
   Insn 18(l0): point = 29
   Insn 17(l0): point = 31
   Insn 16(l0): point = 33
   Insn 15(l0): point = 35
   Insn 14(l0): point = 37
   Insn 13(l0): point = 39
   Insn 12(l0): point = 41
   Insn 11(l0): point = 43
   Insn 10(l0): point = 45
   Insn 9(l0): point = 47
   Insn 8(l0): point = 49
   Insn 7(l0): point = 51
   Insn 6(l0): point = 53
   Insn 5(l0): point = 55
 a0(r90): [6..7]
 a1(r88): [12..19]
 a2(r89): [14..15]
 a3(r86): [24..33]
 a4(r87): [28..29]
 a5(r84): [38..45]
 a6(r85): [40..41]
 a7(r83): [48..49]
 a8(r82): [54..55]
Compressing live ranges: from 58 to 12 - 20%
Ranges after the compression:
 a0(r90): [0..1]
 a1(r88): [2..3]
 a2(r89): [2..3]
 a3(r86): [4..5]
 a4(r87): [4..5]
 a5(r84): [6..7]
 a6(r85): [6..7]
 a7(r83): [8..9]
 a8(r82): [10..11]
  pref0:a0(r90)<-hr5@1500
  pref1:a2(r89)<-hr4@1500
  pref2:a1(r88)<-hr5@1500
  pref3:a4(r87)<-hr1@1500
  pref4:a3(r86)<-hr5@1500
  pref5:a6(r85)<-hr4@1500
  pref6:a5(r84)<-hr5@1500
  pref7:a7(r83)<-hr0@1500
  pref8:a8(r82)<-hr5@1500
  regions=1, blocks=4, points=12
    allocnos=9 (big 0), copies=0, conflicts=0, ranges=9
Disposition:
    8:r82  l0     0    7:r83  l0     0    5:r84  l0     0    6:r85  l0     2
    3:r86  l0     0    4:r87  l0     1    1:r88  l0     0    2:r89  l0     2
    0:r90  l0     0
+++Costs: overall -9000, reg -9000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


test_dir_add_dir

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;;  ref usage 	r0={6d,1u} r1={9d,3u} r2={7d,1u} r4={9d,3u} r5={11d,5u} r6={1d,3u} r7={1d,8u} r8={5d} r9={5d} r10={5d} r11={5d} r12={5d} r13={5d} r14={5d} r15={5d} r16={1d,2u} r17={5d} r18={5d} r19={1d,8u} r20={6d} r21={6d} r22={6d} r23={6d} r24={6d} r25={6d} r26={6d} r27={6d} r28={5d} r29={5d} r30={5d} r31={5d} r32={5d} r33={5d} r34={5d} r35={5d} r36={6d} r37={6d} r38={5d} r39={5d} r44={5d} r45={5d} r46={5d} r47={5d} r48={5d} r49={5d} r50={5d} r51={5d} r52={5d} r53={5d} r54={5d} r55={5d} r56={5d} r57={5d} r58={5d} r59={5d} r60={5d} r61={5d} r62={5d} r63={5d} r64={5d} r65={5d} r66={5d} r67={5d} r68={5d} r69={5d} r70={5d} r71={5d} r72={5d} r73={5d} r74={5d} r75={5d} r82={1d,1u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} 
;;    total ref usage 418{375d,43u,0e} in 28{23 regular + 5 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 82 83 84 85 86 87 88 89 90
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:DI 82)
        (symbol_ref/f:DI ("*.LC16") [flags 0x2]  <var_decl 0x7fa6108bd5a0 *.LC16>)) "main.c":98:31 80 {*movdi_internal}
     (nil))
(insn 6 5 7 2 (set (reg:DI 5 di)
        (reg:DI 82)) "main.c":98:31 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 82)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC16") [flags 0x2]  <var_decl 0x7fa6108bd5a0 *.LC16>)
            (nil))))
(call_insn 7 6 8 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("dir_tester_create") [flags 0x41]  <function_decl 0x7fa610b6eb00 dir_tester_create>) [0 dir_tester_create S1 A8])
            (const_int 0 [0]))) "main.c":98:31 909 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 8 7 9 2 (set (reg:DI 83)
        (reg:DI 0 ax)) "main.c":98:31 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 9 8 10 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [12 tester+0 S8 A64])
        (reg:DI 83)) "main.c":98:31 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 83)
        (nil)))
(insn 10 9 11 2 (set (reg:DI 84)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [12 tester+0 S8 A64])) "main.c":99:3 80 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "main.c":99:3 81 {*movsi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:DI 85)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7fa6108a16c0 *.LC1>)) "main.c":99:3 80 {*movdi_internal}
     (nil))
(insn 13 12 14 2 (set (reg:DI 4 si)
        (reg:DI 85)) "main.c":99:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 85)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7fa6108a16c0 *.LC1>)
            (nil))))
(insn 14 13 15 2 (set (reg:DI 5 di)
        (reg:DI 84)) "main.c":99:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 84)
        (nil)))
(call_insn 15 14 16 2 (call (mem:QI (symbol_ref:DI ("dir_tester_add_subdir") [flags 0x41]  <function_decl 0x7fa610b6ef00 dir_tester_add_subdir>) [0 dir_tester_add_subdir S1 A8])
        (const_int 0 [0])) "main.c":99:3 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 16 15 17 2 (set (reg:DI 86)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [12 tester+0 S8 A64])) "main.c":100:3 80 {*movdi_internal}
     (nil))
(insn 17 16 18 2 (set (reg:SI 2 cx)
        (const_int 0 [0])) "main.c":100:3 81 {*movsi_internal}
     (nil))
(insn 18 17 19 2 (set (reg:DI 87)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7fa6108a16c0 *.LC1>)) "main.c":100:3 80 {*movdi_internal}
     (nil))
(insn 19 18 20 2 (set (reg:DI 1 dx)
        (reg:DI 87)) "main.c":100:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 87)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7fa6108a16c0 *.LC1>)
            (nil))))
(insn 20 19 21 2 (set (reg:SI 4 si)
        (const_int 1 [0x1])) "main.c":100:3 81 {*movsi_internal}
     (nil))
(insn 21 20 22 2 (set (reg:DI 5 di)
        (reg:DI 86)) "main.c":100:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 86)
        (nil)))
(call_insn 22 21 23 2 (call (mem:QI (symbol_ref:DI ("dir_tester_add_file") [flags 0x41]  <function_decl 0x7fa610b6ee00 dir_tester_add_file>) [0 dir_tester_add_file S1 A8])
        (const_int 0 [0])) "main.c":100:3 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:SI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 23 22 24 2 (set (reg:DI 88)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [12 tester+0 S8 A64])) "main.c":101:3 80 {*movdi_internal}
     (nil))
(insn 24 23 25 2 (set (reg:SI 1 dx)
        (const_int 0 [0])) "main.c":101:3 81 {*movsi_internal}
     (nil))
(insn 25 24 26 2 (set (reg:DI 89)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7fa6108a16c0 *.LC1>)) "main.c":101:3 80 {*movdi_internal}
     (nil))
(insn 26 25 27 2 (set (reg:DI 4 si)
        (reg:DI 89)) "main.c":101:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 89)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7fa6108a16c0 *.LC1>)
            (nil))))
(insn 27 26 28 2 (set (reg:DI 5 di)
        (reg:DI 88)) "main.c":101:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88)
        (nil)))
(call_insn 28 27 29 2 (call (mem:QI (symbol_ref:DI ("dir_tester_add_subdir") [flags 0x41]  <function_decl 0x7fa610b6ef00 dir_tester_add_subdir>) [0 dir_tester_add_subdir S1 A8])
        (const_int 0 [0])) "main.c":101:3 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 29 28 30 2 (set (reg:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [12 tester+0 S8 A64])) "main.c":102:3 80 {*movdi_internal}
     (nil))
(insn 30 29 31 2 (set (reg:DI 5 di)
        (reg:DI 90)) "main.c":102:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 90)
        (nil)))
(call_insn 31 30 34 2 (call (mem:QI (symbol_ref:DI ("dir_tester_destory") [flags 0x41]  <function_decl 0x7fa610b6ec00 dir_tester_destory>) [0 dir_tester_destory S1 A8])
        (const_int 0 [0])) "main.c":102:3 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       3 [always]  (FALLTHRU) main.c:103:1
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 1, flags: (RTL)
;;  pred:       2 [always]  (FALLTHRU) main.c:103:1
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(note 34 31 35 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 0 3 (const_int 0 [0]) "main.c":103:1 928 {nop}
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]


;; Function test_dir_add_delete (test_dir_add_delete, funcdef_no=15, decl_uid=3360, cgraph_uid=16, symbol_order=16)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 4 n_edges 3 count 4 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 7.
verify found no changes in insn with uid = 15.
verify found no changes in insn with uid = 22.
verify found no changes in insn with uid = 28.
verify found no changes in insn with uid = 35.
verify found no changes in insn with uid = 41.
verify found no changes in insn with uid = 47.
verify found no changes in insn with uid = 53.
verify found no changes in insn with uid = 56.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r98: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r98,l0) best DIREG, allocno GENERAL_REGS
    r97: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r97,l0) best SIREG, allocno GENERAL_REGS
    r96: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r96,l0) best DIREG, allocno GENERAL_REGS
    r95: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r95,l0) best SIREG, allocno GENERAL_REGS
    r94: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r94,l0) best DIREG, allocno GENERAL_REGS
    r93: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r93,l0) best SIREG, allocno GENERAL_REGS
    r92: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r92,l0) best DIREG, allocno GENERAL_REGS
    r91: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a8 (r91,l0) best DREG, allocno GENERAL_REGS
    r90: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a7 (r90,l0) best DIREG, allocno GENERAL_REGS
    r89: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a10 (r89,l0) best SIREG, allocno GENERAL_REGS
    r88: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a9 (r88,l0) best DIREG, allocno GENERAL_REGS
    r87: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a12 (r87,l0) best DREG, allocno GENERAL_REGS
    r86: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a11 (r86,l0) best DIREG, allocno GENERAL_REGS
    r85: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a14 (r85,l0) best SIREG, allocno GENERAL_REGS
    r84: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a13 (r84,l0) best DIREG, allocno GENERAL_REGS
    r83: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a15 (r83,l0) best AREG, allocno GENERAL_REGS
    r82: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a16 (r82,l0) best DIREG, allocno GENERAL_REGS

  a0(r98,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a1(r96,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a2(r97,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a3(r94,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a4(r95,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a5(r92,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a6(r93,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a7(r90,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a8(r91,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a9(r88,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a10(r89,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a11(r86,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a12(r87,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a13(r84,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a14(r85,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a15(r83,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:6000 NO_REX_SSE_REGS:6000 SSE_REGS:6000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a16(r82,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000

   Insn 60(l0): point = 0
   Insn 56(l0): point = 3
   Insn 55(l0): point = 5
   Insn 54(l0): point = 7
   Insn 53(l0): point = 9
   Insn 52(l0): point = 11
   Insn 51(l0): point = 13
   Insn 50(l0): point = 15
   Insn 49(l0): point = 17
   Insn 48(l0): point = 19
   Insn 47(l0): point = 21
   Insn 46(l0): point = 23
   Insn 45(l0): point = 25
   Insn 44(l0): point = 27
   Insn 43(l0): point = 29
   Insn 42(l0): point = 31
   Insn 41(l0): point = 33
   Insn 40(l0): point = 35
   Insn 39(l0): point = 37
   Insn 38(l0): point = 39
   Insn 37(l0): point = 41
   Insn 36(l0): point = 43
   Insn 35(l0): point = 45
   Insn 34(l0): point = 47
   Insn 33(l0): point = 49
   Insn 32(l0): point = 51
   Insn 31(l0): point = 53
   Insn 30(l0): point = 55
   Insn 29(l0): point = 57
   Insn 28(l0): point = 59
   Insn 27(l0): point = 61
   Insn 26(l0): point = 63
   Insn 25(l0): point = 65
   Insn 24(l0): point = 67
   Insn 23(l0): point = 69
   Insn 22(l0): point = 71
   Insn 21(l0): point = 73
   Insn 20(l0): point = 75
   Insn 19(l0): point = 77
   Insn 18(l0): point = 79
   Insn 17(l0): point = 81
   Insn 16(l0): point = 83
   Insn 15(l0): point = 85
   Insn 14(l0): point = 87
   Insn 13(l0): point = 89
   Insn 12(l0): point = 91
   Insn 11(l0): point = 93
   Insn 10(l0): point = 95
   Insn 9(l0): point = 97
   Insn 8(l0): point = 99
   Insn 7(l0): point = 101
   Insn 6(l0): point = 103
   Insn 5(l0): point = 105
 a0(r98): [6..7]
 a1(r96): [12..19]
 a2(r97): [14..15]
 a3(r94): [24..31]
 a4(r95): [26..27]
 a5(r92): [36..43]
 a6(r93): [38..39]
 a7(r90): [48..57]
 a8(r91): [52..53]
 a9(r88): [62..69]
 a10(r89): [64..65]
 a11(r86): [74..83]
 a12(r87): [78..79]
 a13(r84): [88..95]
 a14(r85): [90..91]
 a15(r83): [98..99]
 a16(r82): [104..105]
Compressing live ranges: from 108 to 20 - 18%
Ranges after the compression:
 a0(r98): [0..1]
 a1(r96): [2..3]
 a2(r97): [2..3]
 a3(r94): [4..5]
 a4(r95): [4..5]
 a5(r92): [6..7]
 a6(r93): [6..7]
 a7(r90): [8..9]
 a8(r91): [8..9]
 a9(r88): [10..11]
 a10(r89): [10..11]
 a11(r86): [12..13]
 a12(r87): [12..13]
 a13(r84): [14..15]
 a14(r85): [14..15]
 a15(r83): [16..17]
 a16(r82): [18..19]
  pref0:a0(r98)<-hr5@1500
  pref1:a2(r97)<-hr4@1500
  pref2:a1(r96)<-hr5@1500
  pref3:a4(r95)<-hr4@1500
  pref4:a3(r94)<-hr5@1500
  pref5:a6(r93)<-hr4@1500
  pref6:a5(r92)<-hr5@1500
  pref7:a8(r91)<-hr1@1500
  pref8:a7(r90)<-hr5@1500
  pref9:a10(r89)<-hr4@1500
  pref10:a9(r88)<-hr5@1500
  pref11:a12(r87)<-hr1@1500
  pref12:a11(r86)<-hr5@1500
  pref13:a14(r85)<-hr4@1500
  pref14:a13(r84)<-hr5@1500
  pref15:a15(r83)<-hr0@1500
  pref16:a16(r82)<-hr5@1500
  regions=1, blocks=4, points=20
    allocnos=17 (big 0), copies=0, conflicts=0, ranges=17
Disposition:
   16:r82  l0     0   15:r83  l0     0   13:r84  l0     0   14:r85  l0     2
   11:r86  l0     0   12:r87  l0     1    9:r88  l0     0   10:r89  l0     2
    7:r90  l0     0    8:r91  l0     1    5:r92  l0     0    6:r93  l0     2
    3:r94  l0     0    4:r95  l0     2    1:r96  l0     0    2:r97  l0     2
    0:r98  l0     0
+++Costs: overall -17000, reg -17000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


test_dir_add_delete

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;;  ref usage 	r0={10d,1u} r1={17d,7u} r2={12d,2u} r4={17d,7u} r5={19d,9u} r6={1d,3u} r7={1d,12u} r8={9d} r9={9d} r10={9d} r11={9d} r12={9d} r13={9d} r14={9d} r15={9d} r16={1d,2u} r17={9d} r18={9d} r19={1d,12u} r20={10d} r21={10d} r22={10d} r23={10d} r24={10d} r25={10d} r26={10d} r27={10d} r28={9d} r29={9d} r30={9d} r31={9d} r32={9d} r33={9d} r34={9d} r35={9d} r36={10d} r37={10d} r38={9d} r39={9d} r44={9d} r45={9d} r46={9d} r47={9d} r48={9d} r49={9d} r50={9d} r51={9d} r52={9d} r53={9d} r54={9d} r55={9d} r56={9d} r57={9d} r58={9d} r59={9d} r60={9d} r61={9d} r62={9d} r63={9d} r64={9d} r65={9d} r66={9d} r67={9d} r68={9d} r69={9d} r70={9d} r71={9d} r72={9d} r73={9d} r74={9d} r75={9d} r82={1d,1u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} 
;;    total ref usage 736{664d,72u,0e} in 53{44 regular + 9 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:DI 82)
        (symbol_ref/f:DI ("*.LC17") [flags 0x2]  <var_decl 0x7fa6108bd990 *.LC17>)) "main.c":106:31 80 {*movdi_internal}
     (nil))
(insn 6 5 7 2 (set (reg:DI 5 di)
        (reg:DI 82)) "main.c":106:31 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 82)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC17") [flags 0x2]  <var_decl 0x7fa6108bd990 *.LC17>)
            (nil))))
(call_insn 7 6 8 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("dir_tester_create") [flags 0x41]  <function_decl 0x7fa610b6eb00 dir_tester_create>) [0 dir_tester_create S1 A8])
            (const_int 0 [0]))) "main.c":106:31 909 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 8 7 9 2 (set (reg:DI 83)
        (reg:DI 0 ax)) "main.c":106:31 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 9 8 10 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [12 tester+0 S8 A64])
        (reg:DI 83)) "main.c":106:31 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 83)
        (nil)))
(insn 10 9 11 2 (set (reg:DI 84)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [12 tester+0 S8 A64])) "main.c":107:3 80 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "main.c":107:3 81 {*movsi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:DI 85)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7fa6108a16c0 *.LC1>)) "main.c":107:3 80 {*movdi_internal}
     (nil))
(insn 13 12 14 2 (set (reg:DI 4 si)
        (reg:DI 85)) "main.c":107:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 85)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7fa6108a16c0 *.LC1>)
            (nil))))
(insn 14 13 15 2 (set (reg:DI 5 di)
        (reg:DI 84)) "main.c":107:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 84)
        (nil)))
(call_insn 15 14 16 2 (call (mem:QI (symbol_ref:DI ("dir_tester_add_subdir") [flags 0x41]  <function_decl 0x7fa610b6ef00 dir_tester_add_subdir>) [0 dir_tester_add_subdir S1 A8])
        (const_int 0 [0])) "main.c":107:3 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 16 15 17 2 (set (reg:DI 86)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [12 tester+0 S8 A64])) "main.c":108:3 80 {*movdi_internal}
     (nil))
(insn 17 16 18 2 (set (reg:SI 2 cx)
        (const_int 0 [0])) "main.c":108:3 81 {*movsi_internal}
     (nil))
(insn 18 17 19 2 (set (reg:DI 87)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7fa6108a16c0 *.LC1>)) "main.c":108:3 80 {*movdi_internal}
     (nil))
(insn 19 18 20 2 (set (reg:DI 1 dx)
        (reg:DI 87)) "main.c":108:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 87)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7fa6108a16c0 *.LC1>)
            (nil))))
(insn 20 19 21 2 (set (reg:SI 4 si)
        (const_int 1 [0x1])) "main.c":108:3 81 {*movsi_internal}
     (nil))
(insn 21 20 22 2 (set (reg:DI 5 di)
        (reg:DI 86)) "main.c":108:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 86)
        (nil)))
(call_insn 22 21 23 2 (call (mem:QI (symbol_ref:DI ("dir_tester_add_file") [flags 0x41]  <function_decl 0x7fa610b6ee00 dir_tester_add_file>) [0 dir_tester_add_file S1 A8])
        (const_int 0 [0])) "main.c":108:3 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:SI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 23 22 24 2 (set (reg:DI 88)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [12 tester+0 S8 A64])) "main.c":109:3 80 {*movdi_internal}
     (nil))
(insn 24 23 25 2 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "main.c":109:3 81 {*movsi_internal}
     (nil))
(insn 25 24 26 2 (set (reg:DI 89)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7fa6108a16c0 *.LC1>)) "main.c":109:3 80 {*movdi_internal}
     (nil))
(insn 26 25 27 2 (set (reg:DI 4 si)
        (reg:DI 89)) "main.c":109:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 89)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7fa6108a16c0 *.LC1>)
            (nil))))
(insn 27 26 28 2 (set (reg:DI 5 di)
        (reg:DI 88)) "main.c":109:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88)
        (nil)))
(call_insn 28 27 29 2 (call (mem:QI (symbol_ref:DI ("dir_tester_delete") [flags 0x41]  <function_decl 0x7fa610b72000 dir_tester_delete>) [0 dir_tester_delete S1 A8])
        (const_int 0 [0])) "main.c":109:3 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 29 28 30 2 (set (reg:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [12 tester+0 S8 A64])) "main.c":110:3 80 {*movdi_internal}
     (nil))
(insn 30 29 31 2 (set (reg:SI 2 cx)
        (const_int 1 [0x1])) "main.c":110:3 81 {*movsi_internal}
     (nil))
(insn 31 30 32 2 (set (reg:DI 91)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7fa6108a16c0 *.LC1>)) "main.c":110:3 80 {*movdi_internal}
     (nil))
(insn 32 31 33 2 (set (reg:DI 1 dx)
        (reg:DI 91)) "main.c":110:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 91)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7fa6108a16c0 *.LC1>)
            (nil))))
(insn 33 32 34 2 (set (reg:SI 4 si)
        (const_int 1 [0x1])) "main.c":110:3 81 {*movsi_internal}
     (nil))
(insn 34 33 35 2 (set (reg:DI 5 di)
        (reg:DI 90)) "main.c":110:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 90)
        (nil)))
(call_insn 35 34 36 2 (call (mem:QI (symbol_ref:DI ("dir_tester_add_file") [flags 0x41]  <function_decl 0x7fa610b6ee00 dir_tester_add_file>) [0 dir_tester_add_file S1 A8])
        (const_int 0 [0])) "main.c":110:3 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:SI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 36 35 37 2 (set (reg:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [12 tester+0 S8 A64])) "main.c":111:3 80 {*movdi_internal}
     (nil))
(insn 37 36 38 2 (set (reg:SI 1 dx)
        (const_int 0 [0])) "main.c":111:3 81 {*movsi_internal}
     (nil))
(insn 38 37 39 2 (set (reg:DI 93)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7fa6108a16c0 *.LC1>)) "main.c":111:3 80 {*movdi_internal}
     (nil))
(insn 39 38 40 2 (set (reg:DI 4 si)
        (reg:DI 93)) "main.c":111:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 93)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7fa6108a16c0 *.LC1>)
            (nil))))
(insn 40 39 41 2 (set (reg:DI 5 di)
        (reg:DI 92)) "main.c":111:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 92)
        (nil)))
(call_insn 41 40 42 2 (call (mem:QI (symbol_ref:DI ("dir_tester_add_subdir") [flags 0x41]  <function_decl 0x7fa610b6ef00 dir_tester_add_subdir>) [0 dir_tester_add_subdir S1 A8])
        (const_int 0 [0])) "main.c":111:3 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 42 41 43 2 (set (reg:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [12 tester+0 S8 A64])) "main.c":112:3 80 {*movdi_internal}
     (nil))
(insn 43 42 44 2 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "main.c":112:3 81 {*movsi_internal}
     (nil))
(insn 44 43 45 2 (set (reg:DI 95)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7fa6108a16c0 *.LC1>)) "main.c":112:3 80 {*movdi_internal}
     (nil))
(insn 45 44 46 2 (set (reg:DI 4 si)
        (reg:DI 95)) "main.c":112:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 95)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7fa6108a16c0 *.LC1>)
            (nil))))
(insn 46 45 47 2 (set (reg:DI 5 di)
        (reg:DI 94)) "main.c":112:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 94)
        (nil)))
(call_insn 47 46 48 2 (call (mem:QI (symbol_ref:DI ("dir_tester_delete") [flags 0x41]  <function_decl 0x7fa610b72000 dir_tester_delete>) [0 dir_tester_delete S1 A8])
        (const_int 0 [0])) "main.c":112:3 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 48 47 49 2 (set (reg:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [12 tester+0 S8 A64])) "main.c":113:3 80 {*movdi_internal}
     (nil))
(insn 49 48 50 2 (set (reg:SI 1 dx)
        (const_int 0 [0])) "main.c":113:3 81 {*movsi_internal}
     (nil))
(insn 50 49 51 2 (set (reg:DI 97)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7fa6108a16c0 *.LC1>)) "main.c":113:3 80 {*movdi_internal}
     (nil))
(insn 51 50 52 2 (set (reg:DI 4 si)
        (reg:DI 97)) "main.c":113:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 97)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7fa6108a16c0 *.LC1>)
            (nil))))
(insn 52 51 53 2 (set (reg:DI 5 di)
        (reg:DI 96)) "main.c":113:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 96)
        (nil)))
(call_insn 53 52 54 2 (call (mem:QI (symbol_ref:DI ("dir_tester_delete") [flags 0x41]  <function_decl 0x7fa610b72000 dir_tester_delete>) [0 dir_tester_delete S1 A8])
        (const_int 0 [0])) "main.c":113:3 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 54 53 55 2 (set (reg:DI 98)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [12 tester+0 S8 A64])) "main.c":114:3 80 {*movdi_internal}
     (nil))
(insn 55 54 56 2 (set (reg:DI 5 di)
        (reg:DI 98)) "main.c":114:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 98)
        (nil)))
(call_insn 56 55 59 2 (call (mem:QI (symbol_ref:DI ("dir_tester_destory") [flags 0x41]  <function_decl 0x7fa610b6ec00 dir_tester_destory>) [0 dir_tester_destory S1 A8])
        (const_int 0 [0])) "main.c":114:3 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       3 [always]  (FALLTHRU) main.c:115:1
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 1, flags: (RTL)
;;  pred:       2 [always]  (FALLTHRU) main.c:115:1
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(note 59 56 60 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 60 59 0 3 (const_int 0 [0]) "main.c":115:1 928 {nop}
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]


;; Function test_dir_size (test_dir_size, funcdef_no=16, decl_uid=3363, cgraph_uid=17, symbol_order=17)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 11 n_edges 12 count 11 (    1)
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;;
;; Loop 2
;;  header 7, latch 6
;;  depth 1, outer 0
;;  nodes: 7 6
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 6 8 }
;; 8 succs { 10 9 }
;; 9 succs { }
;; 10 succs { 1 }
Removing SCRATCH to p105 in insn #3 (nop 2)
rescanning insn with uid = 3.
Removing SCRATCH to p106 in insn #98 (nop 3)
rescanning insn with uid = 98.
Building IRA IR
verify found no changes in insn with uid = 9.
verify found no changes in insn with uid = 23.
verify found no changes in insn with uid = 41.
verify found no changes in insn with uid = 45.
verify found no changes in insn with uid = 52.
verify found no changes in insn with uid = 56.
verify found no changes in insn with uid = 60.
verify found no changes in insn with uid = 71.
verify found no changes in insn with uid = 89.
verify found no changes in insn with uid = 93.
verify found no changes in insn with uid = 96.
verify found no changes in insn with uid = 100.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 11 n_edges 12 count 11 (    1)

Pass 0 for finding pseudo/allocno costs

    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r104,l0) best DIREG, allocno GENERAL_REGS
    r103: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r103,l0) best DIREG, allocno GENERAL_REGS
    r102: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r102,l0) best DIREG, allocno GENERAL_REGS
    r101: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a8 (r101,l0) best DIREG, allocno GENERAL_REGS
    r100: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a9 (r100,l0) best SIREG, allocno GENERAL_REGS
    r99: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a10 (r99,l0) best DIREG, allocno GENERAL_REGS
    r98: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a11 (r98,l0) best DIREG, allocno GENERAL_REGS
    r97: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a12 (r97,l0) best DIREG, allocno GENERAL_REGS
    r96: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a13 (r96,l0) best DREG, allocno GENERAL_REGS
    r95: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a14 (r95,l0) best DIREG, allocno GENERAL_REGS
    r94: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a15 (r94,l0) best DIREG, allocno GENERAL_REGS
    r93: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a20 (r93,l0) best DIREG, allocno GENERAL_REGS
    r92: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a21 (r92,l0) best DREG, allocno GENERAL_REGS
    r91: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a22 (r91,l0) best AREG, allocno GENERAL_REGS
    r90: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a23 (r90,l0) best DIREG, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:6000 NO_REX_SSE_REGS:6000 SSE_REGS:6000 MMX_REGS:13000 INT_SSE_REGS:13000 ALL_REGS:212000 MEM:6000
  a1(r104,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a2(r103,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a3(r102,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a4(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a5(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a6(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a7(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a8(r101,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a9(r100,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a10(r99,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a11(r98,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a12(r97,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a13(r96,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a14(r95,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a15(r94,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a16(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a17(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a18(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6000
  a19(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7000
  a20(r93,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a21(r92,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a22(r91,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:6000 NO_REX_SSE_REGS:6000 SSE_REGS:6000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a23(r90,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a24(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:6000 NO_REX_SSE_REGS:6000 SSE_REGS:6000 MMX_REGS:13000 INT_SSE_REGS:13000 ALL_REGS:212000 MEM:6000

   Insn 100(l0): point = 1
   Insn 99(l0): point = 4
   Insn 98(l0): point = 6
   Insn 106(l0): point = 8
   Insn 96(l0): point = 10
   Insn 95(l0): point = 12
   Insn 94(l0): point = 14
   Insn 93(l0): point = 16
   Insn 92(l0): point = 18
   Insn 91(l0): point = 20
   Insn 90(l0): point = 22
   Insn 89(l0): point = 24
   Insn 88(l0): point = 26
   Insn 87(l0): point = 28
   Insn 86(l0): point = 30
   Insn 77(l0): point = 33
   Insn 76(l0): point = 35
   Insn 75(l0): point = 37
   Insn 74(l0): point = 39
   Insn 73(l0): point = 41
   Insn 72(l0): point = 43
   Insn 71(l0): point = 45
   Insn 70(l0): point = 47
   Insn 69(l0): point = 49
   Insn 68(l0): point = 51
   Insn 67(l0): point = 53
   Insn 66(l0): point = 55
   Insn 84(l0): point = 58
   Insn 83(l0): point = 60
   Insn 109(l0): point = 63
   Insn 62(l0): point = 65
   Insn 61(l0): point = 67
   Insn 60(l0): point = 69
   Insn 59(l0): point = 71
   Insn 58(l0): point = 73
   Insn 57(l0): point = 75
   Insn 56(l0): point = 77
   Insn 55(l0): point = 79
   Insn 54(l0): point = 81
   Insn 53(l0): point = 83
   Insn 52(l0): point = 85
   Insn 51(l0): point = 87
   Insn 50(l0): point = 89
   Insn 49(l0): point = 91
   Insn 48(l0): point = 93
   Insn 47(l0): point = 95
   Insn 46(l0): point = 97
   Insn 45(l0): point = 99
   Insn 44(l0): point = 101
   Insn 43(l0): point = 103
   Insn 42(l0): point = 105
   Insn 41(l0): point = 107
   Insn 40(l0): point = 109
   Insn 39(l0): point = 111
   Insn 38(l0): point = 113
   Insn 29(l0): point = 116
   Insn 28(l0): point = 118
   Insn 27(l0): point = 120
   Insn 26(l0): point = 122
   Insn 25(l0): point = 124
   Insn 24(l0): point = 126
   Insn 23(l0): point = 128
   Insn 22(l0): point = 130
   Insn 21(l0): point = 132
   Insn 20(l0): point = 134
   Insn 19(l0): point = 136
   Insn 18(l0): point = 138
   Insn 17(l0): point = 140
   Insn 36(l0): point = 143
   Insn 35(l0): point = 145
   Insn 107(l0): point = 148
   Insn 13(l0): point = 150
   Insn 12(l0): point = 152
   Insn 11(l0): point = 154
   Insn 10(l0): point = 156
   Insn 9(l0): point = 158
   Insn 8(l0): point = 160
   Insn 7(l0): point = 162
   Insn 6(l0): point = 164
   Insn 3(l0): point = 166
 a0(r106): [6..6]
 a1(r104): [13..14]
 a2(r103): [19..22]
 a3(r102): [27..30]
 a4(r89): [36..37]
 a5(r88): [38..39]
 a6(r87): [40..41]
 a7(r86): [42..43]
 a8(r101): [48..53]
 a9(r100): [50..55]
 a10(r99): [72..75]
 a11(r98): [80..83]
 a12(r97): [88..95]
 a13(r96): [92..97]
 a14(r95): [102..105]
 a15(r94): [110..113]
 a16(r85): [119..120]
 a17(r84): [121..122]
 a18(r83): [123..124]
 a19(r82): [125..126]
 a20(r93): [131..138]
 a21(r92): [135..140]
 a22(r91): [155..156]
 a23(r90): [161..162]
 a24(r105): [166..166]
Compressing live ranges: from 169 to 42 - 24%
Ranges after the compression:
 a0(r106): [0..0]
 a1(r104): [1..2]
 a2(r103): [3..4]
 a3(r102): [5..6]
 a4(r89): [7..8]
 a5(r88): [9..10]
 a6(r87): [11..12]
 a7(r86): [13..14]
 a8(r101): [15..16]
 a9(r100): [15..16]
 a10(r99): [17..18]
 a11(r98): [19..20]
 a12(r97): [21..22]
 a13(r96): [21..22]
 a14(r95): [23..24]
 a15(r94): [25..26]
 a16(r85): [27..28]
 a17(r84): [29..30]
 a18(r83): [31..32]
 a19(r82): [33..34]
 a20(r93): [35..36]
 a21(r92): [35..36]
 a22(r91): [37..38]
 a23(r90): [39..40]
 a24(r105): [41..41]
  pref0:a1(r104)<-hr5@1500
  pref1:a2(r103)<-hr5@1500
  pref2:a3(r102)<-hr5@1500
  pref3:a8(r101)<-hr5@1500
  pref4:a9(r100)<-hr4@1500
  pref5:a10(r99)<-hr5@1500
  pref6:a11(r98)<-hr5@1500
  pref7:a12(r97)<-hr5@1500
  pref8:a13(r96)<-hr1@1500
  pref9:a14(r95)<-hr5@1500
  pref10:a15(r94)<-hr5@1500
  pref11:a20(r93)<-hr5@1500
  pref12:a21(r92)<-hr1@1500
  pref13:a22(r91)<-hr0@1500
  pref14:a23(r90)<-hr5@1500
  regions=1, blocks=11, points=42
    allocnos=25 (big 0), copies=0, conflicts=0, ranges=25
Disposition:
   19:r82  l0     0   18:r83  l0     0   17:r84  l0     0   16:r85  l0     0
    7:r86  l0     0    6:r87  l0     0    5:r88  l0     0    4:r89  l0     0
   23:r90  l0     0   22:r91  l0     0   21:r92  l0     1   20:r93  l0     0
   15:r94  l0     0   14:r95  l0     0   13:r96  l0     1   12:r97  l0     0
   11:r98  l0     0   10:r99  l0     0    9:r100 l0     2    8:r101 l0     0
    3:r102 l0     0    2:r103 l0     0    1:r104 l0     0   24:r105 l0     0
    0:r106 l0     0
+++Costs: overall -15000, reg -15000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


test_dir_size

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;;  ref usage 	r0={13d,1u} r1={16d,3u} r2={15d,2u} r4={22d,9u} r5={24d,11u} r6={1d,10u} r7={1d,22u} r8={12d} r9={12d} r10={12d} r11={12d} r12={12d} r13={12d} r14={12d} r15={12d} r16={1d,9u} r17={23d,3u} r18={12d} r19={1d,41u} r20={13d} r21={13d} r22={13d} r23={13d} r24={13d} r25={13d} r26={13d} r27={13d} r28={12d} r29={12d} r30={12d} r31={12d} r32={12d} r33={12d} r34={12d} r35={12d} r36={13d} r37={13d} r38={12d} r39={12d} r44={12d} r45={12d} r46={12d} r47={12d} r48={12d} r49={12d} r50={12d} r51={12d} r52={12d} r53={12d} r54={12d} r55={12d} r56={12d} r57={12d} r58={12d} r59={12d} r60={12d} r61={12d} r62={12d} r63={12d} r64={12d} r65={12d} r66={12d} r67={12d} r68={12d} r69={12d} r70={12d} r71={12d} r72={12d} r73={12d} r74={12d} r75={12d} r82={1d,1u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d} r106={1d} 
;;    total ref usage 1018{884d,134u,0e} in 80{68 regular + 12 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 90 91 105
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 4 3 2 NOTE_INSN_FUNCTION_BEG)
(insn 3 2 6 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 19 frame)
                        (const_int -8 [0xfffffffffffffff8])) [9 D.3558+0 S8 A64])
                (unspec:DI [
                        (mem/v/f:DI (const_int 40 [0x28]) [0 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_SET))
            (set (reg:DI 105)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "main.c":117:22 1265 {stack_protect_set_1_di}
     (expr_list:REG_UNUSED (reg:DI 105)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 6 3 7 2 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -28 [0xffffffffffffffe4])) [1 i+0 S4 A32])
        (const_int 0 [0])) "main.c":118:7 81 {*movsi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:DI 90)
        (symbol_ref/f:DI ("*.LC18") [flags 0x2]  <var_decl 0x7fa6108bdd80 *.LC18>)) "main.c":119:31 80 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:DI 5 di)
        (reg:DI 90)) "main.c":119:31 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 90)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC18") [flags 0x2]  <var_decl 0x7fa6108bdd80 *.LC18>)
            (nil))))
(call_insn 9 8 10 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("dir_tester_create") [flags 0x41]  <function_decl 0x7fa610b6eb00 dir_tester_create>) [0 dir_tester_create S1 A8])
            (const_int 0 [0]))) "main.c":119:31 909 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 10 9 11 2 (set (reg:DI 91)
        (reg:DI 0 ax)) "main.c":119:31 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 11 10 12 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [12 tester+0 S8 A64])
        (reg:DI 91)) "main.c":119:31 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 91)
        (nil)))
(insn 12 11 13 2 (set (mem/c:HI (plus:DI (reg/f:DI 19 frame)
                (const_int -10 [0xfffffffffffffff6])) [0 name+0 S2 A16])
        (const_int 97 [0x61])) "main.c":120:8 82 {*movhi_internal}
     (nil))
(insn 13 12 107 2 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -28 [0xffffffffffffffe4])) [1 i+0 S4 A32])
        (const_int 0 [0])) "main.c":121:10 81 {*movsi_internal}
     (nil))
(jump_insn 107 13 108 2 (set (pc)
        (label_ref 30)) "main.c":121:3 892 {jump}
     (nil)
 -> 30)
;;  succ:       4 [always]  main.c:121:3
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 108 107 32)
;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       4
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 82 83 84 85 92 93
(code_label 32 108 16 3 19 (nil) [1 uses])
(note 16 32 17 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 3 (parallel [
            (set (reg:DI 92)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -10 [0xfffffffffffffff6])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":122:5 230 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 18 17 19 3 (set (reg:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [12 tester+0 S8 A64])) "main.c":122:5 80 {*movdi_internal}
     (nil))
(insn 19 18 20 3 (set (reg:SI 2 cx)
        (const_int 1 [0x1])) "main.c":122:5 81 {*movsi_internal}
     (nil))
(insn 20 19 21 3 (set (reg:DI 1 dx)
        (reg:DI 92)) "main.c":122:5 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 92)
        (nil)))
(insn 21 20 22 3 (set (reg:SI 4 si)
        (const_int 1 [0x1])) "main.c":122:5 81 {*movsi_internal}
     (nil))
(insn 22 21 23 3 (set (reg:DI 5 di)
        (reg:DI 93)) "main.c":122:5 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 93)
        (nil)))
(call_insn 23 22 24 3 (call (mem:QI (symbol_ref:DI ("dir_tester_add_file") [flags 0x41]  <function_decl 0x7fa610b6ee00 dir_tester_add_file>) [0 dir_tester_add_file S1 A8])
        (const_int 0 [0])) "main.c":122:5 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:SI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 24 23 25 3 (set (reg:QI 82 [ _1 ])
        (mem/c:QI (plus:DI (reg/f:DI 19 frame)
                (const_int -10 [0xfffffffffffffff6])) [0 name[0]+0 S1 A16])) "main.c":123:9 83 {*movqi_internal}
     (nil))
(insn 25 24 26 3 (set (reg:QI 83 [ _3 ])
        (reg:QI 82 [ _1 ])) "main.c":123:12 83 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 82 [ _1 ])
        (nil)))
(insn 26 25 27 3 (parallel [
            (set (reg:QI 84 [ _4 ])
                (plus:QI (reg:QI 83 [ _3 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":123:12 233 {*addqi_1}
     (expr_list:REG_DEAD (reg:QI 83 [ _3 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 27 26 28 3 (set (reg:QI 85 [ _5 ])
        (reg:QI 84 [ _4 ])) "main.c":123:12 83 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 84 [ _4 ])
        (nil)))
(insn 28 27 29 3 (set (mem/c:QI (plus:DI (reg/f:DI 19 frame)
                (const_int -10 [0xfffffffffffffff6])) [0 name[0]+0 S1 A16])
        (reg:QI 85 [ _5 ])) "main.c":123:12 83 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 85 [ _5 ])
        (nil)))
(insn 29 28 30 3 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                        (const_int -28 [0xffffffffffffffe4])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                            (const_int -28 [0xffffffffffffffe4])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":121:24 229 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       4 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       3 (FALLTHRU,DFS_BACK)
;;              2 [always]  main.c:121:3
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags]
(code_label 30 29 31 4 18 (nil) [1 uses])
(note 31 30 35 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 35 31 36 4 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                    (const_int -28 [0xffffffffffffffe4])) [1 i+0 S4 A32])
            (const_int 15 [0xf]))) "main.c":121:17 11 {*cmpsi_1}
     (nil))
(jump_insn 36 35 37 4 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 32)
            (pc))) "main.c":121:17 891 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 32)
;;  succ:       3
;;              5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 94 95 96 97 98 99
(note 37 36 38 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 39 5 (set (reg:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [12 tester+0 S8 A64])) "main.c":125:3 80 {*movdi_internal}
     (nil))
(insn 39 38 40 5 (set (reg:SI 4 si)
        (const_int 16 [0x10])) "main.c":125:3 81 {*movsi_internal}
     (nil))
(insn 40 39 41 5 (set (reg:DI 5 di)
        (reg:DI 94)) "main.c":125:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 94)
        (nil)))
(call_insn 41 40 42 5 (call (mem:QI (symbol_ref:DI ("dir_tester_size") [flags 0x41]  <function_decl 0x7fa610b72100 dir_tester_size>) [0 dir_tester_size S1 A8])
        (const_int 0 [0])) "main.c":125:3 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 42 41 43 5 (set (reg:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [12 tester+0 S8 A64])) "main.c":126:3 80 {*movdi_internal}
     (nil))
(insn 43 42 44 5 (set (reg:SI 4 si)
        (const_int 16 [0x10])) "main.c":126:3 81 {*movsi_internal}
     (nil))
(insn 44 43 45 5 (set (reg:DI 5 di)
        (reg:DI 95)) "main.c":126:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 95)
        (nil)))
(call_insn 45 44 46 5 (call (mem:QI (symbol_ref:DI ("dir_tester_capacity") [flags 0x41]  <function_decl 0x7fa610b72200 dir_tester_capacity>) [0 dir_tester_capacity S1 A8])
        (const_int 0 [0])) "main.c":126:3 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 46 45 47 5 (parallel [
            (set (reg:DI 96)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -10 [0xfffffffffffffff6])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":127:3 230 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 47 46 48 5 (set (reg:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [12 tester+0 S8 A64])) "main.c":127:3 80 {*movdi_internal}
     (nil))
(insn 48 47 49 5 (set (reg:SI 2 cx)
        (const_int 1 [0x1])) "main.c":127:3 81 {*movsi_internal}
     (nil))
(insn 49 48 50 5 (set (reg:DI 1 dx)
        (reg:DI 96)) "main.c":127:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 96)
        (nil)))
(insn 50 49 51 5 (set (reg:SI 4 si)
        (const_int 1 [0x1])) "main.c":127:3 81 {*movsi_internal}
     (nil))
(insn 51 50 52 5 (set (reg:DI 5 di)
        (reg:DI 97)) "main.c":127:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 97)
        (nil)))
(call_insn 52 51 53 5 (call (mem:QI (symbol_ref:DI ("dir_tester_add_file") [flags 0x41]  <function_decl 0x7fa610b6ee00 dir_tester_add_file>) [0 dir_tester_add_file S1 A8])
        (const_int 0 [0])) "main.c":127:3 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:SI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 53 52 54 5 (set (reg:DI 98)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [12 tester+0 S8 A64])) "main.c":128:3 80 {*movdi_internal}
     (nil))
(insn 54 53 55 5 (set (reg:SI 4 si)
        (const_int 17 [0x11])) "main.c":128:3 81 {*movsi_internal}
     (nil))
(insn 55 54 56 5 (set (reg:DI 5 di)
        (reg:DI 98)) "main.c":128:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 98)
        (nil)))
(call_insn 56 55 57 5 (call (mem:QI (symbol_ref:DI ("dir_tester_size") [flags 0x41]  <function_decl 0x7fa610b72100 dir_tester_size>) [0 dir_tester_size S1 A8])
        (const_int 0 [0])) "main.c":128:3 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 57 56 58 5 (set (reg:DI 99)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [12 tester+0 S8 A64])) "main.c":129:3 80 {*movdi_internal}
     (nil))
(insn 58 57 59 5 (set (reg:SI 4 si)
        (const_int 32 [0x20])) "main.c":129:3 81 {*movsi_internal}
     (nil))
(insn 59 58 60 5 (set (reg:DI 5 di)
        (reg:DI 99)) "main.c":129:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 99)
        (nil)))
(call_insn 60 59 61 5 (call (mem:QI (symbol_ref:DI ("dir_tester_capacity") [flags 0x41]  <function_decl 0x7fa610b72200 dir_tester_capacity>) [0 dir_tester_capacity S1 A8])
        (const_int 0 [0])) "main.c":129:3 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 61 60 62 5 (set (mem/c:QI (plus:DI (reg/f:DI 19 frame)
                (const_int -10 [0xfffffffffffffff6])) [0 name[0]+0 S1 A16])
        (const_int 97 [0x61])) "main.c":130:11 83 {*movqi_internal}
     (nil))
(insn 62 61 109 5 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -28 [0xffffffffffffffe4])) [1 i+0 S4 A32])
        (const_int 0 [0])) "main.c":131:10 81 {*movsi_internal}
     (nil))
(jump_insn 109 62 110 5 (set (pc)
        (label_ref 78)) "main.c":131:3 892 {jump}
     (nil)
 -> 78)
;;  succ:       7 [always]  main.c:131:3
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 110 109 80)
;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       7
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 86 87 88 89 100 101
(code_label 80 110 65 6 21 (nil) [1 uses])
(note 65 80 66 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 66 65 67 6 (parallel [
            (set (reg:DI 100)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -10 [0xfffffffffffffff6])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":132:5 230 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 67 66 68 6 (set (reg:DI 101)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [12 tester+0 S8 A64])) "main.c":132:5 80 {*movdi_internal}
     (nil))
(insn 68 67 69 6 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "main.c":132:5 81 {*movsi_internal}
     (nil))
(insn 69 68 70 6 (set (reg:DI 4 si)
        (reg:DI 100)) "main.c":132:5 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 100)
        (nil)))
(insn 70 69 71 6 (set (reg:DI 5 di)
        (reg:DI 101)) "main.c":132:5 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 101)
        (nil)))
(call_insn 71 70 72 6 (call (mem:QI (symbol_ref:DI ("dir_tester_delete") [flags 0x41]  <function_decl 0x7fa610b72000 dir_tester_delete>) [0 dir_tester_delete S1 A8])
        (const_int 0 [0])) "main.c":132:5 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 72 71 73 6 (set (reg:QI 86 [ _6 ])
        (mem/c:QI (plus:DI (reg/f:DI 19 frame)
                (const_int -10 [0xfffffffffffffff6])) [0 name[0]+0 S1 A16])) "main.c":133:9 83 {*movqi_internal}
     (nil))
(insn 73 72 74 6 (set (reg:QI 87 [ _8 ])
        (reg:QI 86 [ _6 ])) "main.c":133:12 83 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 86 [ _6 ])
        (nil)))
(insn 74 73 75 6 (parallel [
            (set (reg:QI 88 [ _9 ])
                (plus:QI (reg:QI 87 [ _8 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":133:12 233 {*addqi_1}
     (expr_list:REG_DEAD (reg:QI 87 [ _8 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 75 74 76 6 (set (reg:QI 89 [ _10 ])
        (reg:QI 88 [ _9 ])) "main.c":133:12 83 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 88 [ _9 ])
        (nil)))
(insn 76 75 77 6 (set (mem/c:QI (plus:DI (reg/f:DI 19 frame)
                (const_int -10 [0xfffffffffffffff6])) [0 name[0]+0 S1 A16])
        (reg:QI 89 [ _10 ])) "main.c":133:12 83 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 89 [ _10 ])
        (nil)))
(insn 77 76 78 6 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                        (const_int -28 [0xffffffffffffffe4])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                            (const_int -28 [0xffffffffffffffe4])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":131:24 229 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       7 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 7, loop depth 0, maybe hot
;;  prev block 6, next block 8, flags: (RTL)
;;  pred:       6 (FALLTHRU,DFS_BACK)
;;              5 [always]  main.c:131:3
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags]
(code_label 78 77 79 7 20 (nil) [1 uses])
(note 79 78 83 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 83 79 84 7 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                    (const_int -28 [0xffffffffffffffe4])) [1 i+0 S4 A32])
            (const_int 13 [0xd]))) "main.c":131:17 11 {*cmpsi_1}
     (nil))
(jump_insn 84 83 85 7 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 80)
            (pc))) "main.c":131:17 891 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 80)
;;  succ:       6
;;              8 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 8, loop depth 0, maybe hot
;;  prev block 7, next block 9, flags: (RTL, MODIFIED)
;;  pred:       7 (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 102 103 104 106
(note 85 84 86 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 86 85 87 8 (set (reg:DI 102)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [12 tester+0 S8 A64])) "main.c":135:3 80 {*movdi_internal}
     (nil))
(insn 87 86 88 8 (set (reg:SI 4 si)
        (const_int 3 [0x3])) "main.c":135:3 81 {*movsi_internal}
     (nil))
(insn 88 87 89 8 (set (reg:DI 5 di)
        (reg:DI 102)) "main.c":135:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 102)
        (nil)))
(call_insn 89 88 90 8 (call (mem:QI (symbol_ref:DI ("dir_tester_size") [flags 0x41]  <function_decl 0x7fa610b72100 dir_tester_size>) [0 dir_tester_size S1 A8])
        (const_int 0 [0])) "main.c":135:3 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 90 89 91 8 (set (reg:DI 103)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [12 tester+0 S8 A64])) "main.c":136:3 80 {*movdi_internal}
     (nil))
(insn 91 90 92 8 (set (reg:SI 4 si)
        (const_int 32 [0x20])) "main.c":136:3 81 {*movsi_internal}
     (nil))
(insn 92 91 93 8 (set (reg:DI 5 di)
        (reg:DI 103)) "main.c":136:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 103)
        (nil)))
(call_insn 93 92 94 8 (call (mem:QI (symbol_ref:DI ("dir_tester_capacity") [flags 0x41]  <function_decl 0x7fa610b72200 dir_tester_capacity>) [0 dir_tester_capacity S1 A8])
        (const_int 0 [0])) "main.c":136:3 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 94 93 95 8 (set (reg:DI 104)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [12 tester+0 S8 A64])) "main.c":138:3 80 {*movdi_internal}
     (nil))
(insn 95 94 96 8 (set (reg:DI 5 di)
        (reg:DI 104)) "main.c":138:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 104)
        (nil)))
(call_insn 96 95 106 8 (call (mem:QI (symbol_ref:DI ("dir_tester_destory") [flags 0x41]  <function_decl 0x7fa610b6ec00 dir_tester_destory>) [0 dir_tester_destory S1 A8])
        (const_int 0 [0])) "main.c":138:3 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 106 96 98 8 (const_int 0 [0]) "main.c":139:1 928 {nop}
     (nil))
(insn 98 106 99 8 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 19 frame)
                                (const_int -8 [0xfffffffffffffff8])) [9 D.3558+0 S8 A64])
                        (mem/v/f:DI (const_int 40 [0x28]) [0 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_TEST))
            (clobber (reg:DI 106))
        ]) "main.c":139:1 1270 {stack_protect_test_1_di}
     (expr_list:REG_UNUSED (reg:DI 106)
        (nil)))
(jump_insn 99 98 104 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 102)
            (pc))) "main.c":139:1 891 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 102)
;;  succ:       10
;;              9 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 9, loop depth 0, maybe hot
;;  prev block 8, next block 10, flags: (RTL)
;;  pred:       8 (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
(note 104 99 100 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(call_insn 100 104 101 9 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fa61088e500 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) "main.c":139:1 898 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 19 [frame]

(barrier 101 100 102)
;; basic block 10, loop depth 0, maybe hot
;;  prev block 9, next block 1, flags: (RTL)
;;  pred:       8
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(code_label 102 101 105 10 22 (nil) [1 uses])
(note 105 102 0 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]


;; Function checksum_reset (checksum_reset, funcdef_no=17, decl_uid=3377, cgraph_uid=18, symbol_order=19)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 4 n_edges 3 count 4 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 9.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r82: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r82,l0) best DIREG, allocno GENERAL_REGS

  a0(r82,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000

   Insn 13(l0): point = 0
   Insn 9(l0): point = 3
   Insn 8(l0): point = 5
   Insn 7(l0): point = 7
   Insn 6(l0): point = 9
   Insn 5(l0): point = 11
 a0(r82): [6..7]
Compressing live ranges: from 14 to 2 - 14%
Ranges after the compression:
 a0(r82): [0..1]
  pref0:a0(r82)<-hr5@1500
  regions=1, blocks=4, points=2
    allocnos=1 (big 0), copies=0, conflicts=0, ranges=1
Disposition:
    0:r82  l0     0
+++Costs: overall -1000, reg -1000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


checksum_reset

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;;  ref usage 	r0={2d} r1={3d,1u} r2={2d} r4={3d,1u} r5={3d,1u} r6={1d,3u} r7={1d,4u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,2u} r17={1d} r18={1d} r19={1d,3u} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={2d} r37={2d} r38={1d} r39={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r82={1d,1u} 
;;    total ref usage 106{90d,16u,0e} in 6{5 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 82
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:DI 1 dx)
        (const_int 64 [0x40])) "main.c":144:32 80 {*movdi_internal}
     (nil))
(insn 6 5 7 2 (set (reg:SI 4 si)
        (const_int 0 [0])) "main.c":144:32 81 {*movsi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:DI 82)
        (symbol_ref:DI ("checksum") [flags 0x2]  <var_decl 0x7fa61082b870 checksum>)) "main.c":144:32 80 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:DI 5 di)
        (reg:DI 82)) "main.c":144:32 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 82)
        (expr_list:REG_EQUAL (symbol_ref:DI ("checksum") [flags 0x2]  <var_decl 0x7fa61082b870 checksum>)
            (nil))))
(call_insn 9 8 12 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memset") [flags 0x41]  <function_decl 0x7fa610abbe00 memset>) [0 __builtin_memset S1 A8])
            (const_int 0 [0]))) "main.c":144:32 909 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
;;  succ:       3 [always]  (FALLTHRU) main.c:144:71
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 1, flags: (RTL)
;;  pred:       2 [always]  (FALLTHRU) main.c:144:71
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(note 12 9 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 0 3 (const_int 0 [0]) "main.c":144:71 928 {nop}
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]


;; Function checksum_test (checksum_test, funcdef_no=18, decl_uid=3380, cgraph_uid=19, symbol_order=20)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 10 n_edges 11 count 10 (    1)
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 8 7 9
;;
;; Loop 1
;;  header 6, latch 5
;;  depth 1, outer 0
;;  nodes: 6 5 3 4
;; 2 succs { 6 }
;; 3 succs { 4 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 3 8 }
;; 8 succs { 7 }
;; 7 succs { 9 }
;; 9 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a1(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a2(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a3(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a4(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a5(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000

   Insn 39(l0): point = 0
   Insn 37(l0): point = 4
   Insn 17(l0): point = 7
   Insn 16(l0): point = 9
   Insn 15(l0): point = 11
   Insn 14(l0): point = 13
   Insn 13(l0): point = 15
   Insn 12(l0): point = 17
   Insn 11(l0): point = 19
   Insn 30(l0): point = 22
   Insn 29(l0): point = 24
   Insn 23(l0): point = 27
   Insn 20(l0): point = 30
   Insn 19(l0): point = 32
   Insn 34(l0): point = 35
   Insn 7(l0): point = 37
   Insn 6(l0): point = 39
   Insn 2(l0): point = 41
 a0(r87): [31..32]
 a1(r82): [10..11]
 a2(r86): [12..13]
 a3(r85): [12..15]
 a4(r83): [16..17]
 a5(r84): [18..19]
Compressing live ranges: from 44 to 10 - 22%
Ranges after the compression:
 a0(r87): [8..9]
 a1(r82): [0..1]
 a2(r86): [2..3]
 a3(r85): [2..3]
 a4(r83): [4..5]
 a5(r84): [6..7]
  regions=1, blocks=10, points=10
    allocnos=6 (big 0), copies=0, conflicts=0, ranges=6
Disposition:
    1:r82  l0     0    4:r83  l0     0    5:r84  l0     0    3:r85  l0     1
    2:r86  l0     0    0:r87  l0     0
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


checksum_test

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 5 [di] 6 [bp] 17 [flags]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d} r5={1d,1u} r6={1d,9u} r7={1d,9u} r16={1d,8u} r17={4d,2u} r19={1d,17u} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r36={1d} r37={1d} r82={1d,1u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} 
;;    total ref usage 81{29d,52u,0e} in 18{18 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [5 err+0 S8 A64])
        (reg:DI 5 di [ err ])) "main.c":145:37 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ err ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
        (const_int 0 [0])) "main.c":146:7 81 {*movsi_internal}
     (nil))
(insn 7 6 34 2 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
        (const_int 0 [0])) "main.c":147:10 81 {*movsi_internal}
     (nil))
(jump_insn 34 7 35 2 (set (pc)
        (label_ref 24)) "main.c":147:3 892 {jump}
     (nil)
 -> 24)
;;  succ:       6 [always]  main.c:147:3
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 35 34 26)
;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       6
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags] 82 83 84 85 86
(code_label 26 35 10 3 27 (nil) [1 uses])
(note 10 26 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 3 (set (reg:SI 84)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "main.c":148:17 81 {*movsi_internal}
     (nil))
(insn 12 11 13 3 (set (reg:DI 83)
        (sign_extend:DI (reg:SI 84))) "main.c":148:17 154 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 84)
        (nil)))
(insn 13 12 14 3 (parallel [
            (set (reg:DI 85)
                (ashift:DI (reg:DI 83)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":148:17 713 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 83)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 14 13 15 3 (set (reg:DI 86)
        (symbol_ref:DI ("checksum") [flags 0x2]  <var_decl 0x7fa61082b870 checksum>)) "main.c":148:17 80 {*movdi_internal}
     (nil))
(insn 15 14 16 3 (set (reg:SI 82 [ _1 ])
        (mem:SI (plus:DI (reg:DI 85)
                (reg:DI 86)) [1 checksum[i_2]+0 S4 A32])) "main.c":148:17 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 86)
        (expr_list:REG_DEAD (reg:DI 85)
            (nil))))
(insn 16 15 17 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 82 [ _1 ])
            (const_int 0 [0]))) "main.c":148:8 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 82 [ _1 ])
        (nil)))
(jump_insn 17 16 18 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 21)
            (pc))) "main.c":148:8 891 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 21)
;;  succ:       4 (FALLTHRU)
;;              5
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 87
(note 18 17 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 4 (set (reg/f:DI 87)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [5 err+0 S8 A64])) "main.c":149:12 80 {*movdi_internal}
     (nil))
(insn 20 19 21 4 (set (mem:SI (reg/f:DI 87) [1 *err_8(D)+0 S4 A32])
        (const_int 1 [0x1])) "main.c":149:12 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87)
        (nil)))
;;  succ:       5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       3
;;              4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags]
(code_label 21 20 22 5 26 (nil) [1 uses])
(note 22 21 23 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 24 5 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                        (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":147:36 229 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       6 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 8, flags: (RTL)
;;  pred:       5 (FALLTHRU,DFS_BACK)
;;              2 [always]  main.c:147:3
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags]
(code_label 24 23 25 6 25 (nil) [1 uses])
(note 25 24 29 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 29 25 30 6 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
            (const_int 15 [0xf]))) "main.c":147:17 11 {*cmpsi_1}
     (nil))
(jump_insn 30 29 36 6 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 26)
            (pc))) "main.c":147:17 891 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 26)
;;  succ:       3
;;              8 (FALLTHRU) main.c:150:1
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 8, loop depth 0, maybe hot
;;  prev block 6, next block 7, flags: (RTL)
;;  pred:       6 (FALLTHRU) main.c:150:1
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(note 36 30 37 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 37 36 31 8 (const_int 0 [0]) "main.c":150:1 928 {nop}
     (nil))
;;  succ:       7 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 7, loop depth 0, maybe hot
;;  prev block 8, next block 9, flags: (RTL)
;;  pred:       8 [always]  (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(note 31 37 38 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
;;  succ:       9 [always]  (FALLTHRU) main.c:150:1
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 9, loop depth 0, maybe hot
;;  prev block 7, next block 1, flags: (RTL)
;;  pred:       7 [always]  (FALLTHRU) main.c:150:1
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(note 38 31 39 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 0 9 (const_int 0 [0]) "main.c":150:1 928 {nop}
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]


;; Function checksum_upd_bytes (checksum_upd_bytes, funcdef_no=19, decl_uid=3389, cgraph_uid=20, symbol_order=21)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 8 n_edges 8 count 8 (    1)
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 6 5 7
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 6 }
;; 6 succs { 5 }
;; 5 succs { 7 }
;; 7 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a1(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a2(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a3(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a4(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a5(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:18000 NO_REX_SSE_REGS:18000 SSE_REGS:18000 MMX_REGS:32000 INT_SSE_REGS:32000 ALL_REGS:524000 MEM:11000
  a6(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a7(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a8(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:11000
  a9(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a10(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a11(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a12(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a13(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a14(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a15(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a16(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a17(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:18000 NO_REX_SSE_REGS:18000 SSE_REGS:18000 MMX_REGS:39000 INT_SSE_REGS:39000 ALL_REGS:636000 MEM:17000
  a18(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a19(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a20(r89,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:40000 INT_SSE_REGS:40000 ALL_REGS:532000 MEM:18000
  a21(r90,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:28000 INT_SSE_REGS:28000 ALL_REGS:426000 MEM:12000

   Insn 51(l0): point = 0
   Insn 49(l0): point = 4
   Insn 36(l0): point = 7
   Insn 35(l0): point = 9
   Insn 34(l0): point = 11
   Insn 33(l0): point = 13
   Insn 32(l0): point = 15
   Insn 31(l0): point = 17
   Insn 30(l0): point = 19
   Insn 29(l0): point = 21
   Insn 28(l0): point = 23
   Insn 27(l0): point = 25
   Insn 26(l0): point = 27
   Insn 25(l0): point = 29
   Insn 24(l0): point = 31
   Insn 23(l0): point = 33
   Insn 22(l0): point = 35
   Insn 21(l0): point = 37
   Insn 20(l0): point = 39
   Insn 19(l0): point = 41
   Insn 18(l0): point = 44
   Insn 17(l0): point = 46
   Insn 16(l0): point = 48
   Insn 15(l0): point = 50
   Insn 12(l0): point = 52
   Insn 42(l0): point = 55
   Insn 41(l0): point = 57
   Insn 40(l0): point = 59
   Insn 46(l0): point = 62
   Insn 8(l0): point = 64
   Insn 7(l0): point = 66
   Insn 3(l0): point = 68
   Insn 2(l0): point = 70
 a0(r103): [58..59]
 a1(r102): [10..11]
 a2(r101): [10..13]
 a3(r87): [10..17]
 a4(r100): [14..15]
 a5(r88): [16..39]
 a6(r86): [18..19]
 a7(r82): [18..31]
 a8(r85): [20..21]
 a9(r84): [22..23]
 a10(r99): [24..25]
 a11(r83): [24..27]
 a12(r98): [28..29]
 a13(r97): [32..33]
 a14(r96): [32..35]
 a15(r95): [36..37]
 a16(r94): [40..42]
 a17(r91): [42..48]
 a18(r93): [43..44]
 a19(r92): [45..46]
 a20(r89): [47..52]
 a21(r90): [49..50]
Compressing live ranges: from 73 to 32 - 43%
Ranges after the compression:
 a0(r103): [30..31]
 a1(r102): [0..1]
 a2(r101): [0..1]
 a3(r87): [0..5]
 a4(r100): [2..3]
 a5(r88): [4..19]
 a6(r86): [6..7]
 a7(r82): [6..15]
 a8(r85): [8..9]
 a9(r84): [10..11]
 a10(r99): [12..13]
 a11(r83): [12..13]
 a12(r98): [14..15]
 a13(r97): [16..17]
 a14(r96): [16..17]
 a15(r95): [18..19]
 a16(r94): [20..21]
 a17(r91): [21..27]
 a18(r93): [22..23]
 a19(r92): [24..25]
 a20(r89): [26..29]
 a21(r90): [28..29]
  regions=1, blocks=8, points=32
    allocnos=22 (big 0), copies=0, conflicts=0, ranges=22
Disposition:
    7:r82  l0     2   11:r83  l0     4    9:r84  l0     1    8:r85  l0     1
    6:r86  l0     1    3:r87  l0     2    5:r88  l0     0   20:r89  l0     1
   21:r90  l0     0   17:r91  l0     0   19:r92  l0     1   18:r93  l0     1
   16:r94  l0     1   15:r95  l0     1   14:r96  l0     2   13:r97  l0     1
   12:r98  l0     1   10:r99  l0     1    4:r100 l0     0    2:r101 l0     1
    1:r102 l0     0    0:r103 l0     0
+++Costs: overall 4000, reg 4000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


checksum_upd_bytes

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 4 [si] 5 [di] 6 [bp] 17 [flags]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d,1u} r5={1d,1u} r6={1d,7u} r7={1d,7u} r16={1d,6u} r17={11d,1u} r19={1d,18u,1e} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r36={1d} r37={1d} r82={1d,1u} r83={1d,1u,1e} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,2u} r89={1d,2u} r90={1d,1u} r91={1d,2u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} 
;;    total ref usage 120{52d,66u,2e} in 33{33 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [3 bytes+0 S8 A64])
        (reg:DI 5 di [ bytes ])) "main.c":151:58 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ bytes ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -28 [0xffffffffffffffe4])) [1 n+0 S4 A32])
        (reg:SI 4 si [ n ])) "main.c":151:58 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ n ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
        (const_int 0 [0])) "main.c":152:7 81 {*movsi_internal}
     (nil))
(insn 8 7 46 2 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
        (const_int 0 [0])) "main.c":153:10 81 {*movsi_internal}
     (nil))
(jump_insn 46 8 47 2 (set (pc)
        (label_ref 37)) "main.c":153:3 892 {jump}
     (nil)
 -> 37)
;;  succ:       4 [always]  main.c:153:3
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 47 46 39)
;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       4
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags] 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102
(code_label 39 47 11 3 30 (nil) [1 uses])
(note 11 39 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 12 11 15 3 (set (reg:SI 89)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "main.c":154:16 81 {*movsi_internal}
     (nil))
(insn 15 12 16 3 (parallel [
            (set (reg:SI 90)
                (ashiftrt:SI (reg:SI 89)
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":154:16 758 {ashrsi3_cvt}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 16 15 17 3 (parallel [
            (set (reg:SI 91)
                (lshiftrt:SI (reg:SI 90)
                    (const_int 29 [0x1d])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":154:16 767 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:SI 90)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 17 16 18 3 (parallel [
            (set (reg:SI 92)
                (plus:SI (reg:SI 89)
                    (reg:SI 91)))
            (clobber (reg:CC 17 flags))
        ]) "main.c":154:16 229 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 89)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 18 17 19 3 (parallel [
            (set (reg:SI 93)
                (and:SI (reg:SI 92)
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":154:16 533 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 92)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 19 18 20 3 (parallel [
            (set (reg:SI 94)
                (minus:SI (reg:SI 93)
                    (reg:SI 91)))
            (clobber (reg:CC 17 flags))
        ]) "main.c":154:16 302 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 93)
        (expr_list:REG_DEAD (reg:SI 91)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 20 19 21 3 (set (reg:SI 88 [ _13 ])
        (reg:SI 94)) "main.c":154:16 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 94)
        (nil)))
(insn 21 20 22 3 (set (reg:DI 95)
        (sign_extend:DI (reg:SI 88 [ _13 ]))) "main.c":154:13 154 {*extendsidi2_rex64}
     (nil))
(insn 22 21 23 3 (parallel [
            (set (reg:DI 96)
                (ashift:DI (reg:DI 95)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":154:13 713 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 95)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 23 22 24 3 (set (reg:DI 97)
        (symbol_ref:DI ("checksum") [flags 0x2]  <var_decl 0x7fa61082b870 checksum>)) "main.c":154:13 80 {*movdi_internal}
     (nil))
(insn 24 23 25 3 (set (reg:SI 82 [ _1 ])
        (mem:SI (plus:DI (reg:DI 96)
                (reg:DI 97)) [1 checksum[_13]+0 S4 A32])) "main.c":154:13 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 97)
        (expr_list:REG_DEAD (reg:DI 96)
            (nil))))
(insn 25 24 26 3 (set (reg:SI 98)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "main.c":154:29 81 {*movsi_internal}
     (nil))
(insn 26 25 27 3 (set (reg:DI 83 [ _2 ])
        (sign_extend:DI (reg:SI 98))) "main.c":154:29 154 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 98)
        (nil)))
(insn 27 26 28 3 (set (reg/f:DI 99)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [3 bytes+0 S8 A64])) "main.c":154:29 80 {*movdi_internal}
     (nil))
(insn 28 27 29 3 (parallel [
            (set (reg/f:DI 84 [ _3 ])
                (plus:DI (reg:DI 83 [ _2 ])
                    (reg/f:DI 99)))
            (clobber (reg:CC 17 flags))
        ]) "main.c":154:29 230 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 99)
        (expr_list:REG_DEAD (reg:DI 83 [ _2 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                                (const_int -24 [0xffffffffffffffe8])) [3 bytes+0 S8 A64])
                        (reg:DI 83 [ _2 ]))
                    (nil))))))
(insn 29 28 30 3 (set (reg:QI 85 [ _4 ])
        (mem:QI (reg/f:DI 84 [ _3 ]) [0 *_3+0 S1 A8])) "main.c":154:29 83 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 84 [ _3 ])
        (nil)))
(insn 30 29 31 3 (set (reg:SI 86 [ _5 ])
        (sign_extend:SI (reg:QI 85 [ _4 ]))) "main.c":154:29 160 {extendqisi2}
     (expr_list:REG_DEAD (reg:QI 85 [ _4 ])
        (nil)))
(insn 31 30 32 3 (parallel [
            (set (reg:SI 87 [ _6 ])
                (xor:SI (reg:SI 82 [ _1 ])
                    (reg:SI 86 [ _5 ])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":154:21 564 {*xorsi_1}
     (expr_list:REG_DEAD (reg:SI 86 [ _5 ])
        (expr_list:REG_DEAD (reg:SI 82 [ _1 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 32 31 33 3 (set (reg:DI 100)
        (sign_extend:DI (reg:SI 88 [ _13 ]))) "main.c":154:21 154 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 88 [ _13 ])
        (nil)))
(insn 33 32 34 3 (parallel [
            (set (reg:DI 101)
                (ashift:DI (reg:DI 100)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":154:21 713 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 100)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 34 33 35 3 (set (reg:DI 102)
        (symbol_ref:DI ("checksum") [flags 0x2]  <var_decl 0x7fa61082b870 checksum>)) "main.c":154:21 80 {*movdi_internal}
     (nil))
(insn 35 34 36 3 (set (mem:SI (plus:DI (reg:DI 101)
                (reg:DI 102)) [1 checksum[_13]+0 S4 A32])
        (reg:SI 87 [ _6 ])) "main.c":154:21 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 102)
        (expr_list:REG_DEAD (reg:DI 101)
            (expr_list:REG_DEAD (reg:SI 87 [ _6 ])
                (nil)))))
(insn 36 35 37 3 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                        (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":153:23 229 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       4 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 6, flags: (RTL)
;;  pred:       3 (FALLTHRU,DFS_BACK)
;;              2 [always]  main.c:153:3
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags] 103
(code_label 37 36 38 4 29 (nil) [1 uses])
(note 38 37 40 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 40 38 41 4 (set (reg:SI 103)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "main.c":153:17 81 {*movsi_internal}
     (nil))
(insn 41 40 42 4 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 103)
            (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                    (const_int -28 [0xffffffffffffffe4])) [1 n+0 S4 A32]))) "main.c":153:17 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 103)
        (nil)))
(jump_insn 42 41 48 4 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 39)
            (pc))) "main.c":153:17 891 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 39)
;;  succ:       3
;;              6 (FALLTHRU) main.c:155:1
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 6, loop depth 0, maybe hot
;;  prev block 4, next block 5, flags: (RTL)
;;  pred:       4 (FALLTHRU) main.c:155:1
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(note 48 42 49 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 49 48 43 6 (const_int 0 [0]) "main.c":155:1 928 {nop}
     (nil))
;;  succ:       5 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 5, loop depth 0, maybe hot
;;  prev block 6, next block 7, flags: (RTL)
;;  pred:       6 [always]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(note 43 49 50 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;;  succ:       7 [always]  (FALLTHRU) main.c:155:1
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 7, loop depth 0, maybe hot
;;  prev block 5, next block 1, flags: (RTL)
;;  pred:       5 [always]  (FALLTHRU) main.c:155:1
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(note 50 43 51 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 51 50 0 7 (const_int 0 [0]) "main.c":155:1 928 {nop}
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]


;; Function checksum_upd_file (checksum_upd_file, funcdef_no=20, decl_uid=3397, cgraph_uid=21, symbol_order=22)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 4 n_edges 3 count 4 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 12.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r83,l0) best DIREG, allocno GENERAL_REGS
    r82: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r82,l0) best SIREG, allocno GENERAL_REGS

  a0(r83,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a1(r82,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a2(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a3(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000

   Insn 16(l0): point = 0
   Insn 12(l0): point = 3
   Insn 11(l0): point = 5
   Insn 10(l0): point = 7
   Insn 9(l0): point = 9
   Insn 8(l0): point = 11
   Insn 7(l0): point = 13
   Insn 6(l0): point = 15
   Insn 2(l0): point = 17
 a0(r83): [6..9]
 a1(r82): [8..13]
 a2(r85): [10..11]
 a3(r84): [14..15]
Compressing live ranges: from 20 to 6 - 30%
Ranges after the compression:
 a0(r83): [0..1]
 a1(r82): [0..3]
 a2(r85): [2..3]
 a3(r84): [4..5]
  pref0:a0(r83)<-hr5@1500
  pref1:a1(r82)<-hr4@1500
  regions=1, blocks=4, points=6
    allocnos=4 (big 0), copies=0, conflicts=0, ranges=4
Disposition:
    1:r82  l0     1    0:r83  l0     0    3:r84  l0     0    2:r85  l0     0
+++Costs: overall -2000, reg -2000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


checksum_upd_file

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 4 [si] 5 [di] 6 [bp] 7 [sp]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r4={3d,1u} r5={3d,2u} r6={1d,3u} r7={1d,4u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,2u} r17={1d} r18={1d} r19={1d,6u} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={2d} r37={2d} r38={1d} r39={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r82={1d,1u} r83={1d,1u} r84={1d,1u} r85={1d,1u} 
;;    total ref usage 114{92d,22u,0e} in 9{8 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 82 83 84 85
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [13 file+0 S8 A64])
        (reg:DI 5 di [ file ])) "main.c":156:50 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ file ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 84)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [13 file+0 S8 A64])) "main.c":157:3 80 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:SI 82 [ _1 ])
        (mem:SI (plus:DI (reg/f:DI 84)
                (const_int 4 [0x4])) [1 file_4(D)->size+0 S4 A32])) "main.c":157:3 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 84)
        (nil)))
(insn 8 7 9 2 (set (reg/f:DI 85)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [13 file+0 S8 A64])) "main.c":157:26 80 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg/f:DI 83 [ _2 ])
        (mem/f:DI (plus:DI (reg/f:DI 85)
                (const_int 8 [0x8])) [3 file_4(D)->data+0 S8 A64])) "main.c":157:26 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 85)
        (nil)))
(insn 10 9 11 2 (set (reg:SI 4 si)
        (reg:SI 82 [ _1 ])) "main.c":157:3 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 82 [ _1 ])
        (nil)))
(insn 11 10 12 2 (set (reg:DI 5 di)
        (reg/f:DI 83 [ _2 ])) "main.c":157:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 83 [ _2 ])
        (nil)))
(call_insn 12 11 15 2 (call (mem:QI (symbol_ref:DI ("checksum_upd_bytes") [flags 0x3]  <function_decl 0x7fa610835500 checksum_upd_bytes>) [0 checksum_upd_bytes S1 A8])
        (const_int 0 [0])) "main.c":157:3 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       3 [always]  (FALLTHRU) main.c:158:1
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 1, flags: (RTL)
;;  pred:       2 [always]  (FALLTHRU) main.c:158:1
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(note 15 12 16 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 0 3 (const_int 0 [0]) "main.c":158:1 928 {nop}
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]


;; Function test_explorer_init (test_explorer_init, funcdef_no=21, decl_uid=3399, cgraph_uid=22, symbol_order=23)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 4 n_edges 3 count 4 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 7.
verify found no changes in insn with uid = 12.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r84: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r84,l0) best DIREG, allocno GENERAL_REGS
    r83: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r83,l0) best AREG, allocno GENERAL_REGS
    r82: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r82,l0) best DIREG, allocno GENERAL_REGS

  a0(r84,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a1(r83,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:6000 NO_REX_SSE_REGS:6000 SSE_REGS:6000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a2(r82,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000

   Insn 16(l0): point = 0
   Insn 12(l0): point = 3
   Insn 11(l0): point = 5
   Insn 10(l0): point = 7
   Insn 9(l0): point = 9
   Insn 8(l0): point = 11
   Insn 7(l0): point = 13
   Insn 6(l0): point = 15
   Insn 5(l0): point = 17
 a0(r84): [6..7]
 a1(r83): [10..11]
 a2(r82): [16..17]
Compressing live ranges: from 20 to 6 - 30%
Ranges after the compression:
 a0(r84): [0..1]
 a1(r83): [2..3]
 a2(r82): [4..5]
  pref0:a0(r84)<-hr5@1500
  pref1:a1(r83)<-hr0@1500
  pref2:a2(r82)<-hr5@1500
  regions=1, blocks=4, points=6
    allocnos=3 (big 0), copies=0, conflicts=0, ranges=3
Disposition:
    2:r82  l0     0    1:r83  l0     0    0:r84  l0     0
+++Costs: overall -3000, reg -3000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


test_explorer_init

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 5 [di] 6 [bp] 7 [sp]
;;  ref usage 	r0={3d,1u} r1={3d} r2={3d} r4={3d} r5={5d,2u} r6={1d,3u} r7={1d,5u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,2u} r17={2d} r18={2d} r19={1d,5u} r20={3d} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={3d} r37={3d} r38={2d} r39={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r82={1d,1u} r83={1d,1u} r84={1d,1u} 
;;    total ref usage 179{158d,21u,0e} in 9{7 regular + 2 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 82 83 84
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:DI 82)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7fa6108a1630 *.LC0>)) "main.c":161:36 80 {*movdi_internal}
     (nil))
(insn 6 5 7 2 (set (reg:DI 5 di)
        (reg:DI 82)) "main.c":161:36 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 82)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7fa6108a1630 *.LC0>)
            (nil))))
(call_insn 7 6 8 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("explorer_tester_create") [flags 0x41]  <function_decl 0x7fa610b72300 explorer_tester_create>) [0 explorer_tester_create S1 A8])
            (const_int 0 [0]))) "main.c":161:36 909 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 8 7 9 2 (set (reg:DI 83)
        (reg:DI 0 ax)) "main.c":161:36 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 9 8 10 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [14 tester+0 S8 A64])
        (reg:DI 83)) "main.c":161:36 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 83)
        (nil)))
(insn 10 9 11 2 (set (reg:DI 84)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [14 tester+0 S8 A64])) "main.c":162:3 80 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:DI 5 di)
        (reg:DI 84)) "main.c":162:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 84)
        (nil)))
(call_insn 12 11 15 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_destory") [flags 0x41]  <function_decl 0x7fa610b72400 explorer_tester_destory>) [0 explorer_tester_destory S1 A8])
        (const_int 0 [0])) "main.c":162:3 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       3 [always]  (FALLTHRU) main.c:163:1
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 1, flags: (RTL)
;;  pred:       2 [always]  (FALLTHRU) main.c:163:1
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(note 15 12 16 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 0 3 (const_int 0 [0]) "main.c":163:1 928 {nop}
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]


;; Function test_explorer_file1 (test_explorer_file1, funcdef_no=22, decl_uid=3402, cgraph_uid=23, symbol_order=24)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 5 n_edges 4 count 5 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { }
;; 4 succs { 1 }
Removing SCRATCH to p96 in insn #3 (nop 2)
rescanning insn with uid = 3.
Removing SCRATCH to p97 in insn #53 (nop 3)
rescanning insn with uid = 53.
Building IRA IR
verify found no changes in insn with uid = 8.
verify found no changes in insn with uid = 17.
verify found no changes in insn with uid = 24.
verify found no changes in insn with uid = 28.
verify found no changes in insn with uid = 38.
verify found no changes in insn with uid = 48.
verify found no changes in insn with uid = 51.
verify found no changes in insn with uid = 55.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 5 n_edges 4 count 5 (    1)

Pass 0 for finding pseudo/allocno costs

    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r95,l0) best DIREG, allocno GENERAL_REGS
    r94: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r94,l0) best SIREG, allocno GENERAL_REGS
    r93: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r93,l0) best DIREG, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r91,l0) best SIREG, allocno GENERAL_REGS
    r90: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r90,l0) best DIREG, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a8 (r88,l0) best DIREG, allocno GENERAL_REGS
    r87: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a10 (r87,l0) best SIREG, allocno GENERAL_REGS
    r86: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a9 (r86,l0) best DIREG, allocno GENERAL_REGS
    r85: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a12 (r85,l0) best SIREG, allocno GENERAL_REGS
    r84: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a11 (r84,l0) best DIREG, allocno GENERAL_REGS
    r83: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a13 (r83,l0) best AREG, allocno GENERAL_REGS
    r82: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a14 (r82,l0) best DIREG, allocno GENERAL_REGS

  a0(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:6000 NO_REX_SSE_REGS:6000 SSE_REGS:6000 MMX_REGS:13000 INT_SSE_REGS:13000 ALL_REGS:212000 MEM:6000
  a1(r95,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a2(r93,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a3(r94,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a4(r92,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a5(r90,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a6(r91,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a7(r89,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a8(r88,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a9(r86,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a10(r87,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a11(r84,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a12(r85,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a13(r83,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:6000 NO_REX_SSE_REGS:6000 SSE_REGS:6000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a14(r82,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a15(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:6000 NO_REX_SSE_REGS:6000 SSE_REGS:6000 MMX_REGS:13000 INT_SSE_REGS:13000 ALL_REGS:212000 MEM:6000

   Insn 55(l0): point = 1
   Insn 54(l0): point = 4
   Insn 53(l0): point = 6
   Insn 61(l0): point = 8
   Insn 51(l0): point = 10
   Insn 50(l0): point = 12
   Insn 49(l0): point = 14
   Insn 48(l0): point = 16
   Insn 47(l0): point = 18
   Insn 46(l0): point = 20
   Insn 45(l0): point = 22
   Insn 44(l0): point = 24
   Insn 43(l0): point = 26
   Insn 42(l0): point = 28
   Insn 41(l0): point = 30
   Insn 40(l0): point = 32
   Insn 39(l0): point = 34
   Insn 38(l0): point = 36
   Insn 37(l0): point = 38
   Insn 36(l0): point = 40
   Insn 35(l0): point = 42
   Insn 34(l0): point = 44
   Insn 33(l0): point = 46
   Insn 32(l0): point = 48
   Insn 31(l0): point = 50
   Insn 30(l0): point = 52
   Insn 29(l0): point = 54
   Insn 28(l0): point = 56
   Insn 27(l0): point = 58
   Insn 26(l0): point = 60
   Insn 25(l0): point = 62
   Insn 24(l0): point = 64
   Insn 23(l0): point = 66
   Insn 22(l0): point = 68
   Insn 21(l0): point = 70
   Insn 20(l0): point = 72
   Insn 19(l0): point = 74
   Insn 18(l0): point = 76
   Insn 17(l0): point = 78
   Insn 16(l0): point = 80
   Insn 15(l0): point = 82
   Insn 14(l0): point = 84
   Insn 13(l0): point = 86
   Insn 12(l0): point = 88
   Insn 11(l0): point = 90
   Insn 10(l0): point = 92
   Insn 9(l0): point = 94
   Insn 8(l0): point = 96
   Insn 7(l0): point = 98
   Insn 6(l0): point = 100
   Insn 3(l0): point = 102
 a0(r97): [6..6]
 a1(r95): [13..14]
 a2(r93): [19..32]
 a3(r94): [21..22]
 a4(r92): [31..34]
 a5(r90): [39..52]
 a6(r91): [41..42]
 a7(r89): [49..54]
 a8(r88): [59..62]
 a9(r86): [67..76]
 a10(r87): [69..70]
 a11(r84): [81..90]
 a12(r85): [83..84]
 a13(r83): [93..94]
 a14(r82): [99..100]
 a15(r96): [102..102]
Compressing live ranges: from 105 to 22 - 20%
Ranges after the compression:
 a0(r97): [0..0]
 a1(r95): [1..2]
 a2(r93): [3..6]
 a3(r94): [3..4]
 a4(r92): [5..6]
 a5(r90): [7..10]
 a6(r91): [7..8]
 a7(r89): [9..10]
 a8(r88): [11..12]
 a9(r86): [13..14]
 a10(r87): [13..14]
 a11(r84): [15..16]
 a12(r85): [15..16]
 a13(r83): [17..18]
 a14(r82): [19..20]
 a15(r96): [21..21]
  pref0:a1(r95)<-hr5@1500
  pref1:a3(r94)<-hr4@1500
  pref2:a2(r93)<-hr5@1500
  pref3:a6(r91)<-hr4@1500
  pref4:a5(r90)<-hr5@1500
  pref5:a8(r88)<-hr5@1500
  pref6:a10(r87)<-hr4@1500
  pref7:a9(r86)<-hr5@1500
  pref8:a12(r85)<-hr4@1500
  pref9:a11(r84)<-hr5@1500
  pref10:a13(r83)<-hr0@1500
  pref11:a14(r82)<-hr5@1500
  regions=1, blocks=5, points=22
    allocnos=16 (big 0), copies=0, conflicts=0, ranges=16
Disposition:
   14:r82  l0     0   13:r83  l0     0   11:r84  l0     0   12:r85  l0     4
    9:r86  l0     0   10:r87  l0     4    8:r88  l0     0    7:r89  l0     1
    5:r90  l0     0    6:r91  l0     4    4:r92  l0     1    2:r93  l0     0
    3:r94  l0     4    1:r95  l0     0   15:r96  l0     0    0:r97  l0     0
+++Costs: overall -8000, reg -8000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


test_explorer_file1

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 36 [r8] 37 [r9]
;;  ref usage 	r0={9d,1u} r1={13d,4u} r2={13d,4u} r4={14d,5u} r5={16d,7u} r6={1d,4u} r7={1d,12u} r8={8d} r9={8d} r10={8d} r11={8d} r12={8d} r13={8d} r14={8d} r15={8d} r16={1d,3u} r17={13d,1u} r18={8d} r19={1d,15u} r20={9d} r21={9d} r22={9d} r23={9d} r24={9d} r25={9d} r26={9d} r27={9d} r28={8d} r29={8d} r30={8d} r31={8d} r32={8d} r33={8d} r34={8d} r35={8d} r36={11d,2u} r37={11d,2u} r38={8d} r39={8d} r44={8d} r45={8d} r46={8d} r47={8d} r48={8d} r49={8d} r50={8d} r51={8d} r52={8d} r53={8d} r54={8d} r55={8d} r56={8d} r57={8d} r58={8d} r59={8d} r60={8d} r61={8d} r62={8d} r63={8d} r64={8d} r65={8d} r66={8d} r67={8d} r68={8d} r69={8d} r70={8d} r71={8d} r72={8d} r73={8d} r74={8d} r75={8d} r82={1d,1u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d} r97={1d} 
;;    total ref usage 674{600d,74u,0e} in 51{43 regular + 8 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 4 3 2 NOTE_INSN_FUNCTION_BEG)
(insn 3 2 6 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 19 frame)
                        (const_int -8 [0xfffffffffffffff8])) [9 D.3560+0 S8 A64])
                (unspec:DI [
                        (mem/v/f:DI (const_int 40 [0x28]) [0 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_SET))
            (set (reg:DI 96)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "main.c":165:28 1265 {stack_protect_set_1_di}
     (expr_list:REG_UNUSED (reg:DI 96)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 6 3 7 2 (set (reg:DI 82)
        (symbol_ref/f:DI ("*.LC19") [flags 0x2]  <var_decl 0x7fa6108d9b40 *.LC19>)) "main.c":167:36 80 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:DI 5 di)
        (reg:DI 82)) "main.c":167:36 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 82)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC19") [flags 0x2]  <var_decl 0x7fa6108d9b40 *.LC19>)
            (nil))))
(call_insn 8 7 9 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("explorer_tester_create") [flags 0x41]  <function_decl 0x7fa610b72300 explorer_tester_create>) [0 explorer_tester_create S1 A8])
            (const_int 0 [0]))) "main.c":167:36 909 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 9 8 10 2 (set (reg:DI 83)
        (reg:DI 0 ax)) "main.c":167:36 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 10 9 11 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -1016 [0xfffffffffffffc08])) [14 tester+0 S8 A64])
        (reg:DI 83)) "main.c":167:36 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 83)
        (nil)))
(insn 11 10 12 2 (set (reg:DI 84)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -1016 [0xfffffffffffffc08])) [14 tester+0 S8 A64])) "main.c":168:3 80 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:SI 2 cx)
        (const_int 1 [0x1])) "main.c":168:3 81 {*movsi_internal}
     (nil))
(insn 13 12 14 2 (set (reg:SI 1 dx)
        (const_int 3 [0x3])) "main.c":168:3 81 {*movsi_internal}
     (nil))
(insn 14 13 15 2 (set (reg:DI 85)
        (symbol_ref/f:DI ("*.LC20") [flags 0x2]  <var_decl 0x7fa6108d9bd0 *.LC20>)) "main.c":168:3 80 {*movdi_internal}
     (nil))
(insn 15 14 16 2 (set (reg:DI 4 si)
        (reg:DI 85)) "main.c":168:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 85)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC20") [flags 0x2]  <var_decl 0x7fa6108d9bd0 *.LC20>)
            (nil))))
(insn 16 15 17 2 (set (reg:DI 5 di)
        (reg:DI 84)) "main.c":168:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 84)
        (nil)))
(call_insn 17 16 18 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_create_file") [flags 0x41]  <function_decl 0x7fa610b72b00 explorer_tester_create_file>) [0 explorer_tester_create_file S1 A8])
        (const_int 0 [0])) "main.c":168:3 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 2 cx)
                (expr_list:REG_DEAD (reg:SI 1 dx)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 18 17 19 2 (set (reg:DI 86)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -1016 [0xfffffffffffffc08])) [14 tester+0 S8 A64])) "main.c":169:3 80 {*movdi_internal}
     (nil))
(insn 19 18 20 2 (set (reg:SI 2 cx)
        (const_int 0 [0])) "main.c":169:3 81 {*movsi_internal}
     (nil))
(insn 20 19 21 2 (set (reg:SI 1 dx)
        (const_int 4 [0x4])) "main.c":169:3 81 {*movsi_internal}
     (nil))
(insn 21 20 22 2 (set (reg:DI 87)
        (symbol_ref/f:DI ("*.LC20") [flags 0x2]  <var_decl 0x7fa6108d9bd0 *.LC20>)) "main.c":169:3 80 {*movdi_internal}
     (nil))
(insn 22 21 23 2 (set (reg:DI 4 si)
        (reg:DI 87)) "main.c":169:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 87)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC20") [flags 0x2]  <var_decl 0x7fa6108d9bd0 *.LC20>)
            (nil))))
(insn 23 22 24 2 (set (reg:DI 5 di)
        (reg:DI 86)) "main.c":169:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 86)
        (nil)))
(call_insn 24 23 25 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_create_file") [flags 0x41]  <function_decl 0x7fa610b72b00 explorer_tester_create_file>) [0 explorer_tester_create_file S1 A8])
        (const_int 0 [0])) "main.c":169:3 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 2 cx)
                (expr_list:REG_DEAD (reg:SI 1 dx)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 25 24 26 2 (parallel [
            (set (reg:DI 88)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -1008 [0xfffffffffffffc10])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":171:3 230 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 26 25 27 2 (set (reg:SI 4 si)
        (const_int 1000 [0x3e8])) "main.c":171:3 81 {*movsi_internal}
     (nil))
(insn 27 26 28 2 (set (reg:DI 5 di)
        (reg:DI 88)) "main.c":171:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88)
        (nil)))
(call_insn 28 27 29 2 (call (mem:QI (symbol_ref:DI ("fill_random") [flags 0x3]  <function_decl 0x7fa610820900 fill_random>) [0 fill_random S1 A8])
        (const_int 0 [0])) "main.c":171:3 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 29 28 30 2 (parallel [
            (set (reg:DI 89)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -1008 [0xfffffffffffffc10])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":172:3 230 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 30 29 31 2 (set (reg:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -1016 [0xfffffffffffffc08])) [14 tester+0 S8 A64])) "main.c":172:3 80 {*movdi_internal}
     (nil))
(insn 31 30 32 2 (set (reg:SI 37 r9)
        (const_int 1 [0x1])) "main.c":172:3 81 {*movsi_internal}
     (nil))
(insn 32 31 33 2 (set (reg:DI 36 r8)
        (reg:DI 89)) "main.c":172:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 89)
        (nil)))
(insn 33 32 34 2 (set (reg:SI 2 cx)
        (const_int 1000 [0x3e8])) "main.c":172:3 81 {*movsi_internal}
     (nil))
(insn 34 33 35 2 (set (reg:SI 1 dx)
        (const_int 3 [0x3])) "main.c":172:3 81 {*movsi_internal}
     (nil))
(insn 35 34 36 2 (set (reg:DI 91)
        (symbol_ref/f:DI ("*.LC20") [flags 0x2]  <var_decl 0x7fa6108d9bd0 *.LC20>)) "main.c":172:3 80 {*movdi_internal}
     (nil))
(insn 36 35 37 2 (set (reg:DI 4 si)
        (reg:DI 91)) "main.c":172:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 91)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC20") [flags 0x2]  <var_decl 0x7fa6108d9bd0 *.LC20>)
            (nil))))
(insn 37 36 38 2 (set (reg:DI 5 di)
        (reg:DI 90)) "main.c":172:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 90)
        (nil)))
(call_insn 38 37 39 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_write") [flags 0x41]  <function_decl 0x7fa610b72a00 explorer_tester_write>) [0 explorer_tester_write S1 A8])
        (const_int 0 [0])) "main.c":172:3 898 {*call}
     (expr_list:REG_DEAD (reg:SI 37 r9)
        (expr_list:REG_DEAD (reg:DI 36 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:DI 4 si)
                    (expr_list:REG_DEAD (reg:SI 2 cx)
                        (expr_list:REG_DEAD (reg:SI 1 dx)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:DI (use (reg:DI 36 r8))
                        (expr_list:SI (use (reg:SI 37 r9))
                            (nil))))))))
(insn 39 38 40 2 (parallel [
            (set (reg:DI 92)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -1008 [0xfffffffffffffc10])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":173:3 230 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 40 39 41 2 (set (reg:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -1016 [0xfffffffffffffc08])) [14 tester+0 S8 A64])) "main.c":173:3 80 {*movdi_internal}
     (nil))
(insn 41 40 42 2 (set (reg:DI 37 r9)
        (reg:DI 92)) "main.c":173:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 92)
        (nil)))
(insn 42 41 43 2 (set (reg:SI 36 r8)
        (const_int 1 [0x1])) "main.c":173:3 81 {*movsi_internal}
     (nil))
(insn 43 42 44 2 (set (reg:SI 2 cx)
        (const_int 1000 [0x3e8])) "main.c":173:3 81 {*movsi_internal}
     (nil))
(insn 44 43 45 2 (set (reg:SI 1 dx)
        (const_int 3 [0x3])) "main.c":173:3 81 {*movsi_internal}
     (nil))
(insn 45 44 46 2 (set (reg:DI 94)
        (symbol_ref/f:DI ("*.LC20") [flags 0x2]  <var_decl 0x7fa6108d9bd0 *.LC20>)) "main.c":173:3 80 {*movdi_internal}
     (nil))
(insn 46 45 47 2 (set (reg:DI 4 si)
        (reg:DI 94)) "main.c":173:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 94)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC20") [flags 0x2]  <var_decl 0x7fa6108d9bd0 *.LC20>)
            (nil))))
(insn 47 46 48 2 (set (reg:DI 5 di)
        (reg:DI 93)) "main.c":173:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 93)
        (nil)))
(call_insn 48 47 49 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_read") [flags 0x41]  <function_decl 0x7fa610b72900 explorer_tester_read>) [0 explorer_tester_read S1 A8])
        (const_int 0 [0])) "main.c":173:3 898 {*call}
     (expr_list:REG_DEAD (reg:DI 37 r9)
        (expr_list:REG_DEAD (reg:SI 36 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:DI 4 si)
                    (expr_list:REG_DEAD (reg:SI 2 cx)
                        (expr_list:REG_DEAD (reg:SI 1 dx)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:SI (use (reg:SI 36 r8))
                        (expr_list:DI (use (reg:DI 37 r9))
                            (nil))))))))
(insn 49 48 50 2 (set (reg:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -1016 [0xfffffffffffffc08])) [14 tester+0 S8 A64])) "main.c":175:3 80 {*movdi_internal}
     (nil))
(insn 50 49 51 2 (set (reg:DI 5 di)
        (reg:DI 95)) "main.c":175:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 95)
        (nil)))
(call_insn 51 50 61 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_destory") [flags 0x41]  <function_decl 0x7fa610b72400 explorer_tester_destory>) [0 explorer_tester_destory S1 A8])
        (const_int 0 [0])) "main.c":175:3 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 61 51 53 2 (const_int 0 [0]) "main.c":176:1 928 {nop}
     (nil))
(insn 53 61 54 2 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 19 frame)
                                (const_int -8 [0xfffffffffffffff8])) [9 D.3560+0 S8 A64])
                        (mem/v/f:DI (const_int 40 [0x28]) [0 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_TEST))
            (clobber (reg:DI 97))
        ]) "main.c":176:1 1270 {stack_protect_test_1_di}
     (expr_list:REG_UNUSED (reg:DI 97)
        (nil)))
(jump_insn 54 53 59 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 57)
            (pc))) "main.c":176:1 891 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 57)
;;  succ:       4
;;              3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
(note 59 54 55 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(call_insn 55 59 56 3 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fa61088e500 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) "main.c":176:1 898 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 19 [frame]

(barrier 56 55 57)
;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 1, flags: (RTL)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(code_label 57 56 60 4 34 (nil) [1 uses])
(note 60 57 0 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]


;; Function test_explorer_file2 (test_explorer_file2, funcdef_no=23, decl_uid=3406, cgraph_uid=24, symbol_order=25)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 5 n_edges 4 count 5 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { }
;; 4 succs { 1 }
Removing SCRATCH to p209 in insn #3 (nop 2)
rescanning insn with uid = 3.
Removing SCRATCH to p210 in insn #233 (nop 3)
rescanning insn with uid = 233.
Building IRA IR
verify found no changes in insn with uid = 94.
verify found no changes in insn with uid = 98.
verify found no changes in insn with uid = 103.
verify found no changes in insn with uid = 108.
verify found no changes in insn with uid = 113.
verify found no changes in insn with uid = 118.
verify found no changes in insn with uid = 123.
verify found no changes in insn with uid = 128.
verify found no changes in insn with uid = 135.
verify found no changes in insn with uid = 142.
verify found no changes in insn with uid = 149.
verify found no changes in insn with uid = 156.
verify found no changes in insn with uid = 163.
verify found no changes in insn with uid = 170.
verify found no changes in insn with uid = 181.
verify found no changes in insn with uid = 192.
verify found no changes in insn with uid = 203.
verify found no changes in insn with uid = 209.
verify found no changes in insn with uid = 215.
verify found no changes in insn with uid = 221.
verify found no changes in insn with uid = 225.
verify found no changes in insn with uid = 228.
verify found no changes in insn with uid = 235.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 5 n_edges 4 count 5 (    1)

Pass 0 for finding pseudo/allocno costs

    r210: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r210,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r209: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a113 (r209,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r208: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a53 (r208,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r207: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a58 (r207,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r206: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a74 (r206,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r205: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a79 (r205,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r204: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a95 (r204,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r203: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a100 (r203,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r202: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r202,l0) best DIREG, allocno GENERAL_REGS
    r201: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r201,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r200: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r200,l0) best SIREG, allocno GENERAL_REGS
    r199: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r199,l0) best DIREG, allocno GENERAL_REGS
    r198: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a8 (r198,l0) best SIREG, allocno GENERAL_REGS
    r197: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a7 (r197,l0) best DIREG, allocno GENERAL_REGS
    r196: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a10 (r196,l0) best SIREG, allocno GENERAL_REGS
    r195: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a9 (r195,l0) best DIREG, allocno GENERAL_REGS
    r194: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a12 (r194,l0) best SIREG, allocno GENERAL_REGS
    r193: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a11 (r193,l0) best DIREG, allocno GENERAL_REGS
    r192: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a13 (r192,l0) best CREG, allocno GENERAL_REGS
    r191: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r191,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r190: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a16 (r190,l0) best SIREG, allocno GENERAL_REGS
    r189: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a15 (r189,l0) best DIREG, allocno GENERAL_REGS
    r188: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a17 (r188,l0) best CREG, allocno GENERAL_REGS
    r187: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r187,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r186: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a20 (r186,l0) best SIREG, allocno GENERAL_REGS
    r185: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a19 (r185,l0) best DIREG, allocno GENERAL_REGS
    r184: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a21 (r184,l0) best CREG, allocno GENERAL_REGS
    r183: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r183,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r182: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a24 (r182,l0) best SIREG, allocno GENERAL_REGS
    r181: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a23 (r181,l0) best DIREG, allocno GENERAL_REGS
    r180: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a26 (r180,l0) best SIREG, allocno GENERAL_REGS
    r179: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a25 (r179,l0) best DIREG, allocno GENERAL_REGS
    r178: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a28 (r178,l0) best SIREG, allocno GENERAL_REGS
    r177: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a27 (r177,l0) best DIREG, allocno GENERAL_REGS
    r176: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a30 (r176,l0) best DREG, allocno GENERAL_REGS
    r175: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a29 (r175,l0) best DIREG, allocno GENERAL_REGS
    r174: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a32 (r174,l0) best DREG, allocno GENERAL_REGS
    r173: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a31 (r173,l0) best DIREG, allocno GENERAL_REGS
    r172: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a34 (r172,l0) best DREG, allocno GENERAL_REGS
    r171: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a33 (r171,l0) best DIREG, allocno GENERAL_REGS
    r170: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a35 (r170,l0) best DIREG, allocno GENERAL_REGS
    r169: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a36 (r169,l0) best SIREG, allocno GENERAL_REGS
    r168: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a37 (r168,l0) best DIREG, allocno GENERAL_REGS
    r167: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a38 (r167,l0) best SIREG, allocno GENERAL_REGS
    r166: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a39 (r166,l0) best DIREG, allocno GENERAL_REGS
    r165: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a40 (r165,l0) best SIREG, allocno GENERAL_REGS
    r164: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a41 (r164,l0) best DIREG, allocno GENERAL_REGS
    r163: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a42 (r163,l0) best SIREG, allocno GENERAL_REGS
    r162: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a43 (r162,l0) best DIREG, allocno GENERAL_REGS
    r161: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a44 (r161,l0) best SIREG, allocno GENERAL_REGS
    r160: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a45 (r160,l0) best DIREG, allocno GENERAL_REGS
    r159: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a46 (r159,l0) best SIREG, allocno GENERAL_REGS
    r158: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a47 (r158,l0) best AREG, allocno GENERAL_REGS
    r157: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a48 (r157,l0) best DIREG, allocno GENERAL_REGS
    r156: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a49 (r156,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r155: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a50 (r155,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r154: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a51 (r154,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r153: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a55 (r153,l0) best DREG, allocno GENERAL_REGS
    r152: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a52 (r152,l0) best AREG, allocno GENERAL_REGS
    r150: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a54 (r150,l0) best AREG, allocno GENERAL_REGS
    r149: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a56 (r149,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a59 (r148,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r147: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a62 (r147,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a65 (r145,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a69 (r144,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a70 (r143,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a71 (r142,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a72 (r141,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r140: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a76 (r140,l0) best DREG, allocno GENERAL_REGS
    r139: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a73 (r139,l0) best AREG, allocno GENERAL_REGS
    r137: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a75 (r137,l0) best AREG, allocno GENERAL_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a77 (r136,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a80 (r135,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a83 (r134,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r132: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a86 (r132,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r131: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a90 (r131,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r130: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a91 (r130,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r129: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a92 (r129,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r128: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a93 (r128,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r127: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a97 (r127,l0) best DREG, allocno GENERAL_REGS
    r126: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a94 (r126,l0) best AREG, allocno GENERAL_REGS
    r124: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a96 (r124,l0) best AREG, allocno GENERAL_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a98 (r123,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a101 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a104 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a107 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a111 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a112 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r115,l0) best DIREG, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a57 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a60 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a61 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a63 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a64 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a66 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a67 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a68 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a78 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a81 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a82 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a84 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a85 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a87 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a88 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a89 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a99 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a102 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a103 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a105 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a106 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a108 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a109 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a110 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r210,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:6000 NO_REX_SSE_REGS:6000 SSE_REGS:6000 MMX_REGS:13000 INT_SSE_REGS:13000 ALL_REGS:212000 MEM:6000
  a1(r116,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:7000
  a2(r202,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a3(r115,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a4(r201,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a5(r199,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a6(r200,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a7(r197,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a8(r198,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a9(r195,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a10(r196,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a11(r193,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a12(r194,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a13(r192,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a14(r191,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a15(r189,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a16(r190,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a17(r188,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a18(r187,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a19(r185,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a20(r186,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a21(r184,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a22(r183,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a23(r181,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a24(r182,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a25(r179,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a26(r180,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a27(r177,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a28(r178,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a29(r175,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a30(r176,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a31(r173,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a32(r174,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a33(r171,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a34(r172,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a35(r170,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a36(r169,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a37(r168,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a38(r167,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a39(r166,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a40(r165,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a41(r164,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a42(r163,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a43(r162,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a44(r161,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a45(r160,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a46(r159,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a47(r158,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:6000 NO_REX_SSE_REGS:6000 SSE_REGS:6000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a48(r157,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a49(r156,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:6000 NO_REX_SSE_REGS:6000 SSE_REGS:6000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a50(r155,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a51(r154,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a52(r152,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a53(r208,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a54(r150,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a55(r153,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:6000 NO_REX_SSE_REGS:6000 SSE_REGS:6000 MMX_REGS:13000 INT_SSE_REGS:13000 ALL_REGS:212000 MEM:6000
  a56(r149,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a57(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a58(r207,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a59(r148,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a60(r112,l0) costs: AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:2000
  a61(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:6000 NO_REX_SSE_REGS:6000 SSE_REGS:6000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a62(r147,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a63(r108,l0) costs: AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:2000
  a64(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:6000 NO_REX_SSE_REGS:6000 SSE_REGS:6000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a65(r145,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a66(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:6000 NO_REX_SSE_REGS:6000 SSE_REGS:6000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:7000
  a67(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:6000 NO_REX_SSE_REGS:6000 SSE_REGS:6000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a68(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a69(r144,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a70(r143,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:6000 NO_REX_SSE_REGS:6000 SSE_REGS:6000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a71(r142,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a72(r141,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a73(r139,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a74(r206,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a75(r137,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a76(r140,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:6000 NO_REX_SSE_REGS:6000 SSE_REGS:6000 MMX_REGS:13000 INT_SSE_REGS:13000 ALL_REGS:212000 MEM:6000
  a77(r136,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a78(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a79(r205,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a80(r135,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a81(r101,l0) costs: AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:2000
  a82(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:6000 NO_REX_SSE_REGS:6000 SSE_REGS:6000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a83(r134,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a84(r97,l0) costs: AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:2000
  a85(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:6000 NO_REX_SSE_REGS:6000 SSE_REGS:6000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a86(r132,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a87(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:6000 NO_REX_SSE_REGS:6000 SSE_REGS:6000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:7000
  a88(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:6000 NO_REX_SSE_REGS:6000 SSE_REGS:6000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a89(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a90(r131,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a91(r130,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:6000 NO_REX_SSE_REGS:6000 SSE_REGS:6000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a92(r129,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a93(r128,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a94(r126,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a95(r204,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a96(r124,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a97(r127,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:6000 NO_REX_SSE_REGS:6000 SSE_REGS:6000 MMX_REGS:13000 INT_SSE_REGS:13000 ALL_REGS:212000 MEM:6000
  a98(r123,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a99(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a100(r203,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a101(r122,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a102(r90,l0) costs: AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:2000
  a103(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:6000 NO_REX_SSE_REGS:6000 SSE_REGS:6000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a104(r121,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a105(r86,l0) costs: AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:2000
  a106(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:6000 NO_REX_SSE_REGS:6000 SSE_REGS:6000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a107(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a108(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:6000 NO_REX_SSE_REGS:6000 SSE_REGS:6000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:7000
  a109(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:6000 NO_REX_SSE_REGS:6000 SSE_REGS:6000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a110(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a111(r118,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a112(r117,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:6000 NO_REX_SSE_REGS:6000 SSE_REGS:6000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a113(r209,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:6000 NO_REX_SSE_REGS:6000 SSE_REGS:6000 MMX_REGS:13000 INT_SSE_REGS:13000 ALL_REGS:212000 MEM:6000

   Insn 235(l0): point = 1
   Insn 234(l0): point = 4
   Insn 233(l0): point = 6
   Insn 241(l0): point = 8
   Insn 231(l0): point = 10
   Insn 230(l0): point = 12
   Insn 229(l0): point = 14
   Insn 228(l0): point = 16
   Insn 227(l0): point = 18
   Insn 226(l0): point = 20
   Insn 225(l0): point = 22
   Insn 224(l0): point = 24
   Insn 223(l0): point = 26
   Insn 222(l0): point = 28
   Insn 221(l0): point = 30
   Insn 220(l0): point = 32
   Insn 219(l0): point = 34
   Insn 218(l0): point = 36
   Insn 217(l0): point = 38
   Insn 216(l0): point = 40
   Insn 215(l0): point = 42
   Insn 214(l0): point = 44
   Insn 213(l0): point = 46
   Insn 212(l0): point = 48
   Insn 211(l0): point = 50
   Insn 210(l0): point = 52
   Insn 209(l0): point = 54
   Insn 208(l0): point = 56
   Insn 207(l0): point = 58
   Insn 206(l0): point = 60
   Insn 205(l0): point = 62
   Insn 204(l0): point = 64
   Insn 203(l0): point = 66
   Insn 202(l0): point = 68
   Insn 201(l0): point = 70
   Insn 200(l0): point = 72
   Insn 199(l0): point = 74
   Insn 198(l0): point = 76
   Insn 197(l0): point = 78
   Insn 196(l0): point = 80
   Insn 195(l0): point = 82
   Insn 194(l0): point = 84
   Insn 193(l0): point = 86
   Insn 192(l0): point = 88
   Insn 191(l0): point = 90
   Insn 190(l0): point = 92
   Insn 189(l0): point = 94
   Insn 188(l0): point = 96
   Insn 187(l0): point = 98
   Insn 186(l0): point = 100
   Insn 185(l0): point = 102
   Insn 184(l0): point = 104
   Insn 183(l0): point = 106
   Insn 182(l0): point = 108
   Insn 181(l0): point = 110
   Insn 180(l0): point = 112
   Insn 179(l0): point = 114
   Insn 178(l0): point = 116
   Insn 177(l0): point = 118
   Insn 176(l0): point = 120
   Insn 175(l0): point = 122
   Insn 174(l0): point = 124
   Insn 173(l0): point = 126
   Insn 172(l0): point = 128
   Insn 171(l0): point = 130
   Insn 170(l0): point = 132
   Insn 169(l0): point = 134
   Insn 168(l0): point = 136
   Insn 167(l0): point = 138
   Insn 166(l0): point = 140
   Insn 165(l0): point = 142
   Insn 164(l0): point = 144
   Insn 163(l0): point = 146
   Insn 162(l0): point = 148
   Insn 161(l0): point = 150
   Insn 160(l0): point = 152
   Insn 159(l0): point = 154
   Insn 158(l0): point = 156
   Insn 157(l0): point = 158
   Insn 156(l0): point = 160
   Insn 155(l0): point = 162
   Insn 154(l0): point = 164
   Insn 153(l0): point = 166
   Insn 152(l0): point = 168
   Insn 151(l0): point = 170
   Insn 150(l0): point = 172
   Insn 149(l0): point = 174
   Insn 148(l0): point = 176
   Insn 147(l0): point = 178
   Insn 146(l0): point = 180
   Insn 145(l0): point = 182
   Insn 144(l0): point = 184
   Insn 143(l0): point = 186
   Insn 142(l0): point = 188
   Insn 141(l0): point = 190
   Insn 140(l0): point = 192
   Insn 139(l0): point = 194
   Insn 138(l0): point = 196
   Insn 137(l0): point = 198
   Insn 136(l0): point = 200
   Insn 135(l0): point = 202
   Insn 134(l0): point = 204
   Insn 133(l0): point = 206
   Insn 132(l0): point = 208
   Insn 131(l0): point = 210
   Insn 130(l0): point = 212
   Insn 129(l0): point = 214
   Insn 128(l0): point = 216
   Insn 127(l0): point = 218
   Insn 126(l0): point = 220
   Insn 125(l0): point = 222
   Insn 124(l0): point = 224
   Insn 123(l0): point = 226
   Insn 122(l0): point = 228
   Insn 121(l0): point = 230
   Insn 120(l0): point = 232
   Insn 119(l0): point = 234
   Insn 118(l0): point = 236
   Insn 117(l0): point = 238
   Insn 116(l0): point = 240
   Insn 115(l0): point = 242
   Insn 114(l0): point = 244
   Insn 113(l0): point = 246
   Insn 112(l0): point = 248
   Insn 111(l0): point = 250
   Insn 110(l0): point = 252
   Insn 109(l0): point = 254
   Insn 108(l0): point = 256
   Insn 107(l0): point = 258
   Insn 106(l0): point = 260
   Insn 105(l0): point = 262
   Insn 104(l0): point = 264
   Insn 103(l0): point = 266
   Insn 102(l0): point = 268
   Insn 101(l0): point = 270
   Insn 100(l0): point = 272
   Insn 99(l0): point = 274
   Insn 98(l0): point = 276
   Insn 97(l0): point = 278
   Insn 96(l0): point = 280
   Insn 95(l0): point = 282
   Insn 94(l0): point = 284
   Insn 93(l0): point = 286
   Insn 92(l0): point = 288
   Insn 91(l0): point = 290
   Insn 90(l0): point = 292
   Insn 89(l0): point = 294
   Insn 88(l0): point = 296
   Insn 87(l0): point = 298
   Insn 86(l0): point = 300
   Insn 247(l0): point = 303
   Insn 85(l0): point = 305
   Insn 84(l0): point = 307
   Insn 246(l0): point = 309
   Insn 83(l0): point = 311
   Insn 82(l0): point = 313
   Insn 80(l0): point = 315
   Insn 79(l0): point = 317
   Insn 78(l0): point = 319
   Insn 77(l0): point = 321
   Insn 73(l0): point = 323
   Insn 72(l0): point = 325
   Insn 71(l0): point = 327
   Insn 70(l0): point = 329
   Insn 69(l0): point = 331
   Insn 68(l0): point = 333
   Insn 67(l0): point = 335
   Insn 66(l0): point = 337
   Insn 65(l0): point = 339
   Insn 64(l0): point = 341
   Insn 63(l0): point = 343
   Insn 62(l0): point = 345
   Insn 61(l0): point = 347
   Insn 60(l0): point = 349
   Insn 59(l0): point = 351
   Insn 245(l0): point = 354
   Insn 58(l0): point = 356
   Insn 57(l0): point = 358
   Insn 244(l0): point = 360
   Insn 56(l0): point = 362
   Insn 55(l0): point = 364
   Insn 53(l0): point = 366
   Insn 52(l0): point = 368
   Insn 51(l0): point = 370
   Insn 50(l0): point = 372
   Insn 46(l0): point = 374
   Insn 45(l0): point = 376
   Insn 44(l0): point = 378
   Insn 43(l0): point = 380
   Insn 42(l0): point = 382
   Insn 41(l0): point = 384
   Insn 40(l0): point = 386
   Insn 39(l0): point = 388
   Insn 38(l0): point = 390
   Insn 37(l0): point = 392
   Insn 36(l0): point = 394
   Insn 35(l0): point = 396
   Insn 34(l0): point = 398
   Insn 33(l0): point = 400
   Insn 32(l0): point = 402
   Insn 243(l0): point = 405
   Insn 31(l0): point = 407
   Insn 30(l0): point = 409
   Insn 242(l0): point = 411
   Insn 29(l0): point = 413
   Insn 28(l0): point = 415
   Insn 26(l0): point = 417
   Insn 25(l0): point = 419
   Insn 24(l0): point = 421
   Insn 23(l0): point = 423
   Insn 19(l0): point = 425
   Insn 18(l0): point = 427
   Insn 17(l0): point = 429
   Insn 16(l0): point = 431
   Insn 15(l0): point = 433
   Insn 14(l0): point = 435
   Insn 13(l0): point = 437
   Insn 12(l0): point = 439
   Insn 11(l0): point = 441
   Insn 10(l0): point = 443
   Insn 9(l0): point = 445
   Insn 8(l0): point = 447
   Insn 7(l0): point = 449
   Insn 6(l0): point = 451
   Insn 3(l0): point = 453
 a0(r210): [6..6]
 a1(r116): [11..449]
 a2(r202): [19..20]
 a3(r115): [25..26]
 a4(r201): [27..28]
 a5(r199): [33..40]
 a6(r200): [35..36]
 a7(r197): [45..52]
 a8(r198): [47..48]
 a9(r195): [57..64]
 a10(r196): [59..60]
 a11(r193): [69..82]
 a12(r194): [71..72]
 a13(r192): [77..84]
 a14(r191): [79..86]
 a15(r189): [91..104]
 a16(r190): [93..94]
 a17(r188): [99..106]
 a18(r187): [101..108]
 a19(r185): [113..126]
 a20(r186): [115..116]
 a21(r184): [121..128]
 a22(r183): [123..130]
 a23(r181): [135..144]
 a24(r182): [137..138]
 a25(r179): [149..158]
 a26(r180): [151..152]
 a27(r177): [163..172]
 a28(r178): [165..166]
 a29(r175): [177..186]
 a30(r176): [181..182]
 a31(r173): [191..200]
 a32(r174): [195..196]
 a33(r171): [205..214]
 a34(r172): [209..210]
 a35(r170): [219..222]
 a36(r169): [221..224]
 a37(r168): [229..232]
 a38(r167): [231..234]
 a39(r166): [239..242]
 a40(r165): [241..244]
 a41(r164): [249..252]
 a42(r163): [251..254]
 a43(r162): [259..262]
 a44(r161): [261..264]
 a45(r160): [269..272]
 a46(r159): [271..274]
 a47(r158): [281..282]
 a48(r157): [287..288]
 a49(r156): [291..292]
 a50(r155): [293..294]
 a51(r154): [297..298]
 a52(r152): [299..300]
 a53(r208): [301..303]
 a54(r150): [302..305]
 a55(r153): [300..301]
 a56(r149): [306..307]
 a57(r114): [306..311]
 a58(r207): [308..309]
 a59(r148): [312..313]
 a60(r112 [0]): [316..455]
 a60(r112 [1]): [315..455]
 a61(r111): [318..319]
 a62(r147): [320..321]
 a63(r108 [0]): [324..455]
 a63(r108 [1]): [323..455]
 a64(r107): [326..327]
 a65(r145): [328..329]
 a66(r106): [332..333]
 a67(r105): [334..335]
 a68(r104): [336..337]
 a69(r144): [338..339]
 a70(r143): [342..343]
 a71(r142): [344..345]
 a72(r141): [348..349]
 a73(r139): [350..351]
 a74(r206): [352..354]
 a75(r137): [353..356]
 a76(r140): [351..352]
 a77(r136): [357..358]
 a78(r103): [357..362]
 a79(r205): [359..360]
 a80(r135): [363..364]
 a81(r101 [0]): [367..455]
 a81(r101 [1]): [366..455]
 a82(r100): [369..370]
 a83(r134): [371..372]
 a84(r97 [0]): [375..455]
 a84(r97 [1]): [374..455]
 a85(r96): [377..378]
 a86(r132): [379..380]
 a87(r95): [383..384]
 a88(r94): [385..386]
 a89(r93): [387..388]
 a90(r131): [389..390]
 a91(r130): [393..394]
 a92(r129): [395..396]
 a93(r128): [399..400]
 a94(r126): [401..402]
 a95(r204): [403..405]
 a96(r124): [404..407]
 a97(r127): [402..403]
 a98(r123): [408..409]
 a99(r92): [408..413]
 a100(r203): [410..411]
 a101(r122): [414..415]
 a102(r90 [0]): [418..455]
 a102(r90 [1]): [417..455]
 a103(r89): [420..421]
 a104(r121): [422..423]
 a105(r86 [0]): [426..455]
 a105(r86 [1]): [425..455]
 a106(r85): [428..429]
 a107(r119): [430..431]
 a108(r84): [434..435]
 a109(r83): [436..437]
 a110(r82): [438..439]
 a111(r118): [440..441]
 a112(r117): [450..451]
 a113(r209): [453..453]
Compressing live ranges: from 456 to 156 - 34%
Ranges after the compression:
 a0(r210): [0..0]
 a1(r116): [1..151]
 a2(r202): [1..2]
 a3(r115): [3..4]
 a4(r201): [5..6]
 a5(r199): [7..8]
 a6(r200): [7..8]
 a7(r197): [9..10]
 a8(r198): [9..10]
 a9(r195): [11..12]
 a10(r196): [11..12]
 a11(r193): [13..16]
 a12(r194): [13..14]
 a13(r192): [15..16]
 a14(r191): [15..16]
 a15(r189): [17..20]
 a16(r190): [17..18]
 a17(r188): [19..20]
 a18(r187): [19..20]
 a19(r185): [21..24]
 a20(r186): [21..22]
 a21(r184): [23..24]
 a22(r183): [23..24]
 a23(r181): [25..26]
 a24(r182): [25..26]
 a25(r179): [27..28]
 a26(r180): [27..28]
 a27(r177): [29..30]
 a28(r178): [29..30]
 a29(r175): [31..32]
 a30(r176): [31..32]
 a31(r173): [33..34]
 a32(r174): [33..34]
 a33(r171): [35..36]
 a34(r172): [35..36]
 a35(r170): [37..38]
 a36(r169): [37..38]
 a37(r168): [39..40]
 a38(r167): [39..40]
 a39(r166): [41..42]
 a40(r165): [41..42]
 a41(r164): [43..44]
 a42(r163): [43..44]
 a43(r162): [45..46]
 a44(r161): [45..46]
 a45(r160): [47..48]
 a46(r159): [47..48]
 a47(r158): [49..50]
 a48(r157): [51..52]
 a49(r156): [53..54]
 a50(r155): [55..56]
 a51(r154): [57..58]
 a52(r152): [59..60]
 a53(r208): [61..63]
 a54(r150): [62..63]
 a55(r153): [60..61]
 a56(r149): [64..65]
 a57(r114): [64..67]
 a58(r207): [66..67]
 a59(r148): [68..69]
 a60(r112 [0]): [70..155]
 a60(r112 [1]): [70..155]
 a61(r111): [70..71]
 a62(r147): [72..73]
 a63(r108 [0]): [74..155]
 a63(r108 [1]): [74..155]
 a64(r107): [74..75]
 a65(r145): [76..77]
 a66(r106): [78..79]
 a67(r105): [80..81]
 a68(r104): [82..83]
 a69(r144): [84..85]
 a70(r143): [86..87]
 a71(r142): [88..89]
 a72(r141): [90..91]
 a73(r139): [92..93]
 a74(r206): [94..96]
 a75(r137): [95..96]
 a76(r140): [93..94]
 a77(r136): [97..98]
 a78(r103): [97..100]
 a79(r205): [99..100]
 a80(r135): [101..102]
 a81(r101 [0]): [103..155]
 a81(r101 [1]): [103..155]
 a82(r100): [103..104]
 a83(r134): [105..106]
 a84(r97 [0]): [107..155]
 a84(r97 [1]): [107..155]
 a85(r96): [107..108]
 a86(r132): [109..110]
 a87(r95): [111..112]
 a88(r94): [113..114]
 a89(r93): [115..116]
 a90(r131): [117..118]
 a91(r130): [119..120]
 a92(r129): [121..122]
 a93(r128): [123..124]
 a94(r126): [125..126]
 a95(r204): [127..129]
 a96(r124): [128..129]
 a97(r127): [126..127]
 a98(r123): [130..131]
 a99(r92): [130..133]
 a100(r203): [132..133]
 a101(r122): [134..135]
 a102(r90 [0]): [136..155]
 a102(r90 [1]): [136..155]
 a103(r89): [136..137]
 a104(r121): [138..139]
 a105(r86 [0]): [140..155]
 a105(r86 [1]): [140..155]
 a106(r85): [140..141]
 a107(r119): [142..143]
 a108(r84): [144..145]
 a109(r83): [146..147]
 a110(r82): [148..149]
 a111(r118): [150..151]
 a112(r117): [152..153]
 a113(r209): [154..154]
  pref0:a2(r202)<-hr5@1500
  pref1:a6(r200)<-hr4@1500
  pref2:a5(r199)<-hr5@1500
  pref3:a8(r198)<-hr4@1500
  pref4:a7(r197)<-hr5@1500
  pref5:a10(r196)<-hr4@1500
  pref6:a9(r195)<-hr5@1500
  pref7:a12(r194)<-hr4@1500
  pref8:a11(r193)<-hr5@1500
  pref9:a13(r192)<-hr2@1500
  pref10:a16(r190)<-hr4@1500
  pref11:a15(r189)<-hr5@1500
  pref12:a17(r188)<-hr2@1500
  pref13:a20(r186)<-hr4@1500
  pref14:a19(r185)<-hr5@1500
  pref15:a21(r184)<-hr2@1500
  pref16:a24(r182)<-hr4@1500
  pref17:a23(r181)<-hr5@1500
  pref18:a26(r180)<-hr4@1500
  pref19:a25(r179)<-hr5@1500
  pref20:a28(r178)<-hr4@1500
  pref21:a27(r177)<-hr5@1500
  pref22:a30(r176)<-hr1@1500
  pref23:a29(r175)<-hr5@1500
  pref24:a32(r174)<-hr1@1500
  pref25:a31(r173)<-hr5@1500
  pref26:a34(r172)<-hr1@1500
  pref27:a33(r171)<-hr5@1500
  pref28:a35(r170)<-hr5@1500
  pref29:a36(r169)<-hr4@1500
  pref30:a37(r168)<-hr5@1500
  pref31:a38(r167)<-hr4@1500
  pref32:a39(r166)<-hr5@1500
  pref33:a40(r165)<-hr4@1500
  pref34:a41(r164)<-hr5@1500
  pref35:a42(r163)<-hr4@1500
  pref36:a43(r162)<-hr5@1500
  pref37:a44(r161)<-hr4@1500
  pref38:a45(r160)<-hr5@1500
  pref39:a46(r159)<-hr4@1500
  pref40:a47(r158)<-hr0@1500
  pref41:a48(r157)<-hr5@1500
  pref42:a55(r153)<-hr1@1000
  pref43:a52(r152)<-hr0@1000
  pref44:a54(r150)<-hr0@1000
  pref45:a76(r140)<-hr1@1000
  pref46:a73(r139)<-hr0@1000
  pref47:a75(r137)<-hr0@1000
  pref48:a97(r127)<-hr1@1000
  pref49:a94(r126)<-hr0@1000
  pref50:a96(r124)<-hr0@1000
  pref51:a3(r115)<-hr5@1500
  regions=1, blocks=5, points=156
    allocnos=114 (big 6), copies=0, conflicts=0, ranges=120
Disposition:
  110:r82  l0     0  109:r83  l0     0  108:r84  l0     0  106:r85  l0     0
  105:r86  l0     1  103:r89  l0     0  102:r90  l0    42   99:r92  l0     0
   89:r93  l0     0   88:r94  l0     0   87:r95  l0     0   85:r96  l0     0
   84:r97  l0    40   82:r100 l0     0   81:r101 l0    38   78:r103 l0     0
   68:r104 l0     0   67:r105 l0     0   66:r106 l0     0   64:r107 l0     0
   63:r108 l0    36   61:r111 l0     0   60:r112 l0     4   57:r114 l0     0
    3:r115 l0     0    1:r116 l0     3  112:r117 l0     0  111:r118 l0     0
  107:r119 l0     0  104:r121 l0     0  101:r122 l0     0   98:r123 l0     1
   96:r124 l0     0   94:r126 l0     0   97:r127 l0     2   93:r128 l0     0
   92:r129 l0     0   91:r130 l0     0   90:r131 l0     0   86:r132 l0     0
   83:r134 l0     0   80:r135 l0     0   77:r136 l0     1   75:r137 l0     0
   73:r139 l0     0   76:r140 l0     2   72:r141 l0     0   71:r142 l0     0
   70:r143 l0     0   69:r144 l0     0   65:r145 l0     0   62:r147 l0     0
   59:r148 l0     0   56:r149 l0     1   54:r150 l0     0   52:r152 l0     0
   55:r153 l0     2   51:r154 l0     0   50:r155 l0     0   49:r156 l0     0
   48:r157 l0     0   47:r158 l0     0   46:r159 l0     1   45:r160 l0     0
   44:r161 l0     1   43:r162 l0     0   42:r163 l0     1   41:r164 l0     0
   40:r165 l0     1   39:r166 l0     0   38:r167 l0     1   37:r168 l0     0
   36:r169 l0     1   35:r170 l0     0   33:r171 l0     0   34:r172 l0     1
   31:r173 l0     0   32:r174 l0     1   29:r175 l0     0   30:r176 l0     1
   27:r177 l0     0   28:r178 l0     4   25:r179 l0     0   26:r180 l0     4
   23:r181 l0     0   24:r182 l0     4   22:r183 l0     2   21:r184 l0     1
   19:r185 l0     0   20:r186 l0     4   18:r187 l0     2   17:r188 l0     1
   15:r189 l0     0   16:r190 l0     4   14:r191 l0     2   13:r192 l0     1
   11:r193 l0     0   12:r194 l0     4    9:r195 l0     0   10:r196 l0     2
    7:r197 l0     0    8:r198 l0     2    5:r199 l0     0    6:r200 l0     2
    4:r201 l0     0    2:r202 l0     0  100:r203 l0     1   95:r204 l0     1
   79:r205 l0     1   74:r206 l0     1   58:r207 l0     1   53:r208 l0     1
  113:r209 l0     0    0:r210 l0     0
+++Costs: overall -25000, reg -25000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


test_explorer_file2

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 36 [r8] 37 [r9]
;;  ref usage 	r0={25d,2u} r1={36d,12u} r2={33d,9u} r4={42d,18u} r5={45d,21u} r6={1d,4u} r7={5d,39u} r8={23d} r9={23d} r10={23d} r11={23d} r12={23d} r13={23d} r14={23d} r15={23d} r16={1d,3u} r17={47d,1u} r18={23d} r19={1d,60u,1e} r20={24d} r21={24d} r22={24d} r23={24d} r24={24d} r25={24d} r26={24d} r27={24d} r28={23d} r29={23d} r30={23d} r31={23d} r32={23d} r33={23d} r34={23d} r35={23d} r36={27d,3u} r37={27d,3u} r38={23d} r39={23d} r44={23d} r45={23d} r46={23d} r47={23d} r48={23d} r49={23d} r50={23d} r51={23d} r52={23d} r53={23d} r54={23d} r55={23d} r56={23d} r57={23d} r58={23d} r59={23d} r60={23d} r61={23d} r62={23d} r63={23d} r64={23d} r65={23d} r66={23d} r67={23d} r68={23d} r69={23d} r70={23d} r71={23d} r72={23d} r73={23d} r74={23d} r75={23d} r82={1d,1u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={2d,2u} r89={1d,1u} r90={2d,2u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={2d,2u} r100={1d,1u} r101={2d,2u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={2d,2u} r111={1d,1u} r112={2d,2u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,2u} r126={1d,1u} r127={1d} r128={1d,1u} r129={1d,1u} r130={1d,1u} r131={1d,1u} r132={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,2u} r139={1d,1u} r140={1d} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,2u} r152={1d,1u} r153={1d} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r171={1d,1u} r172={1d,1u} r173={1d,1u} r174={1d,1u} r175={1d,1u} r176={1d,1u} r177={1d,1u} r178={1d,1u} r179={1d,1u} r180={1d,1u} r181={1d,1u} r182={1d,1u} r183={1d,1u} r184={1d,1u} r185={1d,1u} r186={1d,1u} r187={1d,1u} r188={1d,1u} r189={1d,1u} r190={1d,1u} r191={1d,1u} r192={1d,1u} r193={1d,1u} r194={1d,1u} r195={1d,1u} r196={1d,1u} r197={1d,1u} r198={1d,1u} r199={1d,1u} r200={1d,1u} r201={1d,1u} r202={1d,1u} r203={1d,1u} r204={1d,2u} r205={1d,1u} r206={1d,2u} r207={1d,1u} r208={1d,2u} r209={1d} r210={1d} 
;;    total ref usage 2072{1775d,296u,1e} in 225{202 regular + 23 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 86 90 97 101 108 112
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 86 90 97 101 108 112
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 82 83 84 85 86 89 90 92 93 94 95 96 97 100 101 103 104 105 106 107 108 111 112 114 115 116 117 118 119 121 122 123 124 126 127 128 129 130 131 132 134 135 136 137 139 140 141 142 143 144 145 147 148 149 150 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 4 3 2 NOTE_INSN_FUNCTION_BEG)
(insn 3 2 6 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 19 frame)
                        (const_int -8 [0xfffffffffffffff8])) [9 D.3563+0 S8 A64])
                (unspec:DI [
                        (mem/v/f:DI (const_int 40 [0x28]) [0 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_SET))
            (set (reg:DI 209)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "main.c":177:28 1265 {stack_protect_set_1_di}
     (expr_list:REG_UNUSED (reg:DI 209)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 6 3 7 2 (set (reg:DI 117)
        (reg/f:DI 7 sp)) "main.c":177:28 80 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg/f:DI 116 [ saved_stack.23_37 ])
        (reg:DI 117)) "main.c":177:28 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 117)
        (nil)))
(insn 8 7 9 2 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -76 [0xffffffffffffffb4])) [1 len_a+0 S4 A32])
        (const_int 100 [0x64])) "main.c":178:13 81 {*movsi_internal}
     (nil))
(insn 9 8 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -72 [0xffffffffffffffb8])) [1 len_b+0 S4 A64])
        (const_int 1000 [0x3e8])) "main.c":178:26 81 {*movsi_internal}
     (nil))
(insn 10 9 11 2 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -68 [0xffffffffffffffbc])) [1 len_c+0 S4 A32])
        (const_int 3000 [0xbb8])) "main.c":178:40 81 {*movsi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:SI 118)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -76 [0xffffffffffffffb4])) [1 len_a+0 S4 A32])) "main.c":179:8 81 {*movsi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:DI 82 [ _1 ])
        (sign_extend:DI (reg:SI 118))) "main.c":179:8 154 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 118)
        (nil)))
(insn 13 12 14 2 (parallel [
            (set (reg:DI 83 [ _2 ])
                (plus:DI (reg:DI 82 [ _1 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":179:8 230 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 82 [ _1 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 14 13 15 2 (set (reg:DI 84 [ _3 ])
        (reg:DI 83 [ _2 ])) "main.c":179:8 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 83 [ _2 ])
        (nil)))
(insn 15 14 16 2 (set (mem/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -64 [0xffffffffffffffc0])) [10 D.3462+0 S8 A128])
        (reg:DI 84 [ _3 ])) "main.c":179:8 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 84 [ _3 ])
        (nil)))
(insn 16 15 17 2 (set (reg:SI 119)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -76 [0xffffffffffffffb4])) [1 len_a+0 S4 A32])) "main.c":179:8 81 {*movsi_internal}
     (nil))
(insn 17 16 18 2 (set (reg:DI 85 [ _4 ])
        (sign_extend:DI (reg:SI 119))) "main.c":179:8 154 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 119)
        (nil)))
(insn 18 17 19 2 (set (subreg:DI (reg:TI 86 [ _5 ]) 0)
        (reg:DI 85 [ _4 ])) "main.c":179:8 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 85 [ _4 ])
        (nil)))
(insn 19 18 23 2 (set (subreg:DI (reg:TI 86 [ _5 ]) 8)
        (const_int 0 [0])) "main.c":179:8 80 {*movdi_internal}
     (expr_list:REG_UNUSED (reg:TI 86 [ _5 ])
        (nil)))
(insn 23 19 24 2 (set (reg:SI 121)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -76 [0xffffffffffffffb4])) [1 len_a+0 S4 A32])) "main.c":179:8 81 {*movsi_internal}
     (nil))
(insn 24 23 25 2 (set (reg:DI 89 [ _8 ])
        (sign_extend:DI (reg:SI 121))) "main.c":179:8 154 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 121)
        (nil)))
(insn 25 24 26 2 (set (subreg:DI (reg:TI 90 [ _9 ]) 0)
        (reg:DI 89 [ _8 ])) "main.c":179:8 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 89 [ _8 ])
        (nil)))
(insn 26 25 28 2 (set (subreg:DI (reg:TI 90 [ _9 ]) 8)
        (const_int 0 [0])) "main.c":179:8 80 {*movdi_internal}
     (expr_list:REG_UNUSED (reg:TI 90 [ _9 ])
        (nil)))
(insn 28 26 29 2 (set (reg:SI 122)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -76 [0xffffffffffffffb4])) [1 len_a+0 S4 A32])) "main.c":179:8 81 {*movsi_internal}
     (nil))
(insn 29 28 242 2 (set (reg:DI 92 [ _11 ])
        (sign_extend:DI (reg:SI 122))) "main.c":179:8 154 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 122)
        (nil)))
(insn 242 29 30 2 (set (reg:DI 203)
        (const_int 16 [0x10])) "main.c":179:8 80 {*movdi_internal}
     (nil))
(insn 30 242 31 2 (parallel [
            (set (reg:DI 123)
                (plus:DI (reg:DI 203)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":179:8 230 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 203)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 31 30 243 2 (parallel [
            (set (reg:DI 124)
                (plus:DI (reg:DI 92 [ _11 ])
                    (reg:DI 123)))
            (clobber (reg:CC 17 flags))
        ]) "main.c":179:8 230 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 123)
        (expr_list:REG_DEAD (reg:DI 92 [ _11 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 243 31 32 2 (set (reg:DI 204)
        (const_int 16 [0x10])) "main.c":179:8 80 {*movdi_internal}
     (nil))
(insn 32 243 33 2 (parallel [
            (set (reg:DI 126)
                (udiv:DI (reg:DI 124)
                    (reg:DI 204)))
            (set (reg:DI 127)
                (umod:DI (reg:DI 124)
                    (reg:DI 204)))
            (clobber (reg:CC 17 flags))
        ]) "main.c":179:8 492 {*udivmoddi4}
     (expr_list:REG_DEAD (reg:DI 204)
        (expr_list:REG_DEAD (reg:DI 124)
            (expr_list:REG_UNUSED (reg:DI 127)
                (expr_list:REG_UNUSED (reg:CC 17 flags)
                    (nil))))))
(insn 33 32 34 2 (parallel [
            (set (reg:DI 128)
                (mult:DI (reg:DI 126)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":179:8 445 {*muldi3_1}
     (expr_list:REG_DEAD (reg:DI 126)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 34 33 35 2 (parallel [
            (set (reg/f:DI 7 sp)
                (minus:DI (reg/f:DI 7 sp)
                    (reg:DI 128)))
            (clobber (reg:CC 17 flags))
        ]) "main.c":179:8 303 {*subdi_1}
     (expr_list:REG_DEAD (reg:DI 128)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 35 34 36 2 (set (reg:DI 129)
        (reg/f:DI 7 sp)) "main.c":179:8 80 {*movdi_internal}
     (nil))
(insn 36 35 37 2 (parallel [
            (set (reg/f:DI 130)
                (plus:DI (reg:DI 129)
                    (const_int 0 [0])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":179:8 230 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 129)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 37 36 38 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -56 [0xffffffffffffffc8])) [3 buf_a.20+0 S8 A64])
        (reg/f:DI 130)) "main.c":179:8 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 130)
        (nil)))
(insn 38 37 39 2 (set (reg:SI 131)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -72 [0xffffffffffffffb8])) [1 len_b+0 S4 A64])) "main.c":179:22 81 {*movsi_internal}
     (nil))
(insn 39 38 40 2 (set (reg:DI 93 [ _12 ])
        (sign_extend:DI (reg:SI 131))) "main.c":179:22 154 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 131)
        (nil)))
(insn 40 39 41 2 (parallel [
            (set (reg:DI 94 [ _13 ])
                (plus:DI (reg:DI 93 [ _12 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":179:22 230 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 93 [ _12 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 41 40 42 2 (set (reg:DI 95 [ _14 ])
        (reg:DI 94 [ _13 ])) "main.c":179:22 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 94 [ _13 ])
        (nil)))
(insn 42 41 43 2 (set (mem/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -48 [0xffffffffffffffd0])) [10 D.3468+0 S8 A128])
        (reg:DI 95 [ _14 ])) "main.c":179:22 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 95 [ _14 ])
        (nil)))
(insn 43 42 44 2 (set (reg:SI 132)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -72 [0xffffffffffffffb8])) [1 len_b+0 S4 A64])) "main.c":179:22 81 {*movsi_internal}
     (nil))
(insn 44 43 45 2 (set (reg:DI 96 [ _15 ])
        (sign_extend:DI (reg:SI 132))) "main.c":179:22 154 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 132)
        (nil)))
(insn 45 44 46 2 (set (subreg:DI (reg:TI 97 [ _16 ]) 0)
        (reg:DI 96 [ _15 ])) "main.c":179:22 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 96 [ _15 ])
        (nil)))
(insn 46 45 50 2 (set (subreg:DI (reg:TI 97 [ _16 ]) 8)
        (const_int 0 [0])) "main.c":179:22 80 {*movdi_internal}
     (expr_list:REG_UNUSED (reg:TI 97 [ _16 ])
        (nil)))
(insn 50 46 51 2 (set (reg:SI 134)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -72 [0xffffffffffffffb8])) [1 len_b+0 S4 A64])) "main.c":179:22 81 {*movsi_internal}
     (nil))
(insn 51 50 52 2 (set (reg:DI 100 [ _19 ])
        (sign_extend:DI (reg:SI 134))) "main.c":179:22 154 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 134)
        (nil)))
(insn 52 51 53 2 (set (subreg:DI (reg:TI 101 [ _20 ]) 0)
        (reg:DI 100 [ _19 ])) "main.c":179:22 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 100 [ _19 ])
        (nil)))
(insn 53 52 55 2 (set (subreg:DI (reg:TI 101 [ _20 ]) 8)
        (const_int 0 [0])) "main.c":179:22 80 {*movdi_internal}
     (expr_list:REG_UNUSED (reg:TI 101 [ _20 ])
        (nil)))
(insn 55 53 56 2 (set (reg:SI 135)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -72 [0xffffffffffffffb8])) [1 len_b+0 S4 A64])) "main.c":179:22 81 {*movsi_internal}
     (nil))
(insn 56 55 244 2 (set (reg:DI 103 [ _22 ])
        (sign_extend:DI (reg:SI 135))) "main.c":179:22 154 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 135)
        (nil)))
(insn 244 56 57 2 (set (reg:DI 205)
        (const_int 16 [0x10])) "main.c":179:22 80 {*movdi_internal}
     (nil))
(insn 57 244 58 2 (parallel [
            (set (reg:DI 136)
                (plus:DI (reg:DI 205)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":179:22 230 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 205)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 58 57 245 2 (parallel [
            (set (reg:DI 137)
                (plus:DI (reg:DI 103 [ _22 ])
                    (reg:DI 136)))
            (clobber (reg:CC 17 flags))
        ]) "main.c":179:22 230 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 136)
        (expr_list:REG_DEAD (reg:DI 103 [ _22 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 245 58 59 2 (set (reg:DI 206)
        (const_int 16 [0x10])) "main.c":179:22 80 {*movdi_internal}
     (nil))
(insn 59 245 60 2 (parallel [
            (set (reg:DI 139)
                (udiv:DI (reg:DI 137)
                    (reg:DI 206)))
            (set (reg:DI 140)
                (umod:DI (reg:DI 137)
                    (reg:DI 206)))
            (clobber (reg:CC 17 flags))
        ]) "main.c":179:22 492 {*udivmoddi4}
     (expr_list:REG_DEAD (reg:DI 206)
        (expr_list:REG_DEAD (reg:DI 137)
            (expr_list:REG_UNUSED (reg:DI 140)
                (expr_list:REG_UNUSED (reg:CC 17 flags)
                    (nil))))))
(insn 60 59 61 2 (parallel [
            (set (reg:DI 141)
                (mult:DI (reg:DI 139)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":179:22 445 {*muldi3_1}
     (expr_list:REG_DEAD (reg:DI 139)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 61 60 62 2 (parallel [
            (set (reg/f:DI 7 sp)
                (minus:DI (reg/f:DI 7 sp)
                    (reg:DI 141)))
            (clobber (reg:CC 17 flags))
        ]) "main.c":179:22 303 {*subdi_1}
     (expr_list:REG_DEAD (reg:DI 141)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 62 61 63 2 (set (reg:DI 142)
        (reg/f:DI 7 sp)) "main.c":179:22 80 {*movdi_internal}
     (nil))
(insn 63 62 64 2 (parallel [
            (set (reg/f:DI 143)
                (plus:DI (reg:DI 142)
                    (const_int 0 [0])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":179:22 230 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 142)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 64 63 65 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -40 [0xffffffffffffffd8])) [3 buf_b.21+0 S8 A64])
        (reg/f:DI 143)) "main.c":179:22 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 143)
        (nil)))
(insn 65 64 66 2 (set (reg:SI 144)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -68 [0xffffffffffffffbc])) [1 len_c+0 S4 A32])) "main.c":179:36 81 {*movsi_internal}
     (nil))
(insn 66 65 67 2 (set (reg:DI 104 [ _23 ])
        (sign_extend:DI (reg:SI 144))) "main.c":179:36 154 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 144)
        (nil)))
(insn 67 66 68 2 (parallel [
            (set (reg:DI 105 [ _24 ])
                (plus:DI (reg:DI 104 [ _23 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":179:36 230 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 104 [ _23 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 68 67 69 2 (set (reg:DI 106 [ _25 ])
        (reg:DI 105 [ _24 ])) "main.c":179:36 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 105 [ _24 ])
        (nil)))
(insn 69 68 70 2 (set (mem/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -32 [0xffffffffffffffe0])) [10 D.3474+0 S8 A128])
        (reg:DI 106 [ _25 ])) "main.c":179:36 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 106 [ _25 ])
        (nil)))
(insn 70 69 71 2 (set (reg:SI 145)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -68 [0xffffffffffffffbc])) [1 len_c+0 S4 A32])) "main.c":179:36 81 {*movsi_internal}
     (nil))
(insn 71 70 72 2 (set (reg:DI 107 [ _26 ])
        (sign_extend:DI (reg:SI 145))) "main.c":179:36 154 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 145)
        (nil)))
(insn 72 71 73 2 (set (subreg:DI (reg:TI 108 [ _27 ]) 0)
        (reg:DI 107 [ _26 ])) "main.c":179:36 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 107 [ _26 ])
        (nil)))
(insn 73 72 77 2 (set (subreg:DI (reg:TI 108 [ _27 ]) 8)
        (const_int 0 [0])) "main.c":179:36 80 {*movdi_internal}
     (expr_list:REG_UNUSED (reg:TI 108 [ _27 ])
        (nil)))
(insn 77 73 78 2 (set (reg:SI 147)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -68 [0xffffffffffffffbc])) [1 len_c+0 S4 A32])) "main.c":179:36 81 {*movsi_internal}
     (nil))
(insn 78 77 79 2 (set (reg:DI 111 [ _30 ])
        (sign_extend:DI (reg:SI 147))) "main.c":179:36 154 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 147)
        (nil)))
(insn 79 78 80 2 (set (subreg:DI (reg:TI 112 [ _31 ]) 0)
        (reg:DI 111 [ _30 ])) "main.c":179:36 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 111 [ _30 ])
        (nil)))
(insn 80 79 82 2 (set (subreg:DI (reg:TI 112 [ _31 ]) 8)
        (const_int 0 [0])) "main.c":179:36 80 {*movdi_internal}
     (expr_list:REG_UNUSED (reg:TI 112 [ _31 ])
        (nil)))
(insn 82 80 83 2 (set (reg:SI 148)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -68 [0xffffffffffffffbc])) [1 len_c+0 S4 A32])) "main.c":179:36 81 {*movsi_internal}
     (nil))
(insn 83 82 246 2 (set (reg:DI 114 [ _33 ])
        (sign_extend:DI (reg:SI 148))) "main.c":179:36 154 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 148)
        (nil)))
(insn 246 83 84 2 (set (reg:DI 207)
        (const_int 16 [0x10])) "main.c":179:36 80 {*movdi_internal}
     (nil))
(insn 84 246 85 2 (parallel [
            (set (reg:DI 149)
                (plus:DI (reg:DI 207)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":179:36 230 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 207)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 85 84 247 2 (parallel [
            (set (reg:DI 150)
                (plus:DI (reg:DI 114 [ _33 ])
                    (reg:DI 149)))
            (clobber (reg:CC 17 flags))
        ]) "main.c":179:36 230 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 149)
        (expr_list:REG_DEAD (reg:DI 114 [ _33 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 247 85 86 2 (set (reg:DI 208)
        (const_int 16 [0x10])) "main.c":179:36 80 {*movdi_internal}
     (nil))
(insn 86 247 87 2 (parallel [
            (set (reg:DI 152)
                (udiv:DI (reg:DI 150)
                    (reg:DI 208)))
            (set (reg:DI 153)
                (umod:DI (reg:DI 150)
                    (reg:DI 208)))
            (clobber (reg:CC 17 flags))
        ]) "main.c":179:36 492 {*udivmoddi4}
     (expr_list:REG_DEAD (reg:DI 208)
        (expr_list:REG_DEAD (reg:DI 150)
            (expr_list:REG_UNUSED (reg:DI 153)
                (expr_list:REG_UNUSED (reg:CC 17 flags)
                    (nil))))))
(insn 87 86 88 2 (parallel [
            (set (reg:DI 154)
                (mult:DI (reg:DI 152)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":179:36 445 {*muldi3_1}
     (expr_list:REG_DEAD (reg:DI 152)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 88 87 89 2 (parallel [
            (set (reg/f:DI 7 sp)
                (minus:DI (reg/f:DI 7 sp)
                    (reg:DI 154)))
            (clobber (reg:CC 17 flags))
        ]) "main.c":179:36 303 {*subdi_1}
     (expr_list:REG_DEAD (reg:DI 154)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 89 88 90 2 (set (reg:DI 155)
        (reg/f:DI 7 sp)) "main.c":179:36 80 {*movdi_internal}
     (nil))
(insn 90 89 91 2 (parallel [
            (set (reg/f:DI 156)
                (plus:DI (reg:DI 155)
                    (const_int 0 [0])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":179:36 230 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 155)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 91 90 92 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [3 buf_c.22+0 S8 A64])
        (reg/f:DI 156)) "main.c":179:36 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 156)
        (nil)))
(insn 92 91 93 2 (set (reg:DI 157)
        (symbol_ref/f:DI ("*.LC21") [flags 0x2]  <var_decl 0x7fa6108e2120 *.LC21>)) "main.c":180:36 80 {*movdi_internal}
     (nil))
(insn 93 92 94 2 (set (reg:DI 5 di)
        (reg:DI 157)) "main.c":180:36 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 157)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC21") [flags 0x2]  <var_decl 0x7fa6108e2120 *.LC21>)
            (nil))))
(call_insn 94 93 95 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("explorer_tester_create") [flags 0x41]  <function_decl 0x7fa610b72300 explorer_tester_create>) [0 explorer_tester_create S1 A8])
            (const_int 0 [0]))) "main.c":180:36 909 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 95 94 96 2 (set (reg:DI 158)
        (reg:DI 0 ax)) "main.c":180:36 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 96 95 97 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [14 tester+0 S8 A128])
        (reg:DI 158)) "main.c":180:36 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 158)
        (nil)))
(insn 97 96 98 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "main.c":182:3 83 {*movqi_internal}
     (nil))
(call_insn 98 97 99 2 (call (mem:QI (symbol_ref:DI ("checksum_reset") [flags 0x3]  <function_decl 0x7fa610835100 checksum_reset>) [0 checksum_reset S1 A8])
        (const_int 0 [0])) "main.c":182:3 898 {*call}
     (expr_list:REG_DEAD (reg:QI 0 ax)
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (nil)))
(insn 99 98 100 2 (set (reg:SI 159)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -76 [0xffffffffffffffb4])) [1 len_a+0 S4 A32])) "main.c":183:3 81 {*movsi_internal}
     (nil))
(insn 100 99 101 2 (set (reg:DI 160)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -56 [0xffffffffffffffc8])) [3 buf_a.20+0 S8 A64])) "main.c":183:3 80 {*movdi_internal}
     (nil))
(insn 101 100 102 2 (set (reg:SI 4 si)
        (reg:SI 159)) "main.c":183:3 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 159)
        (nil)))
(insn 102 101 103 2 (set (reg:DI 5 di)
        (reg:DI 160)) "main.c":183:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 160)
        (nil)))
(call_insn 103 102 104 2 (call (mem:QI (symbol_ref:DI ("fill_random") [flags 0x3]  <function_decl 0x7fa610820900 fill_random>) [0 fill_random S1 A8])
        (const_int 0 [0])) "main.c":183:3 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 104 103 105 2 (set (reg:SI 161)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -76 [0xffffffffffffffb4])) [1 len_a+0 S4 A32])) "main.c":183:30 81 {*movsi_internal}
     (nil))
(insn 105 104 106 2 (set (reg:DI 162)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -56 [0xffffffffffffffc8])) [3 buf_a.20+0 S8 A64])) "main.c":183:30 80 {*movdi_internal}
     (nil))
(insn 106 105 107 2 (set (reg:SI 4 si)
        (reg:SI 161)) "main.c":183:30 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 161)
        (nil)))
(insn 107 106 108 2 (set (reg:DI 5 di)
        (reg:DI 162)) "main.c":183:30 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 162)
        (nil)))
(call_insn 108 107 109 2 (call (mem:QI (symbol_ref:DI ("checksum_upd_bytes") [flags 0x3]  <function_decl 0x7fa610835500 checksum_upd_bytes>) [0 checksum_upd_bytes S1 A8])
        (const_int 0 [0])) "main.c":183:30 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 109 108 110 2 (set (reg:SI 163)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -72 [0xffffffffffffffb8])) [1 len_b+0 S4 A64])) "main.c":184:3 81 {*movsi_internal}
     (nil))
(insn 110 109 111 2 (set (reg:DI 164)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -40 [0xffffffffffffffd8])) [3 buf_b.21+0 S8 A64])) "main.c":184:3 80 {*movdi_internal}
     (nil))
(insn 111 110 112 2 (set (reg:SI 4 si)
        (reg:SI 163)) "main.c":184:3 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 163)
        (nil)))
(insn 112 111 113 2 (set (reg:DI 5 di)
        (reg:DI 164)) "main.c":184:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 164)
        (nil)))
(call_insn 113 112 114 2 (call (mem:QI (symbol_ref:DI ("fill_random") [flags 0x3]  <function_decl 0x7fa610820900 fill_random>) [0 fill_random S1 A8])
        (const_int 0 [0])) "main.c":184:3 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 114 113 115 2 (set (reg:SI 165)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -72 [0xffffffffffffffb8])) [1 len_b+0 S4 A64])) "main.c":184:30 81 {*movsi_internal}
     (nil))
(insn 115 114 116 2 (set (reg:DI 166)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -40 [0xffffffffffffffd8])) [3 buf_b.21+0 S8 A64])) "main.c":184:30 80 {*movdi_internal}
     (nil))
(insn 116 115 117 2 (set (reg:SI 4 si)
        (reg:SI 165)) "main.c":184:30 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 165)
        (nil)))
(insn 117 116 118 2 (set (reg:DI 5 di)
        (reg:DI 166)) "main.c":184:30 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 166)
        (nil)))
(call_insn 118 117 119 2 (call (mem:QI (symbol_ref:DI ("checksum_upd_bytes") [flags 0x3]  <function_decl 0x7fa610835500 checksum_upd_bytes>) [0 checksum_upd_bytes S1 A8])
        (const_int 0 [0])) "main.c":184:30 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 119 118 120 2 (set (reg:SI 167)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -68 [0xffffffffffffffbc])) [1 len_c+0 S4 A32])) "main.c":185:3 81 {*movsi_internal}
     (nil))
(insn 120 119 121 2 (set (reg:DI 168)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [3 buf_c.22+0 S8 A64])) "main.c":185:3 80 {*movdi_internal}
     (nil))
(insn 121 120 122 2 (set (reg:SI 4 si)
        (reg:SI 167)) "main.c":185:3 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 167)
        (nil)))
(insn 122 121 123 2 (set (reg:DI 5 di)
        (reg:DI 168)) "main.c":185:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 168)
        (nil)))
(call_insn 123 122 124 2 (call (mem:QI (symbol_ref:DI ("fill_random") [flags 0x3]  <function_decl 0x7fa610820900 fill_random>) [0 fill_random S1 A8])
        (const_int 0 [0])) "main.c":185:3 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 124 123 125 2 (set (reg:SI 169)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -68 [0xffffffffffffffbc])) [1 len_c+0 S4 A32])) "main.c":185:30 81 {*movsi_internal}
     (nil))
(insn 125 124 126 2 (set (reg:DI 170)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [3 buf_c.22+0 S8 A64])) "main.c":185:30 80 {*movdi_internal}
     (nil))
(insn 126 125 127 2 (set (reg:SI 4 si)
        (reg:SI 169)) "main.c":185:30 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 169)
        (nil)))
(insn 127 126 128 2 (set (reg:DI 5 di)
        (reg:DI 170)) "main.c":185:30 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 170)
        (nil)))
(call_insn 128 127 129 2 (call (mem:QI (symbol_ref:DI ("checksum_upd_bytes") [flags 0x3]  <function_decl 0x7fa610835500 checksum_upd_bytes>) [0 checksum_upd_bytes S1 A8])
        (const_int 0 [0])) "main.c":185:30 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 129 128 130 2 (set (reg:DI 171)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [14 tester+0 S8 A128])) "main.c":187:3 80 {*movdi_internal}
     (nil))
(insn 130 129 131 2 (set (reg:SI 2 cx)
        (const_int 1 [0x1])) "main.c":187:3 81 {*movsi_internal}
     (nil))
(insn 131 130 132 2 (set (reg:DI 172)
        (symbol_ref:DI ("checksum_upd_file") [flags 0x3]  <function_decl 0x7fa610835700 checksum_upd_file>)) "main.c":187:3 80 {*movdi_internal}
     (nil))
(insn 132 131 133 2 (set (reg:DI 1 dx)
        (reg:DI 172)) "main.c":187:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 172)
        (expr_list:REG_EQUAL (symbol_ref:DI ("checksum_upd_file") [flags 0x3]  <function_decl 0x7fa610835700 checksum_upd_file>)
            (nil))))
(insn 133 132 134 2 (set (reg:SI 4 si)
        (const_int 1 [0x1])) "main.c":187:3 81 {*movsi_internal}
     (nil))
(insn 134 133 135 2 (set (reg:DI 5 di)
        (reg:DI 171)) "main.c":187:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 171)
        (nil)))
(call_insn 135 134 136 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_support_file_type") [flags 0x41]  <function_decl 0x7fa610b72700 explorer_tester_support_file_type>) [0 explorer_tester_support_file_type S1 A8])
        (const_int 0 [0])) "main.c":187:3 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:SI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 136 135 137 2 (set (reg:DI 173)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [14 tester+0 S8 A128])) "main.c":188:3 80 {*movdi_internal}
     (nil))
(insn 137 136 138 2 (set (reg:SI 2 cx)
        (const_int 1 [0x1])) "main.c":188:3 81 {*movsi_internal}
     (nil))
(insn 138 137 139 2 (set (reg:DI 174)
        (symbol_ref:DI ("checksum_upd_file") [flags 0x3]  <function_decl 0x7fa610835700 checksum_upd_file>)) "main.c":188:3 80 {*movdi_internal}
     (nil))
(insn 139 138 140 2 (set (reg:DI 1 dx)
        (reg:DI 174)) "main.c":188:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 174)
        (expr_list:REG_EQUAL (symbol_ref:DI ("checksum_upd_file") [flags 0x3]  <function_decl 0x7fa610835700 checksum_upd_file>)
            (nil))))
(insn 140 139 141 2 (set (reg:SI 4 si)
        (const_int 2 [0x2])) "main.c":188:3 81 {*movsi_internal}
     (nil))
(insn 141 140 142 2 (set (reg:DI 5 di)
        (reg:DI 173)) "main.c":188:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 173)
        (nil)))
(call_insn 142 141 143 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_support_file_type") [flags 0x41]  <function_decl 0x7fa610b72700 explorer_tester_support_file_type>) [0 explorer_tester_support_file_type S1 A8])
        (const_int 0 [0])) "main.c":188:3 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:SI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 143 142 144 2 (set (reg:DI 175)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [14 tester+0 S8 A128])) "main.c":189:3 80 {*movdi_internal}
     (nil))
(insn 144 143 145 2 (set (reg:SI 2 cx)
        (const_int 1 [0x1])) "main.c":189:3 81 {*movsi_internal}
     (nil))
(insn 145 144 146 2 (set (reg:DI 176)
        (symbol_ref:DI ("checksum_upd_file") [flags 0x3]  <function_decl 0x7fa610835700 checksum_upd_file>)) "main.c":189:3 80 {*movdi_internal}
     (nil))
(insn 146 145 147 2 (set (reg:DI 1 dx)
        (reg:DI 176)) "main.c":189:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 176)
        (expr_list:REG_EQUAL (symbol_ref:DI ("checksum_upd_file") [flags 0x3]  <function_decl 0x7fa610835700 checksum_upd_file>)
            (nil))))
(insn 147 146 148 2 (set (reg:SI 4 si)
        (const_int 3 [0x3])) "main.c":189:3 81 {*movsi_internal}
     (nil))
(insn 148 147 149 2 (set (reg:DI 5 di)
        (reg:DI 175)) "main.c":189:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 175)
        (nil)))
(call_insn 149 148 150 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_support_file_type") [flags 0x41]  <function_decl 0x7fa610b72700 explorer_tester_support_file_type>) [0 explorer_tester_support_file_type S1 A8])
        (const_int 0 [0])) "main.c":189:3 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:SI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 150 149 151 2 (set (reg:DI 177)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [14 tester+0 S8 A128])) "main.c":190:3 80 {*movdi_internal}
     (nil))
(insn 151 150 152 2 (set (reg:SI 2 cx)
        (const_int 1 [0x1])) "main.c":190:3 81 {*movsi_internal}
     (nil))
(insn 152 151 153 2 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "main.c":190:3 81 {*movsi_internal}
     (nil))
(insn 153 152 154 2 (set (reg:DI 178)
        (symbol_ref/f:DI ("*.LC22") [flags 0x2]  <var_decl 0x7fa6108e21b0 *.LC22>)) "main.c":190:3 80 {*movdi_internal}
     (nil))
(insn 154 153 155 2 (set (reg:DI 4 si)
        (reg:DI 178)) "main.c":190:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 178)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC22") [flags 0x2]  <var_decl 0x7fa6108e21b0 *.LC22>)
            (nil))))
(insn 155 154 156 2 (set (reg:DI 5 di)
        (reg:DI 177)) "main.c":190:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 177)
        (nil)))
(call_insn 156 155 157 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_create_file") [flags 0x41]  <function_decl 0x7fa610b72b00 explorer_tester_create_file>) [0 explorer_tester_create_file S1 A8])
        (const_int 0 [0])) "main.c":190:3 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 2 cx)
                (expr_list:REG_DEAD (reg:SI 1 dx)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 157 156 158 2 (set (reg:DI 179)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [14 tester+0 S8 A128])) "main.c":191:3 80 {*movdi_internal}
     (nil))
(insn 158 157 159 2 (set (reg:SI 2 cx)
        (const_int 1 [0x1])) "main.c":191:3 81 {*movsi_internal}
     (nil))
(insn 159 158 160 2 (set (reg:SI 1 dx)
        (const_int 2 [0x2])) "main.c":191:3 81 {*movsi_internal}
     (nil))
(insn 160 159 161 2 (set (reg:DI 180)
        (symbol_ref/f:DI ("*.LC23") [flags 0x2]  <var_decl 0x7fa6108e2240 *.LC23>)) "main.c":191:3 80 {*movdi_internal}
     (nil))
(insn 161 160 162 2 (set (reg:DI 4 si)
        (reg:DI 180)) "main.c":191:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 180)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC23") [flags 0x2]  <var_decl 0x7fa6108e2240 *.LC23>)
            (nil))))
(insn 162 161 163 2 (set (reg:DI 5 di)
        (reg:DI 179)) "main.c":191:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 179)
        (nil)))
(call_insn 163 162 164 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_create_file") [flags 0x41]  <function_decl 0x7fa610b72b00 explorer_tester_create_file>) [0 explorer_tester_create_file S1 A8])
        (const_int 0 [0])) "main.c":191:3 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 2 cx)
                (expr_list:REG_DEAD (reg:SI 1 dx)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 164 163 165 2 (set (reg:DI 181)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [14 tester+0 S8 A128])) "main.c":192:3 80 {*movdi_internal}
     (nil))
(insn 165 164 166 2 (set (reg:SI 2 cx)
        (const_int 1 [0x1])) "main.c":192:3 81 {*movsi_internal}
     (nil))
(insn 166 165 167 2 (set (reg:SI 1 dx)
        (const_int 3 [0x3])) "main.c":192:3 81 {*movsi_internal}
     (nil))
(insn 167 166 168 2 (set (reg:DI 182)
        (symbol_ref/f:DI ("*.LC24") [flags 0x2]  <var_decl 0x7fa6108e22d0 *.LC24>)) "main.c":192:3 80 {*movdi_internal}
     (nil))
(insn 168 167 169 2 (set (reg:DI 4 si)
        (reg:DI 182)) "main.c":192:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 182)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC24") [flags 0x2]  <var_decl 0x7fa6108e22d0 *.LC24>)
            (nil))))
(insn 169 168 170 2 (set (reg:DI 5 di)
        (reg:DI 181)) "main.c":192:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 181)
        (nil)))
(call_insn 170 169 171 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_create_file") [flags 0x41]  <function_decl 0x7fa610b72b00 explorer_tester_create_file>) [0 explorer_tester_create_file S1 A8])
        (const_int 0 [0])) "main.c":192:3 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 2 cx)
                (expr_list:REG_DEAD (reg:SI 1 dx)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 171 170 172 2 (set (reg:DI 183)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -56 [0xffffffffffffffc8])) [3 buf_a.20+0 S8 A64])) "main.c":193:3 80 {*movdi_internal}
     (nil))
(insn 172 171 173 2 (set (reg:SI 184)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -76 [0xffffffffffffffb4])) [1 len_a+0 S4 A32])) "main.c":193:3 81 {*movsi_internal}
     (nil))
(insn 173 172 174 2 (set (reg:DI 185)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [14 tester+0 S8 A128])) "main.c":193:3 80 {*movdi_internal}
     (nil))
(insn 174 173 175 2 (set (reg:SI 37 r9)
        (const_int 1 [0x1])) "main.c":193:3 81 {*movsi_internal}
     (nil))
(insn 175 174 176 2 (set (reg:DI 36 r8)
        (reg:DI 183)) "main.c":193:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 183)
        (nil)))
(insn 176 175 177 2 (set (reg:SI 2 cx)
        (reg:SI 184)) "main.c":193:3 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 184)
        (nil)))
(insn 177 176 178 2 (set (reg:SI 1 dx)
        (const_int 176 [0xb0])) "main.c":193:3 81 {*movsi_internal}
     (nil))
(insn 178 177 179 2 (set (reg:DI 186)
        (symbol_ref/f:DI ("*.LC22") [flags 0x2]  <var_decl 0x7fa6108e21b0 *.LC22>)) "main.c":193:3 80 {*movdi_internal}
     (nil))
(insn 179 178 180 2 (set (reg:DI 4 si)
        (reg:DI 186)) "main.c":193:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 186)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC22") [flags 0x2]  <var_decl 0x7fa6108e21b0 *.LC22>)
            (nil))))
(insn 180 179 181 2 (set (reg:DI 5 di)
        (reg:DI 185)) "main.c":193:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 185)
        (nil)))
(call_insn 181 180 182 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_write") [flags 0x41]  <function_decl 0x7fa610b72a00 explorer_tester_write>) [0 explorer_tester_write S1 A8])
        (const_int 0 [0])) "main.c":193:3 898 {*call}
     (expr_list:REG_DEAD (reg:SI 37 r9)
        (expr_list:REG_DEAD (reg:DI 36 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:DI 4 si)
                    (expr_list:REG_DEAD (reg:SI 2 cx)
                        (expr_list:REG_DEAD (reg:SI 1 dx)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:DI (use (reg:DI 36 r8))
                        (expr_list:SI (use (reg:SI 37 r9))
                            (nil))))))))
(insn 182 181 183 2 (set (reg:DI 187)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -40 [0xffffffffffffffd8])) [3 buf_b.21+0 S8 A64])) "main.c":194:3 80 {*movdi_internal}
     (nil))
(insn 183 182 184 2 (set (reg:SI 188)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -72 [0xffffffffffffffb8])) [1 len_b+0 S4 A64])) "main.c":194:3 81 {*movsi_internal}
     (nil))
(insn 184 183 185 2 (set (reg:DI 189)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [14 tester+0 S8 A128])) "main.c":194:3 80 {*movdi_internal}
     (nil))
(insn 185 184 186 2 (set (reg:SI 37 r9)
        (const_int 1 [0x1])) "main.c":194:3 81 {*movsi_internal}
     (nil))
(insn 186 185 187 2 (set (reg:DI 36 r8)
        (reg:DI 187)) "main.c":194:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 187)
        (nil)))
(insn 187 186 188 2 (set (reg:SI 2 cx)
        (reg:SI 188)) "main.c":194:3 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 188)
        (nil)))
(insn 188 187 189 2 (set (reg:SI 1 dx)
        (const_int 352 [0x160])) "main.c":194:3 81 {*movsi_internal}
     (nil))
(insn 189 188 190 2 (set (reg:DI 190)
        (symbol_ref/f:DI ("*.LC23") [flags 0x2]  <var_decl 0x7fa6108e2240 *.LC23>)) "main.c":194:3 80 {*movdi_internal}
     (nil))
(insn 190 189 191 2 (set (reg:DI 4 si)
        (reg:DI 190)) "main.c":194:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 190)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC23") [flags 0x2]  <var_decl 0x7fa6108e2240 *.LC23>)
            (nil))))
(insn 191 190 192 2 (set (reg:DI 5 di)
        (reg:DI 189)) "main.c":194:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 189)
        (nil)))
(call_insn 192 191 193 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_write") [flags 0x41]  <function_decl 0x7fa610b72a00 explorer_tester_write>) [0 explorer_tester_write S1 A8])
        (const_int 0 [0])) "main.c":194:3 898 {*call}
     (expr_list:REG_DEAD (reg:SI 37 r9)
        (expr_list:REG_DEAD (reg:DI 36 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:DI 4 si)
                    (expr_list:REG_DEAD (reg:SI 2 cx)
                        (expr_list:REG_DEAD (reg:SI 1 dx)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:DI (use (reg:DI 36 r8))
                        (expr_list:SI (use (reg:SI 37 r9))
                            (nil))))))))
(insn 193 192 194 2 (set (reg:DI 191)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [3 buf_c.22+0 S8 A64])) "main.c":195:3 80 {*movdi_internal}
     (nil))
(insn 194 193 195 2 (set (reg:SI 192)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -68 [0xffffffffffffffbc])) [1 len_c+0 S4 A32])) "main.c":195:3 81 {*movsi_internal}
     (nil))
(insn 195 194 196 2 (set (reg:DI 193)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [14 tester+0 S8 A128])) "main.c":195:3 80 {*movdi_internal}
     (nil))
(insn 196 195 197 2 (set (reg:SI 37 r9)
        (const_int 1 [0x1])) "main.c":195:3 81 {*movsi_internal}
     (nil))
(insn 197 196 198 2 (set (reg:DI 36 r8)
        (reg:DI 191)) "main.c":195:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 191)
        (nil)))
(insn 198 197 199 2 (set (reg:SI 2 cx)
        (reg:SI 192)) "main.c":195:3 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 192)
        (nil)))
(insn 199 198 200 2 (set (reg:SI 1 dx)
        (const_int 528 [0x210])) "main.c":195:3 81 {*movsi_internal}
     (nil))
(insn 200 199 201 2 (set (reg:DI 194)
        (symbol_ref/f:DI ("*.LC24") [flags 0x2]  <var_decl 0x7fa6108e22d0 *.LC24>)) "main.c":195:3 80 {*movdi_internal}
     (nil))
(insn 201 200 202 2 (set (reg:DI 4 si)
        (reg:DI 194)) "main.c":195:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 194)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC24") [flags 0x2]  <var_decl 0x7fa6108e22d0 *.LC24>)
            (nil))))
(insn 202 201 203 2 (set (reg:DI 5 di)
        (reg:DI 193)) "main.c":195:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 193)
        (nil)))
(call_insn 203 202 204 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_write") [flags 0x41]  <function_decl 0x7fa610b72a00 explorer_tester_write>) [0 explorer_tester_write S1 A8])
        (const_int 0 [0])) "main.c":195:3 898 {*call}
     (expr_list:REG_DEAD (reg:SI 37 r9)
        (expr_list:REG_DEAD (reg:DI 36 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:DI 4 si)
                    (expr_list:REG_DEAD (reg:SI 2 cx)
                        (expr_list:REG_DEAD (reg:SI 1 dx)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:DI (use (reg:DI 36 r8))
                        (expr_list:SI (use (reg:SI 37 r9))
                            (nil))))))))
(insn 204 203 205 2 (set (reg:DI 195)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [14 tester+0 S8 A128])) "main.c":196:3 80 {*movdi_internal}
     (nil))
(insn 205 204 206 2 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "main.c":196:3 81 {*movsi_internal}
     (nil))
(insn 206 205 207 2 (set (reg:DI 196)
        (symbol_ref/f:DI ("*.LC22") [flags 0x2]  <var_decl 0x7fa6108e21b0 *.LC22>)) "main.c":196:3 80 {*movdi_internal}
     (nil))
(insn 207 206 208 2 (set (reg:DI 4 si)
        (reg:DI 196)) "main.c":196:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 196)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC22") [flags 0x2]  <var_decl 0x7fa6108e21b0 *.LC22>)
            (nil))))
(insn 208 207 209 2 (set (reg:DI 5 di)
        (reg:DI 195)) "main.c":196:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 195)
        (nil)))
(call_insn 209 208 210 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_open") [flags 0x41]  <function_decl 0x7fa610b72800 explorer_tester_open>) [0 explorer_tester_open S1 A8])
        (const_int 0 [0])) "main.c":196:3 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 210 209 211 2 (set (reg:DI 197)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [14 tester+0 S8 A128])) "main.c":197:3 80 {*movdi_internal}
     (nil))
(insn 211 210 212 2 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "main.c":197:3 81 {*movsi_internal}
     (nil))
(insn 212 211 213 2 (set (reg:DI 198)
        (symbol_ref/f:DI ("*.LC23") [flags 0x2]  <var_decl 0x7fa6108e2240 *.LC23>)) "main.c":197:3 80 {*movdi_internal}
     (nil))
(insn 213 212 214 2 (set (reg:DI 4 si)
        (reg:DI 198)) "main.c":197:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 198)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC23") [flags 0x2]  <var_decl 0x7fa6108e2240 *.LC23>)
            (nil))))
(insn 214 213 215 2 (set (reg:DI 5 di)
        (reg:DI 197)) "main.c":197:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 197)
        (nil)))
(call_insn 215 214 216 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_open") [flags 0x41]  <function_decl 0x7fa610b72800 explorer_tester_open>) [0 explorer_tester_open S1 A8])
        (const_int 0 [0])) "main.c":197:3 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 216 215 217 2 (set (reg:DI 199)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [14 tester+0 S8 A128])) "main.c":198:3 80 {*movdi_internal}
     (nil))
(insn 217 216 218 2 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "main.c":198:3 81 {*movsi_internal}
     (nil))
(insn 218 217 219 2 (set (reg:DI 200)
        (symbol_ref/f:DI ("*.LC24") [flags 0x2]  <var_decl 0x7fa6108e22d0 *.LC24>)) "main.c":198:3 80 {*movdi_internal}
     (nil))
(insn 219 218 220 2 (set (reg:DI 4 si)
        (reg:DI 200)) "main.c":198:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 200)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC24") [flags 0x2]  <var_decl 0x7fa6108e22d0 *.LC24>)
            (nil))))
(insn 220 219 221 2 (set (reg:DI 5 di)
        (reg:DI 199)) "main.c":198:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 199)
        (nil)))
(call_insn 221 220 222 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_open") [flags 0x41]  <function_decl 0x7fa610b72800 explorer_tester_open>) [0 explorer_tester_open S1 A8])
        (const_int 0 [0])) "main.c":198:3 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 222 221 223 2 (set (reg/f:DI 201)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [14 tester+0 S8 A128])) "main.c":200:3 80 {*movdi_internal}
     (nil))
(insn 223 222 224 2 (parallel [
            (set (reg/f:DI 115 [ _34 ])
                (plus:DI (reg/f:DI 201)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":200:3 230 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 201)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                            (const_int -16 [0xfffffffffffffff0])) [14 tester+0 S8 A128])
                    (const_int 32 [0x20]))
                (nil)))))
(insn 224 223 225 2 (set (reg:DI 5 di)
        (reg/f:DI 115 [ _34 ])) "main.c":200:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 115 [ _34 ])
        (nil)))
(call_insn 225 224 226 2 (call (mem:QI (symbol_ref:DI ("checksum_test") [flags 0x3]  <function_decl 0x7fa610835300 checksum_test>) [0 checksum_test S1 A8])
        (const_int 0 [0])) "main.c":200:3 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 226 225 227 2 (set (reg:DI 202)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [14 tester+0 S8 A128])) "main.c":202:3 80 {*movdi_internal}
     (nil))
(insn 227 226 228 2 (set (reg:DI 5 di)
        (reg:DI 202)) "main.c":202:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 202)
        (nil)))
(call_insn 228 227 229 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_destory") [flags 0x41]  <function_decl 0x7fa610b72400 explorer_tester_destory>) [0 explorer_tester_destory S1 A8])
        (const_int 0 [0])) "main.c":202:3 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 229 228 230 2 (clobber (mem:BLK (scratch) [0  A8])) -1
     (nil))
(insn 230 229 231 2 (clobber (mem:BLK (reg/f:DI 7 sp) [0  A8])) -1
     (nil))
(insn 231 230 241 2 (set (reg/f:DI 7 sp)
        (reg/f:DI 116 [ saved_stack.23_37 ])) 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 116 [ saved_stack.23_37 ])
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 241 231 233 2 (const_int 0 [0]) "main.c":203:1 928 {nop}
     (nil))
(insn 233 241 234 2 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 19 frame)
                                (const_int -8 [0xfffffffffffffff8])) [9 D.3563+0 S8 A64])
                        (mem/v/f:DI (const_int 40 [0x28]) [0 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_TEST))
            (clobber (reg:DI 210))
        ]) "main.c":203:1 1270 {stack_protect_test_1_di}
     (expr_list:REG_UNUSED (reg:DI 210)
        (nil)))
(jump_insn 234 233 239 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 237)
            (pc))) "main.c":203:1 891 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 237)
;;  succ:       4
;;              3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
(note 239 234 235 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(call_insn 235 239 236 3 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fa61088e500 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) "main.c":203:1 898 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 19 [frame]

(barrier 236 235 237)
;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 1, flags: (RTL)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(code_label 237 236 240 4 36 (nil) [1 uses])
(note 240 237 0 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]


;; Function test_explorer_dir1 (test_explorer_dir1, funcdef_no=24, decl_uid=3415, cgraph_uid=25, symbol_order=26)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 4 n_edges 3 count 4 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 7.
verify found no changes in insn with uid = 15.
verify found no changes in insn with uid = 21.
verify found no changes in insn with uid = 27.
verify found no changes in insn with uid = 33.
verify found no changes in insn with uid = 38.
verify found no changes in insn with uid = 44.
verify found no changes in insn with uid = 50.
verify found no changes in insn with uid = 56.
verify found no changes in insn with uid = 59.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r99: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r99,l0) best DIREG, allocno GENERAL_REGS
    r98: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r98,l0) best SIREG, allocno GENERAL_REGS
    r97: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r97,l0) best DIREG, allocno GENERAL_REGS
    r96: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r96,l0) best SIREG, allocno GENERAL_REGS
    r95: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r95,l0) best DIREG, allocno GENERAL_REGS
    r94: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r94,l0) best SIREG, allocno GENERAL_REGS
    r93: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r93,l0) best DIREG, allocno GENERAL_REGS
    r92: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a7 (r92,l0) best DIREG, allocno GENERAL_REGS
    r91: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a9 (r91,l0) best SIREG, allocno GENERAL_REGS
    r90: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a8 (r90,l0) best DIREG, allocno GENERAL_REGS
    r89: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a11 (r89,l0) best SIREG, allocno GENERAL_REGS
    r88: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a10 (r88,l0) best DIREG, allocno GENERAL_REGS
    r87: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a13 (r87,l0) best SIREG, allocno GENERAL_REGS
    r86: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a12 (r86,l0) best DIREG, allocno GENERAL_REGS
    r85: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a15 (r85,l0) best SIREG, allocno GENERAL_REGS
    r84: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a14 (r84,l0) best DIREG, allocno GENERAL_REGS
    r83: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a16 (r83,l0) best AREG, allocno GENERAL_REGS
    r82: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a17 (r82,l0) best DIREG, allocno GENERAL_REGS

  a0(r99,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a1(r97,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a2(r98,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a3(r95,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a4(r96,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a5(r93,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a6(r94,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a7(r92,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a8(r90,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a9(r91,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a10(r88,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a11(r89,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a12(r86,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a13(r87,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a14(r84,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a15(r85,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a16(r83,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:6000 NO_REX_SSE_REGS:6000 SSE_REGS:6000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a17(r82,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000

   Insn 63(l0): point = 0
   Insn 59(l0): point = 3
   Insn 58(l0): point = 5
   Insn 57(l0): point = 7
   Insn 56(l0): point = 9
   Insn 55(l0): point = 11
   Insn 54(l0): point = 13
   Insn 53(l0): point = 15
   Insn 52(l0): point = 17
   Insn 51(l0): point = 19
   Insn 50(l0): point = 21
   Insn 49(l0): point = 23
   Insn 48(l0): point = 25
   Insn 47(l0): point = 27
   Insn 46(l0): point = 29
   Insn 45(l0): point = 31
   Insn 44(l0): point = 33
   Insn 43(l0): point = 35
   Insn 42(l0): point = 37
   Insn 41(l0): point = 39
   Insn 40(l0): point = 41
   Insn 39(l0): point = 43
   Insn 38(l0): point = 45
   Insn 37(l0): point = 47
   Insn 36(l0): point = 49
   Insn 35(l0): point = 51
   Insn 34(l0): point = 53
   Insn 33(l0): point = 55
   Insn 32(l0): point = 57
   Insn 31(l0): point = 59
   Insn 30(l0): point = 61
   Insn 29(l0): point = 63
   Insn 28(l0): point = 65
   Insn 27(l0): point = 67
   Insn 26(l0): point = 69
   Insn 25(l0): point = 71
   Insn 24(l0): point = 73
   Insn 23(l0): point = 75
   Insn 22(l0): point = 77
   Insn 21(l0): point = 79
   Insn 20(l0): point = 81
   Insn 19(l0): point = 83
   Insn 18(l0): point = 85
   Insn 17(l0): point = 87
   Insn 16(l0): point = 89
   Insn 15(l0): point = 91
   Insn 14(l0): point = 93
   Insn 13(l0): point = 95
   Insn 12(l0): point = 97
   Insn 11(l0): point = 99
   Insn 10(l0): point = 101
   Insn 9(l0): point = 103
   Insn 8(l0): point = 105
   Insn 7(l0): point = 107
   Insn 6(l0): point = 109
   Insn 5(l0): point = 111
 a0(r99): [6..7]
 a1(r97): [12..19]
 a2(r98): [14..15]
 a3(r95): [24..31]
 a4(r96): [26..27]
 a5(r93): [36..43]
 a6(r94): [38..39]
 a7(r92): [48..53]
 a8(r90): [58..65]
 a9(r91): [60..61]
 a10(r88): [70..77]
 a11(r89): [72..73]
 a12(r86): [82..89]
 a13(r87): [84..85]
 a14(r84): [94..101]
 a15(r85): [96..97]
 a16(r83): [104..105]
 a17(r82): [110..111]
Compressing live ranges: from 114 to 22 - 19%
Ranges after the compression:
 a0(r99): [0..1]
 a1(r97): [2..3]
 a2(r98): [2..3]
 a3(r95): [4..5]
 a4(r96): [4..5]
 a5(r93): [6..7]
 a6(r94): [6..7]
 a7(r92): [8..9]
 a8(r90): [10..11]
 a9(r91): [10..11]
 a10(r88): [12..13]
 a11(r89): [12..13]
 a12(r86): [14..15]
 a13(r87): [14..15]
 a14(r84): [16..17]
 a15(r85): [16..17]
 a16(r83): [18..19]
 a17(r82): [20..21]
  pref0:a0(r99)<-hr5@1500
  pref1:a2(r98)<-hr4@1500
  pref2:a1(r97)<-hr5@1500
  pref3:a4(r96)<-hr4@1500
  pref4:a3(r95)<-hr5@1500
  pref5:a6(r94)<-hr4@1500
  pref6:a5(r93)<-hr5@1500
  pref7:a7(r92)<-hr5@1500
  pref8:a9(r91)<-hr4@1500
  pref9:a8(r90)<-hr5@1500
  pref10:a11(r89)<-hr4@1500
  pref11:a10(r88)<-hr5@1500
  pref12:a13(r87)<-hr4@1500
  pref13:a12(r86)<-hr5@1500
  pref14:a15(r85)<-hr4@1500
  pref15:a14(r84)<-hr5@1500
  pref16:a16(r83)<-hr0@1500
  pref17:a17(r82)<-hr5@1500
  regions=1, blocks=4, points=22
    allocnos=18 (big 0), copies=0, conflicts=0, ranges=18
Disposition:
   17:r82  l0     0   16:r83  l0     0   14:r84  l0     0   15:r85  l0     2
   12:r86  l0     0   13:r87  l0     2   10:r88  l0     0   11:r89  l0     2
    8:r90  l0     0    9:r91  l0     2    7:r92  l0     0    5:r93  l0     0
    6:r94  l0     2    3:r95  l0     0    4:r96  l0     2    1:r97  l0     0
    2:r98  l0     2    0:r99  l0     0
+++Costs: overall -18000, reg -18000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


test_explorer_dir1

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;;  ref usage 	r0={11d,1u} r1={19d,8u} r2={11d} r4={19d,8u} r5={21d,10u} r6={1d,3u} r7={1d,13u} r8={10d} r9={10d} r10={10d} r11={10d} r12={10d} r13={10d} r14={10d} r15={10d} r16={1d,2u} r17={10d} r18={10d} r19={1d,13u} r20={11d} r21={11d} r22={11d} r23={11d} r24={11d} r25={11d} r26={11d} r27={11d} r28={10d} r29={10d} r30={10d} r31={10d} r32={10d} r33={10d} r34={10d} r35={10d} r36={11d} r37={11d} r38={10d} r39={10d} r44={10d} r45={10d} r46={10d} r47={10d} r48={10d} r49={10d} r50={10d} r51={10d} r52={10d} r53={10d} r54={10d} r55={10d} r56={10d} r57={10d} r58={10d} r59={10d} r60={10d} r61={10d} r62={10d} r63={10d} r64={10d} r65={10d} r66={10d} r67={10d} r68={10d} r69={10d} r70={10d} r71={10d} r72={10d} r73={10d} r74={10d} r75={10d} r82={1d,1u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} 
;;    total ref usage 809{733d,76u,0e} in 56{46 regular + 10 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:DI 82)
        (symbol_ref/f:DI ("*.LC25") [flags 0x2]  <var_decl 0x7fa6108e2750 *.LC25>)) "main.c":205:36 80 {*movdi_internal}
     (nil))
(insn 6 5 7 2 (set (reg:DI 5 di)
        (reg:DI 82)) "main.c":205:36 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 82)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC25") [flags 0x2]  <var_decl 0x7fa6108e2750 *.LC25>)
            (nil))))
(call_insn 7 6 8 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("explorer_tester_create") [flags 0x41]  <function_decl 0x7fa610b72300 explorer_tester_create>) [0 explorer_tester_create S1 A8])
            (const_int 0 [0]))) "main.c":205:36 909 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 8 7 9 2 (set (reg:DI 83)
        (reg:DI 0 ax)) "main.c":205:36 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 9 8 10 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [14 tester+0 S8 A64])
        (reg:DI 83)) "main.c":205:36 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 83)
        (nil)))
(insn 10 9 11 2 (set (reg:DI 84)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [14 tester+0 S8 A64])) "main.c":207:3 80 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "main.c":207:3 81 {*movsi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:DI 85)
        (symbol_ref/f:DI ("*.LC26") [flags 0x2]  <var_decl 0x7fa6108e27e0 *.LC26>)) "main.c":207:3 80 {*movdi_internal}
     (nil))
(insn 13 12 14 2 (set (reg:DI 4 si)
        (reg:DI 85)) "main.c":207:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 85)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC26") [flags 0x2]  <var_decl 0x7fa6108e27e0 *.LC26>)
            (nil))))
(insn 14 13 15 2 (set (reg:DI 5 di)
        (reg:DI 84)) "main.c":207:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 84)
        (nil)))
(call_insn 15 14 16 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_mkdir") [flags 0x41]  <function_decl 0x7fa610b72c00 explorer_tester_mkdir>) [0 explorer_tester_mkdir S1 A8])
        (const_int 0 [0])) "main.c":207:3 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 16 15 17 2 (set (reg:DI 86)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [14 tester+0 S8 A64])) "main.c":208:3 80 {*movdi_internal}
     (nil))
(insn 17 16 18 2 (set (reg:SI 1 dx)
        (const_int 0 [0])) "main.c":208:3 81 {*movsi_internal}
     (nil))
(insn 18 17 19 2 (set (reg:DI 87)
        (symbol_ref/f:DI ("*.LC26") [flags 0x2]  <var_decl 0x7fa6108e27e0 *.LC26>)) "main.c":208:3 80 {*movdi_internal}
     (nil))
(insn 19 18 20 2 (set (reg:DI 4 si)
        (reg:DI 87)) "main.c":208:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 87)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC26") [flags 0x2]  <var_decl 0x7fa6108e27e0 *.LC26>)
            (nil))))
(insn 20 19 21 2 (set (reg:DI 5 di)
        (reg:DI 86)) "main.c":208:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 86)
        (nil)))
(call_insn 21 20 22 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_mkdir") [flags 0x41]  <function_decl 0x7fa610b72c00 explorer_tester_mkdir>) [0 explorer_tester_mkdir S1 A8])
        (const_int 0 [0])) "main.c":208:3 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 22 21 23 2 (set (reg:DI 88)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [14 tester+0 S8 A64])) "main.c":209:3 80 {*movdi_internal}
     (nil))
(insn 23 22 24 2 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "main.c":209:3 81 {*movsi_internal}
     (nil))
(insn 24 23 25 2 (set (reg:DI 89)
        (symbol_ref/f:DI ("*.LC27") [flags 0x2]  <var_decl 0x7fa6108e2870 *.LC27>)) "main.c":209:3 80 {*movdi_internal}
     (nil))
(insn 25 24 26 2 (set (reg:DI 4 si)
        (reg:DI 89)) "main.c":209:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 89)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC27") [flags 0x2]  <var_decl 0x7fa6108e2870 *.LC27>)
            (nil))))
(insn 26 25 27 2 (set (reg:DI 5 di)
        (reg:DI 88)) "main.c":209:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88)
        (nil)))
(call_insn 27 26 28 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_mkdir") [flags 0x41]  <function_decl 0x7fa610b72c00 explorer_tester_mkdir>) [0 explorer_tester_mkdir S1 A8])
        (const_int 0 [0])) "main.c":209:3 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 28 27 29 2 (set (reg:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [14 tester+0 S8 A64])) "main.c":210:3 80 {*movdi_internal}
     (nil))
(insn 29 28 30 2 (set (reg:SI 1 dx)
        (const_int 0 [0])) "main.c":210:3 81 {*movsi_internal}
     (nil))
(insn 30 29 31 2 (set (reg:DI 91)
        (symbol_ref/f:DI ("*.LC27") [flags 0x2]  <var_decl 0x7fa6108e2870 *.LC27>)) "main.c":210:3 80 {*movdi_internal}
     (nil))
(insn 31 30 32 2 (set (reg:DI 4 si)
        (reg:DI 91)) "main.c":210:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 91)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC27") [flags 0x2]  <var_decl 0x7fa6108e2870 *.LC27>)
            (nil))))
(insn 32 31 33 2 (set (reg:DI 5 di)
        (reg:DI 90)) "main.c":210:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 90)
        (nil)))
(call_insn 33 32 34 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_mkdir") [flags 0x41]  <function_decl 0x7fa610b72c00 explorer_tester_mkdir>) [0 explorer_tester_mkdir S1 A8])
        (const_int 0 [0])) "main.c":210:3 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 34 33 35 2 (set (reg:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [14 tester+0 S8 A64])) "main.c":212:3 80 {*movdi_internal}
     (nil))
(insn 35 34 36 2 (set (reg:SI 1 dx)
        (const_int 0 [0])) "main.c":212:3 81 {*movsi_internal}
     (nil))
(insn 36 35 37 2 (set (reg:DI 4 si)
        (const_int 0 [0])) "main.c":212:3 80 {*movdi_internal}
     (nil))
(insn 37 36 38 2 (set (reg:DI 5 di)
        (reg:DI 92)) "main.c":212:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 92)
        (nil)))
(call_insn 38 37 39 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_cdpar") [flags 0x41]  <function_decl 0x7fa610b72500 explorer_tester_cdpar>) [0 explorer_tester_cdpar S1 A8])
        (const_int 0 [0])) "main.c":212:3 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 39 38 40 2 (set (reg:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [14 tester+0 S8 A64])) "main.c":213:3 80 {*movdi_internal}
     (nil))
(insn 40 39 41 2 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "main.c":213:3 81 {*movsi_internal}
     (nil))
(insn 41 40 42 2 (set (reg:DI 94)
        (symbol_ref/f:DI ("*.LC26") [flags 0x2]  <var_decl 0x7fa6108e27e0 *.LC26>)) "main.c":213:3 80 {*movdi_internal}
     (nil))
(insn 42 41 43 2 (set (reg:DI 4 si)
        (reg:DI 94)) "main.c":213:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 94)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC26") [flags 0x2]  <var_decl 0x7fa6108e27e0 *.LC26>)
            (nil))))
(insn 43 42 44 2 (set (reg:DI 5 di)
        (reg:DI 93)) "main.c":213:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 93)
        (nil)))
(call_insn 44 43 45 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_chdir") [flags 0x41]  <function_decl 0x7fa610b72600 explorer_tester_chdir>) [0 explorer_tester_chdir S1 A8])
        (const_int 0 [0])) "main.c":213:3 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 45 44 46 2 (set (reg:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [14 tester+0 S8 A64])) "main.c":214:3 80 {*movdi_internal}
     (nil))
(insn 46 45 47 2 (set (reg:SI 1 dx)
        (const_int 0 [0])) "main.c":214:3 81 {*movsi_internal}
     (nil))
(insn 47 46 48 2 (set (reg:DI 96)
        (symbol_ref/f:DI ("*.LC28") [flags 0x2]  <var_decl 0x7fa6108e2900 *.LC28>)) "main.c":214:3 80 {*movdi_internal}
     (nil))
(insn 48 47 49 2 (set (reg:DI 4 si)
        (reg:DI 96)) "main.c":214:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 96)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC28") [flags 0x2]  <var_decl 0x7fa6108e2900 *.LC28>)
            (nil))))
(insn 49 48 50 2 (set (reg:DI 5 di)
        (reg:DI 95)) "main.c":214:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 95)
        (nil)))
(call_insn 50 49 51 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_chdir") [flags 0x41]  <function_decl 0x7fa610b72600 explorer_tester_chdir>) [0 explorer_tester_chdir S1 A8])
        (const_int 0 [0])) "main.c":214:3 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 51 50 52 2 (set (reg:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [14 tester+0 S8 A64])) "main.c":215:3 80 {*movdi_internal}
     (nil))
(insn 52 51 53 2 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "main.c":215:3 81 {*movsi_internal}
     (nil))
(insn 53 52 54 2 (set (reg:DI 98)
        (symbol_ref/f:DI ("*.LC29") [flags 0x2]  <var_decl 0x7fa6108e2990 *.LC29>)) "main.c":215:3 80 {*movdi_internal}
     (nil))
(insn 54 53 55 2 (set (reg:DI 4 si)
        (reg:DI 98)) "main.c":215:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 98)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC29") [flags 0x2]  <var_decl 0x7fa6108e2990 *.LC29>)
            (nil))))
(insn 55 54 56 2 (set (reg:DI 5 di)
        (reg:DI 97)) "main.c":215:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 97)
        (nil)))
(call_insn 56 55 57 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_cdpar") [flags 0x41]  <function_decl 0x7fa610b72500 explorer_tester_cdpar>) [0 explorer_tester_cdpar S1 A8])
        (const_int 0 [0])) "main.c":215:3 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 57 56 58 2 (set (reg:DI 99)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [14 tester+0 S8 A64])) "main.c":217:3 80 {*movdi_internal}
     (nil))
(insn 58 57 59 2 (set (reg:DI 5 di)
        (reg:DI 99)) "main.c":217:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 99)
        (nil)))
(call_insn 59 58 62 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_destory") [flags 0x41]  <function_decl 0x7fa610b72400 explorer_tester_destory>) [0 explorer_tester_destory S1 A8])
        (const_int 0 [0])) "main.c":217:3 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       3 [always]  (FALLTHRU) main.c:218:1
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 1, flags: (RTL)
;;  pred:       2 [always]  (FALLTHRU) main.c:218:1
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(note 62 59 63 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 63 62 0 3 (const_int 0 [0]) "main.c":218:1 928 {nop}
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]


;; Function test_explorer_dir2 (test_explorer_dir2, funcdef_no=25, decl_uid=3418, cgraph_uid=26, symbol_order=27)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 4 n_edges 3 count 4 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 7.
verify found no changes in insn with uid = 15.
verify found no changes in insn with uid = 21.
verify found no changes in insn with uid = 27.
verify found no changes in insn with uid = 33.
verify found no changes in insn with uid = 38.
verify found no changes in insn with uid = 44.
verify found no changes in insn with uid = 50.
verify found no changes in insn with uid = 56.
verify found no changes in insn with uid = 62.
verify found no changes in insn with uid = 68.
verify found no changes in insn with uid = 74.
verify found no changes in insn with uid = 77.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r105: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r105,l0) best DIREG, allocno GENERAL_REGS
    r104: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r104,l0) best SIREG, allocno GENERAL_REGS
    r103: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r103,l0) best DIREG, allocno GENERAL_REGS
    r102: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r102,l0) best SIREG, allocno GENERAL_REGS
    r101: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r101,l0) best DIREG, allocno GENERAL_REGS
    r100: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r100,l0) best SIREG, allocno GENERAL_REGS
    r99: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r99,l0) best DIREG, allocno GENERAL_REGS
    r98: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a8 (r98,l0) best SIREG, allocno GENERAL_REGS
    r97: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a7 (r97,l0) best DIREG, allocno GENERAL_REGS
    r96: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a10 (r96,l0) best SIREG, allocno GENERAL_REGS
    r95: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a9 (r95,l0) best DIREG, allocno GENERAL_REGS
    r94: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a12 (r94,l0) best SIREG, allocno GENERAL_REGS
    r93: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a11 (r93,l0) best DIREG, allocno GENERAL_REGS
    r92: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a13 (r92,l0) best DIREG, allocno GENERAL_REGS
    r91: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a15 (r91,l0) best SIREG, allocno GENERAL_REGS
    r90: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a14 (r90,l0) best DIREG, allocno GENERAL_REGS
    r89: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a17 (r89,l0) best SIREG, allocno GENERAL_REGS
    r88: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a16 (r88,l0) best DIREG, allocno GENERAL_REGS
    r87: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a19 (r87,l0) best SIREG, allocno GENERAL_REGS
    r86: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a18 (r86,l0) best DIREG, allocno GENERAL_REGS
    r85: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a21 (r85,l0) best SIREG, allocno GENERAL_REGS
    r84: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a20 (r84,l0) best DIREG, allocno GENERAL_REGS
    r83: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a22 (r83,l0) best AREG, allocno GENERAL_REGS
    r82: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a23 (r82,l0) best DIREG, allocno GENERAL_REGS

  a0(r105,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a1(r103,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a2(r104,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a3(r101,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a4(r102,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a5(r99,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a6(r100,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a7(r97,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a8(r98,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a9(r95,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a10(r96,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a11(r93,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a12(r94,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a13(r92,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a14(r90,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a15(r91,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a16(r88,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a17(r89,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a18(r86,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a19(r87,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a20(r84,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a21(r85,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a22(r83,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:6000 NO_REX_SSE_REGS:6000 SSE_REGS:6000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a23(r82,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000

   Insn 81(l0): point = 0
   Insn 77(l0): point = 3
   Insn 76(l0): point = 5
   Insn 75(l0): point = 7
   Insn 74(l0): point = 9
   Insn 73(l0): point = 11
   Insn 72(l0): point = 13
   Insn 71(l0): point = 15
   Insn 70(l0): point = 17
   Insn 69(l0): point = 19
   Insn 68(l0): point = 21
   Insn 67(l0): point = 23
   Insn 66(l0): point = 25
   Insn 65(l0): point = 27
   Insn 64(l0): point = 29
   Insn 63(l0): point = 31
   Insn 62(l0): point = 33
   Insn 61(l0): point = 35
   Insn 60(l0): point = 37
   Insn 59(l0): point = 39
   Insn 58(l0): point = 41
   Insn 57(l0): point = 43
   Insn 56(l0): point = 45
   Insn 55(l0): point = 47
   Insn 54(l0): point = 49
   Insn 53(l0): point = 51
   Insn 52(l0): point = 53
   Insn 51(l0): point = 55
   Insn 50(l0): point = 57
   Insn 49(l0): point = 59
   Insn 48(l0): point = 61
   Insn 47(l0): point = 63
   Insn 46(l0): point = 65
   Insn 45(l0): point = 67
   Insn 44(l0): point = 69
   Insn 43(l0): point = 71
   Insn 42(l0): point = 73
   Insn 41(l0): point = 75
   Insn 40(l0): point = 77
   Insn 39(l0): point = 79
   Insn 38(l0): point = 81
   Insn 37(l0): point = 83
   Insn 36(l0): point = 85
   Insn 35(l0): point = 87
   Insn 34(l0): point = 89
   Insn 33(l0): point = 91
   Insn 32(l0): point = 93
   Insn 31(l0): point = 95
   Insn 30(l0): point = 97
   Insn 29(l0): point = 99
   Insn 28(l0): point = 101
   Insn 27(l0): point = 103
   Insn 26(l0): point = 105
   Insn 25(l0): point = 107
   Insn 24(l0): point = 109
   Insn 23(l0): point = 111
   Insn 22(l0): point = 113
   Insn 21(l0): point = 115
   Insn 20(l0): point = 117
   Insn 19(l0): point = 119
   Insn 18(l0): point = 121
   Insn 17(l0): point = 123
   Insn 16(l0): point = 125
   Insn 15(l0): point = 127
   Insn 14(l0): point = 129
   Insn 13(l0): point = 131
   Insn 12(l0): point = 133
   Insn 11(l0): point = 135
   Insn 10(l0): point = 137
   Insn 9(l0): point = 139
   Insn 8(l0): point = 141
   Insn 7(l0): point = 143
   Insn 6(l0): point = 145
   Insn 5(l0): point = 147
 a0(r105): [6..7]
 a1(r103): [12..19]
 a2(r104): [14..15]
 a3(r101): [24..31]
 a4(r102): [26..27]
 a5(r99): [36..43]
 a6(r100): [38..39]
 a7(r97): [48..55]
 a8(r98): [50..51]
 a9(r95): [60..67]
 a10(r96): [62..63]
 a11(r93): [72..79]
 a12(r94): [74..75]
 a13(r92): [84..89]
 a14(r90): [94..101]
 a15(r91): [96..97]
 a16(r88): [106..113]
 a17(r89): [108..109]
 a18(r86): [118..125]
 a19(r87): [120..121]
 a20(r84): [130..137]
 a21(r85): [132..133]
 a22(r83): [140..141]
 a23(r82): [146..147]
Compressing live ranges: from 150 to 28 - 18%
Ranges after the compression:
 a0(r105): [0..1]
 a1(r103): [2..3]
 a2(r104): [2..3]
 a3(r101): [4..5]
 a4(r102): [4..5]
 a5(r99): [6..7]
 a6(r100): [6..7]
 a7(r97): [8..9]
 a8(r98): [8..9]
 a9(r95): [10..11]
 a10(r96): [10..11]
 a11(r93): [12..13]
 a12(r94): [12..13]
 a13(r92): [14..15]
 a14(r90): [16..17]
 a15(r91): [16..17]
 a16(r88): [18..19]
 a17(r89): [18..19]
 a18(r86): [20..21]
 a19(r87): [20..21]
 a20(r84): [22..23]
 a21(r85): [22..23]
 a22(r83): [24..25]
 a23(r82): [26..27]
  pref0:a0(r105)<-hr5@1500
  pref1:a2(r104)<-hr4@1500
  pref2:a1(r103)<-hr5@1500
  pref3:a4(r102)<-hr4@1500
  pref4:a3(r101)<-hr5@1500
  pref5:a6(r100)<-hr4@1500
  pref6:a5(r99)<-hr5@1500
  pref7:a8(r98)<-hr4@1500
  pref8:a7(r97)<-hr5@1500
  pref9:a10(r96)<-hr4@1500
  pref10:a9(r95)<-hr5@1500
  pref11:a12(r94)<-hr4@1500
  pref12:a11(r93)<-hr5@1500
  pref13:a13(r92)<-hr5@1500
  pref14:a15(r91)<-hr4@1500
  pref15:a14(r90)<-hr5@1500
  pref16:a17(r89)<-hr4@1500
  pref17:a16(r88)<-hr5@1500
  pref18:a19(r87)<-hr4@1500
  pref19:a18(r86)<-hr5@1500
  pref20:a21(r85)<-hr4@1500
  pref21:a20(r84)<-hr5@1500
  pref22:a22(r83)<-hr0@1500
  pref23:a23(r82)<-hr5@1500
  regions=1, blocks=4, points=28
    allocnos=24 (big 0), copies=0, conflicts=0, ranges=24
Disposition:
   23:r82  l0     0   22:r83  l0     0   20:r84  l0     0   21:r85  l0     2
   18:r86  l0     0   19:r87  l0     2   16:r88  l0     0   17:r89  l0     2
   14:r90  l0     0   15:r91  l0     2   13:r92  l0     0   11:r93  l0     0
   12:r94  l0     2    9:r95  l0     0   10:r96  l0     2    7:r97  l0     0
    8:r98  l0     2    5:r99  l0     0    6:r100 l0     2    3:r101 l0     0
    4:r102 l0     2    1:r103 l0     0    2:r104 l0     2    0:r105 l0     0
+++Costs: overall -24000, reg -24000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


test_explorer_dir2

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;;  ref usage 	r0={14d,1u} r1={25d,11u} r2={14d} r4={25d,11u} r5={27d,13u} r6={1d,3u} r7={1d,16u} r8={13d} r9={13d} r10={13d} r11={13d} r12={13d} r13={13d} r14={13d} r15={13d} r16={1d,2u} r17={13d} r18={13d} r19={1d,16u} r20={14d} r21={14d} r22={14d} r23={14d} r24={14d} r25={14d} r26={14d} r27={14d} r28={13d} r29={13d} r30={13d} r31={13d} r32={13d} r33={13d} r34={13d} r35={13d} r36={14d} r37={14d} r38={13d} r39={13d} r44={13d} r45={13d} r46={13d} r47={13d} r48={13d} r49={13d} r50={13d} r51={13d} r52={13d} r53={13d} r54={13d} r55={13d} r56={13d} r57={13d} r58={13d} r59={13d} r60={13d} r61={13d} r62={13d} r63={13d} r64={13d} r65={13d} r66={13d} r67={13d} r68={13d} r69={13d} r70={13d} r71={13d} r72={13d} r73={13d} r74={13d} r75={13d} r82={1d,1u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} 
;;    total ref usage 1046{949d,97u,0e} in 74{61 regular + 13 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:DI 82)
        (symbol_ref/f:DI ("*.LC25") [flags 0x2]  <var_decl 0x7fa6108e2750 *.LC25>)) "main.c":221:36 80 {*movdi_internal}
     (nil))
(insn 6 5 7 2 (set (reg:DI 5 di)
        (reg:DI 82)) "main.c":221:36 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 82)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC25") [flags 0x2]  <var_decl 0x7fa6108e2750 *.LC25>)
            (nil))))
(call_insn 7 6 8 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("explorer_tester_create") [flags 0x41]  <function_decl 0x7fa610b72300 explorer_tester_create>) [0 explorer_tester_create S1 A8])
            (const_int 0 [0]))) "main.c":221:36 909 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 8 7 9 2 (set (reg:DI 83)
        (reg:DI 0 ax)) "main.c":221:36 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 9 8 10 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [14 tester+0 S8 A64])
        (reg:DI 83)) "main.c":221:36 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 83)
        (nil)))
(insn 10 9 11 2 (set (reg:DI 84)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [14 tester+0 S8 A64])) "main.c":223:3 80 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "main.c":223:3 81 {*movsi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:DI 85)
        (symbol_ref/f:DI ("*.LC26") [flags 0x2]  <var_decl 0x7fa6108e27e0 *.LC26>)) "main.c":223:3 80 {*movdi_internal}
     (nil))
(insn 13 12 14 2 (set (reg:DI 4 si)
        (reg:DI 85)) "main.c":223:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 85)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC26") [flags 0x2]  <var_decl 0x7fa6108e27e0 *.LC26>)
            (nil))))
(insn 14 13 15 2 (set (reg:DI 5 di)
        (reg:DI 84)) "main.c":223:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 84)
        (nil)))
(call_insn 15 14 16 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_mkdir") [flags 0x41]  <function_decl 0x7fa610b72c00 explorer_tester_mkdir>) [0 explorer_tester_mkdir S1 A8])
        (const_int 0 [0])) "main.c":223:3 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 16 15 17 2 (set (reg:DI 86)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [14 tester+0 S8 A64])) "main.c":224:3 80 {*movdi_internal}
     (nil))
(insn 17 16 18 2 (set (reg:SI 1 dx)
        (const_int 0 [0])) "main.c":224:3 81 {*movsi_internal}
     (nil))
(insn 18 17 19 2 (set (reg:DI 87)
        (symbol_ref/f:DI ("*.LC26") [flags 0x2]  <var_decl 0x7fa6108e27e0 *.LC26>)) "main.c":224:3 80 {*movdi_internal}
     (nil))
(insn 19 18 20 2 (set (reg:DI 4 si)
        (reg:DI 87)) "main.c":224:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 87)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC26") [flags 0x2]  <var_decl 0x7fa6108e27e0 *.LC26>)
            (nil))))
(insn 20 19 21 2 (set (reg:DI 5 di)
        (reg:DI 86)) "main.c":224:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 86)
        (nil)))
(call_insn 21 20 22 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_mkdir") [flags 0x41]  <function_decl 0x7fa610b72c00 explorer_tester_mkdir>) [0 explorer_tester_mkdir S1 A8])
        (const_int 0 [0])) "main.c":224:3 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 22 21 23 2 (set (reg:DI 88)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [14 tester+0 S8 A64])) "main.c":225:3 80 {*movdi_internal}
     (nil))
(insn 23 22 24 2 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "main.c":225:3 81 {*movsi_internal}
     (nil))
(insn 24 23 25 2 (set (reg:DI 89)
        (symbol_ref/f:DI ("*.LC27") [flags 0x2]  <var_decl 0x7fa6108e2870 *.LC27>)) "main.c":225:3 80 {*movdi_internal}
     (nil))
(insn 25 24 26 2 (set (reg:DI 4 si)
        (reg:DI 89)) "main.c":225:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 89)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC27") [flags 0x2]  <var_decl 0x7fa6108e2870 *.LC27>)
            (nil))))
(insn 26 25 27 2 (set (reg:DI 5 di)
        (reg:DI 88)) "main.c":225:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88)
        (nil)))
(call_insn 27 26 28 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_mkdir") [flags 0x41]  <function_decl 0x7fa610b72c00 explorer_tester_mkdir>) [0 explorer_tester_mkdir S1 A8])
        (const_int 0 [0])) "main.c":225:3 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 28 27 29 2 (set (reg:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [14 tester+0 S8 A64])) "main.c":226:3 80 {*movdi_internal}
     (nil))
(insn 29 28 30 2 (set (reg:SI 1 dx)
        (const_int 0 [0])) "main.c":226:3 81 {*movsi_internal}
     (nil))
(insn 30 29 31 2 (set (reg:DI 91)
        (symbol_ref/f:DI ("*.LC27") [flags 0x2]  <var_decl 0x7fa6108e2870 *.LC27>)) "main.c":226:3 80 {*movdi_internal}
     (nil))
(insn 31 30 32 2 (set (reg:DI 4 si)
        (reg:DI 91)) "main.c":226:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 91)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC27") [flags 0x2]  <var_decl 0x7fa6108e2870 *.LC27>)
            (nil))))
(insn 32 31 33 2 (set (reg:DI 5 di)
        (reg:DI 90)) "main.c":226:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 90)
        (nil)))
(call_insn 33 32 34 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_mkdir") [flags 0x41]  <function_decl 0x7fa610b72c00 explorer_tester_mkdir>) [0 explorer_tester_mkdir S1 A8])
        (const_int 0 [0])) "main.c":226:3 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 34 33 35 2 (set (reg:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [14 tester+0 S8 A64])) "main.c":228:3 80 {*movdi_internal}
     (nil))
(insn 35 34 36 2 (set (reg:SI 1 dx)
        (const_int 0 [0])) "main.c":228:3 81 {*movsi_internal}
     (nil))
(insn 36 35 37 2 (set (reg:DI 4 si)
        (const_int 0 [0])) "main.c":228:3 80 {*movdi_internal}
     (nil))
(insn 37 36 38 2 (set (reg:DI 5 di)
        (reg:DI 92)) "main.c":228:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 92)
        (nil)))
(call_insn 38 37 39 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_cdpar") [flags 0x41]  <function_decl 0x7fa610b72500 explorer_tester_cdpar>) [0 explorer_tester_cdpar S1 A8])
        (const_int 0 [0])) "main.c":228:3 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 39 38 40 2 (set (reg:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [14 tester+0 S8 A64])) "main.c":229:3 80 {*movdi_internal}
     (nil))
(insn 40 39 41 2 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "main.c":229:3 81 {*movsi_internal}
     (nil))
(insn 41 40 42 2 (set (reg:DI 94)
        (symbol_ref/f:DI ("*.LC26") [flags 0x2]  <var_decl 0x7fa6108e27e0 *.LC26>)) "main.c":229:3 80 {*movdi_internal}
     (nil))
(insn 42 41 43 2 (set (reg:DI 4 si)
        (reg:DI 94)) "main.c":229:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 94)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC26") [flags 0x2]  <var_decl 0x7fa6108e27e0 *.LC26>)
            (nil))))
(insn 43 42 44 2 (set (reg:DI 5 di)
        (reg:DI 93)) "main.c":229:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 93)
        (nil)))
(call_insn 44 43 45 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_chdir") [flags 0x41]  <function_decl 0x7fa610b72600 explorer_tester_chdir>) [0 explorer_tester_chdir S1 A8])
        (const_int 0 [0])) "main.c":229:3 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 45 44 46 2 (set (reg:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [14 tester+0 S8 A64])) "main.c":230:3 80 {*movdi_internal}
     (nil))
(insn 46 45 47 2 (set (reg:SI 1 dx)
        (const_int 0 [0])) "main.c":230:3 81 {*movsi_internal}
     (nil))
(insn 47 46 48 2 (set (reg:DI 96)
        (symbol_ref/f:DI ("*.LC28") [flags 0x2]  <var_decl 0x7fa6108e2900 *.LC28>)) "main.c":230:3 80 {*movdi_internal}
     (nil))
(insn 48 47 49 2 (set (reg:DI 4 si)
        (reg:DI 96)) "main.c":230:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 96)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC28") [flags 0x2]  <var_decl 0x7fa6108e2900 *.LC28>)
            (nil))))
(insn 49 48 50 2 (set (reg:DI 5 di)
        (reg:DI 95)) "main.c":230:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 95)
        (nil)))
(call_insn 50 49 51 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_chdir") [flags 0x41]  <function_decl 0x7fa610b72600 explorer_tester_chdir>) [0 explorer_tester_chdir S1 A8])
        (const_int 0 [0])) "main.c":230:3 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 51 50 52 2 (set (reg:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [14 tester+0 S8 A64])) "main.c":231:3 80 {*movdi_internal}
     (nil))
(insn 52 51 53 2 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "main.c":231:3 81 {*movsi_internal}
     (nil))
(insn 53 52 54 2 (set (reg:DI 98)
        (symbol_ref/f:DI ("*.LC29") [flags 0x2]  <var_decl 0x7fa6108e2990 *.LC29>)) "main.c":231:3 80 {*movdi_internal}
     (nil))
(insn 54 53 55 2 (set (reg:DI 4 si)
        (reg:DI 98)) "main.c":231:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 98)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC29") [flags 0x2]  <var_decl 0x7fa6108e2990 *.LC29>)
            (nil))))
(insn 55 54 56 2 (set (reg:DI 5 di)
        (reg:DI 97)) "main.c":231:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 97)
        (nil)))
(call_insn 56 55 57 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_cdpar") [flags 0x41]  <function_decl 0x7fa610b72500 explorer_tester_cdpar>) [0 explorer_tester_cdpar S1 A8])
        (const_int 0 [0])) "main.c":231:3 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 57 56 58 2 (set (reg:DI 99)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [14 tester+0 S8 A64])) "main.c":233:3 80 {*movdi_internal}
     (nil))
(insn 58 57 59 2 (set (reg:SI 1 dx)
        (const_int 0 [0])) "main.c":233:3 81 {*movsi_internal}
     (nil))
(insn 59 58 60 2 (set (reg:DI 100)
        (symbol_ref/f:DI ("*.LC22") [flags 0x2]  <var_decl 0x7fa6108e21b0 *.LC22>)) "main.c":233:3 80 {*movdi_internal}
     (nil))
(insn 60 59 61 2 (set (reg:DI 4 si)
        (reg:DI 100)) "main.c":233:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 100)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC22") [flags 0x2]  <var_decl 0x7fa6108e21b0 *.LC22>)
            (nil))))
(insn 61 60 62 2 (set (reg:DI 5 di)
        (reg:DI 99)) "main.c":233:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 99)
        (nil)))
(call_insn 62 61 63 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_delete") [flags 0x41]  <function_decl 0x7fa610b72d00 explorer_tester_delete>) [0 explorer_tester_delete S1 A8])
        (const_int 0 [0])) "main.c":233:3 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 63 62 64 2 (set (reg:DI 101)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [14 tester+0 S8 A64])) "main.c":234:3 80 {*movdi_internal}
     (nil))
(insn 64 63 65 2 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "main.c":234:3 81 {*movsi_internal}
     (nil))
(insn 65 64 66 2 (set (reg:DI 102)
        (symbol_ref/f:DI ("*.LC26") [flags 0x2]  <var_decl 0x7fa6108e27e0 *.LC26>)) "main.c":234:3 80 {*movdi_internal}
     (nil))
(insn 66 65 67 2 (set (reg:DI 4 si)
        (reg:DI 102)) "main.c":234:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 102)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC26") [flags 0x2]  <var_decl 0x7fa6108e27e0 *.LC26>)
            (nil))))
(insn 67 66 68 2 (set (reg:DI 5 di)
        (reg:DI 101)) "main.c":234:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 101)
        (nil)))
(call_insn 68 67 69 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_delete") [flags 0x41]  <function_decl 0x7fa610b72d00 explorer_tester_delete>) [0 explorer_tester_delete S1 A8])
        (const_int 0 [0])) "main.c":234:3 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 69 68 70 2 (set (reg:DI 103)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [14 tester+0 S8 A64])) "main.c":235:3 80 {*movdi_internal}
     (nil))
(insn 70 69 71 2 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "main.c":235:3 81 {*movsi_internal}
     (nil))
(insn 71 70 72 2 (set (reg:DI 104)
        (symbol_ref/f:DI ("*.LC27") [flags 0x2]  <var_decl 0x7fa6108e2870 *.LC27>)) "main.c":235:3 80 {*movdi_internal}
     (nil))
(insn 72 71 73 2 (set (reg:DI 4 si)
        (reg:DI 104)) "main.c":235:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 104)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC27") [flags 0x2]  <var_decl 0x7fa6108e2870 *.LC27>)
            (nil))))
(insn 73 72 74 2 (set (reg:DI 5 di)
        (reg:DI 103)) "main.c":235:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 103)
        (nil)))
(call_insn 74 73 75 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_delete") [flags 0x41]  <function_decl 0x7fa610b72d00 explorer_tester_delete>) [0 explorer_tester_delete S1 A8])
        (const_int 0 [0])) "main.c":235:3 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 75 74 76 2 (set (reg:DI 105)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [14 tester+0 S8 A64])) "main.c":237:3 80 {*movdi_internal}
     (nil))
(insn 76 75 77 2 (set (reg:DI 5 di)
        (reg:DI 105)) "main.c":237:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 105)
        (nil)))
(call_insn 77 76 80 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_destory") [flags 0x41]  <function_decl 0x7fa610b72400 explorer_tester_destory>) [0 explorer_tester_destory S1 A8])
        (const_int 0 [0])) "main.c":237:3 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       3 [always]  (FALLTHRU) main.c:238:1
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 1, flags: (RTL)
;;  pred:       2 [always]  (FALLTHRU) main.c:238:1
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(note 80 77 81 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 81 80 0 3 (const_int 0 [0]) "main.c":238:1 928 {nop}
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]


;; Function search_check_path (search_check_path, funcdef_no=26, decl_uid=3424, cgraph_uid=27, symbol_order=30)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 10 n_edges 12 count 10 (    1)
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 9 8
;;
;; Loop 1
;;  header 6, latch 5
;;  depth 1, outer 0
;;  nodes: 6 5 3 4
;; 2 succs { 6 }
;; 3 succs { 4 5 }
;; 4 succs { 9 5 }
;; 5 succs { 6 }
;; 6 succs { 3 7 }
;; 7 succs { 8 }
;; 9 succs { 8 }
;; 8 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 22.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r88: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r88,l0) best SIREG, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r83,l0) best AREG, allocno GENERAL_REGS
    r82: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r82,l0) best DIREG, allocno GENERAL_REGS

  a0(r83,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a1(r82,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a2(r88,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a3(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a4(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a5(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a6(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000

   Insn 51(l0): point = 1
   Insn 47(l0): point = 4
   Insn 40(l0): point = 6
   Insn 12(l0): point = 9
   Insn 11(l0): point = 11
   Insn 38(l0): point = 14
   Insn 37(l0): point = 16
   Insn 31(l0): point = 19
   Insn 25(l0): point = 22
   Insn 24(l0): point = 24
   Insn 23(l0): point = 26
   Insn 22(l0): point = 28
   Insn 21(l0): point = 30
   Insn 20(l0): point = 32
   Insn 19(l0): point = 34
   Insn 18(l0): point = 36
   Insn 17(l0): point = 38
   Insn 16(l0): point = 40
   Insn 15(l0): point = 42
   Insn 14(l0): point = 44
   Insn 45(l0): point = 47
   Insn 7(l0): point = 49
   Insn 6(l0): point = 51
   Insn 2(l0): point = 53
 a0(r83): [25..26]
 a1(r82): [31..36]
 a2(r88): [33..34]
 a3(r87): [37..38]
 a4(r86): [37..40]
 a5(r84): [41..42]
 a6(r85): [43..44]
Compressing live ranges: from 56 to 10 - 17%
Ranges after the compression:
 a0(r83): [0..1]
 a1(r82): [2..3]
 a2(r88): [2..3]
 a3(r87): [4..5]
 a4(r86): [4..5]
 a5(r84): [6..7]
 a6(r85): [8..9]
  pref0:a2(r88)<-hr4@1500
  pref1:a0(r83)<-hr0@1500
  pref2:a1(r82)<-hr5@1500
  regions=1, blocks=10, points=10
    allocnos=7 (big 0), copies=0, conflicts=0, ranges=7
Disposition:
    1:r82  l0     0    0:r83  l0     0    5:r84  l0     0    6:r85  l0     0
    4:r86  l0     1    3:r87  l0     0    2:r88  l0     1
+++Costs: overall -3000, reg -3000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


search_check_path

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;;  ref usage 	r0={2d,1u} r1={2d} r2={2d} r4={3d,1u} r5={3d,2u} r6={1d,9u} r7={1d,10u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,8u} r17={6d,3u} r18={1d} r19={1d,18u} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={2d} r37={2d} r38={1d} r39={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r82={1d,1u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} 
;;    total ref usage 159{100d,59u,0e} in 24{23 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [3 path+0 S8 A64])
        (reg:DI 5 di [ path ])) "main.c":247:43 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ path ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
        (const_int 0 [0])) "main.c":248:7 81 {*movsi_internal}
     (nil))
(insn 7 6 45 2 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
        (const_int 0 [0])) "main.c":249:10 81 {*movsi_internal}
     (nil))
(jump_insn 45 7 46 2 (set (pc)
        (label_ref 32)) "main.c":249:3 892 {jump}
     (nil)
 -> 32)
;;  succ:       6 [always]  main.c:249:3
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 46 45 34)
;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       6
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags]
(code_label 34 46 10 3 43 (nil) [1 uses])
(note 10 34 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                    (const_int -24 [0xffffffffffffffe8])) [3 path+0 S8 A64])
            (const_int 0 [0]))) "main.c":250:8 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 12 11 13 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 29)
            (pc))) "main.c":250:8 891 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 29)
;;  succ:       4 (FALLTHRU)
;;              5
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 82 83 84 85 86 87 88
(note 13 12 14 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 15 4 (set (reg:SI 85)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "main.c":250:37 81 {*movsi_internal}
     (nil))
(insn 15 14 16 4 (set (reg:DI 84)
        (sign_extend:DI (reg:SI 85))) "main.c":250:37 154 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 85)
        (nil)))
(insn 16 15 17 4 (parallel [
            (set (reg:DI 86)
                (ashift:DI (reg:DI 84)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":250:37 713 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 84)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 17 16 18 4 (set (reg:DI 87)
        (symbol_ref:DI ("expected_path") [flags 0x2]  <var_decl 0x7fa610841120 expected_path>)) "main.c":250:37 80 {*movdi_internal}
     (nil))
(insn 18 17 19 4 (set (reg/f:DI 82 [ _1 ])
        (mem/f:DI (plus:DI (reg:DI 86)
                (reg:DI 87)) [3 expected_path[i_3]+0 S8 A64])) "main.c":250:37 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 87)
        (expr_list:REG_DEAD (reg:DI 86)
            (nil))))
(insn 19 18 20 4 (set (reg:DI 88)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [3 path+0 S8 A64])) "main.c":250:17 80 {*movdi_internal}
     (nil))
(insn 20 19 21 4 (set (reg:DI 4 si)
        (reg:DI 88)) "main.c":250:17 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88)
        (nil)))
(insn 21 20 22 4 (set (reg:DI 5 di)
        (reg/f:DI 82 [ _1 ])) "main.c":250:17 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 82 [ _1 ])
        (nil)))
(call_insn/i 22 21 23 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7fa610abec00 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) "main.c":250:17 909 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 23 22 24 4 (set (reg:SI 83 [ _2 ])
        (reg:SI 0 ax)) "main.c":250:17 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 24 23 25 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 83 [ _2 ])
            (const_int 0 [0]))) "main.c":250:14 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 83 [ _2 ])
        (nil)))
(jump_insn 25 24 29 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 50)
            (pc))) "main.c":250:14 891 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 50)
;;  succ:       9 main.c:251:7
;;              5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       3
;;              4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags]
(code_label 29 25 30 5 41 (nil) [1 uses])
(note 30 29 31 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 32 5 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                        (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":249:23 229 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       6 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       5 (FALLTHRU,DFS_BACK)
;;              2 [always]  main.c:249:3
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags]
(code_label 32 31 33 6 40 (nil) [1 uses])
(note 33 32 37 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 37 33 38 6 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                    (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
            (const_int 3 [0x3]))) "main.c":249:17 11 {*cmpsi_1}
     (nil))
(jump_insn 38 37 39 6 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 34)
            (pc))) "main.c":249:17 891 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 34)
;;  succ:       3
;;              7 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 7, loop depth 0, maybe hot
;;  prev block 6, next block 9, flags: (RTL)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(note 39 38 40 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 47 7 (set (mem/c:SI (symbol_ref:DI ("search_err") [flags 0x2]  <var_decl 0x7fa6108411b0 search_err>) [1 search_err+0 S4 A32])
        (const_int 1 [0x1])) "main.c":253:14 81 {*movsi_internal}
     (nil))
(jump_insn 47 40 48 7 (set (pc)
        (label_ref 43)) 892 {jump}
     (nil)
 -> 43)
;;  succ:       8
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 48 47 50)
;; basic block 9, loop depth 0, maybe hot
;;  prev block 7, next block 8, flags: (RTL)
;;  pred:       4 main.c:251:7
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(code_label 50 48 49 9 44 (nil) [1 uses])
(note 49 50 51 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 51 49 43 9 (const_int 0 [0]) "main.c":251:7 928 {nop}
     (nil))
;;  succ:       8 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 8, loop depth 0, maybe hot
;;  prev block 9, next block 1, flags: (RTL)
;;  pred:       9 [always]  (FALLTHRU)
;;              7
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(code_label 43 51 44 8 39 (nil) [1 uses])
(note 44 43 0 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]


;; Function search_callback (search_callback, funcdef_no=27, decl_uid=3433, cgraph_uid=28, symbol_order=31)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 4 n_edges 3 count 4 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 12.
verify found no changes in insn with uid = 15.
verify found no changes in insn with uid = 18.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r85: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r85,l0) best DIREG, allocno GENERAL_REGS
    r84: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r84,l0) best DIREG, allocno GENERAL_REGS
    r83: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r83,l0) best DIREG, allocno GENERAL_REGS
    r82: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r82,l0) best SIREG, allocno GENERAL_REGS

  a0(r85,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a1(r84,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a2(r83,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a3(r82,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000

   Insn 22(l0): point = 0
   Insn 18(l0): point = 3
   Insn 17(l0): point = 5
   Insn 16(l0): point = 7
   Insn 15(l0): point = 9
   Insn 14(l0): point = 11
   Insn 13(l0): point = 13
   Insn 12(l0): point = 15
   Insn 11(l0): point = 17
   Insn 10(l0): point = 19
   Insn 9(l0): point = 21
   Insn 8(l0): point = 23
   Insn 7(l0): point = 25
   Insn 3(l0): point = 27
   Insn 2(l0): point = 29
 a0(r85): [6..7]
 a1(r84): [12..13]
 a2(r83): [20..21]
 a3(r82): [24..25]
Compressing live ranges: from 32 to 8 - 25%
Ranges after the compression:
 a0(r85): [0..1]
 a1(r84): [2..3]
 a2(r83): [4..5]
 a3(r82): [6..7]
  pref0:a0(r85)<-hr5@1500
  pref1:a1(r84)<-hr5@1500
  pref2:a2(r83)<-hr5@1500
  pref3:a3(r82)<-hr4@1500
  regions=1, blocks=4, points=8
    allocnos=4 (big 0), copies=0, conflicts=0, ranges=4
Disposition:
    3:r82  l0     0    2:r83  l0     0    1:r84  l0     0    0:r85  l0     0
+++Costs: overall -4000, reg -4000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


search_callback

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 4 [si] 5 [di] 6 [bp] 7 [sp]
;;  ref usage 	r0={5d,1u} r1={4d} r2={4d} r4={5d,2u} r5={7d,4u} r6={1d,3u} r7={1d,6u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r16={1d,2u} r17={3d} r18={3d} r19={1d,8u} r20={4d} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={4d} r37={4d} r38={3d} r39={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r82={1d,1u} r83={1d,1u} r84={1d,1u} r85={1d,1u} 
;;    total ref usage 259{229d,30u,0e} in 15{12 regular + 3 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 82 83 84 85
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [3 path+0 S8 A64])
        (reg:DI 5 di [ path ])) "main.c":255:60 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ path ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [13 file+0 S8 A64])
        (reg:DI 4 si [ file ])) "main.c":255:60 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ file ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:DI 82)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [3 path+0 S8 A64])) "main.c":256:3 80 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:DI 4 si)
        (reg:DI 82)) "main.c":256:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 82)
        (nil)))
(insn 9 8 10 2 (set (reg:DI 83)
        (symbol_ref/f:DI ("*.LC34") [flags 0x2]  <var_decl 0x7fa6108fdab0 *.LC34>)) "main.c":256:3 80 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:DI 5 di)
        (reg:DI 83)) "main.c":256:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 83)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC34") [flags 0x2]  <var_decl 0x7fa6108fdab0 *.LC34>)
            (nil))))
(insn 11 10 12 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "main.c":256:3 83 {*movqi_internal}
     (nil))
(call_insn 12 11 13 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fa610ac6000 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "main.c":256:3 909 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 13 12 14 2 (set (reg:DI 84)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [3 path+0 S8 A64])) "main.c":257:3 80 {*movdi_internal}
     (nil))
(insn 14 13 15 2 (set (reg:DI 5 di)
        (reg:DI 84)) "main.c":257:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 84)
        (nil)))
(call_insn 15 14 16 2 (call (mem:QI (symbol_ref:DI ("search_check_path") [flags 0x3]  <function_decl 0x7fa610840300 search_check_path>) [0 search_check_path S1 A8])
        (const_int 0 [0])) "main.c":257:3 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 16 15 17 2 (set (reg:DI 85)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [13 file+0 S8 A64])) "main.c":258:3 80 {*movdi_internal}
     (nil))
(insn 17 16 18 2 (set (reg:DI 5 di)
        (reg:DI 85)) "main.c":258:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 85)
        (nil)))
(call_insn 18 17 21 2 (call (mem:QI (symbol_ref:DI ("checksum_upd_file") [flags 0x3]  <function_decl 0x7fa610835700 checksum_upd_file>) [0 checksum_upd_file S1 A8])
        (const_int 0 [0])) "main.c":258:3 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       3 [always]  (FALLTHRU) main.c:259:1
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 1, flags: (RTL)
;;  pred:       2 [always]  (FALLTHRU) main.c:259:1
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(note 21 18 22 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 0 3 (const_int 0 [0]) "main.c":259:1 928 {nop}
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]


;; Function test_explorer_search (test_explorer_search, funcdef_no=28, decl_uid=3435, cgraph_uid=29, symbol_order=32)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 5 n_edges 4 count 5 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { }
;; 4 succs { 1 }
Removing SCRATCH to p158 in insn #3 (nop 2)
rescanning insn with uid = 3.
Removing SCRATCH to p159 in insn #245 (nop 3)
rescanning insn with uid = 245.
Building IRA IR
verify found no changes in insn with uid = 8.
verify found no changes in insn with uid = 12.
verify found no changes in insn with uid = 18.
verify found no changes in insn with uid = 24.
verify found no changes in insn with uid = 31.
verify found no changes in insn with uid = 35.
verify found no changes in insn with uid = 39.
verify found no changes in insn with uid = 49.
verify found no changes in insn with uid = 56.
verify found no changes in insn with uid = 60.
verify found no changes in insn with uid = 70.
verify found no changes in insn with uid = 77.
verify found no changes in insn with uid = 81.
verify found no changes in insn with uid = 91.
verify found no changes in insn with uid = 97.
verify found no changes in insn with uid = 103.
verify found no changes in insn with uid = 110.
verify found no changes in insn with uid = 114.
verify found no changes in insn with uid = 118.
verify found no changes in insn with uid = 128.
verify found no changes in insn with uid = 134.
verify found no changes in insn with uid = 140.
verify found no changes in insn with uid = 146.
verify found no changes in insn with uid = 153.
verify found no changes in insn with uid = 157.
verify found no changes in insn with uid = 161.
verify found no changes in insn with uid = 171.
verify found no changes in insn with uid = 177.
verify found no changes in insn with uid = 183.
verify found no changes in insn with uid = 190.
verify found no changes in insn with uid = 194.
verify found no changes in insn with uid = 198.
verify found no changes in insn with uid = 208.
verify found no changes in insn with uid = 214.
verify found no changes in insn with uid = 220.
verify found no changes in insn with uid = 226.
verify found no changes in insn with uid = 234.
verify found no changes in insn with uid = 243.
verify found no changes in insn with uid = 247.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 5 n_edges 4 count 5 (    1)

Pass 0 for finding pseudo/allocno costs

    r159: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r159,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r158: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a77 (r158,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r157: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r157,l0) best DIREG, allocno GENERAL_REGS
    r156: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r156,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r155: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r155,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r154: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a8 (r154,l0) best SIREG, allocno GENERAL_REGS
    r153: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a9 (r153,l0) best DREG, allocno GENERAL_REGS
    r152: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r152,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r151: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a12 (r151,l0) best SIREG, allocno GENERAL_REGS
    r150: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a11 (r150,l0) best DIREG, allocno GENERAL_REGS
    r149: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a14 (r149,l0) best SIREG, allocno GENERAL_REGS
    r148: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a13 (r148,l0) best DIREG, allocno GENERAL_REGS
    r147: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a16 (r147,l0) best SIREG, allocno GENERAL_REGS
    r146: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a15 (r146,l0) best DIREG, allocno GENERAL_REGS
    r145: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a18 (r145,l0) best SIREG, allocno GENERAL_REGS
    r144: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a17 (r144,l0) best DIREG, allocno GENERAL_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r143,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r142: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a20 (r142,l0) best DIREG, allocno GENERAL_REGS
    r141: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a21 (r141,l0) best DIREG, allocno GENERAL_REGS
    r140: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a23 (r140,l0) best SIREG, allocno GENERAL_REGS
    r139: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a22 (r139,l0) best DIREG, allocno GENERAL_REGS
    r138: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a25 (r138,l0) best SIREG, allocno GENERAL_REGS
    r137: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a24 (r137,l0) best DIREG, allocno GENERAL_REGS
    r136: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a27 (r136,l0) best SIREG, allocno GENERAL_REGS
    r135: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a26 (r135,l0) best DIREG, allocno GENERAL_REGS
    r134: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a29 (r134,l0) best SIREG, allocno GENERAL_REGS
    r133: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a28 (r133,l0) best DIREG, allocno GENERAL_REGS
    r132: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r132,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r131: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a31 (r131,l0) best DIREG, allocno GENERAL_REGS
    r130: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a32 (r130,l0) best DIREG, allocno GENERAL_REGS
    r129: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a34 (r129,l0) best SIREG, allocno GENERAL_REGS
    r128: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a33 (r128,l0) best DIREG, allocno GENERAL_REGS
    r127: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a36 (r127,l0) best SIREG, allocno GENERAL_REGS
    r126: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a35 (r126,l0) best DIREG, allocno GENERAL_REGS
    r125: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a38 (r125,l0) best SIREG, allocno GENERAL_REGS
    r124: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a37 (r124,l0) best DIREG, allocno GENERAL_REGS
    r123: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a40 (r123,l0) best SIREG, allocno GENERAL_REGS
    r122: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a39 (r122,l0) best DIREG, allocno GENERAL_REGS
    r121: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a42 (r121,l0) best SIREG, allocno GENERAL_REGS
    r120: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a41 (r120,l0) best DIREG, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a43 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a44 (r118,l0) best DIREG, allocno GENERAL_REGS
    r117: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a45 (r117,l0) best DIREG, allocno GENERAL_REGS
    r116: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a47 (r116,l0) best SIREG, allocno GENERAL_REGS
    r115: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a46 (r115,l0) best DIREG, allocno GENERAL_REGS
    r114: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a49 (r114,l0) best SIREG, allocno GENERAL_REGS
    r113: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a48 (r113,l0) best DIREG, allocno GENERAL_REGS
    r112: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a51 (r112,l0) best SIREG, allocno GENERAL_REGS
    r111: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a50 (r111,l0) best DIREG, allocno GENERAL_REGS
    r110: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a53 (r110,l0) best SIREG, allocno GENERAL_REGS
    r109: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a52 (r109,l0) best DIREG, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a54 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a55 (r107,l0) best DIREG, allocno GENERAL_REGS
    r106: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a57 (r106,l0) best SIREG, allocno GENERAL_REGS
    r105: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a56 (r105,l0) best DIREG, allocno GENERAL_REGS
    r104: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a59 (r104,l0) best SIREG, allocno GENERAL_REGS
    r103: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a58 (r103,l0) best DIREG, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a60 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a61 (r101,l0) best DIREG, allocno GENERAL_REGS
    r100: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a63 (r100,l0) best SIREG, allocno GENERAL_REGS
    r99: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a62 (r99,l0) best DIREG, allocno GENERAL_REGS
    r98: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a65 (r98,l0) best SIREG, allocno GENERAL_REGS
    r97: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a64 (r97,l0) best DIREG, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a66 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a67 (r95,l0) best DIREG, allocno GENERAL_REGS
    r94: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a68 (r94,l0) best DIREG, allocno GENERAL_REGS
    r93: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a70 (r93,l0) best SIREG, allocno GENERAL_REGS
    r92: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a69 (r92,l0) best DIREG, allocno GENERAL_REGS
    r91: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a72 (r91,l0) best SIREG, allocno GENERAL_REGS
    r90: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a71 (r90,l0) best DIREG, allocno GENERAL_REGS
    r89: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a74 (r89,l0) best SIREG, allocno GENERAL_REGS
    r88: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a73 (r88,l0) best DIREG, allocno GENERAL_REGS
    r87: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a75 (r87,l0) best AREG, allocno GENERAL_REGS
    r86: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a76 (r86,l0) best DIREG, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a7 (r82,l0) best DIREG, allocno GENERAL_REGS

  a0(r159,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:6000 NO_REX_SSE_REGS:6000 SSE_REGS:6000 MMX_REGS:13000 INT_SSE_REGS:13000 ALL_REGS:212000 MEM:6000
  a1(r157,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a2(r156,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a3(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a4(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a5(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a6(r155,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a7(r82,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a8(r154,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a9(r153,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a10(r152,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a11(r150,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a12(r151,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a13(r148,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a14(r149,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a15(r146,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a16(r147,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a17(r144,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a18(r145,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a19(r143,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a20(r142,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a21(r141,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a22(r139,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a23(r140,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a24(r137,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a25(r138,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a26(r135,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a27(r136,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a28(r133,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a29(r134,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a30(r132,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a31(r131,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a32(r130,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a33(r128,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a34(r129,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a35(r126,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a36(r127,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a37(r124,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a38(r125,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a39(r122,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a40(r123,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a41(r120,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a42(r121,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a43(r119,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a44(r118,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a45(r117,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a46(r115,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a47(r116,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a48(r113,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a49(r114,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a50(r111,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a51(r112,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a52(r109,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a53(r110,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a54(r108,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a55(r107,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a56(r105,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a57(r106,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a58(r103,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a59(r104,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a60(r102,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a61(r101,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a62(r99,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a63(r100,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a64(r97,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a65(r98,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a66(r96,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a67(r95,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a68(r94,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a69(r92,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a70(r93,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a71(r90,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a72(r91,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a73(r88,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a74(r89,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a75(r87,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:6000 NO_REX_SSE_REGS:6000 SSE_REGS:6000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a76(r86,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a77(r158,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:6000 NO_REX_SSE_REGS:6000 SSE_REGS:6000 MMX_REGS:13000 INT_SSE_REGS:13000 ALL_REGS:212000 MEM:6000

   Insn 247(l0): point = 1
   Insn 246(l0): point = 4
   Insn 245(l0): point = 6
   Insn 253(l0): point = 8
   Insn 243(l0): point = 10
   Insn 242(l0): point = 12
   Insn 241(l0): point = 14
   Insn 240(l0): point = 16
   Insn 239(l0): point = 18
   Insn 238(l0): point = 20
   Insn 237(l0): point = 22
   Insn 236(l0): point = 24
   Insn 235(l0): point = 26
   Insn 234(l0): point = 28
   Insn 233(l0): point = 30
   Insn 232(l0): point = 32
   Insn 231(l0): point = 34
   Insn 230(l0): point = 36
   Insn 229(l0): point = 38
   Insn 228(l0): point = 40
   Insn 227(l0): point = 42
   Insn 226(l0): point = 44
   Insn 225(l0): point = 46
   Insn 224(l0): point = 48
   Insn 223(l0): point = 50
   Insn 222(l0): point = 52
   Insn 221(l0): point = 54
   Insn 220(l0): point = 56
   Insn 219(l0): point = 58
   Insn 218(l0): point = 60
   Insn 217(l0): point = 62
   Insn 216(l0): point = 64
   Insn 215(l0): point = 66
   Insn 214(l0): point = 68
   Insn 213(l0): point = 70
   Insn 212(l0): point = 72
   Insn 211(l0): point = 74
   Insn 210(l0): point = 76
   Insn 209(l0): point = 78
   Insn 208(l0): point = 80
   Insn 207(l0): point = 82
   Insn 206(l0): point = 84
   Insn 205(l0): point = 86
   Insn 204(l0): point = 88
   Insn 203(l0): point = 90
   Insn 202(l0): point = 92
   Insn 201(l0): point = 94
   Insn 200(l0): point = 96
   Insn 199(l0): point = 98
   Insn 198(l0): point = 100
   Insn 197(l0): point = 102
   Insn 196(l0): point = 104
   Insn 195(l0): point = 106
   Insn 194(l0): point = 108
   Insn 193(l0): point = 110
   Insn 192(l0): point = 112
   Insn 191(l0): point = 114
   Insn 190(l0): point = 116
   Insn 189(l0): point = 118
   Insn 188(l0): point = 120
   Insn 187(l0): point = 122
   Insn 186(l0): point = 124
   Insn 185(l0): point = 126
   Insn 184(l0): point = 128
   Insn 183(l0): point = 130
   Insn 182(l0): point = 132
   Insn 181(l0): point = 134
   Insn 180(l0): point = 136
   Insn 179(l0): point = 138
   Insn 178(l0): point = 140
   Insn 177(l0): point = 142
   Insn 176(l0): point = 144
   Insn 175(l0): point = 146
   Insn 174(l0): point = 148
   Insn 173(l0): point = 150
   Insn 172(l0): point = 152
   Insn 171(l0): point = 154
   Insn 170(l0): point = 156
   Insn 169(l0): point = 158
   Insn 168(l0): point = 160
   Insn 167(l0): point = 162
   Insn 166(l0): point = 164
   Insn 165(l0): point = 166
   Insn 164(l0): point = 168
   Insn 163(l0): point = 170
   Insn 162(l0): point = 172
   Insn 161(l0): point = 174
   Insn 160(l0): point = 176
   Insn 159(l0): point = 178
   Insn 158(l0): point = 180
   Insn 157(l0): point = 182
   Insn 156(l0): point = 184
   Insn 155(l0): point = 186
   Insn 154(l0): point = 188
   Insn 153(l0): point = 190
   Insn 152(l0): point = 192
   Insn 151(l0): point = 194
   Insn 150(l0): point = 196
   Insn 149(l0): point = 198
   Insn 148(l0): point = 200
   Insn 147(l0): point = 202
   Insn 146(l0): point = 204
   Insn 145(l0): point = 206
   Insn 144(l0): point = 208
   Insn 143(l0): point = 210
   Insn 142(l0): point = 212
   Insn 141(l0): point = 214
   Insn 140(l0): point = 216
   Insn 139(l0): point = 218
   Insn 138(l0): point = 220
   Insn 137(l0): point = 222
   Insn 136(l0): point = 224
   Insn 135(l0): point = 226
   Insn 134(l0): point = 228
   Insn 133(l0): point = 230
   Insn 132(l0): point = 232
   Insn 131(l0): point = 234
   Insn 130(l0): point = 236
   Insn 129(l0): point = 238
   Insn 128(l0): point = 240
   Insn 127(l0): point = 242
   Insn 126(l0): point = 244
   Insn 125(l0): point = 246
   Insn 124(l0): point = 248
   Insn 123(l0): point = 250
   Insn 122(l0): point = 252
   Insn 121(l0): point = 254
   Insn 120(l0): point = 256
   Insn 119(l0): point = 258
   Insn 118(l0): point = 260
   Insn 117(l0): point = 262
   Insn 116(l0): point = 264
   Insn 115(l0): point = 266
   Insn 114(l0): point = 268
   Insn 113(l0): point = 270
   Insn 112(l0): point = 272
   Insn 111(l0): point = 274
   Insn 110(l0): point = 276
   Insn 109(l0): point = 278
   Insn 108(l0): point = 280
   Insn 107(l0): point = 282
   Insn 106(l0): point = 284
   Insn 105(l0): point = 286
   Insn 104(l0): point = 288
   Insn 103(l0): point = 290
   Insn 102(l0): point = 292
   Insn 101(l0): point = 294
   Insn 100(l0): point = 296
   Insn 99(l0): point = 298
   Insn 98(l0): point = 300
   Insn 97(l0): point = 302
   Insn 96(l0): point = 304
   Insn 95(l0): point = 306
   Insn 94(l0): point = 308
   Insn 93(l0): point = 310
   Insn 92(l0): point = 312
   Insn 91(l0): point = 314
   Insn 90(l0): point = 316
   Insn 89(l0): point = 318
   Insn 88(l0): point = 320
   Insn 87(l0): point = 322
   Insn 86(l0): point = 324
   Insn 85(l0): point = 326
   Insn 84(l0): point = 328
   Insn 83(l0): point = 330
   Insn 82(l0): point = 332
   Insn 81(l0): point = 334
   Insn 80(l0): point = 336
   Insn 79(l0): point = 338
   Insn 78(l0): point = 340
   Insn 77(l0): point = 342
   Insn 76(l0): point = 344
   Insn 75(l0): point = 346
   Insn 74(l0): point = 348
   Insn 73(l0): point = 350
   Insn 72(l0): point = 352
   Insn 71(l0): point = 354
   Insn 70(l0): point = 356
   Insn 69(l0): point = 358
   Insn 68(l0): point = 360
   Insn 67(l0): point = 362
   Insn 66(l0): point = 364
   Insn 65(l0): point = 366
   Insn 64(l0): point = 368
   Insn 63(l0): point = 370
   Insn 62(l0): point = 372
   Insn 61(l0): point = 374
   Insn 60(l0): point = 376
   Insn 59(l0): point = 378
   Insn 58(l0): point = 380
   Insn 57(l0): point = 382
   Insn 56(l0): point = 384
   Insn 55(l0): point = 386
   Insn 54(l0): point = 388
   Insn 53(l0): point = 390
   Insn 52(l0): point = 392
   Insn 51(l0): point = 394
   Insn 50(l0): point = 396
   Insn 49(l0): point = 398
   Insn 48(l0): point = 400
   Insn 47(l0): point = 402
   Insn 46(l0): point = 404
   Insn 45(l0): point = 406
   Insn 44(l0): point = 408
   Insn 43(l0): point = 410
   Insn 42(l0): point = 412
   Insn 41(l0): point = 414
   Insn 40(l0): point = 416
   Insn 39(l0): point = 418
   Insn 38(l0): point = 420
   Insn 37(l0): point = 422
   Insn 36(l0): point = 424
   Insn 35(l0): point = 426
   Insn 34(l0): point = 428
   Insn 33(l0): point = 430
   Insn 32(l0): point = 432
   Insn 31(l0): point = 434
   Insn 30(l0): point = 436
   Insn 29(l0): point = 438
   Insn 28(l0): point = 440
   Insn 27(l0): point = 442
   Insn 26(l0): point = 444
   Insn 25(l0): point = 446
   Insn 24(l0): point = 448
   Insn 23(l0): point = 450
   Insn 22(l0): point = 452
   Insn 21(l0): point = 454
   Insn 20(l0): point = 456
   Insn 19(l0): point = 458
   Insn 18(l0): point = 460
   Insn 17(l0): point = 462
   Insn 16(l0): point = 464
   Insn 15(l0): point = 466
   Insn 14(l0): point = 468
   Insn 13(l0): point = 470
   Insn 12(l0): point = 472
   Insn 11(l0): point = 474
   Insn 10(l0): point = 476
   Insn 9(l0): point = 478
   Insn 8(l0): point = 480
   Insn 7(l0): point = 482
   Insn 6(l0): point = 484
   Insn 3(l0): point = 486
 a0(r159): [6..6]
 a1(r157): [13..14]
 a2(r156): [17..18]
 a3(r85): [17..20]
 a4(r84): [21..22]
 a5(r83): [21..24]
 a6(r155): [25..26]
 a7(r82): [31..40]
 a8(r154): [33..34]
 a9(r153): [37..38]
 a10(r152): [41..42]
 a11(r150): [47..54]
 a12(r151): [49..50]
 a13(r148): [59..66]
 a14(r149): [61..62]
 a15(r146): [71..78]
 a16(r147): [73..74]
 a17(r144): [83..96]
 a18(r145): [85..86]
 a19(r143): [93..98]
 a20(r142): [103..106]
 a21(r141): [111..114]
 a22(r139): [119..128]
 a23(r140): [121..122]
 a24(r137): [133..140]
 a25(r138): [135..136]
 a26(r135): [145..152]
 a27(r136): [147..148]
 a28(r133): [157..170]
 a29(r134): [159..160]
 a30(r132): [167..172]
 a31(r131): [177..180]
 a32(r130): [185..188]
 a33(r128): [193..202]
 a34(r129): [195..196]
 a35(r126): [207..214]
 a36(r127): [209..210]
 a37(r124): [219..226]
 a38(r125): [221..222]
 a39(r122): [231..238]
 a40(r123): [233..234]
 a41(r120): [243..256]
 a42(r121): [245..246]
 a43(r119): [253..258]
 a44(r118): [263..266]
 a45(r117): [271..274]
 a46(r115): [279..288]
 a47(r116): [281..282]
 a48(r113): [293..300]
 a49(r114): [295..296]
 a50(r111): [305..312]
 a51(r112): [307..308]
 a52(r109): [317..330]
 a53(r110): [319..320]
 a54(r108): [327..332]
 a55(r107): [337..340]
 a56(r105): [345..354]
 a57(r106): [347..348]
 a58(r103): [359..372]
 a59(r104): [361..362]
 a60(r102): [369..374]
 a61(r101): [379..382]
 a62(r99): [387..396]
 a63(r100): [389..390]
 a64(r97): [401..414]
 a65(r98): [403..404]
 a66(r96): [411..416]
 a67(r95): [421..424]
 a68(r94): [429..432]
 a69(r92): [437..446]
 a70(r93): [439..440]
 a71(r90): [451..458]
 a72(r91): [453..454]
 a73(r88): [463..470]
 a74(r89): [465..466]
 a75(r87): [477..478]
 a76(r86): [483..484]
 a77(r158): [486..486]
Compressing live ranges: from 489 to 100 - 20%
Ranges after the compression:
 a0(r159): [0..0]
 a1(r157): [1..2]
 a2(r156): [3..4]
 a3(r85): [3..4]
 a4(r84): [5..6]
 a5(r83): [5..6]
 a6(r155): [7..8]
 a7(r82): [9..12]
 a8(r154): [9..10]
 a9(r153): [11..12]
 a10(r152): [13..14]
 a11(r150): [15..16]
 a12(r151): [15..16]
 a13(r148): [17..18]
 a14(r149): [17..18]
 a15(r146): [19..20]
 a16(r147): [19..20]
 a17(r144): [21..24]
 a18(r145): [21..22]
 a19(r143): [23..24]
 a20(r142): [25..26]
 a21(r141): [27..28]
 a22(r139): [29..30]
 a23(r140): [29..30]
 a24(r137): [31..32]
 a25(r138): [31..32]
 a26(r135): [33..34]
 a27(r136): [33..34]
 a28(r133): [35..38]
 a29(r134): [35..36]
 a30(r132): [37..38]
 a31(r131): [39..40]
 a32(r130): [41..42]
 a33(r128): [43..44]
 a34(r129): [43..44]
 a35(r126): [45..46]
 a36(r127): [45..46]
 a37(r124): [47..48]
 a38(r125): [47..48]
 a39(r122): [49..50]
 a40(r123): [49..50]
 a41(r120): [51..54]
 a42(r121): [51..52]
 a43(r119): [53..54]
 a44(r118): [55..56]
 a45(r117): [57..58]
 a46(r115): [59..60]
 a47(r116): [59..60]
 a48(r113): [61..62]
 a49(r114): [61..62]
 a50(r111): [63..64]
 a51(r112): [63..64]
 a52(r109): [65..68]
 a53(r110): [65..66]
 a54(r108): [67..68]
 a55(r107): [69..70]
 a56(r105): [71..72]
 a57(r106): [71..72]
 a58(r103): [73..76]
 a59(r104): [73..74]
 a60(r102): [75..76]
 a61(r101): [77..78]
 a62(r99): [79..80]
 a63(r100): [79..80]
 a64(r97): [81..84]
 a65(r98): [81..82]
 a66(r96): [83..84]
 a67(r95): [85..86]
 a68(r94): [87..88]
 a69(r92): [89..90]
 a70(r93): [89..90]
 a71(r90): [91..92]
 a72(r91): [91..92]
 a73(r88): [93..94]
 a74(r89): [93..94]
 a75(r87): [95..96]
 a76(r86): [97..98]
 a77(r158): [99..99]
  pref0:a1(r157)<-hr5@1500
  pref1:a8(r154)<-hr4@1500
  pref2:a9(r153)<-hr1@1500
  pref3:a12(r151)<-hr4@1500
  pref4:a11(r150)<-hr5@1500
  pref5:a14(r149)<-hr4@1500
  pref6:a13(r148)<-hr5@1500
  pref7:a16(r147)<-hr4@1500
  pref8:a15(r146)<-hr5@1500
  pref9:a18(r145)<-hr4@1500
  pref10:a17(r144)<-hr5@1500
  pref11:a20(r142)<-hr5@1500
  pref12:a21(r141)<-hr5@1500
  pref13:a23(r140)<-hr4@1500
  pref14:a22(r139)<-hr5@1500
  pref15:a25(r138)<-hr4@1500
  pref16:a24(r137)<-hr5@1500
  pref17:a27(r136)<-hr4@1500
  pref18:a26(r135)<-hr5@1500
  pref19:a29(r134)<-hr4@1500
  pref20:a28(r133)<-hr5@1500
  pref21:a31(r131)<-hr5@1500
  pref22:a32(r130)<-hr5@1500
  pref23:a34(r129)<-hr4@1500
  pref24:a33(r128)<-hr5@1500
  pref25:a36(r127)<-hr4@1500
  pref26:a35(r126)<-hr5@1500
  pref27:a38(r125)<-hr4@1500
  pref28:a37(r124)<-hr5@1500
  pref29:a40(r123)<-hr4@1500
  pref30:a39(r122)<-hr5@1500
  pref31:a42(r121)<-hr4@1500
  pref32:a41(r120)<-hr5@1500
  pref33:a44(r118)<-hr5@1500
  pref34:a45(r117)<-hr5@1500
  pref35:a47(r116)<-hr4@1500
  pref36:a46(r115)<-hr5@1500
  pref37:a49(r114)<-hr4@1500
  pref38:a48(r113)<-hr5@1500
  pref39:a51(r112)<-hr4@1500
  pref40:a50(r111)<-hr5@1500
  pref41:a53(r110)<-hr4@1500
  pref42:a52(r109)<-hr5@1500
  pref43:a55(r107)<-hr5@1500
  pref44:a57(r106)<-hr4@1500
  pref45:a56(r105)<-hr5@1500
  pref46:a59(r104)<-hr4@1500
  pref47:a58(r103)<-hr5@1500
  pref48:a61(r101)<-hr5@1500
  pref49:a63(r100)<-hr4@1500
  pref50:a62(r99)<-hr5@1500
  pref51:a65(r98)<-hr4@1500
  pref52:a64(r97)<-hr5@1500
  pref53:a67(r95)<-hr5@1500
  pref54:a68(r94)<-hr5@1500
  pref55:a70(r93)<-hr4@1500
  pref56:a69(r92)<-hr5@1500
  pref57:a72(r91)<-hr4@1500
  pref58:a71(r90)<-hr5@1500
  pref59:a74(r89)<-hr4@1500
  pref60:a73(r88)<-hr5@1500
  pref61:a75(r87)<-hr0@1500
  pref62:a76(r86)<-hr5@1500
  pref63:a7(r82)<-hr5@1500
  regions=1, blocks=5, points=100
    allocnos=78 (big 0), copies=0, conflicts=0, ranges=78
Disposition:
    7:r82  l0     0    5:r83  l0     1    4:r84  l0     0    3:r85  l0     1
   76:r86  l0     0   75:r87  l0     0   73:r88  l0     0   74:r89  l0     2
   71:r90  l0     0   72:r91  l0     2   69:r92  l0     0   70:r93  l0     4
   68:r94  l0     0   67:r95  l0     0   66:r96  l0     1   64:r97  l0     0
   65:r98  l0     4   62:r99  l0     0   63:r100 l0     4   61:r101 l0     0
   60:r102 l0     1   58:r103 l0     0   59:r104 l0     4   56:r105 l0     0
   57:r106 l0     4   55:r107 l0     0   54:r108 l0     1   52:r109 l0     0
   53:r110 l0     4   50:r111 l0     0   51:r112 l0     2   48:r113 l0     0
   49:r114 l0     2   46:r115 l0     0   47:r116 l0     4   45:r117 l0     0
   44:r118 l0     0   43:r119 l0     1   41:r120 l0     0   42:r121 l0     4
   39:r122 l0     0   40:r123 l0     2   37:r124 l0     0   38:r125 l0     2
   35:r126 l0     0   36:r127 l0     2   33:r128 l0     0   34:r129 l0     4
   32:r130 l0     0   31:r131 l0     0   30:r132 l0     1   28:r133 l0     0
   29:r134 l0     4   26:r135 l0     0   27:r136 l0     2   24:r137 l0     0
   25:r138 l0     2   22:r139 l0     0   23:r140 l0     4   21:r141 l0     0
   20:r142 l0     0   19:r143 l0     1   17:r144 l0     0   18:r145 l0     4
   15:r146 l0     0   16:r147 l0     2   13:r148 l0     0   14:r149 l0     2
   11:r150 l0     0   12:r151 l0     2   10:r152 l0     0    9:r153 l0     1
    8:r154 l0     2    6:r155 l0     0    2:r156 l0     0    1:r157 l0     0
   77:r158 l0     0    0:r159 l0     0
+++Costs: overall -52000, reg -52000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


test_explorer_search

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 36 [r8] 37 [r9]
;;  ref usage 	r0={41d,2u} r1={65d,25u} r2={52d,12u} r4={75d,35u} r5={77d,37u} r6={1d,4u} r7={1d,43u} r8={39d} r9={39d} r10={39d} r11={39d} r12={39d} r13={39d} r14={39d} r15={39d} r16={1d,3u} r17={58d,1u} r18={39d} r19={1d,51u} r20={40d} r21={40d} r22={40d} r23={40d} r24={40d} r25={40d} r26={40d} r27={40d} r28={39d} r29={39d} r30={39d} r31={39d} r32={39d} r33={39d} r34={39d} r35={39d} r36={46d,6u} r37={46d,6u} r38={39d} r39={39d} r44={39d} r45={39d} r46={39d} r47={39d} r48={39d} r49={39d} r50={39d} r51={39d} r52={39d} r53={39d} r54={39d} r55={39d} r56={39d} r57={39d} r58={39d} r59={39d} r60={39d} r61={39d} r62={39d} r63={39d} r64={39d} r65={39d} r66={39d} r67={39d} r68={39d} r69={39d} r70={39d} r71={39d} r72={39d} r73={39d} r74={39d} r75={39d} r82={1d,1u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} r128={1d,1u} r129={1d,1u} r130={1d,1u} r131={1d,1u} r132={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d} r159={1d} 
;;    total ref usage 3152{2851d,301u,0e} in 243{204 regular + 39 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 4 3 2 NOTE_INSN_FUNCTION_BEG)
(insn 3 2 6 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 19 frame)
                        (const_int -8 [0xfffffffffffffff8])) [9 D.3578+0 S8 A64])
                (unspec:DI [
                        (mem/v/f:DI (const_int 40 [0x28]) [0 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_SET))
            (set (reg:DI 158)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "main.c":261:29 1265 {stack_protect_set_1_di}
     (expr_list:REG_UNUSED (reg:DI 158)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 6 3 7 2 (set (reg:DI 86)
        (symbol_ref/f:DI ("*.LC35") [flags 0x2]  <var_decl 0x7fa6108fdea0 *.LC35>)) "main.c":262:36 80 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:DI 5 di)
        (reg:DI 86)) "main.c":262:36 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 86)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC35") [flags 0x2]  <var_decl 0x7fa6108fdea0 *.LC35>)
            (nil))))
(call_insn 8 7 9 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("explorer_tester_create") [flags 0x41]  <function_decl 0x7fa610b72300 explorer_tester_create>) [0 explorer_tester_create S1 A8])
            (const_int 0 [0]))) "main.c":262:36 909 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 9 8 10 2 (set (reg:DI 87)
        (reg:DI 0 ax)) "main.c":262:36 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 10 9 11 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -392 [0xfffffffffffffe78])) [14 tester+0 S8 A64])
        (reg:DI 87)) "main.c":262:36 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 87)
        (nil)))
(insn 11 10 12 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "main.c":264:3 83 {*movqi_internal}
     (nil))
(call_insn 12 11 13 2 (call (mem:QI (symbol_ref:DI ("checksum_reset") [flags 0x3]  <function_decl 0x7fa610835100 checksum_reset>) [0 checksum_reset S1 A8])
        (const_int 0 [0])) "main.c":264:3 898 {*call}
     (expr_list:REG_DEAD (reg:QI 0 ax)
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (nil)))
(insn 13 12 14 2 (set (reg:DI 88)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -392 [0xfffffffffffffe78])) [14 tester+0 S8 A64])) "main.c":267:3 80 {*movdi_internal}
     (nil))
(insn 14 13 15 2 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "main.c":267:3 81 {*movsi_internal}
     (nil))
(insn 15 14 16 2 (set (reg:DI 89)
        (symbol_ref/f:DI ("*.LC36") [flags 0x2]  <var_decl 0x7fa6108fdf30 *.LC36>)) "main.c":267:3 80 {*movdi_internal}
     (nil))
(insn 16 15 17 2 (set (reg:DI 4 si)
        (reg:DI 89)) "main.c":267:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 89)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC36") [flags 0x2]  <var_decl 0x7fa6108fdf30 *.LC36>)
            (nil))))
(insn 17 16 18 2 (set (reg:DI 5 di)
        (reg:DI 88)) "main.c":267:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88)
        (nil)))
(call_insn 18 17 19 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_mkdir") [flags 0x41]  <function_decl 0x7fa610b72c00 explorer_tester_mkdir>) [0 explorer_tester_mkdir S1 A8])
        (const_int 0 [0])) "main.c":267:3 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 19 18 20 2 (set (reg:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -392 [0xfffffffffffffe78])) [14 tester+0 S8 A64])) "main.c":268:3 80 {*movdi_internal}
     (nil))
(insn 20 19 21 2 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "main.c":268:3 81 {*movsi_internal}
     (nil))
(insn 21 20 22 2 (set (reg:DI 91)
        (symbol_ref/f:DI ("*.LC36") [flags 0x2]  <var_decl 0x7fa6108fdf30 *.LC36>)) "main.c":268:3 80 {*movdi_internal}
     (nil))
(insn 22 21 23 2 (set (reg:DI 4 si)
        (reg:DI 91)) "main.c":268:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 91)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC36") [flags 0x2]  <var_decl 0x7fa6108fdf30 *.LC36>)
            (nil))))
(insn 23 22 24 2 (set (reg:DI 5 di)
        (reg:DI 90)) "main.c":268:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 90)
        (nil)))
(call_insn 24 23 25 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_chdir") [flags 0x41]  <function_decl 0x7fa610b72600 explorer_tester_chdir>) [0 explorer_tester_chdir S1 A8])
        (const_int 0 [0])) "main.c":268:3 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 25 24 26 2 (set (reg:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -392 [0xfffffffffffffe78])) [14 tester+0 S8 A64])) "main.c":270:5 80 {*movdi_internal}
     (nil))
(insn 26 25 27 2 (set (reg:SI 2 cx)
        (const_int 1 [0x1])) "main.c":270:5 81 {*movsi_internal}
     (nil))
(insn 27 26 28 2 (set (reg:SI 1 dx)
        (const_int 0 [0])) "main.c":270:5 81 {*movsi_internal}
     (nil))
(insn 28 27 29 2 (set (reg:DI 93)
        (symbol_ref/f:DI ("*.LC37") [flags 0x2]  <var_decl 0x7fa610909000 *.LC37>)) "main.c":270:5 80 {*movdi_internal}
     (nil))
(insn 29 28 30 2 (set (reg:DI 4 si)
        (reg:DI 93)) "main.c":270:5 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 93)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC37") [flags 0x2]  <var_decl 0x7fa610909000 *.LC37>)
            (nil))))
(insn 30 29 31 2 (set (reg:DI 5 di)
        (reg:DI 92)) "main.c":270:5 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 92)
        (nil)))
(call_insn 31 30 32 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_create_file") [flags 0x41]  <function_decl 0x7fa610b72b00 explorer_tester_create_file>) [0 explorer_tester_create_file S1 A8])
        (const_int 0 [0])) "main.c":270:5 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 2 cx)
                (expr_list:REG_DEAD (reg:SI 1 dx)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 32 31 33 2 (parallel [
            (set (reg:DI 94)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -384 [0xfffffffffffffe80])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":271:5 230 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 33 32 34 2 (set (reg:SI 4 si)
        (const_int 373 [0x175])) "main.c":271:5 81 {*movsi_internal}
     (nil))
(insn 34 33 35 2 (set (reg:DI 5 di)
        (reg:DI 94)) "main.c":271:5 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 94)
        (nil)))
(call_insn 35 34 36 2 (call (mem:QI (symbol_ref:DI ("fill_random") [flags 0x3]  <function_decl 0x7fa610820900 fill_random>) [0 fill_random S1 A8])
        (const_int 0 [0])) "main.c":271:5 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 36 35 37 2 (parallel [
            (set (reg:DI 95)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -384 [0xfffffffffffffe80])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":271:28 230 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 37 36 38 2 (set (reg:SI 4 si)
        (const_int 373 [0x175])) "main.c":271:28 81 {*movsi_internal}
     (nil))
(insn 38 37 39 2 (set (reg:DI 5 di)
        (reg:DI 95)) "main.c":271:28 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 95)
        (nil)))
(call_insn 39 38 40 2 (call (mem:QI (symbol_ref:DI ("checksum_upd_bytes") [flags 0x3]  <function_decl 0x7fa610835500 checksum_upd_bytes>) [0 checksum_upd_bytes S1 A8])
        (const_int 0 [0])) "main.c":271:28 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 40 39 41 2 (parallel [
            (set (reg:DI 96)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -384 [0xfffffffffffffe80])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":272:5 230 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 41 40 42 2 (set (reg:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -392 [0xfffffffffffffe78])) [14 tester+0 S8 A64])) "main.c":272:5 80 {*movdi_internal}
     (nil))
(insn 42 41 43 2 (set (reg:SI 37 r9)
        (const_int 1 [0x1])) "main.c":272:5 81 {*movsi_internal}
     (nil))
(insn 43 42 44 2 (set (reg:DI 36 r8)
        (reg:DI 96)) "main.c":272:5 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 96)
        (nil)))
(insn 44 43 45 2 (set (reg:SI 2 cx)
        (const_int 373 [0x175])) "main.c":272:5 81 {*movsi_internal}
     (nil))
(insn 45 44 46 2 (set (reg:SI 1 dx)
        (const_int 32 [0x20])) "main.c":272:5 81 {*movsi_internal}
     (nil))
(insn 46 45 47 2 (set (reg:DI 98)
        (symbol_ref/f:DI ("*.LC37") [flags 0x2]  <var_decl 0x7fa610909000 *.LC37>)) "main.c":272:5 80 {*movdi_internal}
     (nil))
(insn 47 46 48 2 (set (reg:DI 4 si)
        (reg:DI 98)) "main.c":272:5 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 98)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC37") [flags 0x2]  <var_decl 0x7fa610909000 *.LC37>)
            (nil))))
(insn 48 47 49 2 (set (reg:DI 5 di)
        (reg:DI 97)) "main.c":272:5 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 97)
        (nil)))
(call_insn 49 48 50 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_write") [flags 0x41]  <function_decl 0x7fa610b72a00 explorer_tester_write>) [0 explorer_tester_write S1 A8])
        (const_int 0 [0])) "main.c":272:5 898 {*call}
     (expr_list:REG_DEAD (reg:SI 37 r9)
        (expr_list:REG_DEAD (reg:DI 36 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:DI 4 si)
                    (expr_list:REG_DEAD (reg:SI 2 cx)
                        (expr_list:REG_DEAD (reg:SI 1 dx)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:DI (use (reg:DI 36 r8))
                        (expr_list:SI (use (reg:SI 37 r9))
                            (nil))))))))
(insn 50 49 51 2 (set (reg:DI 99)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -392 [0xfffffffffffffe78])) [14 tester+0 S8 A64])) "main.c":274:5 80 {*movdi_internal}
     (nil))
(insn 51 50 52 2 (set (reg:SI 2 cx)
        (const_int 1 [0x1])) "main.c":274:5 81 {*movsi_internal}
     (nil))
(insn 52 51 53 2 (set (reg:SI 1 dx)
        (const_int 0 [0])) "main.c":274:5 81 {*movsi_internal}
     (nil))
(insn 53 52 54 2 (set (reg:DI 100)
        (symbol_ref/f:DI ("*.LC38") [flags 0x2]  <var_decl 0x7fa610909090 *.LC38>)) "main.c":274:5 80 {*movdi_internal}
     (nil))
(insn 54 53 55 2 (set (reg:DI 4 si)
        (reg:DI 100)) "main.c":274:5 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 100)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC38") [flags 0x2]  <var_decl 0x7fa610909090 *.LC38>)
            (nil))))
(insn 55 54 56 2 (set (reg:DI 5 di)
        (reg:DI 99)) "main.c":274:5 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 99)
        (nil)))
(call_insn 56 55 57 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_create_file") [flags 0x41]  <function_decl 0x7fa610b72b00 explorer_tester_create_file>) [0 explorer_tester_create_file S1 A8])
        (const_int 0 [0])) "main.c":274:5 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 2 cx)
                (expr_list:REG_DEAD (reg:SI 1 dx)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 57 56 58 2 (parallel [
            (set (reg:DI 101)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -384 [0xfffffffffffffe80])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":275:5 230 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 58 57 59 2 (set (reg:SI 4 si)
        (const_int 373 [0x175])) "main.c":275:5 81 {*movsi_internal}
     (nil))
(insn 59 58 60 2 (set (reg:DI 5 di)
        (reg:DI 101)) "main.c":275:5 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 101)
        (nil)))
(call_insn 60 59 61 2 (call (mem:QI (symbol_ref:DI ("fill_random") [flags 0x3]  <function_decl 0x7fa610820900 fill_random>) [0 fill_random S1 A8])
        (const_int 0 [0])) "main.c":275:5 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 61 60 62 2 (parallel [
            (set (reg:DI 102)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -384 [0xfffffffffffffe80])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":276:5 230 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 62 61 63 2 (set (reg:DI 103)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -392 [0xfffffffffffffe78])) [14 tester+0 S8 A64])) "main.c":276:5 80 {*movdi_internal}
     (nil))
(insn 63 62 64 2 (set (reg:SI 37 r9)
        (const_int 1 [0x1])) "main.c":276:5 81 {*movsi_internal}
     (nil))
(insn 64 63 65 2 (set (reg:DI 36 r8)
        (reg:DI 102)) "main.c":276:5 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 102)
        (nil)))
(insn 65 64 66 2 (set (reg:SI 2 cx)
        (const_int 373 [0x175])) "main.c":276:5 81 {*movsi_internal}
     (nil))
(insn 66 65 67 2 (set (reg:SI 1 dx)
        (const_int 0 [0])) "main.c":276:5 81 {*movsi_internal}
     (nil))
(insn 67 66 68 2 (set (reg:DI 104)
        (symbol_ref/f:DI ("*.LC38") [flags 0x2]  <var_decl 0x7fa610909090 *.LC38>)) "main.c":276:5 80 {*movdi_internal}
     (nil))
(insn 68 67 69 2 (set (reg:DI 4 si)
        (reg:DI 104)) "main.c":276:5 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 104)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC38") [flags 0x2]  <var_decl 0x7fa610909090 *.LC38>)
            (nil))))
(insn 69 68 70 2 (set (reg:DI 5 di)
        (reg:DI 103)) "main.c":276:5 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 103)
        (nil)))
(call_insn 70 69 71 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_write") [flags 0x41]  <function_decl 0x7fa610b72a00 explorer_tester_write>) [0 explorer_tester_write S1 A8])
        (const_int 0 [0])) "main.c":276:5 898 {*call}
     (expr_list:REG_DEAD (reg:SI 37 r9)
        (expr_list:REG_DEAD (reg:DI 36 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:DI 4 si)
                    (expr_list:REG_DEAD (reg:SI 2 cx)
                        (expr_list:REG_DEAD (reg:SI 1 dx)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:DI (use (reg:DI 36 r8))
                        (expr_list:SI (use (reg:SI 37 r9))
                            (nil))))))))
(insn 71 70 72 2 (set (reg:DI 105)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -392 [0xfffffffffffffe78])) [14 tester+0 S8 A64])) "main.c":278:5 80 {*movdi_internal}
     (nil))
(insn 72 71 73 2 (set (reg:SI 2 cx)
        (const_int 1 [0x1])) "main.c":278:5 81 {*movsi_internal}
     (nil))
(insn 73 72 74 2 (set (reg:SI 1 dx)
        (const_int 0 [0])) "main.c":278:5 81 {*movsi_internal}
     (nil))
(insn 74 73 75 2 (set (reg:DI 106)
        (symbol_ref/f:DI ("*.LC39") [flags 0x2]  <var_decl 0x7fa610909120 *.LC39>)) "main.c":278:5 80 {*movdi_internal}
     (nil))
(insn 75 74 76 2 (set (reg:DI 4 si)
        (reg:DI 106)) "main.c":278:5 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 106)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC39") [flags 0x2]  <var_decl 0x7fa610909120 *.LC39>)
            (nil))))
(insn 76 75 77 2 (set (reg:DI 5 di)
        (reg:DI 105)) "main.c":278:5 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 105)
        (nil)))
(call_insn 77 76 78 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_create_file") [flags 0x41]  <function_decl 0x7fa610b72b00 explorer_tester_create_file>) [0 explorer_tester_create_file S1 A8])
        (const_int 0 [0])) "main.c":278:5 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 2 cx)
                (expr_list:REG_DEAD (reg:SI 1 dx)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 78 77 79 2 (parallel [
            (set (reg:DI 107)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -384 [0xfffffffffffffe80])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":279:5 230 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 79 78 80 2 (set (reg:SI 4 si)
        (const_int 373 [0x175])) "main.c":279:5 81 {*movsi_internal}
     (nil))
(insn 80 79 81 2 (set (reg:DI 5 di)
        (reg:DI 107)) "main.c":279:5 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 107)
        (nil)))
(call_insn 81 80 82 2 (call (mem:QI (symbol_ref:DI ("fill_random") [flags 0x3]  <function_decl 0x7fa610820900 fill_random>) [0 fill_random S1 A8])
        (const_int 0 [0])) "main.c":279:5 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 82 81 83 2 (parallel [
            (set (reg:DI 108)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -384 [0xfffffffffffffe80])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":280:5 230 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 83 82 84 2 (set (reg:DI 109)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -392 [0xfffffffffffffe78])) [14 tester+0 S8 A64])) "main.c":280:5 80 {*movdi_internal}
     (nil))
(insn 84 83 85 2 (set (reg:SI 37 r9)
        (const_int 1 [0x1])) "main.c":280:5 81 {*movsi_internal}
     (nil))
(insn 85 84 86 2 (set (reg:DI 36 r8)
        (reg:DI 108)) "main.c":280:5 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 108)
        (nil)))
(insn 86 85 87 2 (set (reg:SI 2 cx)
        (const_int 373 [0x175])) "main.c":280:5 81 {*movsi_internal}
     (nil))
(insn 87 86 88 2 (set (reg:SI 1 dx)
        (const_int 0 [0])) "main.c":280:5 81 {*movsi_internal}
     (nil))
(insn 88 87 89 2 (set (reg:DI 110)
        (symbol_ref/f:DI ("*.LC39") [flags 0x2]  <var_decl 0x7fa610909120 *.LC39>)) "main.c":280:5 80 {*movdi_internal}
     (nil))
(insn 89 88 90 2 (set (reg:DI 4 si)
        (reg:DI 110)) "main.c":280:5 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 110)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC39") [flags 0x2]  <var_decl 0x7fa610909120 *.LC39>)
            (nil))))
(insn 90 89 91 2 (set (reg:DI 5 di)
        (reg:DI 109)) "main.c":280:5 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 109)
        (nil)))
(call_insn 91 90 92 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_write") [flags 0x41]  <function_decl 0x7fa610b72a00 explorer_tester_write>) [0 explorer_tester_write S1 A8])
        (const_int 0 [0])) "main.c":280:5 898 {*call}
     (expr_list:REG_DEAD (reg:SI 37 r9)
        (expr_list:REG_DEAD (reg:DI 36 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:DI 4 si)
                    (expr_list:REG_DEAD (reg:SI 2 cx)
                        (expr_list:REG_DEAD (reg:SI 1 dx)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:DI (use (reg:DI 36 r8))
                        (expr_list:SI (use (reg:SI 37 r9))
                            (nil))))))))
(insn 92 91 93 2 (set (reg:DI 111)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -392 [0xfffffffffffffe78])) [14 tester+0 S8 A64])) "main.c":282:5 80 {*movdi_internal}
     (nil))
(insn 93 92 94 2 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "main.c":282:5 81 {*movsi_internal}
     (nil))
(insn 94 93 95 2 (set (reg:DI 112)
        (symbol_ref/f:DI ("*.LC22") [flags 0x2]  <var_decl 0x7fa6108e21b0 *.LC22>)) "main.c":282:5 80 {*movdi_internal}
     (nil))
(insn 95 94 96 2 (set (reg:DI 4 si)
        (reg:DI 112)) "main.c":282:5 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 112)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC22") [flags 0x2]  <var_decl 0x7fa6108e21b0 *.LC22>)
            (nil))))
(insn 96 95 97 2 (set (reg:DI 5 di)
        (reg:DI 111)) "main.c":282:5 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 111)
        (nil)))
(call_insn 97 96 98 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_mkdir") [flags 0x41]  <function_decl 0x7fa610b72c00 explorer_tester_mkdir>) [0 explorer_tester_mkdir S1 A8])
        (const_int 0 [0])) "main.c":282:5 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 98 97 99 2 (set (reg:DI 113)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -392 [0xfffffffffffffe78])) [14 tester+0 S8 A64])) "main.c":283:5 80 {*movdi_internal}
     (nil))
(insn 99 98 100 2 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "main.c":283:5 81 {*movsi_internal}
     (nil))
(insn 100 99 101 2 (set (reg:DI 114)
        (symbol_ref/f:DI ("*.LC22") [flags 0x2]  <var_decl 0x7fa6108e21b0 *.LC22>)) "main.c":283:5 80 {*movdi_internal}
     (nil))
(insn 101 100 102 2 (set (reg:DI 4 si)
        (reg:DI 114)) "main.c":283:5 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 114)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC22") [flags 0x2]  <var_decl 0x7fa6108e21b0 *.LC22>)
            (nil))))
(insn 102 101 103 2 (set (reg:DI 5 di)
        (reg:DI 113)) "main.c":283:5 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 113)
        (nil)))
(call_insn 103 102 104 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_chdir") [flags 0x41]  <function_decl 0x7fa610b72600 explorer_tester_chdir>) [0 explorer_tester_chdir S1 A8])
        (const_int 0 [0])) "main.c":283:5 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 104 103 105 2 (set (reg:DI 115)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -392 [0xfffffffffffffe78])) [14 tester+0 S8 A64])) "main.c":285:7 80 {*movdi_internal}
     (nil))
(insn 105 104 106 2 (set (reg:SI 2 cx)
        (const_int 1 [0x1])) "main.c":285:7 81 {*movsi_internal}
     (nil))
(insn 106 105 107 2 (set (reg:SI 1 dx)
        (const_int 0 [0])) "main.c":285:7 81 {*movsi_internal}
     (nil))
(insn 107 106 108 2 (set (reg:DI 116)
        (symbol_ref/f:DI ("*.LC37") [flags 0x2]  <var_decl 0x7fa610909000 *.LC37>)) "main.c":285:7 80 {*movdi_internal}
     (nil))
(insn 108 107 109 2 (set (reg:DI 4 si)
        (reg:DI 116)) "main.c":285:7 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 116)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC37") [flags 0x2]  <var_decl 0x7fa610909000 *.LC37>)
            (nil))))
(insn 109 108 110 2 (set (reg:DI 5 di)
        (reg:DI 115)) "main.c":285:7 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 115)
        (nil)))
(call_insn 110 109 111 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_create_file") [flags 0x41]  <function_decl 0x7fa610b72b00 explorer_tester_create_file>) [0 explorer_tester_create_file S1 A8])
        (const_int 0 [0])) "main.c":285:7 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 2 cx)
                (expr_list:REG_DEAD (reg:SI 1 dx)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 111 110 112 2 (parallel [
            (set (reg:DI 117)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -384 [0xfffffffffffffe80])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":286:7 230 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 112 111 113 2 (set (reg:SI 4 si)
        (const_int 373 [0x175])) "main.c":286:7 81 {*movsi_internal}
     (nil))
(insn 113 112 114 2 (set (reg:DI 5 di)
        (reg:DI 117)) "main.c":286:7 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 117)
        (nil)))
(call_insn 114 113 115 2 (call (mem:QI (symbol_ref:DI ("fill_random") [flags 0x3]  <function_decl 0x7fa610820900 fill_random>) [0 fill_random S1 A8])
        (const_int 0 [0])) "main.c":286:7 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 115 114 116 2 (parallel [
            (set (reg:DI 118)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -384 [0xfffffffffffffe80])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":286:30 230 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 116 115 117 2 (set (reg:SI 4 si)
        (const_int 373 [0x175])) "main.c":286:30 81 {*movsi_internal}
     (nil))
(insn 117 116 118 2 (set (reg:DI 5 di)
        (reg:DI 118)) "main.c":286:30 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 118)
        (nil)))
(call_insn 118 117 119 2 (call (mem:QI (symbol_ref:DI ("checksum_upd_bytes") [flags 0x3]  <function_decl 0x7fa610835500 checksum_upd_bytes>) [0 checksum_upd_bytes S1 A8])
        (const_int 0 [0])) "main.c":286:30 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 119 118 120 2 (parallel [
            (set (reg:DI 119)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -384 [0xfffffffffffffe80])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":287:7 230 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 120 119 121 2 (set (reg:DI 120)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -392 [0xfffffffffffffe78])) [14 tester+0 S8 A64])) "main.c":287:7 80 {*movdi_internal}
     (nil))
(insn 121 120 122 2 (set (reg:SI 37 r9)
        (const_int 1 [0x1])) "main.c":287:7 81 {*movsi_internal}
     (nil))
(insn 122 121 123 2 (set (reg:DI 36 r8)
        (reg:DI 119)) "main.c":287:7 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 119)
        (nil)))
(insn 123 122 124 2 (set (reg:SI 2 cx)
        (const_int 373 [0x175])) "main.c":287:7 81 {*movsi_internal}
     (nil))
(insn 124 123 125 2 (set (reg:SI 1 dx)
        (const_int 32 [0x20])) "main.c":287:7 81 {*movsi_internal}
     (nil))
(insn 125 124 126 2 (set (reg:DI 121)
        (symbol_ref/f:DI ("*.LC37") [flags 0x2]  <var_decl 0x7fa610909000 *.LC37>)) "main.c":287:7 80 {*movdi_internal}
     (nil))
(insn 126 125 127 2 (set (reg:DI 4 si)
        (reg:DI 121)) "main.c":287:7 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 121)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC37") [flags 0x2]  <var_decl 0x7fa610909000 *.LC37>)
            (nil))))
(insn 127 126 128 2 (set (reg:DI 5 di)
        (reg:DI 120)) "main.c":287:7 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 120)
        (nil)))
(call_insn 128 127 129 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_write") [flags 0x41]  <function_decl 0x7fa610b72a00 explorer_tester_write>) [0 explorer_tester_write S1 A8])
        (const_int 0 [0])) "main.c":287:7 898 {*call}
     (expr_list:REG_DEAD (reg:SI 37 r9)
        (expr_list:REG_DEAD (reg:DI 36 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:DI 4 si)
                    (expr_list:REG_DEAD (reg:SI 2 cx)
                        (expr_list:REG_DEAD (reg:SI 1 dx)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:DI (use (reg:DI 36 r8))
                        (expr_list:SI (use (reg:SI 37 r9))
                            (nil))))))))
(insn 129 128 130 2 (set (reg:DI 122)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -392 [0xfffffffffffffe78])) [14 tester+0 S8 A64])) "main.c":290:5 80 {*movdi_internal}
     (nil))
(insn 130 129 131 2 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "main.c":290:5 81 {*movsi_internal}
     (nil))
(insn 131 130 132 2 (set (reg:DI 123)
        (symbol_ref/f:DI ("*.LC36") [flags 0x2]  <var_decl 0x7fa6108fdf30 *.LC36>)) "main.c":290:5 80 {*movdi_internal}
     (nil))
(insn 132 131 133 2 (set (reg:DI 4 si)
        (reg:DI 123)) "main.c":290:5 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 123)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC36") [flags 0x2]  <var_decl 0x7fa6108fdf30 *.LC36>)
            (nil))))
(insn 133 132 134 2 (set (reg:DI 5 di)
        (reg:DI 122)) "main.c":290:5 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 122)
        (nil)))
(call_insn 134 133 135 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_cdpar") [flags 0x41]  <function_decl 0x7fa610b72500 explorer_tester_cdpar>) [0 explorer_tester_cdpar S1 A8])
        (const_int 0 [0])) "main.c":290:5 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 135 134 136 2 (set (reg:DI 124)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -392 [0xfffffffffffffe78])) [14 tester+0 S8 A64])) "main.c":292:5 80 {*movdi_internal}
     (nil))
(insn 136 135 137 2 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "main.c":292:5 81 {*movsi_internal}
     (nil))
(insn 137 136 138 2 (set (reg:DI 125)
        (symbol_ref/f:DI ("*.LC23") [flags 0x2]  <var_decl 0x7fa6108e2240 *.LC23>)) "main.c":292:5 80 {*movdi_internal}
     (nil))
(insn 138 137 139 2 (set (reg:DI 4 si)
        (reg:DI 125)) "main.c":292:5 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 125)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC23") [flags 0x2]  <var_decl 0x7fa6108e2240 *.LC23>)
            (nil))))
(insn 139 138 140 2 (set (reg:DI 5 di)
        (reg:DI 124)) "main.c":292:5 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 124)
        (nil)))
(call_insn 140 139 141 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_mkdir") [flags 0x41]  <function_decl 0x7fa610b72c00 explorer_tester_mkdir>) [0 explorer_tester_mkdir S1 A8])
        (const_int 0 [0])) "main.c":292:5 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 141 140 142 2 (set (reg:DI 126)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -392 [0xfffffffffffffe78])) [14 tester+0 S8 A64])) "main.c":293:5 80 {*movdi_internal}
     (nil))
(insn 142 141 143 2 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "main.c":293:5 81 {*movsi_internal}
     (nil))
(insn 143 142 144 2 (set (reg:DI 127)
        (symbol_ref/f:DI ("*.LC23") [flags 0x2]  <var_decl 0x7fa6108e2240 *.LC23>)) "main.c":293:5 80 {*movdi_internal}
     (nil))
(insn 144 143 145 2 (set (reg:DI 4 si)
        (reg:DI 127)) "main.c":293:5 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 127)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC23") [flags 0x2]  <var_decl 0x7fa6108e2240 *.LC23>)
            (nil))))
(insn 145 144 146 2 (set (reg:DI 5 di)
        (reg:DI 126)) "main.c":293:5 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 126)
        (nil)))
(call_insn 146 145 147 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_chdir") [flags 0x41]  <function_decl 0x7fa610b72600 explorer_tester_chdir>) [0 explorer_tester_chdir S1 A8])
        (const_int 0 [0])) "main.c":293:5 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 147 146 148 2 (set (reg:DI 128)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -392 [0xfffffffffffffe78])) [14 tester+0 S8 A64])) "main.c":295:7 80 {*movdi_internal}
     (nil))
(insn 148 147 149 2 (set (reg:SI 2 cx)
        (const_int 1 [0x1])) "main.c":295:7 81 {*movsi_internal}
     (nil))
(insn 149 148 150 2 (set (reg:SI 1 dx)
        (const_int 0 [0])) "main.c":295:7 81 {*movsi_internal}
     (nil))
(insn 150 149 151 2 (set (reg:DI 129)
        (symbol_ref/f:DI ("*.LC37") [flags 0x2]  <var_decl 0x7fa610909000 *.LC37>)) "main.c":295:7 80 {*movdi_internal}
     (nil))
(insn 151 150 152 2 (set (reg:DI 4 si)
        (reg:DI 129)) "main.c":295:7 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 129)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC37") [flags 0x2]  <var_decl 0x7fa610909000 *.LC37>)
            (nil))))
(insn 152 151 153 2 (set (reg:DI 5 di)
        (reg:DI 128)) "main.c":295:7 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 128)
        (nil)))
(call_insn 153 152 154 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_create_file") [flags 0x41]  <function_decl 0x7fa610b72b00 explorer_tester_create_file>) [0 explorer_tester_create_file S1 A8])
        (const_int 0 [0])) "main.c":295:7 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 2 cx)
                (expr_list:REG_DEAD (reg:SI 1 dx)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 154 153 155 2 (parallel [
            (set (reg:DI 130)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -384 [0xfffffffffffffe80])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":296:7 230 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 155 154 156 2 (set (reg:SI 4 si)
        (const_int 373 [0x175])) "main.c":296:7 81 {*movsi_internal}
     (nil))
(insn 156 155 157 2 (set (reg:DI 5 di)
        (reg:DI 130)) "main.c":296:7 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 130)
        (nil)))
(call_insn 157 156 158 2 (call (mem:QI (symbol_ref:DI ("fill_random") [flags 0x3]  <function_decl 0x7fa610820900 fill_random>) [0 fill_random S1 A8])
        (const_int 0 [0])) "main.c":296:7 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 158 157 159 2 (parallel [
            (set (reg:DI 131)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -384 [0xfffffffffffffe80])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":296:30 230 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 159 158 160 2 (set (reg:SI 4 si)
        (const_int 373 [0x175])) "main.c":296:30 81 {*movsi_internal}
     (nil))
(insn 160 159 161 2 (set (reg:DI 5 di)
        (reg:DI 131)) "main.c":296:30 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 131)
        (nil)))
(call_insn 161 160 162 2 (call (mem:QI (symbol_ref:DI ("checksum_upd_bytes") [flags 0x3]  <function_decl 0x7fa610835500 checksum_upd_bytes>) [0 checksum_upd_bytes S1 A8])
        (const_int 0 [0])) "main.c":296:30 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 162 161 163 2 (parallel [
            (set (reg:DI 132)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -384 [0xfffffffffffffe80])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":297:7 230 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 163 162 164 2 (set (reg:DI 133)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -392 [0xfffffffffffffe78])) [14 tester+0 S8 A64])) "main.c":297:7 80 {*movdi_internal}
     (nil))
(insn 164 163 165 2 (set (reg:SI 37 r9)
        (const_int 1 [0x1])) "main.c":297:7 81 {*movsi_internal}
     (nil))
(insn 165 164 166 2 (set (reg:DI 36 r8)
        (reg:DI 132)) "main.c":297:7 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 132)
        (nil)))
(insn 166 165 167 2 (set (reg:SI 2 cx)
        (const_int 373 [0x175])) "main.c":297:7 81 {*movsi_internal}
     (nil))
(insn 167 166 168 2 (set (reg:SI 1 dx)
        (const_int 48 [0x30])) "main.c":297:7 81 {*movsi_internal}
     (nil))
(insn 168 167 169 2 (set (reg:DI 134)
        (symbol_ref/f:DI ("*.LC37") [flags 0x2]  <var_decl 0x7fa610909000 *.LC37>)) "main.c":297:7 80 {*movdi_internal}
     (nil))
(insn 169 168 170 2 (set (reg:DI 4 si)
        (reg:DI 134)) "main.c":297:7 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 134)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC37") [flags 0x2]  <var_decl 0x7fa610909000 *.LC37>)
            (nil))))
(insn 170 169 171 2 (set (reg:DI 5 di)
        (reg:DI 133)) "main.c":297:7 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 133)
        (nil)))
(call_insn 171 170 172 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_write") [flags 0x41]  <function_decl 0x7fa610b72a00 explorer_tester_write>) [0 explorer_tester_write S1 A8])
        (const_int 0 [0])) "main.c":297:7 898 {*call}
     (expr_list:REG_DEAD (reg:SI 37 r9)
        (expr_list:REG_DEAD (reg:DI 36 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:DI 4 si)
                    (expr_list:REG_DEAD (reg:SI 2 cx)
                        (expr_list:REG_DEAD (reg:SI 1 dx)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:DI (use (reg:DI 36 r8))
                        (expr_list:SI (use (reg:SI 37 r9))
                            (nil))))))))
(insn 172 171 173 2 (set (reg:DI 135)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -392 [0xfffffffffffffe78])) [14 tester+0 S8 A64])) "main.c":300:7 80 {*movdi_internal}
     (nil))
(insn 173 172 174 2 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "main.c":300:7 81 {*movsi_internal}
     (nil))
(insn 174 173 175 2 (set (reg:DI 136)
        (symbol_ref/f:DI ("*.LC24") [flags 0x2]  <var_decl 0x7fa6108e22d0 *.LC24>)) "main.c":300:7 80 {*movdi_internal}
     (nil))
(insn 175 174 176 2 (set (reg:DI 4 si)
        (reg:DI 136)) "main.c":300:7 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 136)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC24") [flags 0x2]  <var_decl 0x7fa6108e22d0 *.LC24>)
            (nil))))
(insn 176 175 177 2 (set (reg:DI 5 di)
        (reg:DI 135)) "main.c":300:7 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 135)
        (nil)))
(call_insn 177 176 178 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_mkdir") [flags 0x41]  <function_decl 0x7fa610b72c00 explorer_tester_mkdir>) [0 explorer_tester_mkdir S1 A8])
        (const_int 0 [0])) "main.c":300:7 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 178 177 179 2 (set (reg:DI 137)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -392 [0xfffffffffffffe78])) [14 tester+0 S8 A64])) "main.c":301:7 80 {*movdi_internal}
     (nil))
(insn 179 178 180 2 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "main.c":301:7 81 {*movsi_internal}
     (nil))
(insn 180 179 181 2 (set (reg:DI 138)
        (symbol_ref/f:DI ("*.LC24") [flags 0x2]  <var_decl 0x7fa6108e22d0 *.LC24>)) "main.c":301:7 80 {*movdi_internal}
     (nil))
(insn 181 180 182 2 (set (reg:DI 4 si)
        (reg:DI 138)) "main.c":301:7 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 138)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC24") [flags 0x2]  <var_decl 0x7fa6108e22d0 *.LC24>)
            (nil))))
(insn 182 181 183 2 (set (reg:DI 5 di)
        (reg:DI 137)) "main.c":301:7 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 137)
        (nil)))
(call_insn 183 182 184 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_chdir") [flags 0x41]  <function_decl 0x7fa610b72600 explorer_tester_chdir>) [0 explorer_tester_chdir S1 A8])
        (const_int 0 [0])) "main.c":301:7 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 184 183 185 2 (set (reg:DI 139)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -392 [0xfffffffffffffe78])) [14 tester+0 S8 A64])) "main.c":303:9 80 {*movdi_internal}
     (nil))
(insn 185 184 186 2 (set (reg:SI 2 cx)
        (const_int 1 [0x1])) "main.c":303:9 81 {*movsi_internal}
     (nil))
(insn 186 185 187 2 (set (reg:SI 1 dx)
        (const_int 0 [0])) "main.c":303:9 81 {*movsi_internal}
     (nil))
(insn 187 186 188 2 (set (reg:DI 140)
        (symbol_ref/f:DI ("*.LC37") [flags 0x2]  <var_decl 0x7fa610909000 *.LC37>)) "main.c":303:9 80 {*movdi_internal}
     (nil))
(insn 188 187 189 2 (set (reg:DI 4 si)
        (reg:DI 140)) "main.c":303:9 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 140)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC37") [flags 0x2]  <var_decl 0x7fa610909000 *.LC37>)
            (nil))))
(insn 189 188 190 2 (set (reg:DI 5 di)
        (reg:DI 139)) "main.c":303:9 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 139)
        (nil)))
(call_insn 190 189 191 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_create_file") [flags 0x41]  <function_decl 0x7fa610b72b00 explorer_tester_create_file>) [0 explorer_tester_create_file S1 A8])
        (const_int 0 [0])) "main.c":303:9 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 2 cx)
                (expr_list:REG_DEAD (reg:SI 1 dx)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 191 190 192 2 (parallel [
            (set (reg:DI 141)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -384 [0xfffffffffffffe80])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":304:9 230 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 192 191 193 2 (set (reg:SI 4 si)
        (const_int 373 [0x175])) "main.c":304:9 81 {*movsi_internal}
     (nil))
(insn 193 192 194 2 (set (reg:DI 5 di)
        (reg:DI 141)) "main.c":304:9 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 141)
        (nil)))
(call_insn 194 193 195 2 (call (mem:QI (symbol_ref:DI ("fill_random") [flags 0x3]  <function_decl 0x7fa610820900 fill_random>) [0 fill_random S1 A8])
        (const_int 0 [0])) "main.c":304:9 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 195 194 196 2 (parallel [
            (set (reg:DI 142)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -384 [0xfffffffffffffe80])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":304:32 230 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 196 195 197 2 (set (reg:SI 4 si)
        (const_int 373 [0x175])) "main.c":304:32 81 {*movsi_internal}
     (nil))
(insn 197 196 198 2 (set (reg:DI 5 di)
        (reg:DI 142)) "main.c":304:32 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 142)
        (nil)))
(call_insn 198 197 199 2 (call (mem:QI (symbol_ref:DI ("checksum_upd_bytes") [flags 0x3]  <function_decl 0x7fa610835500 checksum_upd_bytes>) [0 checksum_upd_bytes S1 A8])
        (const_int 0 [0])) "main.c":304:32 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 199 198 200 2 (parallel [
            (set (reg:DI 143)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -384 [0xfffffffffffffe80])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":305:9 230 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 200 199 201 2 (set (reg:DI 144)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -392 [0xfffffffffffffe78])) [14 tester+0 S8 A64])) "main.c":305:9 80 {*movdi_internal}
     (nil))
(insn 201 200 202 2 (set (reg:SI 37 r9)
        (const_int 1 [0x1])) "main.c":305:9 81 {*movsi_internal}
     (nil))
(insn 202 201 203 2 (set (reg:DI 36 r8)
        (reg:DI 143)) "main.c":305:9 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 143)
        (nil)))
(insn 203 202 204 2 (set (reg:SI 2 cx)
        (const_int 373 [0x175])) "main.c":305:9 81 {*movsi_internal}
     (nil))
(insn 204 203 205 2 (set (reg:SI 1 dx)
        (const_int 64 [0x40])) "main.c":305:9 81 {*movsi_internal}
     (nil))
(insn 205 204 206 2 (set (reg:DI 145)
        (symbol_ref/f:DI ("*.LC37") [flags 0x2]  <var_decl 0x7fa610909000 *.LC37>)) "main.c":305:9 80 {*movdi_internal}
     (nil))
(insn 206 205 207 2 (set (reg:DI 4 si)
        (reg:DI 145)) "main.c":305:9 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 145)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC37") [flags 0x2]  <var_decl 0x7fa610909000 *.LC37>)
            (nil))))
(insn 207 206 208 2 (set (reg:DI 5 di)
        (reg:DI 144)) "main.c":305:9 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 144)
        (nil)))
(call_insn 208 207 209 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_write") [flags 0x41]  <function_decl 0x7fa610b72a00 explorer_tester_write>) [0 explorer_tester_write S1 A8])
        (const_int 0 [0])) "main.c":305:9 898 {*call}
     (expr_list:REG_DEAD (reg:SI 37 r9)
        (expr_list:REG_DEAD (reg:DI 36 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:DI 4 si)
                    (expr_list:REG_DEAD (reg:SI 2 cx)
                        (expr_list:REG_DEAD (reg:SI 1 dx)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:DI (use (reg:DI 36 r8))
                        (expr_list:SI (use (reg:SI 37 r9))
                            (nil))))))))
(insn 209 208 210 2 (set (reg:DI 146)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -392 [0xfffffffffffffe78])) [14 tester+0 S8 A64])) "main.c":308:7 80 {*movdi_internal}
     (nil))
(insn 210 209 211 2 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "main.c":308:7 81 {*movsi_internal}
     (nil))
(insn 211 210 212 2 (set (reg:DI 147)
        (symbol_ref/f:DI ("*.LC23") [flags 0x2]  <var_decl 0x7fa6108e2240 *.LC23>)) "main.c":308:7 80 {*movdi_internal}
     (nil))
(insn 212 211 213 2 (set (reg:DI 4 si)
        (reg:DI 147)) "main.c":308:7 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 147)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC23") [flags 0x2]  <var_decl 0x7fa6108e2240 *.LC23>)
            (nil))))
(insn 213 212 214 2 (set (reg:DI 5 di)
        (reg:DI 146)) "main.c":308:7 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 146)
        (nil)))
(call_insn 214 213 215 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_cdpar") [flags 0x41]  <function_decl 0x7fa610b72500 explorer_tester_cdpar>) [0 explorer_tester_cdpar S1 A8])
        (const_int 0 [0])) "main.c":308:7 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 215 214 216 2 (set (reg:DI 148)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -392 [0xfffffffffffffe78])) [14 tester+0 S8 A64])) "main.c":310:5 80 {*movdi_internal}
     (nil))
(insn 216 215 217 2 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "main.c":310:5 81 {*movsi_internal}
     (nil))
(insn 217 216 218 2 (set (reg:DI 149)
        (symbol_ref/f:DI ("*.LC36") [flags 0x2]  <var_decl 0x7fa6108fdf30 *.LC36>)) "main.c":310:5 80 {*movdi_internal}
     (nil))
(insn 218 217 219 2 (set (reg:DI 4 si)
        (reg:DI 149)) "main.c":310:5 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 149)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC36") [flags 0x2]  <var_decl 0x7fa6108fdf30 *.LC36>)
            (nil))))
(insn 219 218 220 2 (set (reg:DI 5 di)
        (reg:DI 148)) "main.c":310:5 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 148)
        (nil)))
(call_insn 220 219 221 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_cdpar") [flags 0x41]  <function_decl 0x7fa610b72500 explorer_tester_cdpar>) [0 explorer_tester_cdpar S1 A8])
        (const_int 0 [0])) "main.c":310:5 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 221 220 222 2 (set (reg:DI 150)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -392 [0xfffffffffffffe78])) [14 tester+0 S8 A64])) "main.c":312:3 80 {*movdi_internal}
     (nil))
(insn 222 221 223 2 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "main.c":312:3 81 {*movsi_internal}
     (nil))
(insn 223 222 224 2 (set (reg:DI 151)
        (symbol_ref/f:DI ("*.LC29") [flags 0x2]  <var_decl 0x7fa6108e2990 *.LC29>)) "main.c":312:3 80 {*movdi_internal}
     (nil))
(insn 224 223 225 2 (set (reg:DI 4 si)
        (reg:DI 151)) "main.c":312:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 151)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC29") [flags 0x2]  <var_decl 0x7fa6108e2990 *.LC29>)
            (nil))))
(insn 225 224 226 2 (set (reg:DI 5 di)
        (reg:DI 150)) "main.c":312:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 150)
        (nil)))
(call_insn 226 225 227 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_cdpar") [flags 0x41]  <function_decl 0x7fa610b72500 explorer_tester_cdpar>) [0 explorer_tester_cdpar S1 A8])
        (const_int 0 [0])) "main.c":312:3 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 227 226 228 2 (set (reg/f:DI 152)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -392 [0xfffffffffffffe78])) [14 tester+0 S8 A64])) "main.c":314:3 80 {*movdi_internal}
     (nil))
(insn 228 227 229 2 (set (reg/f:DI 82 [ _1 ])
        (mem/f:DI (plus:DI (reg/f:DI 152)
                (const_int 24 [0x18])) [6 tester_7->inner_explore+0 S8 A64])) "main.c":314:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 152)
        (nil)))
(insn 229 228 230 2 (set (reg:DI 153)
        (symbol_ref:DI ("search_callback") [flags 0x3]  <function_decl 0x7fa610840500 search_callback>)) "main.c":314:3 80 {*movdi_internal}
     (nil))
(insn 230 229 231 2 (set (reg:DI 1 dx)
        (reg:DI 153)) "main.c":314:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 153)
        (expr_list:REG_EQUAL (symbol_ref:DI ("search_callback") [flags 0x3]  <function_decl 0x7fa610840500 search_callback>)
            (nil))))
(insn 231 230 232 2 (set (reg:DI 154)
        (symbol_ref/f:DI ("*.LC37") [flags 0x2]  <var_decl 0x7fa610909000 *.LC37>)) "main.c":314:3 80 {*movdi_internal}
     (nil))
(insn 232 231 233 2 (set (reg:DI 4 si)
        (reg:DI 154)) "main.c":314:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 154)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC37") [flags 0x2]  <var_decl 0x7fa610909000 *.LC37>)
            (nil))))
(insn 233 232 234 2 (set (reg:DI 5 di)
        (reg/f:DI 82 [ _1 ])) "main.c":314:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 82 [ _1 ])
        (nil)))
(call_insn 234 233 235 2 (call (mem:QI (symbol_ref:DI ("explorer_search_recursive") [flags 0x41]  <function_decl 0x7fa610b6ea00 explorer_search_recursive>) [0 explorer_search_recursive S1 A8])
        (const_int 0 [0])) "main.c":314:3 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 235 234 236 2 (set (reg/f:DI 155)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -392 [0xfffffffffffffe78])) [14 tester+0 S8 A64])) "main.c":315:9 80 {*movdi_internal}
     (nil))
(insn 236 235 237 2 (set (reg:SI 83 [ _2 ])
        (mem:SI (plus:DI (reg/f:DI 155)
                (const_int 32 [0x20])) [1 tester_7->error+0 S4 A64])) "main.c":315:9 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 155)
        (nil)))
(insn 237 236 238 2 (set (reg:SI 84 [ search_err.24_3 ])
        (mem/c:SI (symbol_ref:DI ("search_err") [flags 0x2]  <var_decl 0x7fa6108411b0 search_err>) [1 search_err+0 S4 A32])) "main.c":315:17 81 {*movsi_internal}
     (nil))
(insn 238 237 239 2 (parallel [
            (set (reg:SI 85 [ _4 ])
                (ior:SI (reg:SI 83 [ _2 ])
                    (reg:SI 84 [ search_err.24_3 ])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":315:17 563 {*iorsi_1}
     (expr_list:REG_DEAD (reg:SI 84 [ search_err.24_3 ])
        (expr_list:REG_DEAD (reg:SI 83 [ _2 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 239 238 240 2 (set (reg/f:DI 156)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -392 [0xfffffffffffffe78])) [14 tester+0 S8 A64])) "main.c":315:17 80 {*movdi_internal}
     (nil))
(insn 240 239 241 2 (set (mem:SI (plus:DI (reg/f:DI 156)
                (const_int 32 [0x20])) [1 tester_7->error+0 S4 A64])
        (reg:SI 85 [ _4 ])) "main.c":315:17 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 156)
        (expr_list:REG_DEAD (reg:SI 85 [ _4 ])
            (nil))))
(insn 241 240 242 2 (set (reg:DI 157)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -392 [0xfffffffffffffe78])) [14 tester+0 S8 A64])) "main.c":317:3 80 {*movdi_internal}
     (nil))
(insn 242 241 243 2 (set (reg:DI 5 di)
        (reg:DI 157)) "main.c":317:3 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 157)
        (nil)))
(call_insn 243 242 253 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_destory") [flags 0x41]  <function_decl 0x7fa610b72400 explorer_tester_destory>) [0 explorer_tester_destory S1 A8])
        (const_int 0 [0])) "main.c":317:3 898 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 253 243 245 2 (const_int 0 [0]) "main.c":318:1 928 {nop}
     (nil))
(insn 245 253 246 2 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 19 frame)
                                (const_int -8 [0xfffffffffffffff8])) [9 D.3578+0 S8 A64])
                        (mem/v/f:DI (const_int 40 [0x28]) [0 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_TEST))
            (clobber (reg:DI 159))
        ]) "main.c":318:1 1270 {stack_protect_test_1_di}
     (expr_list:REG_UNUSED (reg:DI 159)
        (nil)))
(jump_insn 246 245 251 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 249)
            (pc))) "main.c":318:1 891 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 249)
;;  succ:       4
;;              3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
(note 251 246 247 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(call_insn 247 251 248 3 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fa61088e500 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) "main.c":318:1 898 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 19 [frame]

(barrier 248 247 249)
;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 1, flags: (RTL)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(code_label 249 248 252 4 47 (nil) [1 uses])
(note 252 249 0 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]


;; Function main (main, funcdef_no=29, decl_uid=3439, cgraph_uid=30, symbol_order=33)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 6.
verify found no changes in insn with uid = 8.
verify found no changes in insn with uid = 10.
verify found no changes in insn with uid = 12.
verify found no changes in insn with uid = 14.
verify found no changes in insn with uid = 16.
verify found no changes in insn with uid = 18.
verify found no changes in insn with uid = 20.
verify found no changes in insn with uid = 22.
verify found no changes in insn with uid = 24.
verify found no changes in insn with uid = 26.
verify found no changes in insn with uid = 28.
verify found no changes in insn with uid = 30.
verify found no changes in insn with uid = 32.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r83: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r83,l0) best AREG, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r83,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:7000
  a1(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000

   Insn 41(l0): point = 0
   Insn 40(l0): point = 2
   Insn 36(l0): point = 4
   Insn 33(l0): point = 6
   Insn 32(l0): point = 8
   Insn 31(l0): point = 10
   Insn 30(l0): point = 12
   Insn 29(l0): point = 14
   Insn 28(l0): point = 16
   Insn 27(l0): point = 18
   Insn 26(l0): point = 20
   Insn 25(l0): point = 22
   Insn 24(l0): point = 24
   Insn 23(l0): point = 26
   Insn 22(l0): point = 28
   Insn 21(l0): point = 30
   Insn 20(l0): point = 32
   Insn 19(l0): point = 34
   Insn 18(l0): point = 36
   Insn 17(l0): point = 38
   Insn 16(l0): point = 40
   Insn 15(l0): point = 42
   Insn 14(l0): point = 44
   Insn 13(l0): point = 46
   Insn 12(l0): point = 48
   Insn 11(l0): point = 50
   Insn 10(l0): point = 52
   Insn 9(l0): point = 54
   Insn 8(l0): point = 56
   Insn 7(l0): point = 58
   Insn 6(l0): point = 60
   Insn 5(l0): point = 62
 a0(r83): [3..4]
 a1(r82): [5..6]
Compressing live ranges: from 65 to 4 - 6%
Ranges after the compression:
 a0(r83): [0..1]
 a1(r82): [2..3]
  pref0:a0(r83)<-hr0@1500
  regions=1, blocks=3, points=4
    allocnos=2 (big 0), copies=0, conflicts=0, ranges=2
Disposition:
    1:r82  l0     0    0:r83  l0     0
+++Costs: overall -1000, reg -1000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


main

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 6 [bp] 7 [sp]
;;  ref usage 	r0={30d,16u} r1={15d} r2={15d} r4={15d} r5={15d} r6={1d,2u} r7={1d,16u} r8={14d} r9={14d} r10={14d} r11={14d} r12={14d} r13={14d} r14={14d} r15={14d} r16={1d,1u} r17={14d} r18={14d} r19={1d,2u} r20={15d} r21={15d} r22={15d} r23={15d} r24={15d} r25={15d} r26={15d} r27={15d} r28={14d} r29={14d} r30={14d} r31={14d} r32={14d} r33={14d} r34={14d} r35={14d} r36={15d} r37={15d} r38={14d} r39={14d} r44={14d} r45={14d} r46={14d} r47={14d} r48={14d} r49={14d} r50={14d} r51={14d} r52={14d} r53={14d} r54={14d} r55={14d} r56={14d} r57={14d} r58={14d} r59={14d} r60={14d} r61={14d} r62={14d} r63={14d} r64={14d} r65={14d} r66={14d} r67={14d} r68={14d} r69={14d} r70={14d} r71={14d} r72={14d} r73={14d} r74={14d} r75={14d} r82={1d,1u} r83={1d,1u} 
;;    total ref usage 1013{974d,39u,0e} in 32{18 regular + 14 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 82 83
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "main.c":321:3 83 {*movqi_internal}
     (nil))
(call_insn 6 5 7 2 (call (mem:QI (symbol_ref:DI ("test_file_write_inbound") [flags 0x3]  <function_decl 0x7fa610820700 test_file_write_inbound>) [0 test_file_write_inbound S1 A8])
        (const_int 0 [0])) "main.c":321:3 898 {*call}
     (expr_list:REG_DEAD (reg:QI 0 ax)
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (nil)))
(insn 7 6 8 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "main.c":322:3 83 {*movqi_internal}
     (nil))
(call_insn 8 7 9 2 (call (mem:QI (symbol_ref:DI ("test_file_write_outbound") [flags 0x3]  <function_decl 0x7fa61082c100 test_file_write_outbound>) [0 test_file_write_outbound S1 A8])
        (const_int 0 [0])) "main.c":322:3 898 {*call}
     (expr_list:REG_DEAD (reg:QI 0 ax)
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (nil)))
(insn 9 8 10 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "main.c":323:3 83 {*movqi_internal}
     (nil))
(call_insn 10 9 11 2 (call (mem:QI (symbol_ref:DI ("test_file_read_inbound") [flags 0x3]  <function_decl 0x7fa61082c300 test_file_read_inbound>) [0 test_file_read_inbound S1 A8])
        (const_int 0 [0])) "main.c":323:3 898 {*call}
     (expr_list:REG_DEAD (reg:QI 0 ax)
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (nil)))
(insn 11 10 12 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "main.c":324:3 83 {*movqi_internal}
     (nil))
(call_insn 12 11 13 2 (call (mem:QI (symbol_ref:DI ("test_file_read_outbound") [flags 0x3]  <function_decl 0x7fa61082c500 test_file_read_outbound>) [0 test_file_read_outbound S1 A8])
        (const_int 0 [0])) "main.c":324:3 898 {*call}
     (expr_list:REG_DEAD (reg:QI 0 ax)
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (nil)))
(insn 13 12 14 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "main.c":325:3 83 {*movqi_internal}
     (nil))
(call_insn 14 13 15 2 (call (mem:QI (symbol_ref:DI ("test_file_read_write") [flags 0x3]  <function_decl 0x7fa61082c700 test_file_read_write>) [0 test_file_read_write S1 A8])
        (const_int 0 [0])) "main.c":325:3 898 {*call}
     (expr_list:REG_DEAD (reg:QI 0 ax)
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (nil)))
(insn 15 14 16 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "main.c":327:3 83 {*movqi_internal}
     (nil))
(call_insn 16 15 17 2 (call (mem:QI (symbol_ref:DI ("test_dir_add_file") [flags 0x3]  <function_decl 0x7fa61082c900 test_dir_add_file>) [0 test_dir_add_file S1 A8])
        (const_int 0 [0])) "main.c":327:3 898 {*call}
     (expr_list:REG_DEAD (reg:QI 0 ax)
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (nil)))
(insn 17 16 18 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "main.c":328:3 83 {*movqi_internal}
     (nil))
(call_insn 18 17 19 2 (call (mem:QI (symbol_ref:DI ("test_dir_add_dir") [flags 0x3]  <function_decl 0x7fa61082cb00 test_dir_add_dir>) [0 test_dir_add_dir S1 A8])
        (const_int 0 [0])) "main.c":328:3 898 {*call}
     (expr_list:REG_DEAD (reg:QI 0 ax)
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (nil)))
(insn 19 18 20 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "main.c":329:3 83 {*movqi_internal}
     (nil))
(call_insn 20 19 21 2 (call (mem:QI (symbol_ref:DI ("test_dir_add_delete") [flags 0x3]  <function_decl 0x7fa61082cd00 test_dir_add_delete>) [0 test_dir_add_delete S1 A8])
        (const_int 0 [0])) "main.c":329:3 898 {*call}
     (expr_list:REG_DEAD (reg:QI 0 ax)
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (nil)))
(insn 21 20 22 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "main.c":330:3 83 {*movqi_internal}
     (nil))
(call_insn 22 21 23 2 (call (mem:QI (symbol_ref:DI ("test_dir_size") [flags 0x3]  <function_decl 0x7fa61082cf00 test_dir_size>) [0 test_dir_size S1 A8])
        (const_int 0 [0])) "main.c":330:3 898 {*call}
     (expr_list:REG_DEAD (reg:QI 0 ax)
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (nil)))
(insn 23 22 24 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "main.c":332:3 83 {*movqi_internal}
     (nil))
(call_insn 24 23 25 2 (call (mem:QI (symbol_ref:DI ("test_explorer_init") [flags 0x3]  <function_decl 0x7fa610835900 test_explorer_init>) [0 test_explorer_init S1 A8])
        (const_int 0 [0])) "main.c":332:3 898 {*call}
     (expr_list:REG_DEAD (reg:QI 0 ax)
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (nil)))
(insn 25 24 26 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "main.c":333:3 83 {*movqi_internal}
     (nil))
(call_insn 26 25 27 2 (call (mem:QI (symbol_ref:DI ("test_explorer_file1") [flags 0x3]  <function_decl 0x7fa610835b00 test_explorer_file1>) [0 test_explorer_file1 S1 A8])
        (const_int 0 [0])) "main.c":333:3 898 {*call}
     (expr_list:REG_DEAD (reg:QI 0 ax)
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (nil)))
(insn 27 26 28 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "main.c":334:3 83 {*movqi_internal}
     (nil))
(call_insn 28 27 29 2 (call (mem:QI (symbol_ref:DI ("test_explorer_file2") [flags 0x3]  <function_decl 0x7fa610835d00 test_explorer_file2>) [0 test_explorer_file2 S1 A8])
        (const_int 0 [0])) "main.c":334:3 898 {*call}
     (expr_list:REG_DEAD (reg:QI 0 ax)
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (nil)))
(insn 29 28 30 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "main.c":335:3 83 {*movqi_internal}
     (nil))
(call_insn 30 29 31 2 (call (mem:QI (symbol_ref:DI ("test_explorer_dir1") [flags 0x3]  <function_decl 0x7fa610835f00 test_explorer_dir1>) [0 test_explorer_dir1 S1 A8])
        (const_int 0 [0])) "main.c":335:3 898 {*call}
     (expr_list:REG_DEAD (reg:QI 0 ax)
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (nil)))
(insn 31 30 32 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "main.c":337:3 83 {*movqi_internal}
     (nil))
(call_insn 32 31 33 2 (call (mem:QI (symbol_ref:DI ("test_explorer_search") [flags 0x3]  <function_decl 0x7fa610840700 test_explorer_search>) [0 test_explorer_search S1 A8])
        (const_int 0 [0])) "main.c":337:3 898 {*call}
     (expr_list:REG_DEAD (reg:QI 0 ax)
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (nil)))
(insn 33 32 36 2 (set (reg:SI 82 [ _16 ])
        (const_int 0 [0])) "main.c":338:10 81 {*movsi_internal}
     (nil))
(insn 36 33 40 2 (set (reg:SI 83 [ <retval> ])
        (reg:SI 82 [ _16 ])) "main.c":339:1 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 82 [ _16 ])
        (nil)))
(insn 40 36 41 2 (set (reg/i:SI 0 ax)
        (reg:SI 83 [ <retval> ])) "main.c":339:1 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 83 [ <retval> ])
        (nil)))
(insn 41 40 0 2 (use (reg/i:SI 0 ax)) "main.c":339:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 19 [frame]

