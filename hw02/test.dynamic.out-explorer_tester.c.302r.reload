
;; Function explorer_tester_create (explorer_tester_create, funcdef_no=6, decl_uid=2097, cgraph_uid=7, symbol_order=6)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=48, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 19 to 7 (offset=32, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2:  (0) m  (1) re {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 6:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 7:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 8:  (1) rBwBz {*call_value}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 10:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 11:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 12:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 13:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 16:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 17:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 19:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 20:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 21:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 22:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 23:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 25:  (0) r  (1) i {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 27:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 28:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 29:  (0) r  (1) rem {*movdi_internal}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #1: **********

EBB 2

********** Pseudo live ranges #1: **********

  BB 2
   Insn 37: point = 0, n_alt = -1
   Insn 36: point = 0, n_alt = -2
   Insn 32: point = 1, n_alt = -2
   Insn 29: point = 3, n_alt = 3
   Insn 28: point = 4, n_alt = 0
   Insn 27: point = 4, n_alt = 3
   Insn 26: point = 4, n_alt = -2
   Insn 25: point = 5, n_alt = 4
   Insn 24: point = 6, n_alt = -2
   Insn 23: point = 7, n_alt = 3
   Insn 22: point = 8, n_alt = 1
   Insn 21: point = 9, n_alt = 3
   Insn 20: point = 10, n_alt = 5
   Insn 19: point = 11, n_alt = 3
   Insn 18: point = 12, n_alt = -2
   Insn 17: point = 13, n_alt = 0
   Insn 16: point = 13, n_alt = 0
   Insn 15: point = 13, n_alt = -2
   Insn 14: point = 14, n_alt = -2
   Insn 13: point = 15, n_alt = 2
   Insn 12: point = 15, n_alt = 3
   Insn 11: point = 16, n_alt = 3
   Insn 10: point = 17, n_alt = 5
   Insn 9: point = 18, n_alt = -2
   Insn 8: point = 19, n_alt = 0
   Insn 7: point = 19, n_alt = 2
   Insn 6: point = 19, n_alt = 2
   Insn 2: point = 19, n_alt = 5
 r82: [13..16]
 r83: [10..12]
 r84: [6..7]
 r85: [2..3]
 r86: [0..1]
 r87: [17..18]
 r88: [14..15]
 r89: [10..11]
 r90: [8..9]
 r91: [4..5]
Compressing live ranges: from 19 to 16 - 84%
Ranges after the compression:
 r82: [12..13]
 r83: [10..11]
 r84: [6..7]
 r85: [2..3]
 r86: [0..1]
 r87: [14..15]
 r88: [12..13]
 r89: [10..11]
 r90: [8..9]
 r91: [4..5]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 6
	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=48, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 19 to 7 (offset=32, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
changing reg in insn 11
changing reg in insn 15
changing reg in insn 18
changing reg in insn 20
changing reg in insn 23
changing reg in insn 24
changing reg in insn 29
changing reg in insn 32
changing reg in insn 32
changing reg in insn 36
changing reg in insn 9
changing reg in insn 10
changing reg in insn 12
changing reg in insn 14
changing reg in insn 19
changing reg in insn 20
changing reg in insn 21
changing reg in insn 22
changing reg in insn 25
changing reg in insn 26
deleting insn with uid = 9.
deleting insn with uid = 18.
deleting insn with uid = 32.
deleting insn with uid = 36.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 8.
verify found no changes in insn with uid = 16.
verify found no changes in insn with uid = 17.
verify found no changes in insn with uid = 28.


explorer_tester_create

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;;  ref usage 	r0={11d,9u} r1={7d,2u} r2={6d,1u} r4={8d,3u} r5={8d,4u} r6={1d,10u} r7={1d,6u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r17={4d} r18={4d} r19={1d,1u} r20={5d} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={5d} r37={5d} r38={4d} r39={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} 
;;    total ref usage 337{301d,36u,0e} in 24{20 regular + 4 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 82 83 84 85 86 87 88 89 90 91
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 name+0 S8 A64])
        (reg:DI 5 di [ name ])) "tester/explorer_tester.c":8:60 80 {*movdi_internal}
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 4 si)
        (const_int 40 [0x28])) "tester/explorer_tester.c":9:34 80 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:DI 5 di)
        (const_int 1 [0x1])) "tester/explorer_tester.c":9:34 80 {*movdi_internal}
     (nil))
(call_insn 8 7 10 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("calloc") [flags 0x41]  <function_decl 0x7fb9492d8500 calloc>) [0 __builtin_calloc S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":9:34 909 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 10 8 11 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [11 self+0 S8 A64])
        (reg/f:DI 0 ax [87])) "tester/explorer_tester.c":9:34 80 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (reg/f:DI 0 ax [orig:82 _1 ] [82])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [11 self+0 S8 A64])) "tester/explorer_tester.c":10:15 80 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:DI 2 cx [88])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 name+0 S8 A64])) "tester/explorer_tester.c":10:3 80 {*movdi_internal}
     (nil))
(insn 13 12 14 2 (set (reg:DI 1 dx)
        (const_int 20 [0x14])) "tester/explorer_tester.c":10:3 80 {*movdi_internal}
     (nil))
(insn 14 13 15 2 (set (reg:DI 4 si)
        (reg:DI 2 cx [88])) "tester/explorer_tester.c":10:3 80 {*movdi_internal}
     (nil))
(insn 15 14 16 2 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:82 _1 ] [82])) "tester/explorer_tester.c":10:3 80 {*movdi_internal}
     (nil))
(call_insn 16 15 17 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strncpy") [flags 0x41]  <function_decl 0x7fb9492c0e00 strncpy>) [0 __builtin_strncpy S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":10:3 909 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(call_insn 17 16 19 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("explorer_new") [flags 0x41]  <function_decl 0x7fb949341e00 explorer_new>) [0 explorer_new S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":11:25 909 {*call_value}
     (nil)
    (nil))
(insn 19 17 20 2 (set (reg/f:DI 1 dx [89])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [11 self+0 S8 A64])) "tester/explorer_tester.c":11:23 80 {*movdi_internal}
     (nil))
(insn 20 19 21 2 (set (mem/f:DI (plus:DI (reg/f:DI 1 dx [89])
                (const_int 24 [0x18])) [2 self_6->inner_explore+0 S8 A64])
        (reg/f:DI 0 ax [orig:83 _2 ] [83])) "tester/explorer_tester.c":11:23 80 {*movdi_internal}
     (nil))
(insn 21 20 22 2 (set (reg/f:DI 0 ax [90])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [11 self+0 S8 A64])) "tester/explorer_tester.c":12:15 80 {*movdi_internal}
     (nil))
(insn 22 21 23 2 (set (mem:SI (plus:DI (reg/f:DI 0 ax [90])
                (const_int 32 [0x20])) [4 self_6->error+0 S4 A64])
        (const_int 0 [0])) "tester/explorer_tester.c":12:15 81 {*movsi_internal}
     (nil))
(insn 23 22 24 2 (set (reg/f:DI 0 ax [orig:84 _3 ] [84])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [11 self+0 S8 A64])) "tester/explorer_tester.c":13:51 80 {*movdi_internal}
     (nil))
(insn 24 23 25 2 (set (reg:DI 4 si)
        (reg/f:DI 0 ax [orig:84 _3 ] [84])) "tester/explorer_tester.c":13:3 80 {*movdi_internal}
     (nil))
(insn 25 24 26 2 (set (reg:DI 0 ax [91])
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7fb949062510 *.LC0>)) "tester/explorer_tester.c":13:3 80 {*movdi_internal}
     (nil))
(insn 26 25 27 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [91])) "tester/explorer_tester.c":13:3 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7fb949062510 *.LC0>)
        (nil)))
(insn 27 26 28 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "tester/explorer_tester.c":13:3 83 {*movqi_internal}
     (nil))
(call_insn 28 27 29 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fb9492c6000 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":13:3 909 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 29 28 37 2 (set (reg/f:DI 0 ax [orig:85 _13 ] [85])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [11 self+0 S8 A64])) "tester/explorer_tester.c":14:10 80 {*movdi_internal}
     (nil))
(insn 37 29 39 2 (use (reg/i:DI 0 ax)) "tester/explorer_tester.c":15:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(note 39 37 0 NOTE_INSN_DELETED)

;; Function explorer_tester_destory (explorer_tester_destory, funcdef_no=7, decl_uid=2099, cgraph_uid=8, symbol_order=7)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 6:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 7:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 8:  (0) r {*cmpdi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 11:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 12:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 14:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 17:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 18:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 19:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 22:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 24:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 29:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 31:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 34:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 36:  (0) rBwBz {*call}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #1: **********

EBB 2 3
EBB 4 5
EBB 6
EBB 7 8

********** Pseudo live ranges #1: **********

  BB 8
   Insn 42: point = 0, n_alt = -1
  BB 7
   Insn 36: point = 0, n_alt = 0
   Insn 35: point = 0, n_alt = -2
   Insn 34: point = 1, n_alt = 3
  BB 5
   Insn 39: point = 2, n_alt = -1
   Insn 24: point = 2, n_alt = 0
   Insn 23: point = 2, n_alt = -2
   Insn 22: point = 3, n_alt = 4
  BB 6
   Insn 31: point = 4, n_alt = 0
   Insn 30: point = 4, n_alt = -2
   Insn 29: point = 5, n_alt = 4
  BB 4
   Insn 20: point = 6, n_alt = -1
   Insn 19: point = 6, n_alt = 0
   Insn 18: point = 7, n_alt = 0
   Insn 17: point = 9, n_alt = 3
  BB 3
   Insn 14: point = 10, n_alt = 0
   Insn 13: point = 10, n_alt = -2
   Insn 12: point = 11, n_alt = 3
   Insn 11: point = 13, n_alt = 3
  BB 2
   Insn 9: point = 14, n_alt = -1
   Insn 8: point = 14, n_alt = 0
   Insn 7: point = 15, n_alt = 3
   Insn 6: point = 17, n_alt = 3
   Insn 2: point = 18, n_alt = 5
 r82: [14..15]
 r83: [10..11]
 r84: [6..7]
 r85: [16..17]
 r86: [12..13]
 r87: [8..9]
 r88: [2..3]
 r89: [4..5]
 r90: [0..1]
Compressing live ranges: from 18 to 18 - 100%
Ranges after the compression:
 r82: [14..15]
 r83: [10..11]
 r84: [6..7]
 r85: [16..17]
 r86: [12..13]
 r87: [8..9]
 r88: [2..3]
 r89: [4..5]
 r90: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 6
	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
changing reg in insn 7
changing reg in insn 8
changing reg in insn 12
changing reg in insn 13
changing reg in insn 18
changing reg in insn 19
changing reg in insn 6
changing reg in insn 7
changing reg in insn 11
changing reg in insn 12
changing reg in insn 17
changing reg in insn 18
changing reg in insn 22
changing reg in insn 23
changing reg in insn 29
changing reg in insn 30
changing reg in insn 34
changing reg in insn 35
starting the processing of deferred insns
ending the processing of deferred insns


explorer_tester_destory

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;;  ref usage 	r0={14d,9u} r1={5d} r2={5d} r4={5d} r5={9d,5u} r6={1d,13u} r7={1d,12u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r17={6d,2u} r18={4d} r19={1d,1u} r20={5d} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={5d} r37={5d} r38={4d} r39={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} 
;;    total ref usage 343{301d,42u,0e} in 24{20 regular + 4 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags] 82 85
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [11 self+0 S8 A64])
        (reg:DI 5 di [ self ])) "tester/explorer_tester.c":16:60 80 {*movdi_internal}
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 0 ax [85])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [11 self+0 S8 A64])) "tester/explorer_tester.c":17:11 80 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg/f:DI 0 ax [orig:82 _1 ] [82])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [85])
                (const_int 24 [0x18])) [2 self_7(D)->inner_explore+0 S8 A64])) "tester/explorer_tester.c":17:11 80 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:82 _1 ] [82])
            (const_int 0 [0]))) "tester/explorer_tester.c":17:6 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 9 8 10 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 15)
            (pc))) "tester/explorer_tester.c":17:6 891 {*jcc}
     (nil)
 -> 15)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 83 86
(note 10 9 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 3 (set (reg/f:DI 0 ax [86])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [11 self+0 S8 A64])) "tester/explorer_tester.c":18:5 80 {*movdi_internal}
     (nil))
(insn 12 11 13 3 (set (reg/f:DI 0 ax [orig:83 _2 ] [83])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [86])
                (const_int 24 [0x18])) [2 self_7(D)->inner_explore+0 S8 A64])) "tester/explorer_tester.c":18:5 80 {*movdi_internal}
     (nil))
(insn 13 12 14 3 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:83 _2 ] [83])) "tester/explorer_tester.c":18:5 80 {*movdi_internal}
     (nil))
(call_insn 14 13 15 3 (call (mem:QI (symbol_ref:DI ("explorer_release") [flags 0x41]  <function_decl 0x7fb949341f00 explorer_release>) [0 explorer_release S1 A8])
        (const_int 0 [0])) "tester/explorer_tester.c":18:5 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       2
;;              3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags] 84 87
(code_label 15 14 16 4 4 (nil) [1 uses])
(note 16 15 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 4 (set (reg/f:DI 0 ax [87])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [11 self+0 S8 A64])) "tester/explorer_tester.c":20:11 80 {*movdi_internal}
     (nil))
(insn 18 17 19 4 (set (reg:SI 0 ax [orig:84 _3 ] [84])
        (mem:SI (plus:DI (reg/f:DI 0 ax [87])
                (const_int 32 [0x20])) [4 self_7(D)->error+0 S4 A64])) "tester/explorer_tester.c":20:11 81 {*movsi_internal}
     (nil))
(insn 19 18 20 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:84 _3 ] [84])
            (const_int 0 [0]))) "tester/explorer_tester.c":20:6 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 20 19 21 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 27)
            (pc))) "tester/explorer_tester.c":20:6 891 {*jcc}
     (nil)
 -> 27)
;;  succ:       5 (FALLTHRU)
;;              6
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 88
(note 21 20 22 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 5 (set (reg:DI 0 ax [88])
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7fb949062a20 *.LC1>)) "tester/explorer_tester.c":21:5 80 {*movdi_internal}
     (nil))
(insn 23 22 24 5 (set (reg:DI 5 di)
        (reg:DI 0 ax [88])) "tester/explorer_tester.c":21:5 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7fb949062a20 *.LC1>)
        (nil)))
(call_insn 24 23 39 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fb9492c6700 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":21:5 909 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 39 24 40 5 (set (pc)
        (label_ref 32)) 892 {jump}
     (nil)
 -> 32)
;;  succ:       7 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 40 39 27)
;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 7, flags: (RTL, MODIFIED)
;;  pred:       4
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 89
(code_label 27 40 28 6 5 (nil) [1 uses])
(note 28 27 29 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 30 6 (set (reg:DI 0 ax [89])
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7fb949062ab0 *.LC2>)) "tester/explorer_tester.c":23:5 80 {*movdi_internal}
     (nil))
(insn 30 29 31 6 (set (reg:DI 5 di)
        (reg:DI 0 ax [89])) "tester/explorer_tester.c":23:5 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7fb949062ab0 *.LC2>)
        (nil)))
(call_insn 31 30 32 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fb9492c6700 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":23:5 909 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       7 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 7, loop depth 0, maybe hot
;;  prev block 6, next block 8, flags: (RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;;              5 [always] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 90
(code_label 32 31 33 7 6 (nil) [1 uses])
(note 33 32 34 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 34 33 35 7 (set (reg:DI 0 ax [90])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [11 self+0 S8 A64])) "tester/explorer_tester.c":25:3 80 {*movdi_internal}
     (nil))
(insn 35 34 36 7 (set (reg:DI 5 di)
        (reg:DI 0 ax [90])) "tester/explorer_tester.c":25:3 80 {*movdi_internal}
     (nil))
(call_insn 36 35 41 7 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7fb9492ddc00 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) "tester/explorer_tester.c":25:3 898 {*call}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       8 [always]  (FALLTHRU) tester/explorer_tester.c:26:1
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 8, loop depth 0, maybe hot
;;  prev block 7, next block 1, flags: (RTL, MODIFIED)
;;  pred:       7 [always]  (FALLTHRU) tester/explorer_tester.c:26:1
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(note 41 36 42 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 43 8 (const_int 0 [0]) "tester/explorer_tester.c":26:1 928 {nop}
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(note 43 42 0 NOTE_INSN_DELETED)

;; Function explorer_tester_chdir (explorer_tester_chdir, funcdef_no=8, decl_uid=2107, cgraph_uid=9, symbol_order=8)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=64, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 19 to 7 (offset=48, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 3:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 4:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 8:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 17:  (0) r  (1) i {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 19:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 20:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 21:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 22:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 23:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (1) rBwBz {*call_value}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 28:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 29:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 30:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 31:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 32:  (0) r  (1) i {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 33:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 38:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 40:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 47:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 48:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 49:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 50:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 52:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 53:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 56:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 58:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 61:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 62:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 63:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 64:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 65:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 66:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 68:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 71:  (0) r  (1) i {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 73:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 74:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 79:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 81:  (1) rBwBz {*call_value}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #1: **********

EBB 2 3 4 5
EBB 6
EBB 8
EBB 9
EBB 7

********** Pseudo live ranges #1: **********

  BB 7
  BB 8
   Insn 93: point = 0, n_alt = -1
   Insn 92: point = 0, n_alt = -1
  BB 9
   Insn 97: point = 0, n_alt = -1
  BB 6
   Insn 88: point = 0, n_alt = -1
   Insn 81: point = 0, n_alt = 0
   Insn 80: point = 0, n_alt = -2
   Insn 79: point = 1, n_alt = 4
  BB 5
   Insn 86: point = 2, n_alt = -1
   Insn 74: point = 2, n_alt = 0
   Insn 73: point = 2, n_alt = 3
   Insn 72: point = 2, n_alt = -2
   Insn 71: point = 3, n_alt = 4
   Insn 70: point = 4, n_alt = -2
   Insn 69: point = 5, n_alt = -2
   Insn 68: point = 6, n_alt = 3
   Insn 67: point = 7, n_alt = -2
   Insn 66: point = 9, n_alt = 3
   Insn 65: point = 11, n_alt = 3
   Insn 64: point = 13, n_alt = 3
   Insn 63: point = 15, n_alt = 3
   Insn 62: point = 16, n_alt = 1
   Insn 61: point = 17, n_alt = 3
  BB 4
   Insn 59: point = 18, n_alt = -1
   Insn 58: point = 18, n_alt = 0
   Insn 57: point = 19, n_alt = -2
   Insn 56: point = 20, n_alt = 0
   Insn 55: point = 20, n_alt = -2
   Insn 54: point = 21, n_alt = -2
   Insn 53: point = 22, n_alt = 2
   Insn 52: point = 22, n_alt = 3
   Insn 51: point = 23, n_alt = -2
   Insn 50: point = 25, n_alt = 3
   Insn 49: point = 27, n_alt = 3
   Insn 48: point = 29, n_alt = 3
   Insn 47: point = 31, n_alt = 3
  BB 3
   Insn 41: point = 32, n_alt = -1
   Insn 40: point = 32, n_alt = 0
   Insn 39: point = 33, n_alt = -2
   Insn 38: point = 34, n_alt = 0
   Insn 37: point = 34, n_alt = -2
   Insn 36: point = 35, n_alt = -2
   Insn 35: point = 36, n_alt = -2
   Insn 34: point = 37, n_alt = -2
   Insn 33: point = 38, n_alt = 4
   Insn 32: point = 39, n_alt = 4
   Insn 31: point = 39, n_alt = 3
   Insn 30: point = 40, n_alt = 0
   Insn 29: point = 41, n_alt = 0
   Insn 28: point = 42, n_alt = 1
   Insn 27: point = 43, n_alt = -2
   Insn 26: point = 44, n_alt = 0
   Insn 25: point = 44, n_alt = -2
   Insn 24: point = 45, n_alt = -2
   Insn 23: point = 46, n_alt = 3
   Insn 22: point = 47, n_alt = 3
   Insn 21: point = 49, n_alt = 3
   Insn 20: point = 50, n_alt = 0
   Insn 19: point = 50, n_alt = 3
   Insn 18: point = 50, n_alt = -2
   Insn 17: point = 51, n_alt = 4
  BB 2
   Insn 11: point = 52, n_alt = -1
   Insn 10: point = 52, n_alt = 0
   Insn 9: point = 53, n_alt = 0
   Insn 8: point = 55, n_alt = 3
   Insn 4: point = 56, n_alt = 1
   Insn 3: point = 56, n_alt = 5
   Insn 2: point = 56, n_alt = 5
 r82: [52..53]
 r83: [44..47]
 r84: [42..43]
 r85: [36..41]
 r86: [32..33]
 r87: [28..29]
 r88: [26..27]
 r89: [24..25]
 r90: [20..23]
 r91: [18..19]
 r92: [12..13]
 r93: [10..11]
 r94: [8..9]
 r95: [4..7]
 r96: [54..55]
 r97: [50..51]
 r98: [48..49]
 r99: [45..46]
 r100: [35..40]
 r101: [34..39]
 r102: [37..38]
 r103: [30..31]
 r104: [21..22]
 r105: [16..17]
 r106: [14..15]
 r107: [5..6]
 r108: [2..3]
 r109: [0..1]
Compressing live ranges: from 56 to 44 - 78%
Ranges after the compression:
 r82: [40..41]
 r83: [34..35]
 r84: [32..33]
 r85: [30..31]
 r86: [28..29]
 r87: [24..25]
 r88: [22..23]
 r89: [20..21]
 r90: [18..19]
 r91: [16..17]
 r92: [10..11]
 r93: [8..9]
 r94: [6..7]
 r95: [4..5]
 r96: [42..43]
 r97: [38..39]
 r98: [36..37]
 r99: [34..35]
 r100: [30..31]
 r101: [30..31]
 r102: [30..31]
 r103: [26..27]
 r104: [18..19]
 r105: [14..15]
 r106: [12..13]
 r107: [4..5]
 r108: [2..3]
 r109: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 6
	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=64, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 19 to 7 (offset=48, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
changing reg in insn 9
changing reg in insn 10
changing reg in insn 22
changing reg in insn 25
changing reg in insn 27
changing reg in insn 28
changing reg in insn 29
changing reg in insn 35
changing reg in insn 39
changing reg in insn 40
changing reg in insn 48
changing reg in insn 49
changing reg in insn 49
changing reg in insn 50
changing reg in insn 50
changing reg in insn 51
changing reg in insn 51
changing reg in insn 55
changing reg in insn 57
changing reg in insn 58
changing reg in insn 64
changing reg in insn 65
changing reg in insn 65
changing reg in insn 66
changing reg in insn 66
changing reg in insn 67
changing reg in insn 67
changing reg in insn 70
changing reg in insn 8
changing reg in insn 9
changing reg in insn 17
changing reg in insn 18
changing reg in insn 21
changing reg in insn 22
changing reg in insn 23
changing reg in insn 24
changing reg in insn 30
changing reg in insn 36
changing reg in insn 31
changing reg in insn 37
changing reg in insn 33
changing reg in insn 34
changing reg in insn 47
changing reg in insn 48
changing reg in insn 52
changing reg in insn 54
changing reg in insn 61
changing reg in insn 62
changing reg in insn 63
changing reg in insn 64
changing reg in insn 68
changing reg in insn 69
changing reg in insn 71
changing reg in insn 72
changing reg in insn 79
changing reg in insn 80
deleting insn with uid = 27.
deleting insn with uid = 34.
deleting insn with uid = 35.
deleting insn with uid = 36.
deleting insn with uid = 39.
deleting insn with uid = 57.
starting the processing of deferred insns
ending the processing of deferred insns


explorer_tester_chdir

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 36 [r8]
;;  ref usage 	r0={28d,24u} r1={11d,5u} r2={10d,3u} r4={11d,5u} r5={13d,7u} r6={1d,24u} r7={1d,15u} r8={6d} r9={6d} r10={6d} r11={6d} r12={6d} r13={6d} r14={6d} r15={6d} r17={9d,3u} r18={6d} r19={1d,1u} r20={7d} r21={7d} r22={7d} r23={7d} r24={7d} r25={7d} r26={7d} r27={7d} r28={6d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={8d,1u} r37={7d} r38={6d} r39={6d} r44={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} 
;;    total ref usage 550{462d,88u,0e} in 61{55 regular + 6 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags] 82 96
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [11 self+0 S8 A64])
        (reg:DI 5 di [ self ])) "tester/explorer_tester.c":29:42 80 {*movdi_internal}
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [1 name+0 S8 A64])
        (reg:DI 4 si [ name ])) "tester/explorer_tester.c":29:42 80 {*movdi_internal}
     (nil))
(insn 4 3 5 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [4 success+0 S4 A32])
        (reg:SI 1 dx [ success ])) "tester/explorer_tester.c":29:42 81 {*movsi_internal}
     (nil))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg/f:DI 0 ax [96])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [11 self+0 S8 A64])) "tester/explorer_tester.c":30:11 80 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:SI 0 ax [orig:82 _1 ] [82])
        (mem:SI (plus:DI (reg/f:DI 0 ax [96])
                (const_int 32 [0x20])) [4 self_17(D)->error+0 S4 A64])) "tester/explorer_tester.c":30:11 81 {*movsi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:82 _1 ] [82])
            (const_int 0 [0]))) "tester/explorer_tester.c":30:6 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 11 10 16 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 91)
            (pc))) "tester/explorer_tester.c":30:6 891 {*jcc}
     (nil)
 -> 91)
;;  succ:       8 tester/explorer_tester.c:31:5
;;              3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 83 84 85 86 97 98 99 100 101 102
(note 16 11 17 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 3 (set (reg:DI 0 ax [97])
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7fb949071120 *.LC3>)) "tester/explorer_tester.c":33:3 80 {*movdi_internal}
     (nil))
(insn 18 17 19 3 (set (reg:DI 5 di)
        (reg:DI 0 ax [97])) "tester/explorer_tester.c":33:3 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7fb949071120 *.LC3>)
        (nil)))
(insn 19 18 20 3 (set (reg:QI 0 ax)
        (const_int 0 [0])) "tester/explorer_tester.c":33:3 83 {*movqi_internal}
     (nil))
(call_insn 20 19 21 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fb9492c6000 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":33:3 909 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 21 20 22 3 (set (reg/f:DI 0 ax [98])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [11 self+0 S8 A64])) "tester/explorer_tester.c":34:16 80 {*movdi_internal}
     (nil))
(insn 22 21 23 3 (set (reg/f:DI 0 ax [orig:83 _2 ] [83])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [98])
                (const_int 24 [0x18])) [2 self_17(D)->inner_explore+0 S8 A64])) "tester/explorer_tester.c":34:16 80 {*movdi_internal}
     (nil))
(insn 23 22 24 3 (set (reg:DI 1 dx [99])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [1 name+0 S8 A64])) "tester/explorer_tester.c":34:16 80 {*movdi_internal}
     (nil))
(insn 24 23 25 3 (set (reg:DI 4 si)
        (reg:DI 1 dx [99])) "tester/explorer_tester.c":34:16 80 {*movdi_internal}
     (nil))
(insn 25 24 26 3 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:83 _2 ] [83])) "tester/explorer_tester.c":34:16 80 {*movdi_internal}
     (nil))
(call_insn 26 25 28 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("explorer_chdir") [flags 0x41]  <function_decl 0x7fb94936e700 explorer_chdir>) [0 explorer_chdir S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":34:16 909 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 28 26 29 3 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [4 result+0 S4 A32])
        (reg:SI 0 ax [orig:84 _3 ] [84])) "tester/explorer_tester.c":34:7 81 {*movsi_internal}
     (nil))
(insn 29 28 30 3 (set (reg:SI 1 dx [orig:85 result.0_4 ] [85])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [4 result+0 S4 A32])) "tester/explorer_tester.c":36:8 81 {*movsi_internal}
     (nil))
(insn 30 29 31 3 (set (reg:SI 4 si [100])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [4 success+0 S4 A32])) "tester/explorer_tester.c":36:8 81 {*movsi_internal}
     (nil))
(insn 31 30 32 3 (set (reg:DI 0 ax [101])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [11 self+0 S8 A64])) "tester/explorer_tester.c":36:8 80 {*movdi_internal}
     (nil))
(insn 32 31 33 3 (set (reg:DI 36 r8)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7fb9490711b0 *.LC4>)) "tester/explorer_tester.c":36:8 80 {*movdi_internal}
     (nil))
(insn 33 32 37 3 (set (reg:DI 2 cx [102])
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7fb949071240 *.LC5>)) "tester/explorer_tester.c":36:8 80 {*movdi_internal}
     (nil))
(insn 37 33 38 3 (set (reg:DI 5 di)
        (reg:DI 0 ax [101])) "tester/explorer_tester.c":36:8 80 {*movdi_internal}
     (nil))
(call_insn 38 37 40 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("check_success") [flags 0x3]  <function_decl 0x7fb94901d900 check_success>) [0 check_success S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":36:8 909 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 36 r8))
                        (nil)))))))
(insn 40 38 41 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:86 _5 ] [86])
            (const_int 0 [0]))) "tester/explorer_tester.c":36:6 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 41 40 46 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 96)
            (pc))) "tester/explorer_tester.c":36:6 891 {*jcc}
     (nil)
 -> 96)
;;  succ:       9 tester/explorer_tester.c:37:5
;;              4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 87 88 89 90 91 103 104
(note 46 41 47 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 47 46 48 4 (set (reg/f:DI 0 ax [103])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [11 self+0 S8 A64])) "tester/explorer_tester.c":38:19 80 {*movdi_internal}
     (nil))
(insn 48 47 49 4 (set (reg/f:DI 0 ax [orig:87 _6 ] [87])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [103])
                (const_int 24 [0x18])) [2 self_17(D)->inner_explore+0 S8 A64])) "tester/explorer_tester.c":38:19 80 {*movdi_internal}
     (nil))
(insn 49 48 50 4 (set (reg/f:DI 0 ax [orig:88 _7 ] [88])
        (mem/f:DI (reg/f:DI 0 ax [orig:87 _6 ] [87]) [5 _6->cwd+0 S8 A64])) "tester/explorer_tester.c":38:34 80 {*movdi_internal}
     (nil))
(insn 50 49 51 4 (set (reg/f:DI 0 ax [orig:89 _8 ] [89])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:88 _7 ] [88])
                (const_int 24 [0x18])) [8 _7->base+0 S8 A64])) "tester/explorer_tester.c":38:39 80 {*movdi_internal}
     (nil))
(insn 51 50 52 4 (set (reg/f:DI 2 cx [orig:90 _9 ] [90])
        (reg/f:DI 0 ax [orig:89 _8 ] [89])) "tester/explorer_tester.c":38:45 80 {*movdi_internal}
     (nil))
(insn 52 51 53 4 (set (reg:DI 0 ax [104])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [1 name+0 S8 A64])) "tester/explorer_tester.c":38:7 80 {*movdi_internal}
     (nil))
(insn 53 52 54 4 (set (reg:DI 1 dx)
        (const_int 32 [0x20])) "tester/explorer_tester.c":38:7 80 {*movdi_internal}
     (nil))
(insn 54 53 55 4 (set (reg:DI 4 si)
        (reg:DI 0 ax [104])) "tester/explorer_tester.c":38:7 80 {*movdi_internal}
     (nil))
(insn 55 54 56 4 (set (reg:DI 5 di)
        (reg/f:DI 2 cx [orig:90 _9 ] [90])) "tester/explorer_tester.c":38:7 80 {*movdi_internal}
     (nil))
(call_insn/i 56 55 58 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strncmp") [flags 0x41]  <function_decl 0x7fb9492c0c00 strncmp>) [0 __builtin_strncmp S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":38:7 909 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 58 56 59 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:91 _10 ] [91])
            (const_int 0 [0]))) "tester/explorer_tester.c":38:6 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 59 58 60 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 77)
            (pc))) "tester/explorer_tester.c":38:6 891 {*jcc}
     (nil)
 -> 77)
;;  succ:       5 (FALLTHRU)
;;              6
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 92 93 94 95 105 106 107 108
(note 60 59 61 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 61 60 62 5 (set (reg/f:DI 0 ax [105])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [11 self+0 S8 A64])) "tester/explorer_tester.c":39:17 80 {*movdi_internal}
     (nil))
(insn 62 61 63 5 (set (mem:SI (plus:DI (reg/f:DI 0 ax [105])
                (const_int 32 [0x20])) [4 self_17(D)->error+0 S4 A64])
        (const_int 1 [0x1])) "tester/explorer_tester.c":39:17 81 {*movsi_internal}
     (nil))
(insn 63 62 64 5 (set (reg/f:DI 0 ax [106])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [11 self+0 S8 A64])) "tester/explorer_tester.c":41:16 80 {*movdi_internal}
     (nil))
(insn 64 63 65 5 (set (reg/f:DI 0 ax [orig:92 _11 ] [92])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [106])
                (const_int 24 [0x18])) [2 self_17(D)->inner_explore+0 S8 A64])) "tester/explorer_tester.c":41:16 80 {*movdi_internal}
     (nil))
(insn 65 64 66 5 (set (reg/f:DI 0 ax [orig:93 _12 ] [93])
        (mem/f:DI (reg/f:DI 0 ax [orig:92 _11 ] [92]) [5 _11->cwd+0 S8 A64])) "tester/explorer_tester.c":41:31 80 {*movdi_internal}
     (nil))
(insn 66 65 67 5 (set (reg/f:DI 0 ax [orig:94 _13 ] [94])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:93 _12 ] [93])
                (const_int 24 [0x18])) [8 _12->base+0 S8 A64])) "tester/explorer_tester.c":41:36 80 {*movdi_internal}
     (nil))
(insn 67 66 68 5 (set (reg/f:DI 2 cx [orig:95 _14 ] [95])
        (reg/f:DI 0 ax [orig:94 _13 ] [94])) "tester/explorer_tester.c":41:42 80 {*movdi_internal}
     (nil))
(insn 68 67 69 5 (set (reg:DI 0 ax [107])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [1 name+0 S8 A64])) "tester/explorer_tester.c":40:5 80 {*movdi_internal}
     (nil))
(insn 69 68 70 5 (set (reg:DI 1 dx)
        (reg:DI 0 ax [107])) "tester/explorer_tester.c":40:5 80 {*movdi_internal}
     (nil))
(insn 70 69 71 5 (set (reg:DI 4 si)
        (reg/f:DI 2 cx [orig:95 _14 ] [95])) "tester/explorer_tester.c":40:5 80 {*movdi_internal}
     (nil))
(insn 71 70 72 5 (set (reg:DI 0 ax [108])
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7fb9490712d0 *.LC6>)) "tester/explorer_tester.c":40:5 80 {*movdi_internal}
     (nil))
(insn 72 71 73 5 (set (reg:DI 5 di)
        (reg:DI 0 ax [108])) "tester/explorer_tester.c":40:5 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7fb9490712d0 *.LC6>)
        (nil)))
(insn 73 72 74 5 (set (reg:QI 0 ax)
        (const_int 0 [0])) "tester/explorer_tester.c":40:5 83 {*movqi_internal}
     (nil))
(call_insn 74 73 86 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fb9492c6000 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":40:5 909 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(jump_insn 86 74 87 5 (set (pc)
        (label_ref 84)) "tester/explorer_tester.c":42:5 892 {jump}
     (nil)
 -> 84)
;;  succ:       7 [always]  tester/explorer_tester.c:42:5
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 87 86 77)
;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 8, flags: (RTL, MODIFIED)
;;  pred:       4
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 109
(code_label 77 87 78 6 11 (nil) [1 uses])
(note 78 77 79 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 79 78 80 6 (set (reg:DI 0 ax [109])
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7fb949071360 *.LC7>)) "tester/explorer_tester.c":44:3 80 {*movdi_internal}
     (nil))
(insn 80 79 81 6 (set (reg:DI 5 di)
        (reg:DI 0 ax [109])) "tester/explorer_tester.c":44:3 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7fb949071360 *.LC7>)
        (nil)))
(call_insn 81 80 88 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fb9492c6700 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":44:3 909 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 88 81 89 6 (set (pc)
        (label_ref 84)) 892 {jump}
     (nil)
 -> 84)
;;  succ:       7
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 89 88 91)
;; basic block 8, loop depth 0, maybe hot
;;  prev block 6, next block 9, flags: (RTL, MODIFIED)
;;  pred:       2 tester/explorer_tester.c:31:5
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(code_label 91 89 90 8 12 (nil) [1 uses])
(note 90 91 92 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 92 90 93 8 (const_int 0 [0]) "tester/explorer_tester.c":31:5 928 {nop}
     (nil))
(jump_insn 93 92 94 8 (set (pc)
        (label_ref 84)) 892 {jump}
     (nil)
 -> 84)
;;  succ:       7 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 94 93 96)
;; basic block 9, loop depth 0, maybe hot
;;  prev block 8, next block 7, flags: (RTL, MODIFIED)
;;  pred:       3 tester/explorer_tester.c:37:5
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(code_label 96 94 95 9 13 (nil) [1 uses])
(note 95 96 97 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 97 95 84 9 (const_int 0 [0]) "tester/explorer_tester.c":37:5 928 {nop}
     (nil))
;;  succ:       7 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 7, loop depth 0, maybe hot
;;  prev block 9, next block 1, flags: (RTL, MODIFIED)
;;  pred:       5 [always]  tester/explorer_tester.c:42:5
;;              6
;;              9 [always]  (FALLTHRU)
;;              8 [always] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(code_label 84 97 85 7 7 (nil) [3 uses])
(note 85 84 98 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(note 98 85 0 NOTE_INSN_DELETED)

;; Function explorer_tester_support_file_type (explorer_tester_support_file_type, funcdef_no=9, decl_uid=2112, cgraph_uid=10, symbol_order=9)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=64, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 19 to 7 (offset=48, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 4:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 5:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 9:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 11:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 18:  (0) r  (1) i {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 20:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 22:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 23:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 24:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 25:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 29:  (1) rBwBz {*call_value}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 31:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 32:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 33:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 34:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 35:  (0) r  (1) i {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 36:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 41:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 43:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 50:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 52:  (1) rBwBz {*call_value}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #1: **********

EBB 2 3 4
EBB 6
EBB 7
EBB 5

********** Pseudo live ranges #1: **********

  BB 5
  BB 6
   Insn 62: point = 0, n_alt = -1
   Insn 61: point = 0, n_alt = -1
  BB 4
   Insn 57: point = 0, n_alt = -1
   Insn 52: point = 0, n_alt = 0
   Insn 51: point = 0, n_alt = -2
   Insn 50: point = 1, n_alt = 4
  BB 7
   Insn 66: point = 2, n_alt = -1
  BB 3
   Insn 44: point = 2, n_alt = -1
   Insn 43: point = 2, n_alt = 0
   Insn 42: point = 3, n_alt = -2
   Insn 41: point = 4, n_alt = 0
   Insn 40: point = 4, n_alt = -2
   Insn 39: point = 5, n_alt = -2
   Insn 38: point = 6, n_alt = -2
   Insn 37: point = 7, n_alt = -2
   Insn 36: point = 8, n_alt = 4
   Insn 35: point = 9, n_alt = 4
   Insn 34: point = 9, n_alt = 3
   Insn 33: point = 10, n_alt = 0
   Insn 32: point = 11, n_alt = 0
   Insn 31: point = 12, n_alt = 1
   Insn 30: point = 13, n_alt = -2
   Insn 29: point = 14, n_alt = 0
   Insn 28: point = 14, n_alt = -2
   Insn 27: point = 15, n_alt = -2
   Insn 26: point = 16, n_alt = -2
   Insn 25: point = 17, n_alt = 3
   Insn 24: point = 18, n_alt = 0
   Insn 23: point = 19, n_alt = 3
   Insn 22: point = 21, n_alt = 3
   Insn 21: point = 22, n_alt = 0
   Insn 20: point = 22, n_alt = 3
   Insn 19: point = 22, n_alt = -2
   Insn 18: point = 23, n_alt = 4
  BB 2
   Insn 12: point = 24, n_alt = -1
   Insn 11: point = 24, n_alt = 0
   Insn 10: point = 25, n_alt = 0
   Insn 9: point = 27, n_alt = 3
   Insn 5: point = 28, n_alt = 1
   Insn 4: point = 28, n_alt = 5
   Insn 3: point = 28, n_alt = 1
   Insn 2: point = 28, n_alt = 5
 r82: [24..25]
 r83: [14..19]
 r84: [2..3]
 r85: [26..27]
 r86: [22..23]
 r87: [20..21]
 r88: [16..18]
 r89: [15..17]
 r90: [12..13]
 r91: [6..11]
 r92: [5..10]
 r93: [4..9]
 r94: [7..8]
 r95: [0..1]
Compressing live ranges: from 28 to 18 - 64%
Ranges after the compression:
 r82: [14..15]
 r83: [8..9]
 r84: [2..3]
 r85: [16..17]
 r86: [12..13]
 r87: [10..11]
 r88: [8..9]
 r89: [8..9]
 r90: [6..7]
 r91: [4..5]
 r92: [4..5]
 r93: [4..5]
 r94: [4..5]
 r95: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 6
	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=64, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 19 to 7 (offset=48, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
changing reg in insn 10
changing reg in insn 11
changing reg in insn 23
changing reg in insn 28
changing reg in insn 42
changing reg in insn 43
changing reg in insn 9
changing reg in insn 10
changing reg in insn 18
changing reg in insn 19
changing reg in insn 22
changing reg in insn 23
changing reg in insn 24
changing reg in insn 26
changing reg in insn 25
changing reg in insn 27
changing reg in insn 30
changing reg in insn 31
changing reg in insn 32
changing reg in insn 38
changing reg in insn 33
changing reg in insn 39
changing reg in insn 34
changing reg in insn 40
changing reg in insn 36
changing reg in insn 37
changing reg in insn 50
changing reg in insn 51
deleting insn with uid = 26.
deleting insn with uid = 30.
deleting insn with uid = 37.
deleting insn with uid = 38.
deleting insn with uid = 39.
deleting insn with uid = 42.
starting the processing of deferred insns
ending the processing of deferred insns


explorer_tester_support_file_type

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 36 [r8]
;;  ref usage 	r0={13d,10u} r1={7d,3u} r2={7d,3u} r4={7d,3u} r5={9d,5u} r6={1d,19u} r7={1d,11u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r17={6d,2u} r18={4d} r19={1d,1u} r20={5d} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={6d,1u} r37={5d} r38={4d} r39={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} 
;;    total ref usage 365{307d,58u,0e} in 36{32 regular + 4 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags] 82 85
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [11 self+0 S8 A64])
        (reg:DI 5 di [ self ])) "tester/explorer_tester.c":47:74 80 {*movdi_internal}
     (nil))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [4 type+0 S4 A32])
        (reg:SI 4 si [ type ])) "tester/explorer_tester.c":47:74 81 {*movsi_internal}
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [7 callback+0 S8 A64])
        (reg:DI 1 dx [ callback ])) "tester/explorer_tester.c":47:74 80 {*movdi_internal}
     (nil))
(insn 5 4 6 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [4 success+0 S4 A32])
        (reg:SI 2 cx [ success ])) "tester/explorer_tester.c":47:74 81 {*movsi_internal}
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (reg/f:DI 0 ax [85])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [11 self+0 S8 A64])) "tester/explorer_tester.c":48:11 80 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:SI 0 ax [orig:82 _1 ] [82])
        (mem:SI (plus:DI (reg/f:DI 0 ax [85])
                (const_int 32 [0x20])) [4 self_6(D)->error+0 S4 A64])) "tester/explorer_tester.c":48:11 81 {*movsi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:82 _1 ] [82])
            (const_int 0 [0]))) "tester/explorer_tester.c":48:6 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 12 11 17 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 60)
            (pc))) "tester/explorer_tester.c":48:6 891 {*jcc}
     (nil)
 -> 60)
;;  succ:       6 tester/explorer_tester.c:49:5
;;              3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 83 84 86 87 88 89 90 91 92 93 94
(note 17 12 18 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 3 (set (reg:DI 0 ax [86])
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x7fb949071b40 *.LC8>)) "tester/explorer_tester.c":50:3 80 {*movdi_internal}
     (nil))
(insn 19 18 20 3 (set (reg:DI 5 di)
        (reg:DI 0 ax [86])) "tester/explorer_tester.c":50:3 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x7fb949071b40 *.LC8>)
        (nil)))
(insn 20 19 21 3 (set (reg:QI 0 ax)
        (const_int 0 [0])) "tester/explorer_tester.c":50:3 83 {*movqi_internal}
     (nil))
(call_insn 21 20 22 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fb9492c6000 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":50:3 909 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 22 21 23 3 (set (reg/f:DI 0 ax [87])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [11 self+0 S8 A64])) "tester/explorer_tester.c":51:17 80 {*movdi_internal}
     (nil))
(insn 23 22 24 3 (set (reg/f:DI 0 ax [orig:83 _2 ] [83])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [87])
                (const_int 24 [0x18])) [2 self_6(D)->inner_explore+0 S8 A64])) "tester/explorer_tester.c":51:17 80 {*movdi_internal}
     (nil))
(insn 24 23 25 3 (set (reg:SI 1 dx [88])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [4 type+0 S4 A32])) "tester/explorer_tester.c":51:17 81 {*movsi_internal}
     (nil))
(insn 25 24 27 3 (set (reg:DI 2 cx [89])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [7 callback+0 S8 A64])) "tester/explorer_tester.c":51:17 80 {*movdi_internal}
     (nil))
(insn 27 25 28 3 (set (reg:DI 4 si)
        (reg:DI 2 cx [89])) "tester/explorer_tester.c":51:17 80 {*movdi_internal}
     (nil))
(insn 28 27 29 3 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:83 _2 ] [83])) "tester/explorer_tester.c":51:17 80 {*movdi_internal}
     (nil))
(call_insn 29 28 31 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("explorer_support_filetype") [flags 0x41]  <function_decl 0x7fb94936e800 explorer_support_filetype>) [0 explorer_support_filetype S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":51:17 909 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 31 29 32 3 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [4 result+0 S4 A32])
        (reg:SI 0 ax [90])) "tester/explorer_tester.c":51:17 81 {*movsi_internal}
     (nil))
(insn 32 31 33 3 (set (reg:SI 1 dx [91])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [4 result+0 S4 A32])) "tester/explorer_tester.c":52:8 81 {*movsi_internal}
     (nil))
(insn 33 32 34 3 (set (reg:SI 4 si [92])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [4 success+0 S4 A32])) "tester/explorer_tester.c":52:8 81 {*movsi_internal}
     (nil))
(insn 34 33 35 3 (set (reg:DI 0 ax [93])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [11 self+0 S8 A64])) "tester/explorer_tester.c":52:8 80 {*movdi_internal}
     (nil))
(insn 35 34 36 3 (set (reg:DI 36 r8)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7fb9490711b0 *.LC4>)) "tester/explorer_tester.c":52:8 80 {*movdi_internal}
     (nil))
(insn 36 35 40 3 (set (reg:DI 2 cx [94])
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7fb949071240 *.LC5>)) "tester/explorer_tester.c":52:8 80 {*movdi_internal}
     (nil))
(insn 40 36 41 3 (set (reg:DI 5 di)
        (reg:DI 0 ax [93])) "tester/explorer_tester.c":52:8 80 {*movdi_internal}
     (nil))
(call_insn 41 40 43 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("check_success") [flags 0x3]  <function_decl 0x7fb94901d900 check_success>) [0 check_success S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":52:8 909 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 36 r8))
                        (nil)))))))
(insn 43 41 44 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:84 _3 ] [84])
            (const_int 0 [0]))) "tester/explorer_tester.c":52:6 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 44 43 49 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 65)
            (pc))) "tester/explorer_tester.c":52:6 891 {*jcc}
     (nil)
 -> 65)
;;  succ:       7 tester/explorer_tester.c:53:5
;;              4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 6, flags: (RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 95
(note 49 44 50 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 50 49 51 4 (set (reg:DI 0 ax [95])
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7fb949071360 *.LC7>)) "tester/explorer_tester.c":54:3 80 {*movdi_internal}
     (nil))
(insn 51 50 52 4 (set (reg:DI 5 di)
        (reg:DI 0 ax [95])) "tester/explorer_tester.c":54:3 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7fb949071360 *.LC7>)
        (nil)))
(call_insn 52 51 57 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fb9492c6700 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":54:3 909 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 57 52 58 4 (set (pc)
        (label_ref 55)) 892 {jump}
     (nil)
 -> 55)
;;  succ:       5
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 58 57 60)
;; basic block 6, loop depth 0, maybe hot
;;  prev block 4, next block 7, flags: (RTL, MODIFIED)
;;  pred:       2 tester/explorer_tester.c:49:5
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(code_label 60 58 59 6 18 (nil) [1 uses])
(note 59 60 61 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 61 59 62 6 (const_int 0 [0]) "tester/explorer_tester.c":49:5 928 {nop}
     (nil))
(jump_insn 62 61 63 6 (set (pc)
        (label_ref 55)) 892 {jump}
     (nil)
 -> 55)
;;  succ:       5 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 63 62 65)
;; basic block 7, loop depth 0, maybe hot
;;  prev block 6, next block 5, flags: (RTL, MODIFIED)
;;  pred:       3 tester/explorer_tester.c:53:5
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(code_label 65 63 64 7 19 (nil) [1 uses])
(note 64 65 66 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 66 64 55 7 (const_int 0 [0]) "tester/explorer_tester.c":53:5 928 {nop}
     (nil))
;;  succ:       5 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 5, loop depth 0, maybe hot
;;  prev block 7, next block 1, flags: (RTL, MODIFIED)
;;  pred:       7 [always]  (FALLTHRU)
;;              4
;;              6 [always] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(code_label 55 66 56 5 14 (nil) [2 uses])
(note 56 55 67 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(note 67 56 0 NOTE_INSN_DELETED)

;; Function explorer_tester_cdpar (explorer_tester_cdpar, funcdef_no=10, decl_uid=2103, cgraph_uid=11, symbol_order=10)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=64, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 19 to 7 (offset=48, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 3:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 4:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 8:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 17:  (0) r  (1) i {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 19:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 20:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 21:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 22:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 24:  (1) rBwBz {*call_value}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 26:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 27:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 28:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 29:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 30:  (0) r  (1) i {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 31:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 36:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 38:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 45:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 46:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 47:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 48:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 50:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 51:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 54:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 56:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 59:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 60:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 61:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 62:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 64:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 67:  (0) r  (1) i {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 69:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 70:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 71:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 72:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 77:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 79:  (1) rBwBz {*call_value}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #1: **********

EBB 2 3 4 5
EBB 6
EBB 8
EBB 9
EBB 7

********** Pseudo live ranges #1: **********

  BB 7
  BB 8
   Insn 91: point = 0, n_alt = -1
   Insn 90: point = 0, n_alt = -1
  BB 9
   Insn 95: point = 0, n_alt = -1
  BB 6
   Insn 86: point = 0, n_alt = -1
   Insn 79: point = 0, n_alt = 0
   Insn 78: point = 0, n_alt = -2
   Insn 77: point = 1, n_alt = 4
  BB 5
   Insn 84: point = 2, n_alt = -1
   Insn 72: point = 2, n_alt = 1
   Insn 71: point = 3, n_alt = 3
   Insn 70: point = 4, n_alt = 0
   Insn 69: point = 4, n_alt = 3
   Insn 68: point = 4, n_alt = -2
   Insn 67: point = 5, n_alt = 4
   Insn 66: point = 6, n_alt = -2
   Insn 65: point = 7, n_alt = -2
   Insn 64: point = 8, n_alt = 3
   Insn 63: point = 9, n_alt = -2
   Insn 62: point = 11, n_alt = 3
   Insn 61: point = 13, n_alt = 3
   Insn 60: point = 15, n_alt = 3
   Insn 59: point = 17, n_alt = 3
  BB 4
   Insn 57: point = 18, n_alt = -1
   Insn 56: point = 18, n_alt = 0
   Insn 55: point = 19, n_alt = -2
   Insn 54: point = 20, n_alt = 0
   Insn 53: point = 20, n_alt = -2
   Insn 52: point = 21, n_alt = -2
   Insn 51: point = 22, n_alt = 2
   Insn 50: point = 22, n_alt = 3
   Insn 49: point = 23, n_alt = -2
   Insn 48: point = 25, n_alt = 3
   Insn 47: point = 27, n_alt = 3
   Insn 46: point = 29, n_alt = 3
   Insn 45: point = 31, n_alt = 3
  BB 3
   Insn 39: point = 32, n_alt = -1
   Insn 38: point = 32, n_alt = 0
   Insn 37: point = 33, n_alt = -2
   Insn 36: point = 34, n_alt = 0
   Insn 35: point = 34, n_alt = -2
   Insn 34: point = 35, n_alt = -2
   Insn 33: point = 36, n_alt = -2
   Insn 32: point = 37, n_alt = -2
   Insn 31: point = 38, n_alt = 4
   Insn 30: point = 39, n_alt = 4
   Insn 29: point = 39, n_alt = 3
   Insn 28: point = 40, n_alt = 0
   Insn 27: point = 41, n_alt = 0
   Insn 26: point = 42, n_alt = 1
   Insn 25: point = 43, n_alt = -2
   Insn 24: point = 44, n_alt = 0
   Insn 23: point = 44, n_alt = -2
   Insn 22: point = 45, n_alt = 3
   Insn 21: point = 47, n_alt = 3
   Insn 20: point = 48, n_alt = 0
   Insn 19: point = 48, n_alt = 3
   Insn 18: point = 48, n_alt = -2
   Insn 17: point = 49, n_alt = 4
  BB 2
   Insn 11: point = 50, n_alt = -1
   Insn 10: point = 50, n_alt = 0
   Insn 9: point = 51, n_alt = 0
   Insn 8: point = 53, n_alt = 3
   Insn 4: point = 54, n_alt = 1
   Insn 3: point = 54, n_alt = 5
   Insn 2: point = 54, n_alt = 5
 r82: [50..51]
 r83: [44..45]
 r84: [32..33]
 r85: [28..29]
 r86: [26..27]
 r87: [24..25]
 r88: [20..23]
 r89: [18..19]
 r90: [14..15]
 r91: [12..13]
 r92: [10..11]
 r93: [6..9]
 r94: [52..53]
 r95: [48..49]
 r96: [46..47]
 r97: [42..43]
 r98: [36..41]
 r99: [35..40]
 r100: [34..39]
 r101: [37..38]
 r102: [30..31]
 r103: [21..22]
 r104: [16..17]
 r105: [7..8]
 r106: [4..5]
 r107: [2..3]
 r108: [0..1]
Compressing live ranges: from 54 to 44 - 81%
Ranges after the compression:
 r82: [40..41]
 r83: [34..35]
 r84: [28..29]
 r85: [24..25]
 r86: [22..23]
 r87: [20..21]
 r88: [18..19]
 r89: [16..17]
 r90: [12..13]
 r91: [10..11]
 r92: [8..9]
 r93: [6..7]
 r94: [42..43]
 r95: [38..39]
 r96: [36..37]
 r97: [32..33]
 r98: [30..31]
 r99: [30..31]
 r100: [30..31]
 r101: [30..31]
 r102: [26..27]
 r103: [18..19]
 r104: [14..15]
 r105: [6..7]
 r106: [4..5]
 r107: [2..3]
 r108: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 6
	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=64, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 19 to 7 (offset=48, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
changing reg in insn 9
changing reg in insn 10
changing reg in insn 22
changing reg in insn 23
changing reg in insn 37
changing reg in insn 38
changing reg in insn 46
changing reg in insn 47
changing reg in insn 47
changing reg in insn 48
changing reg in insn 48
changing reg in insn 49
changing reg in insn 49
changing reg in insn 53
changing reg in insn 55
changing reg in insn 56
changing reg in insn 60
changing reg in insn 61
changing reg in insn 61
changing reg in insn 62
changing reg in insn 62
changing reg in insn 63
changing reg in insn 63
changing reg in insn 66
changing reg in insn 8
changing reg in insn 9
changing reg in insn 17
changing reg in insn 18
changing reg in insn 21
changing reg in insn 22
changing reg in insn 25
changing reg in insn 26
changing reg in insn 27
changing reg in insn 33
changing reg in insn 28
changing reg in insn 34
changing reg in insn 29
changing reg in insn 35
changing reg in insn 31
changing reg in insn 32
changing reg in insn 45
changing reg in insn 46
changing reg in insn 50
changing reg in insn 52
changing reg in insn 59
changing reg in insn 60
changing reg in insn 64
changing reg in insn 65
changing reg in insn 67
changing reg in insn 68
changing reg in insn 71
changing reg in insn 72
changing reg in insn 77
changing reg in insn 78
deleting insn with uid = 25.
deleting insn with uid = 32.
deleting insn with uid = 33.
deleting insn with uid = 34.
deleting insn with uid = 37.
deleting insn with uid = 55.
starting the processing of deferred insns
ending the processing of deferred insns


explorer_tester_cdpar

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 36 [r8]
;;  ref usage 	r0={28d,24u} r1={10d,4u} r2={10d,3u} r4={10d,4u} r5={13d,7u} r6={1d,23u} r7={1d,15u} r8={6d} r9={6d} r10={6d} r11={6d} r12={6d} r13={6d} r14={6d} r15={6d} r17={9d,3u} r18={6d} r19={1d,1u} r20={7d} r21={7d} r22={7d} r23={7d} r24={7d} r25={7d} r26={7d} r27={7d} r28={6d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={8d,1u} r37={7d} r38={6d} r39={6d} r44={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} 
;;    total ref usage 545{460d,85u,0e} in 59{53 regular + 6 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags] 82 94
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [11 self+0 S8 A64])
        (reg:DI 5 di [ self ])) "tester/explorer_tester.c":58:42 80 {*movdi_internal}
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [1 name+0 S8 A64])
        (reg:DI 4 si [ name ])) "tester/explorer_tester.c":58:42 80 {*movdi_internal}
     (nil))
(insn 4 3 5 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [4 success+0 S4 A32])
        (reg:SI 1 dx [ success ])) "tester/explorer_tester.c":58:42 81 {*movsi_internal}
     (nil))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg/f:DI 0 ax [94])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [11 self+0 S8 A64])) "tester/explorer_tester.c":59:11 80 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:SI 0 ax [orig:82 _1 ] [82])
        (mem:SI (plus:DI (reg/f:DI 0 ax [94])
                (const_int 32 [0x20])) [4 self_15(D)->error+0 S4 A64])) "tester/explorer_tester.c":59:11 81 {*movsi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:82 _1 ] [82])
            (const_int 0 [0]))) "tester/explorer_tester.c":59:6 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 11 10 16 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 89)
            (pc))) "tester/explorer_tester.c":59:6 891 {*jcc}
     (nil)
 -> 89)
;;  succ:       8 tester/explorer_tester.c:60:5
;;              3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 83 84 95 96 97 98 99 100 101
(note 16 11 17 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 3 (set (reg:DI 0 ax [95])
        (symbol_ref/f:DI ("*.LC9") [flags 0x2]  <var_decl 0x7fb94907e240 *.LC9>)) "tester/explorer_tester.c":61:3 80 {*movdi_internal}
     (nil))
(insn 18 17 19 3 (set (reg:DI 5 di)
        (reg:DI 0 ax [95])) "tester/explorer_tester.c":61:3 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC9") [flags 0x2]  <var_decl 0x7fb94907e240 *.LC9>)
        (nil)))
(insn 19 18 20 3 (set (reg:QI 0 ax)
        (const_int 0 [0])) "tester/explorer_tester.c":61:3 83 {*movqi_internal}
     (nil))
(call_insn 20 19 21 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fb9492c6000 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":61:3 909 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 21 20 22 3 (set (reg/f:DI 0 ax [96])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [11 self+0 S8 A64])) "tester/explorer_tester.c":62:17 80 {*movdi_internal}
     (nil))
(insn 22 21 23 3 (set (reg/f:DI 0 ax [orig:83 _2 ] [83])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [96])
                (const_int 24 [0x18])) [2 self_15(D)->inner_explore+0 S8 A64])) "tester/explorer_tester.c":62:17 80 {*movdi_internal}
     (nil))
(insn 23 22 24 3 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:83 _2 ] [83])) "tester/explorer_tester.c":62:17 80 {*movdi_internal}
     (nil))
(call_insn 24 23 26 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("explorer_cdpar") [flags 0x41]  <function_decl 0x7fb94936e600 explorer_cdpar>) [0 explorer_cdpar S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":62:17 909 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 26 24 27 3 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [4 result+0 S4 A32])
        (reg:SI 0 ax [97])) "tester/explorer_tester.c":62:17 81 {*movsi_internal}
     (nil))
(insn 27 26 28 3 (set (reg:SI 1 dx [98])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [4 result+0 S4 A32])) "tester/explorer_tester.c":63:8 81 {*movsi_internal}
     (nil))
(insn 28 27 29 3 (set (reg:SI 4 si [99])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [4 success+0 S4 A32])) "tester/explorer_tester.c":63:8 81 {*movsi_internal}
     (nil))
(insn 29 28 30 3 (set (reg:DI 0 ax [100])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [11 self+0 S8 A64])) "tester/explorer_tester.c":63:8 80 {*movdi_internal}
     (nil))
(insn 30 29 31 3 (set (reg:DI 36 r8)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7fb9490711b0 *.LC4>)) "tester/explorer_tester.c":63:8 80 {*movdi_internal}
     (nil))
(insn 31 30 35 3 (set (reg:DI 2 cx [101])
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7fb949071240 *.LC5>)) "tester/explorer_tester.c":63:8 80 {*movdi_internal}
     (nil))
(insn 35 31 36 3 (set (reg:DI 5 di)
        (reg:DI 0 ax [100])) "tester/explorer_tester.c":63:8 80 {*movdi_internal}
     (nil))
(call_insn 36 35 38 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("check_success") [flags 0x3]  <function_decl 0x7fb94901d900 check_success>) [0 check_success S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":63:8 909 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 36 r8))
                        (nil)))))))
(insn 38 36 39 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:84 _3 ] [84])
            (const_int 0 [0]))) "tester/explorer_tester.c":63:6 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 39 38 44 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 94)
            (pc))) "tester/explorer_tester.c":63:6 891 {*jcc}
     (nil)
 -> 94)
;;  succ:       9 tester/explorer_tester.c:64:5
;;              4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 85 86 87 88 89 102 103
(note 44 39 45 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 45 44 46 4 (set (reg/f:DI 0 ax [102])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [11 self+0 S8 A64])) "tester/explorer_tester.c":65:19 80 {*movdi_internal}
     (nil))
(insn 46 45 47 4 (set (reg/f:DI 0 ax [orig:85 _4 ] [85])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [102])
                (const_int 24 [0x18])) [2 self_15(D)->inner_explore+0 S8 A64])) "tester/explorer_tester.c":65:19 80 {*movdi_internal}
     (nil))
(insn 47 46 48 4 (set (reg/f:DI 0 ax [orig:86 _5 ] [86])
        (mem/f:DI (reg/f:DI 0 ax [orig:85 _4 ] [85]) [5 _4->cwd+0 S8 A64])) "tester/explorer_tester.c":65:34 80 {*movdi_internal}
     (nil))
(insn 48 47 49 4 (set (reg/f:DI 0 ax [orig:87 _6 ] [87])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:86 _5 ] [86])
                (const_int 24 [0x18])) [8 _5->base+0 S8 A64])) "tester/explorer_tester.c":65:39 80 {*movdi_internal}
     (nil))
(insn 49 48 50 4 (set (reg/f:DI 2 cx [orig:88 _7 ] [88])
        (reg/f:DI 0 ax [orig:87 _6 ] [87])) "tester/explorer_tester.c":65:45 80 {*movdi_internal}
     (nil))
(insn 50 49 51 4 (set (reg:DI 0 ax [103])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [1 name+0 S8 A64])) "tester/explorer_tester.c":65:7 80 {*movdi_internal}
     (nil))
(insn 51 50 52 4 (set (reg:DI 1 dx)
        (const_int 32 [0x20])) "tester/explorer_tester.c":65:7 80 {*movdi_internal}
     (nil))
(insn 52 51 53 4 (set (reg:DI 4 si)
        (reg:DI 0 ax [103])) "tester/explorer_tester.c":65:7 80 {*movdi_internal}
     (nil))
(insn 53 52 54 4 (set (reg:DI 5 di)
        (reg/f:DI 2 cx [orig:88 _7 ] [88])) "tester/explorer_tester.c":65:7 80 {*movdi_internal}
     (nil))
(call_insn/i 54 53 56 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strncmp") [flags 0x41]  <function_decl 0x7fb9492c0c00 strncmp>) [0 __builtin_strncmp S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":65:7 909 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 56 54 57 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:89 _8 ] [89])
            (const_int 0 [0]))) "tester/explorer_tester.c":65:6 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 57 56 58 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 75)
            (pc))) "tester/explorer_tester.c":65:6 891 {*jcc}
     (nil)
 -> 75)
;;  succ:       5 (FALLTHRU)
;;              6
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 90 91 92 93 104 105 106 107
(note 58 57 59 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 59 58 60 5 (set (reg/f:DI 0 ax [104])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [11 self+0 S8 A64])) "tester/explorer_tester.c":67:16 80 {*movdi_internal}
     (nil))
(insn 60 59 61 5 (set (reg/f:DI 0 ax [orig:90 _9 ] [90])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [104])
                (const_int 24 [0x18])) [2 self_15(D)->inner_explore+0 S8 A64])) "tester/explorer_tester.c":67:16 80 {*movdi_internal}
     (nil))
(insn 61 60 62 5 (set (reg/f:DI 0 ax [orig:91 _10 ] [91])
        (mem/f:DI (reg/f:DI 0 ax [orig:90 _9 ] [90]) [5 _9->cwd+0 S8 A64])) "tester/explorer_tester.c":67:31 80 {*movdi_internal}
     (nil))
(insn 62 61 63 5 (set (reg/f:DI 0 ax [orig:92 _11 ] [92])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:91 _10 ] [91])
                (const_int 24 [0x18])) [8 _10->base+0 S8 A64])) "tester/explorer_tester.c":67:36 80 {*movdi_internal}
     (nil))
(insn 63 62 64 5 (set (reg/f:DI 2 cx [orig:93 _12 ] [93])
        (reg/f:DI 0 ax [orig:92 _11 ] [92])) "tester/explorer_tester.c":67:42 80 {*movdi_internal}
     (nil))
(insn 64 63 65 5 (set (reg:DI 0 ax [105])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [1 name+0 S8 A64])) "tester/explorer_tester.c":66:5 80 {*movdi_internal}
     (nil))
(insn 65 64 66 5 (set (reg:DI 1 dx)
        (reg:DI 0 ax [105])) "tester/explorer_tester.c":66:5 80 {*movdi_internal}
     (nil))
(insn 66 65 67 5 (set (reg:DI 4 si)
        (reg/f:DI 2 cx [orig:93 _12 ] [93])) "tester/explorer_tester.c":66:5 80 {*movdi_internal}
     (nil))
(insn 67 66 68 5 (set (reg:DI 0 ax [106])
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7fb94907e2d0 *.LC10>)) "tester/explorer_tester.c":66:5 80 {*movdi_internal}
     (nil))
(insn 68 67 69 5 (set (reg:DI 5 di)
        (reg:DI 0 ax [106])) "tester/explorer_tester.c":66:5 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7fb94907e2d0 *.LC10>)
        (nil)))
(insn 69 68 70 5 (set (reg:QI 0 ax)
        (const_int 0 [0])) "tester/explorer_tester.c":66:5 83 {*movqi_internal}
     (nil))
(call_insn 70 69 71 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fb9492c6000 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":66:5 909 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 71 70 72 5 (set (reg/f:DI 0 ax [107])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [11 self+0 S8 A64])) "tester/explorer_tester.c":68:17 80 {*movdi_internal}
     (nil))
(insn 72 71 84 5 (set (mem:SI (plus:DI (reg/f:DI 0 ax [107])
                (const_int 32 [0x20])) [4 self_15(D)->error+0 S4 A64])
        (const_int 1 [0x1])) "tester/explorer_tester.c":68:17 81 {*movsi_internal}
     (nil))
(jump_insn 84 72 85 5 (set (pc)
        (label_ref 82)) "tester/explorer_tester.c":69:5 892 {jump}
     (nil)
 -> 82)
;;  succ:       7 [always]  tester/explorer_tester.c:69:5
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 85 84 75)
;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 8, flags: (RTL, MODIFIED)
;;  pred:       4
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 108
(code_label 75 85 76 6 24 (nil) [1 uses])
(note 76 75 77 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 77 76 78 6 (set (reg:DI 0 ax [108])
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7fb949071360 *.LC7>)) "tester/explorer_tester.c":71:3 80 {*movdi_internal}
     (nil))
(insn 78 77 79 6 (set (reg:DI 5 di)
        (reg:DI 0 ax [108])) "tester/explorer_tester.c":71:3 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7fb949071360 *.LC7>)
        (nil)))
(call_insn 79 78 86 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fb9492c6700 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":71:3 909 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 86 79 87 6 (set (pc)
        (label_ref 82)) 892 {jump}
     (nil)
 -> 82)
;;  succ:       7
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 87 86 89)
;; basic block 8, loop depth 0, maybe hot
;;  prev block 6, next block 9, flags: (RTL, MODIFIED)
;;  pred:       2 tester/explorer_tester.c:60:5
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(code_label 89 87 88 8 25 (nil) [1 uses])
(note 88 89 90 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 90 88 91 8 (const_int 0 [0]) "tester/explorer_tester.c":60:5 928 {nop}
     (nil))
(jump_insn 91 90 92 8 (set (pc)
        (label_ref 82)) 892 {jump}
     (nil)
 -> 82)
;;  succ:       7 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 92 91 94)
;; basic block 9, loop depth 0, maybe hot
;;  prev block 8, next block 7, flags: (RTL, MODIFIED)
;;  pred:       3 tester/explorer_tester.c:64:5
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(code_label 94 92 93 9 26 (nil) [1 uses])
(note 93 94 95 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 95 93 82 9 (const_int 0 [0]) "tester/explorer_tester.c":64:5 928 {nop}
     (nil))
;;  succ:       7 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 7, loop depth 0, maybe hot
;;  prev block 9, next block 1, flags: (RTL, MODIFIED)
;;  pred:       5 [always]  tester/explorer_tester.c:69:5
;;              6
;;              9 [always]  (FALLTHRU)
;;              8 [always] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(code_label 82 95 83 7 20 (nil) [3 uses])
(note 83 82 96 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(note 96 83 0 NOTE_INSN_DELETED)

;; Function explorer_tester_open (explorer_tester_open, funcdef_no=11, decl_uid=2116, cgraph_uid=12, symbol_order=11)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=64, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 19 to 7 (offset=48, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 3:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 4:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 8:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 17:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 19:  (0) r  (1) i {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 21:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 22:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 23:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 24:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 25:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 28:  (1) rBwBz {*call_value}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 30:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 31:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 32:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 33:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 34:  (0) r  (1) i {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 35:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 40:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 42:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 49:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 51:  (1) rBwBz {*call_value}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #1: **********

EBB 2 3 4
EBB 6
EBB 7
EBB 5

********** Pseudo live ranges #1: **********

  BB 5
  BB 6
   Insn 61: point = 0, n_alt = -1
   Insn 60: point = 0, n_alt = -1
  BB 4
   Insn 56: point = 0, n_alt = -1
   Insn 51: point = 0, n_alt = 0
   Insn 50: point = 0, n_alt = -2
   Insn 49: point = 1, n_alt = 4
  BB 7
   Insn 65: point = 2, n_alt = -1
  BB 3
   Insn 43: point = 2, n_alt = -1
   Insn 42: point = 2, n_alt = 0
   Insn 41: point = 3, n_alt = -2
   Insn 40: point = 4, n_alt = 0
   Insn 39: point = 4, n_alt = -2
   Insn 38: point = 5, n_alt = -2
   Insn 37: point = 6, n_alt = -2
   Insn 36: point = 7, n_alt = -2
   Insn 35: point = 8, n_alt = 4
   Insn 34: point = 9, n_alt = 4
   Insn 33: point = 9, n_alt = 3
   Insn 32: point = 10, n_alt = 0
   Insn 31: point = 11, n_alt = 0
   Insn 30: point = 12, n_alt = 1
   Insn 29: point = 13, n_alt = -2
   Insn 28: point = 14, n_alt = 0
   Insn 27: point = 14, n_alt = -2
   Insn 26: point = 15, n_alt = -2
   Insn 25: point = 16, n_alt = 3
   Insn 24: point = 17, n_alt = 3
   Insn 23: point = 19, n_alt = 3
   Insn 22: point = 20, n_alt = 0
   Insn 21: point = 20, n_alt = 3
   Insn 20: point = 20, n_alt = -2
   Insn 19: point = 21, n_alt = 4
   Insn 18: point = 22, n_alt = -2
   Insn 17: point = 23, n_alt = 3
  BB 2
   Insn 11: point = 24, n_alt = -1
   Insn 10: point = 24, n_alt = 0
   Insn 9: point = 25, n_alt = 0
   Insn 8: point = 27, n_alt = 3
   Insn 4: point = 28, n_alt = 1
   Insn 3: point = 28, n_alt = 5
   Insn 2: point = 28, n_alt = 5
 r82: [24..25]
 r83: [14..17]
 r84: [2..3]
 r85: [26..27]
 r86: [22..23]
 r87: [20..21]
 r88: [18..19]
 r89: [15..16]
 r90: [12..13]
 r91: [6..11]
 r92: [5..10]
 r93: [4..9]
 r94: [7..8]
 r95: [0..1]
Compressing live ranges: from 28 to 20 - 71%
Ranges after the compression:
 r82: [16..17]
 r83: [8..9]
 r84: [2..3]
 r85: [18..19]
 r86: [14..15]
 r87: [12..13]
 r88: [10..11]
 r89: [8..9]
 r90: [6..7]
 r91: [4..5]
 r92: [4..5]
 r93: [4..5]
 r94: [4..5]
 r95: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 6
	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=64, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 19 to 7 (offset=48, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
changing reg in insn 9
changing reg in insn 10
changing reg in insn 24
changing reg in insn 27
changing reg in insn 41
changing reg in insn 42
changing reg in insn 8
changing reg in insn 9
changing reg in insn 17
changing reg in insn 18
changing reg in insn 19
changing reg in insn 20
changing reg in insn 23
changing reg in insn 24
changing reg in insn 25
changing reg in insn 26
changing reg in insn 29
changing reg in insn 30
changing reg in insn 31
changing reg in insn 37
changing reg in insn 32
changing reg in insn 38
changing reg in insn 33
changing reg in insn 39
changing reg in insn 35
changing reg in insn 36
changing reg in insn 49
changing reg in insn 50
deleting insn with uid = 29.
deleting insn with uid = 36.
deleting insn with uid = 37.
deleting insn with uid = 38.
deleting insn with uid = 41.
starting the processing of deferred insns
ending the processing of deferred insns


explorer_tester_open

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 36 [r8]
;;  ref usage 	r0={14d,11u} r1={7d,3u} r2={6d,1u} r4={8d,4u} r5={9d,5u} r6={1d,18u} r7={1d,11u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r17={6d,2u} r18={4d} r19={1d,1u} r20={5d} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={6d,1u} r37={5d} r38={4d} r39={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} 
;;    total ref usage 365{308d,57u,0e} in 36{32 regular + 4 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags] 82 85
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [11 self+0 S8 A64])
        (reg:DI 5 di [ self ])) "tester/explorer_tester.c":74:41 80 {*movdi_internal}
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [1 name+0 S8 A64])
        (reg:DI 4 si [ name ])) "tester/explorer_tester.c":74:41 80 {*movdi_internal}
     (nil))
(insn 4 3 5 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [4 success+0 S4 A32])
        (reg:SI 1 dx [ success ])) "tester/explorer_tester.c":74:41 81 {*movsi_internal}
     (nil))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg/f:DI 0 ax [85])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [11 self+0 S8 A64])) "tester/explorer_tester.c":75:11 80 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:SI 0 ax [orig:82 _1 ] [82])
        (mem:SI (plus:DI (reg/f:DI 0 ax [85])
                (const_int 32 [0x20])) [4 self_6(D)->error+0 S4 A64])) "tester/explorer_tester.c":75:11 81 {*movsi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:82 _1 ] [82])
            (const_int 0 [0]))) "tester/explorer_tester.c":75:6 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 11 10 16 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 59)
            (pc))) "tester/explorer_tester.c":75:6 891 {*jcc}
     (nil)
 -> 59)
;;  succ:       6 tester/explorer_tester.c:76:5
;;              3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 83 84 86 87 88 89 90 91 92 93 94
(note 16 11 17 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 3 (set (reg:DI 0 ax [86])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [1 name+0 S8 A64])) "tester/explorer_tester.c":77:3 80 {*movdi_internal}
     (nil))
(insn 18 17 19 3 (set (reg:DI 4 si)
        (reg:DI 0 ax [86])) "tester/explorer_tester.c":77:3 80 {*movdi_internal}
     (nil))
(insn 19 18 20 3 (set (reg:DI 0 ax [87])
        (symbol_ref/f:DI ("*.LC11") [flags 0x2]  <var_decl 0x7fb94907eab0 *.LC11>)) "tester/explorer_tester.c":77:3 80 {*movdi_internal}
     (nil))
(insn 20 19 21 3 (set (reg:DI 5 di)
        (reg:DI 0 ax [87])) "tester/explorer_tester.c":77:3 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC11") [flags 0x2]  <var_decl 0x7fb94907eab0 *.LC11>)
        (nil)))
(insn 21 20 22 3 (set (reg:QI 0 ax)
        (const_int 0 [0])) "tester/explorer_tester.c":77:3 83 {*movqi_internal}
     (nil))
(call_insn 22 21 23 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fb9492c6000 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":77:3 909 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 23 22 24 3 (set (reg/f:DI 0 ax [88])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [11 self+0 S8 A64])) "tester/explorer_tester.c":78:35 80 {*movdi_internal}
     (nil))
(insn 24 23 25 3 (set (reg/f:DI 0 ax [orig:83 _2 ] [83])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [88])
                (const_int 24 [0x18])) [2 self_6(D)->inner_explore+0 S8 A64])) "tester/explorer_tester.c":78:35 80 {*movdi_internal}
     (nil))
(insn 25 24 26 3 (set (reg:DI 1 dx [89])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [1 name+0 S8 A64])) "tester/explorer_tester.c":78:17 80 {*movdi_internal}
     (nil))
(insn 26 25 27 3 (set (reg:DI 4 si)
        (reg:DI 1 dx [89])) "tester/explorer_tester.c":78:17 80 {*movdi_internal}
     (nil))
(insn 27 26 28 3 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:83 _2 ] [83])) "tester/explorer_tester.c":78:17 80 {*movdi_internal}
     (nil))
(call_insn 28 27 30 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("explorer_open") [flags 0x41]  <function_decl 0x7fb94936e900 explorer_open>) [0 explorer_open S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":78:17 909 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 30 28 31 3 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [4 result+0 S4 A32])
        (reg:SI 0 ax [90])) "tester/explorer_tester.c":78:17 81 {*movsi_internal}
     (nil))
(insn 31 30 32 3 (set (reg:SI 1 dx [91])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [4 result+0 S4 A32])) "tester/explorer_tester.c":79:8 81 {*movsi_internal}
     (nil))
(insn 32 31 33 3 (set (reg:SI 4 si [92])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [4 success+0 S4 A32])) "tester/explorer_tester.c":79:8 81 {*movsi_internal}
     (nil))
(insn 33 32 34 3 (set (reg:DI 0 ax [93])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [11 self+0 S8 A64])) "tester/explorer_tester.c":79:8 80 {*movdi_internal}
     (nil))
(insn 34 33 35 3 (set (reg:DI 36 r8)
        (symbol_ref/f:DI ("*.LC12") [flags 0x2]  <var_decl 0x7fb94907eb40 *.LC12>)) "tester/explorer_tester.c":79:8 80 {*movdi_internal}
     (nil))
(insn 35 34 39 3 (set (reg:DI 2 cx [94])
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7fb949071240 *.LC5>)) "tester/explorer_tester.c":79:8 80 {*movdi_internal}
     (nil))
(insn 39 35 40 3 (set (reg:DI 5 di)
        (reg:DI 0 ax [93])) "tester/explorer_tester.c":79:8 80 {*movdi_internal}
     (nil))
(call_insn 40 39 42 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("check_success") [flags 0x3]  <function_decl 0x7fb94901d900 check_success>) [0 check_success S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":79:8 909 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 36 r8))
                        (nil)))))))
(insn 42 40 43 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:84 _3 ] [84])
            (const_int 0 [0]))) "tester/explorer_tester.c":79:6 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 43 42 48 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 64)
            (pc))) "tester/explorer_tester.c":79:6 891 {*jcc}
     (nil)
 -> 64)
;;  succ:       7 tester/explorer_tester.c:80:5
;;              4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 6, flags: (RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 95
(note 48 43 49 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 49 48 50 4 (set (reg:DI 0 ax [95])
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7fb949071360 *.LC7>)) "tester/explorer_tester.c":81:3 80 {*movdi_internal}
     (nil))
(insn 50 49 51 4 (set (reg:DI 5 di)
        (reg:DI 0 ax [95])) "tester/explorer_tester.c":81:3 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7fb949071360 *.LC7>)
        (nil)))
(call_insn 51 50 56 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fb9492c6700 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":81:3 909 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 56 51 57 4 (set (pc)
        (label_ref 54)) 892 {jump}
     (nil)
 -> 54)
;;  succ:       5
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 57 56 59)
;; basic block 6, loop depth 0, maybe hot
;;  prev block 4, next block 7, flags: (RTL, MODIFIED)
;;  pred:       2 tester/explorer_tester.c:76:5
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(code_label 59 57 58 6 31 (nil) [1 uses])
(note 58 59 60 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 60 58 61 6 (const_int 0 [0]) "tester/explorer_tester.c":76:5 928 {nop}
     (nil))
(jump_insn 61 60 62 6 (set (pc)
        (label_ref 54)) 892 {jump}
     (nil)
 -> 54)
;;  succ:       5 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 62 61 64)
;; basic block 7, loop depth 0, maybe hot
;;  prev block 6, next block 5, flags: (RTL, MODIFIED)
;;  pred:       3 tester/explorer_tester.c:80:5
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(code_label 64 62 63 7 32 (nil) [1 uses])
(note 63 64 65 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 65 63 54 7 (const_int 0 [0]) "tester/explorer_tester.c":80:5 928 {nop}
     (nil))
;;  succ:       5 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 5, loop depth 0, maybe hot
;;  prev block 7, next block 1, flags: (RTL, MODIFIED)
;;  pred:       7 [always]  (FALLTHRU)
;;              4
;;              6 [always] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(code_label 54 65 55 5 27 (nil) [2 uses])
(note 55 54 66 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(note 66 55 0 NOTE_INSN_DELETED)

;; Function explorer_tester_read (explorer_tester_read, funcdef_no=12, decl_uid=2123, cgraph_uid=13, symbol_order=12)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=80, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 19 to 7 (offset=64, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 3:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 4:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 5:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 6:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 7:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 11:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 20:  (0) r  (1) i {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 22:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 24:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 25:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 27:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 29:  (1) rBwBz {*call_value}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 31:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 32:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 33:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 34:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 35:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 36:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 37:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 43:  (1) rBwBz {*call_value}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 45:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 46:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 47:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 48:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 49:  (0) r  (1) i {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 50:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 55:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 57:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 64:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 65:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 66:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 67:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 71:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 73:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 76:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 77:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 80:  (0) r  (1) i {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 82:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 83:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 84:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 85:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 90:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 92:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 95:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 97:  (0) rBwBz {*call}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #1: **********

EBB 2 3 4 5
EBB 6
EBB 10
EBB 7
EBB 9
EBB 8

********** Pseudo live ranges #1: **********

  BB 8
  BB 7
   Insn 104: point = 0, n_alt = -1
   Insn 97: point = 0, n_alt = 0
   Insn 96: point = 0, n_alt = -2
   Insn 95: point = 1, n_alt = 3
  BB 6
   Insn 109: point = 2, n_alt = -1
   Insn 92: point = 2, n_alt = 0
   Insn 91: point = 2, n_alt = -2
   Insn 90: point = 3, n_alt = 4
  BB 5
   Insn 102: point = 4, n_alt = -1
   Insn 85: point = 4, n_alt = 1
   Insn 84: point = 5, n_alt = 3
   Insn 83: point = 6, n_alt = 0
   Insn 82: point = 6, n_alt = 3
   Insn 81: point = 6, n_alt = -2
   Insn 80: point = 7, n_alt = 4
   Insn 79: point = 8, n_alt = -2
   Insn 78: point = 9, n_alt = -2
   Insn 77: point = 10, n_alt = 3
   Insn 76: point = 11, n_alt = 3
  BB 4
   Insn 74: point = 12, n_alt = -1
   Insn 73: point = 12, n_alt = 0
   Insn 72: point = 13, n_alt = -2
   Insn 71: point = 14, n_alt = 0
   Insn 70: point = 14, n_alt = -2
   Insn 69: point = 15, n_alt = -2
   Insn 68: point = 16, n_alt = -2
   Insn 67: point = 17, n_alt = 3
   Insn 66: point = 18, n_alt = 3
   Insn 65: point = 19, n_alt = 1
   Insn 64: point = 21, n_alt = 0
  BB 10
   Insn 113: point = 22, n_alt = -1
  BB 3
   Insn 58: point = 22, n_alt = -1
   Insn 57: point = 22, n_alt = 0
   Insn 56: point = 23, n_alt = -2
   Insn 55: point = 24, n_alt = 0
   Insn 54: point = 24, n_alt = -2
   Insn 53: point = 25, n_alt = -2
   Insn 52: point = 26, n_alt = -2
   Insn 51: point = 27, n_alt = -2
   Insn 50: point = 28, n_alt = 4
   Insn 49: point = 29, n_alt = 4
   Insn 48: point = 29, n_alt = 3
   Insn 47: point = 30, n_alt = 0
   Insn 46: point = 31, n_alt = 0
   Insn 45: point = 32, n_alt = 1
   Insn 44: point = 33, n_alt = -2
   Insn 43: point = 34, n_alt = 0
   Insn 42: point = 34, n_alt = -2
   Insn 41: point = 35, n_alt = -2
   Insn 40: point = 36, n_alt = -2
   Insn 39: point = 37, n_alt = -2
   Insn 38: point = 38, n_alt = -2
   Insn 37: point = 39, n_alt = 3
   Insn 36: point = 40, n_alt = 0
   Insn 35: point = 41, n_alt = 0
   Insn 34: point = 42, n_alt = 3
   Insn 33: point = 43, n_alt = 3
   Insn 32: point = 45, n_alt = 3
   Insn 31: point = 46, n_alt = 5
   Insn 30: point = 47, n_alt = -2
   Insn 29: point = 48, n_alt = 0
   Insn 28: point = 48, n_alt = -2
   Insn 27: point = 49, n_alt = 2
   Insn 26: point = 49, n_alt = 0
   Insn 25: point = 51, n_alt = 0
   Insn 24: point = 53, n_alt = 0
   Insn 23: point = 54, n_alt = 0
   Insn 22: point = 54, n_alt = 3
   Insn 21: point = 54, n_alt = -2
   Insn 20: point = 55, n_alt = 4
  BB 9
   Insn 108: point = 56, n_alt = -1
  BB 2
   Insn 14: point = 56, n_alt = -1
   Insn 13: point = 56, n_alt = 0
   Insn 12: point = 57, n_alt = 0
   Insn 11: point = 59, n_alt = 3
   Insn 7: point = 60, n_alt = 5
   Insn 6: point = 60, n_alt = 1
   Insn 5: point = 60, n_alt = 1
   Insn 4: point = 60, n_alt = 1
   Insn 3: point = 60, n_alt = 5
   Insn 2: point = 60, n_alt = 5
 r82: [56..57]
 r83: [50..51]
 r84: [48..49]
 r85: [34..43]
 r86: [22..23]
 r87: [16..19]
 r88: [12..13]
 r89: [58..59]
 r90: [54..55]
 r91: [52..53]
 r92: [46..47]
 r93: [44..45]
 r94: [38..42]
 r95: [37..41]
 r96: [36..40]
 r97: [35..39]
 r98: [32..33]
 r99: [26..31]
 r100: [25..30]
 r101: [24..29]
 r102: [27..28]
 r103: [20..21]
 r104: [15..18]
 r105: [14..17]
 r106: [9..11]
 r107: [8..10]
 r108: [6..7]
 r109: [4..5]
 r110: [2..3]
 r111: [0..1]
Compressing live ranges: from 60 to 40 - 66%
Ranges after the compression:
 r82: [36..37]
 r83: [30..31]
 r84: [28..29]
 r85: [22..23]
 r86: [16..17]
 r87: [12..13]
 r88: [10..11]
 r89: [38..39]
 r90: [34..35]
 r91: [32..33]
 r92: [26..27]
 r93: [24..25]
 r94: [22..23]
 r95: [22..23]
 r96: [22..23]
 r97: [22..23]
 r98: [20..21]
 r99: [18..19]
 r100: [18..19]
 r101: [18..19]
 r102: [18..19]
 r103: [14..15]
 r104: [12..13]
 r105: [12..13]
 r106: [8..9]
 r107: [8..9]
 r108: [6..7]
 r109: [4..5]
 r110: [2..3]
 r111: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 6
	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=80, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 19 to 7 (offset=64, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
changing reg in insn 12
changing reg in insn 13
changing reg in insn 25
changing reg in insn 26
changing reg in insn 26
changing reg in insn 28
changing reg in insn 33
changing reg in insn 42
changing reg in insn 56
changing reg in insn 57
changing reg in insn 65
changing reg in insn 68
changing reg in insn 72
changing reg in insn 73
changing reg in insn 11
changing reg in insn 12
changing reg in insn 20
changing reg in insn 21
changing reg in insn 24
changing reg in insn 25
changing reg in insn 30
changing reg in insn 31
changing reg in insn 32
changing reg in insn 33
changing reg in insn 34
changing reg in insn 38
changing reg in insn 35
changing reg in insn 39
changing reg in insn 36
changing reg in insn 40
changing reg in insn 37
changing reg in insn 41
changing reg in insn 44
changing reg in insn 45
changing reg in insn 46
changing reg in insn 52
changing reg in insn 47
changing reg in insn 53
changing reg in insn 48
changing reg in insn 54
changing reg in insn 50
changing reg in insn 51
changing reg in insn 64
changing reg in insn 65
changing reg in insn 66
changing reg in insn 69
changing reg in insn 67
changing reg in insn 70
changing reg in insn 76
changing reg in insn 78
changing reg in insn 77
changing reg in insn 79
changing reg in insn 80
changing reg in insn 81
changing reg in insn 84
changing reg in insn 85
changing reg in insn 90
changing reg in insn 91
changing reg in insn 95
changing reg in insn 96
deleting insn with uid = 30.
deleting insn with uid = 39.
deleting insn with uid = 40.
deleting insn with uid = 41.
deleting insn with uid = 44.
deleting insn with uid = 51.
deleting insn with uid = 52.
deleting insn with uid = 53.
deleting insn with uid = 56.
deleting insn with uid = 68.
deleting insn with uid = 72.
deleting insn with uid = 78.
starting the processing of deferred insns
ending the processing of deferred insns


explorer_tester_read

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 36 [r8] 37 [r9]
;;  ref usage 	r0={27d,22u} r1={13d,5u} r2={12d,4u} r4={14d,6u} r5={18d,10u} r6={1d,35u} r7={1d,18u} r8={8d} r9={8d} r10={8d} r11={8d} r12={8d} r13={8d} r14={8d} r15={8d} r17={12d,3u} r18={8d} r19={1d,1u,1e} r20={9d} r21={9d} r22={9d} r23={9d} r24={9d} r25={9d} r26={9d} r27={9d} r28={8d} r29={8d} r30={8d} r31={8d} r32={8d} r33={8d} r34={8d} r35={8d} r36={11d,3u} r37={9d,1u} r38={8d} r39={8d} r44={8d} r45={8d} r46={8d} r47={8d} r48={8d} r49={8d} r50={8d} r51={8d} r52={8d} r53={8d} r54={8d} r55={8d} r56={8d} r57={8d} r58={8d} r59={8d} r60={8d} r61={8d} r62={8d} r63={8d} r64={8d} r65={8d} r66={8d} r67={8d} r68={8d} r69={8d} r70={8d} r71={8d} r72={8d} r73={8d} r74={8d} r75={8d} 
;;    total ref usage 708{599d,108u,1e} in 69{61 regular + 8 call} insns.
(note 1 0 9 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 36 [r8] 37 [r9]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 36 [r8] 37 [r9]
;; lr  def 	 17 [flags] 82 89
(note 9 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 9 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [11 self+0 S8 A64])
        (reg:DI 5 di [ self ])) "tester/explorer_tester.c":84:68 80 {*movdi_internal}
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [1 name+0 S8 A64])
        (reg:DI 4 si [ name ])) "tester/explorer_tester.c":84:68 80 {*movdi_internal}
     (nil))
(insn 4 3 5 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [4 offset+0 S4 A32])
        (reg:SI 1 dx [ offset ])) "tester/explorer_tester.c":84:68 81 {*movsi_internal}
     (nil))
(insn 5 4 6 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [4 bytes+0 S4 A32])
        (reg:SI 2 cx [ bytes ])) "tester/explorer_tester.c":84:68 81 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [4 success+0 S4 A32])
        (reg:SI 36 r8 [ success ])) "tester/explorer_tester.c":84:68 81 {*movsi_internal}
     (nil))
(insn 7 6 8 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [1 expected+0 S8 A64])
        (reg:DI 37 r9 [ expected ])) "tester/explorer_tester.c":84:68 80 {*movdi_internal}
     (nil))
(note 8 7 11 2 NOTE_INSN_FUNCTION_BEG)
(insn 11 8 12 2 (set (reg/f:DI 0 ax [89])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [11 self+0 S8 A64])) "tester/explorer_tester.c":85:11 80 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:SI 0 ax [orig:82 _1 ] [82])
        (mem:SI (plus:DI (reg/f:DI 0 ax [89])
                (const_int 32 [0x20])) [4 self_11(D)->error+0 S4 A64])) "tester/explorer_tester.c":85:11 81 {*movsi_internal}
     (nil))
(insn 13 12 14 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:82 _1 ] [82])
            (const_int 0 [0]))) "tester/explorer_tester.c":85:6 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 14 13 19 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 107)
            (pc))) "tester/explorer_tester.c":85:6 891 {*jcc}
     (nil)
 -> 107)
;;  succ:       9 tester/explorer_tester.c:86:5
;;              3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 83 84 85 86 90 91 92 93 94 95 96 97 98 99 100 101 102
(note 19 14 20 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 3 (set (reg:DI 0 ax [90])
        (symbol_ref/f:DI ("*.LC13") [flags 0x2]  <var_decl 0x7fb949089240 *.LC13>)) "tester/explorer_tester.c":87:3 80 {*movdi_internal}
     (nil))
(insn 21 20 22 3 (set (reg:DI 5 di)
        (reg:DI 0 ax [90])) "tester/explorer_tester.c":87:3 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC13") [flags 0x2]  <var_decl 0x7fb949089240 *.LC13>)
        (nil)))
(insn 22 21 23 3 (set (reg:QI 0 ax)
        (const_int 0 [0])) "tester/explorer_tester.c":87:3 83 {*movqi_internal}
     (nil))
(call_insn 23 22 24 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fb9492c6000 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":87:3 909 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 24 23 25 3 (set (reg:SI 0 ax [91])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [4 bytes+0 S4 A32])) "tester/explorer_tester.c":88:28 81 {*movsi_internal}
     (nil))
(insn 25 24 26 3 (parallel [
            (set (reg:SI 0 ax [orig:83 _2 ] [83])
                (plus:SI (reg:SI 0 ax [91])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "tester/explorer_tester.c":88:28 229 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                    (const_int -40 [0xffffffffffffffd8])) [4 bytes+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 26 25 27 3 (set (reg:DI 0 ax [orig:84 _3 ] [84])
        (sign_extend:DI (reg:SI 0 ax [orig:83 _2 ] [83]))) "tester/explorer_tester.c":88:15 154 {*extendsidi2_rex64}
     (nil))
(insn 27 26 28 3 (set (reg:DI 4 si)
        (const_int 1 [0x1])) "tester/explorer_tester.c":88:15 80 {*movdi_internal}
     (nil))
(insn 28 27 29 3 (set (reg:DI 5 di)
        (reg:DI 0 ax [orig:84 _3 ] [84])) "tester/explorer_tester.c":88:15 80 {*movdi_internal}
     (nil))
(call_insn 29 28 31 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("calloc") [flags 0x41]  <function_decl 0x7fb9492d8500 calloc>) [0 __builtin_calloc S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":88:15 909 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 31 29 32 3 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [1 buf+0 S8 A64])
        (reg/f:DI 0 ax [92])) "tester/explorer_tester.c":88:15 80 {*movdi_internal}
     (nil))
(insn 32 31 33 3 (set (reg/f:DI 0 ax [93])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [11 self+0 S8 A64])) "tester/explorer_tester.c":89:35 80 {*movdi_internal}
     (nil))
(insn 33 32 34 3 (set (reg/f:DI 0 ax [orig:85 _4 ] [85])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [93])
                (const_int 24 [0x18])) [2 self_11(D)->inner_explore+0 S8 A64])) "tester/explorer_tester.c":89:35 80 {*movdi_internal}
     (nil))
(insn 34 33 35 3 (set (reg:DI 5 di [94])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [1 buf+0 S8 A64])) "tester/explorer_tester.c":89:17 80 {*movdi_internal}
     (nil))
(insn 35 34 36 3 (set (reg:SI 2 cx [95])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [4 bytes+0 S4 A32])) "tester/explorer_tester.c":89:17 81 {*movsi_internal}
     (nil))
(insn 36 35 37 3 (set (reg:SI 1 dx [96])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [4 offset+0 S4 A32])) "tester/explorer_tester.c":89:17 81 {*movsi_internal}
     (nil))
(insn 37 36 38 3 (set (reg:DI 4 si [97])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [1 name+0 S8 A64])) "tester/explorer_tester.c":89:17 80 {*movdi_internal}
     (nil))
(insn 38 37 42 3 (set (reg:DI 36 r8)
        (reg:DI 5 di [94])) "tester/explorer_tester.c":89:17 80 {*movdi_internal}
     (nil))
(insn 42 38 43 3 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:85 _4 ] [85])) "tester/explorer_tester.c":89:17 80 {*movdi_internal}
     (nil))
(call_insn 43 42 45 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("explorer_read") [flags 0x41]  <function_decl 0x7fb94936e000 explorer_read>) [0 explorer_read S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":89:17 909 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:DI (use (reg:DI 36 r8))
                        (nil)))))))
(insn 45 43 46 3 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [4 result+0 S4 A32])
        (reg:SI 0 ax [98])) "tester/explorer_tester.c":89:17 81 {*movsi_internal}
     (nil))
(insn 46 45 47 3 (set (reg:SI 1 dx [99])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [4 result+0 S4 A32])) "tester/explorer_tester.c":90:8 81 {*movsi_internal}
     (nil))
(insn 47 46 48 3 (set (reg:SI 4 si [100])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [4 success+0 S4 A32])) "tester/explorer_tester.c":90:8 81 {*movsi_internal}
     (nil))
(insn 48 47 49 3 (set (reg:DI 0 ax [101])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [11 self+0 S8 A64])) "tester/explorer_tester.c":90:8 80 {*movdi_internal}
     (nil))
(insn 49 48 50 3 (set (reg:DI 36 r8)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7fb9490711b0 *.LC4>)) "tester/explorer_tester.c":90:8 80 {*movdi_internal}
     (nil))
(insn 50 49 54 3 (set (reg:DI 2 cx [102])
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7fb949071240 *.LC5>)) "tester/explorer_tester.c":90:8 80 {*movdi_internal}
     (nil))
(insn 54 50 55 3 (set (reg:DI 5 di)
        (reg:DI 0 ax [101])) "tester/explorer_tester.c":90:8 80 {*movdi_internal}
     (nil))
(call_insn 55 54 57 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("check_success") [flags 0x3]  <function_decl 0x7fb94901d900 check_success>) [0 check_success S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":90:8 909 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 36 r8))
                        (nil)))))))
(insn 57 55 58 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:86 _5 ] [86])
            (const_int 0 [0]))) "tester/explorer_tester.c":90:6 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 58 57 63 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 112)
            (pc))) "tester/explorer_tester.c":90:6 891 {*jcc}
     (nil)
 -> 112)
;;  succ:       10 tester/explorer_tester.c:91:5
;;              4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 87 88 103 104 105
(note 63 58 64 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 64 63 65 4 (set (reg:SI 0 ax [103])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [4 bytes+0 S4 A32])) "tester/explorer_tester.c":92:7 81 {*movsi_internal}
     (nil))
(insn 65 64 66 4 (set (reg:DI 1 dx [orig:87 _6 ] [87])
        (sign_extend:DI (reg:SI 0 ax [103]))) "tester/explorer_tester.c":92:7 154 {*extendsidi2_rex64}
     (nil))
(insn 66 65 67 4 (set (reg:DI 2 cx [104])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [1 expected+0 S8 A64])) "tester/explorer_tester.c":92:7 80 {*movdi_internal}
     (nil))
(insn 67 66 69 4 (set (reg:DI 0 ax [105])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [1 buf+0 S8 A64])) "tester/explorer_tester.c":92:7 80 {*movdi_internal}
     (nil))
(insn 69 67 70 4 (set (reg:DI 4 si)
        (reg:DI 2 cx [104])) "tester/explorer_tester.c":92:7 80 {*movdi_internal}
     (nil))
(insn 70 69 71 4 (set (reg:DI 5 di)
        (reg:DI 0 ax [105])) "tester/explorer_tester.c":92:7 80 {*movdi_internal}
     (nil))
(call_insn/i 71 70 73 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strncmp") [flags 0x41]  <function_decl 0x7fb9492c0c00 strncmp>) [0 __builtin_strncmp S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":92:7 909 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 73 71 74 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:88 _7 ] [88])
            (const_int 0 [0]))) "tester/explorer_tester.c":92:6 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 74 73 75 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 88)
            (pc))) "tester/explorer_tester.c":92:6 891 {*jcc}
     (nil)
 -> 88)
;;  succ:       5 (FALLTHRU)
;;              6
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 106 107 108 109
(note 75 74 76 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 76 75 77 5 (set (reg:DI 1 dx [106])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [1 expected+0 S8 A64])) "tester/explorer_tester.c":93:5 80 {*movdi_internal}
     (nil))
(insn 77 76 79 5 (set (reg:DI 0 ax [107])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [1 buf+0 S8 A64])) "tester/explorer_tester.c":93:5 80 {*movdi_internal}
     (nil))
(insn 79 77 80 5 (set (reg:DI 4 si)
        (reg:DI 0 ax [107])) "tester/explorer_tester.c":93:5 80 {*movdi_internal}
     (nil))
(insn 80 79 81 5 (set (reg:DI 0 ax [108])
        (symbol_ref/f:DI ("*.LC14") [flags 0x2]  <var_decl 0x7fb9490892d0 *.LC14>)) "tester/explorer_tester.c":93:5 80 {*movdi_internal}
     (nil))
(insn 81 80 82 5 (set (reg:DI 5 di)
        (reg:DI 0 ax [108])) "tester/explorer_tester.c":93:5 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC14") [flags 0x2]  <var_decl 0x7fb9490892d0 *.LC14>)
        (nil)))
(insn 82 81 83 5 (set (reg:QI 0 ax)
        (const_int 0 [0])) "tester/explorer_tester.c":93:5 83 {*movqi_internal}
     (nil))
(call_insn 83 82 84 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fb9492c6000 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":93:5 909 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 84 83 85 5 (set (reg/f:DI 0 ax [109])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [11 self+0 S8 A64])) "tester/explorer_tester.c":94:17 80 {*movdi_internal}
     (nil))
(insn 85 84 102 5 (set (mem:SI (plus:DI (reg/f:DI 0 ax [109])
                (const_int 32 [0x20])) [4 self_11(D)->error+0 S4 A64])
        (const_int 1 [0x1])) "tester/explorer_tester.c":94:17 81 {*movsi_internal}
     (nil))
(jump_insn 102 85 103 5 (set (pc)
        (label_ref 93)) "tester/explorer_tester.c":95:5 892 {jump}
     (nil)
 -> 93)
;;  succ:       7 [always]  tester/explorer_tester.c:95:5
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 103 102 88)
;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 10, flags: (RTL, MODIFIED)
;;  pred:       4
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 110
(code_label 88 103 89 6 38 (nil) [1 uses])
(note 89 88 90 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 90 89 91 6 (set (reg:DI 0 ax [110])
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7fb949071360 *.LC7>)) "tester/explorer_tester.c":97:3 80 {*movdi_internal}
     (nil))
(insn 91 90 92 6 (set (reg:DI 5 di)
        (reg:DI 0 ax [110])) "tester/explorer_tester.c":97:3 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7fb949071360 *.LC7>)
        (nil)))
(call_insn 92 91 109 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fb9492c6700 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":97:3 909 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 109 92 110 6 (set (pc)
        (label_ref 93)) 892 {jump}
     (nil)
 -> 93)
;;  succ:       7
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 110 109 112)
;; basic block 10, loop depth 0, maybe hot
;;  prev block 6, next block 7, flags: (RTL, MODIFIED)
;;  pred:       3 tester/explorer_tester.c:91:5
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(code_label 112 110 111 10 40 (nil) [1 uses])
(note 111 112 113 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 113 111 93 10 (const_int 0 [0]) "tester/explorer_tester.c":91:5 928 {nop}
     (nil))
;;  succ:       7 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 7, loop depth 0, maybe hot
;;  prev block 10, next block 9, flags: (RTL, MODIFIED)
;;  pred:       10 [always]  (FALLTHRU)
;;              5 [always]  tester/explorer_tester.c:95:5
;;              6
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 111
(code_label 93 113 94 7 37 ("clear") [2 uses])
(note 94 93 95 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 95 94 96 7 (set (reg:DI 0 ax [111])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [1 buf+0 S8 A64])) "tester/explorer_tester.c":99:3 80 {*movdi_internal}
     (nil))
(insn 96 95 97 7 (set (reg:DI 5 di)
        (reg:DI 0 ax [111])) "tester/explorer_tester.c":99:3 80 {*movdi_internal}
     (nil))
(call_insn 97 96 104 7 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7fb9492ddc00 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) "tester/explorer_tester.c":99:3 898 {*call}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 104 97 105 7 (set (pc)
        (label_ref 100)) 892 {jump}
     (nil)
 -> 100)
;;  succ:       8
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 105 104 107)
;; basic block 9, loop depth 0, maybe hot
;;  prev block 7, next block 8, flags: (RTL, MODIFIED)
;;  pred:       2 tester/explorer_tester.c:86:5
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(code_label 107 105 106 9 39 (nil) [1 uses])
(note 106 107 108 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 108 106 100 9 (const_int 0 [0]) "tester/explorer_tester.c":86:5 928 {nop}
     (nil))
;;  succ:       8 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 8, loop depth 0, maybe hot
;;  prev block 9, next block 1, flags: (RTL, MODIFIED)
;;  pred:       9 [always]  (FALLTHRU)
;;              7
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(code_label 100 108 101 8 33 (nil) [1 uses])
(note 101 100 114 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(note 114 101 0 NOTE_INSN_DELETED)

;; Function explorer_tester_write (explorer_tester_write, funcdef_no=13, decl_uid=2130, cgraph_uid=14, symbol_order=13)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=80, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 19 to 7 (offset=64, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 3:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 4:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 5:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 6:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 7:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 11:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 20:  (0) r  (1) i {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 22:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 24:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 25:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 26:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 27:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 28:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 29:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 35:  (1) rBwBz {*call_value}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 37:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 38:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 39:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 40:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 41:  (0) r  (1) i {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 42:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 47:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 49:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 56:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 58:  (1) rBwBz {*call_value}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #1: **********

EBB 2 3 4
EBB 6
EBB 7
EBB 5

********** Pseudo live ranges #1: **********

  BB 5
  BB 6
   Insn 68: point = 0, n_alt = -1
   Insn 67: point = 0, n_alt = -1
  BB 4
   Insn 63: point = 0, n_alt = -1
   Insn 58: point = 0, n_alt = 0
   Insn 57: point = 0, n_alt = -2
   Insn 56: point = 1, n_alt = 4
  BB 7
   Insn 72: point = 2, n_alt = -1
  BB 3
   Insn 50: point = 2, n_alt = -1
   Insn 49: point = 2, n_alt = 0
   Insn 48: point = 3, n_alt = -2
   Insn 47: point = 4, n_alt = 0
   Insn 46: point = 4, n_alt = -2
   Insn 45: point = 5, n_alt = -2
   Insn 44: point = 6, n_alt = -2
   Insn 43: point = 7, n_alt = -2
   Insn 42: point = 8, n_alt = 4
   Insn 41: point = 9, n_alt = 4
   Insn 40: point = 9, n_alt = 3
   Insn 39: point = 10, n_alt = 0
   Insn 38: point = 11, n_alt = 0
   Insn 37: point = 12, n_alt = 1
   Insn 36: point = 13, n_alt = -2
   Insn 35: point = 14, n_alt = 0
   Insn 34: point = 14, n_alt = -2
   Insn 33: point = 15, n_alt = -2
   Insn 32: point = 16, n_alt = -2
   Insn 31: point = 17, n_alt = -2
   Insn 30: point = 18, n_alt = -2
   Insn 29: point = 19, n_alt = 3
   Insn 28: point = 20, n_alt = 0
   Insn 27: point = 21, n_alt = 0
   Insn 26: point = 22, n_alt = 3
   Insn 25: point = 23, n_alt = 3
   Insn 24: point = 25, n_alt = 3
   Insn 23: point = 26, n_alt = 0
   Insn 22: point = 26, n_alt = 3
   Insn 21: point = 26, n_alt = -2
   Insn 20: point = 27, n_alt = 4
  BB 2
   Insn 14: point = 28, n_alt = -1
   Insn 13: point = 28, n_alt = 0
   Insn 12: point = 29, n_alt = 0
   Insn 11: point = 31, n_alt = 3
   Insn 7: point = 32, n_alt = 1
   Insn 6: point = 32, n_alt = 5
   Insn 5: point = 32, n_alt = 1
   Insn 4: point = 32, n_alt = 1
   Insn 3: point = 32, n_alt = 5
   Insn 2: point = 32, n_alt = 5
 r82: [28..29]
 r83: [14..23]
 r84: [2..3]
 r85: [30..31]
 r86: [26..27]
 r87: [24..25]
 r88: [18..22]
 r89: [17..21]
 r90: [16..20]
 r91: [15..19]
 r92: [12..13]
 r93: [6..11]
 r94: [5..10]
 r95: [4..9]
 r96: [7..8]
 r97: [0..1]
Compressing live ranges: from 32 to 18 - 56%
Ranges after the compression:
 r82: [14..15]
 r83: [8..9]
 r84: [2..3]
 r85: [16..17]
 r86: [12..13]
 r87: [10..11]
 r88: [8..9]
 r89: [8..9]
 r90: [8..9]
 r91: [8..9]
 r92: [6..7]
 r93: [4..5]
 r94: [4..5]
 r95: [4..5]
 r96: [4..5]
 r97: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 6
	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=80, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 19 to 7 (offset=64, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
changing reg in insn 12
changing reg in insn 13
changing reg in insn 25
changing reg in insn 34
changing reg in insn 48
changing reg in insn 49
changing reg in insn 11
changing reg in insn 12
changing reg in insn 20
changing reg in insn 21
changing reg in insn 24
changing reg in insn 25
changing reg in insn 26
changing reg in insn 30
changing reg in insn 27
changing reg in insn 31
changing reg in insn 28
changing reg in insn 32
changing reg in insn 29
changing reg in insn 33
changing reg in insn 36
changing reg in insn 37
changing reg in insn 38
changing reg in insn 44
changing reg in insn 39
changing reg in insn 45
changing reg in insn 40
changing reg in insn 46
changing reg in insn 42
changing reg in insn 43
changing reg in insn 56
changing reg in insn 57
deleting insn with uid = 31.
deleting insn with uid = 32.
deleting insn with uid = 33.
deleting insn with uid = 36.
deleting insn with uid = 43.
deleting insn with uid = 44.
deleting insn with uid = 45.
deleting insn with uid = 48.
starting the processing of deferred insns
ending the processing of deferred insns


explorer_tester_write

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 36 [r8] 37 [r9]
;;  ref usage 	r0={13d,10u} r1={7d,3u} r2={7d,3u} r4={7d,3u} r5={10d,6u} r6={1d,23u} r7={1d,11u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r17={6d,2u} r18={4d} r19={1d,1u} r20={5d} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={7d,3u} r37={5d,1u} r38={4d} r39={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} 
;;    total ref usage 375{309d,66u,0e} in 40{36 regular + 4 call} insns.
(note 1 0 9 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 36 [r8] 37 [r9]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 36 [r8] 37 [r9]
;; lr  def 	 17 [flags] 82 85
(note 9 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 9 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [11 self+0 S8 A64])
        (reg:DI 5 di [ self ])) "tester/explorer_tester.c":102:70 80 {*movdi_internal}
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [1 name+0 S8 A64])
        (reg:DI 4 si [ name ])) "tester/explorer_tester.c":102:70 80 {*movdi_internal}
     (nil))
(insn 4 3 5 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [4 offset+0 S4 A32])
        (reg:SI 1 dx [ offset ])) "tester/explorer_tester.c":102:70 81 {*movsi_internal}
     (nil))
(insn 5 4 6 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [4 bytes+0 S4 A32])
        (reg:SI 2 cx [ bytes ])) "tester/explorer_tester.c":102:70 81 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [1 buf+0 S8 A64])
        (reg:DI 36 r8 [ buf ])) "tester/explorer_tester.c":102:70 80 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [4 success+0 S4 A32])
        (reg:SI 37 r9 [ success ])) "tester/explorer_tester.c":102:70 81 {*movsi_internal}
     (nil))
(note 8 7 11 2 NOTE_INSN_FUNCTION_BEG)
(insn 11 8 12 2 (set (reg/f:DI 0 ax [85])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [11 self+0 S8 A64])) "tester/explorer_tester.c":103:11 80 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:SI 0 ax [orig:82 _1 ] [82])
        (mem:SI (plus:DI (reg/f:DI 0 ax [85])
                (const_int 32 [0x20])) [4 self_6(D)->error+0 S4 A64])) "tester/explorer_tester.c":103:11 81 {*movsi_internal}
     (nil))
(insn 13 12 14 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:82 _1 ] [82])
            (const_int 0 [0]))) "tester/explorer_tester.c":103:6 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 14 13 19 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 66)
            (pc))) "tester/explorer_tester.c":103:6 891 {*jcc}
     (nil)
 -> 66)
;;  succ:       6 tester/explorer_tester.c:104:5
;;              3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 83 84 86 87 88 89 90 91 92 93 94 95 96
(note 19 14 20 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 3 (set (reg:DI 0 ax [86])
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x7fb949089c60 *.LC15>)) "tester/explorer_tester.c":105:3 80 {*movdi_internal}
     (nil))
(insn 21 20 22 3 (set (reg:DI 5 di)
        (reg:DI 0 ax [86])) "tester/explorer_tester.c":105:3 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x7fb949089c60 *.LC15>)
        (nil)))
(insn 22 21 23 3 (set (reg:QI 0 ax)
        (const_int 0 [0])) "tester/explorer_tester.c":105:3 83 {*movqi_internal}
     (nil))
(call_insn 23 22 24 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fb9492c6000 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":105:3 909 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 24 23 25 3 (set (reg/f:DI 0 ax [87])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [11 self+0 S8 A64])) "tester/explorer_tester.c":106:17 80 {*movdi_internal}
     (nil))
(insn 25 24 26 3 (set (reg/f:DI 0 ax [orig:83 _2 ] [83])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [87])
                (const_int 24 [0x18])) [2 self_6(D)->inner_explore+0 S8 A64])) "tester/explorer_tester.c":106:17 80 {*movdi_internal}
     (nil))
(insn 26 25 27 3 (set (reg:DI 5 di [88])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [1 buf+0 S8 A64])) "tester/explorer_tester.c":106:17 80 {*movdi_internal}
     (nil))
(insn 27 26 28 3 (set (reg:SI 2 cx [89])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [4 bytes+0 S4 A32])) "tester/explorer_tester.c":106:17 81 {*movsi_internal}
     (nil))
(insn 28 27 29 3 (set (reg:SI 1 dx [90])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [4 offset+0 S4 A32])) "tester/explorer_tester.c":106:17 81 {*movsi_internal}
     (nil))
(insn 29 28 30 3 (set (reg:DI 4 si [91])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [1 name+0 S8 A64])) "tester/explorer_tester.c":106:17 80 {*movdi_internal}
     (nil))
(insn 30 29 34 3 (set (reg:DI 36 r8)
        (reg:DI 5 di [88])) "tester/explorer_tester.c":106:17 80 {*movdi_internal}
     (nil))
(insn 34 30 35 3 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:83 _2 ] [83])) "tester/explorer_tester.c":106:17 80 {*movdi_internal}
     (nil))
(call_insn 35 34 37 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("explorer_write") [flags 0x41]  <function_decl 0x7fb94936e100 explorer_write>) [0 explorer_write S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":106:17 909 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:DI (use (reg:DI 36 r8))
                        (nil)))))))
(insn 37 35 38 3 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [4 result+0 S4 A32])
        (reg:SI 0 ax [92])) "tester/explorer_tester.c":106:17 81 {*movsi_internal}
     (nil))
(insn 38 37 39 3 (set (reg:SI 1 dx [93])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [4 result+0 S4 A32])) "tester/explorer_tester.c":107:8 81 {*movsi_internal}
     (nil))
(insn 39 38 40 3 (set (reg:SI 4 si [94])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [4 success+0 S4 A32])) "tester/explorer_tester.c":107:8 81 {*movsi_internal}
     (nil))
(insn 40 39 41 3 (set (reg:DI 0 ax [95])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [11 self+0 S8 A64])) "tester/explorer_tester.c":107:8 80 {*movdi_internal}
     (nil))
(insn 41 40 42 3 (set (reg:DI 36 r8)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7fb9490711b0 *.LC4>)) "tester/explorer_tester.c":107:8 80 {*movdi_internal}
     (nil))
(insn 42 41 46 3 (set (reg:DI 2 cx [96])
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7fb949071240 *.LC5>)) "tester/explorer_tester.c":107:8 80 {*movdi_internal}
     (nil))
(insn 46 42 47 3 (set (reg:DI 5 di)
        (reg:DI 0 ax [95])) "tester/explorer_tester.c":107:8 80 {*movdi_internal}
     (nil))
(call_insn 47 46 49 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("check_success") [flags 0x3]  <function_decl 0x7fb94901d900 check_success>) [0 check_success S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":107:8 909 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 36 r8))
                        (nil)))))))
(insn 49 47 50 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:84 _3 ] [84])
            (const_int 0 [0]))) "tester/explorer_tester.c":107:6 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 50 49 55 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 71)
            (pc))) "tester/explorer_tester.c":107:6 891 {*jcc}
     (nil)
 -> 71)
;;  succ:       7 tester/explorer_tester.c:108:5
;;              4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 6, flags: (RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 97
(note 55 50 56 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 56 55 57 4 (set (reg:DI 0 ax [97])
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7fb949071360 *.LC7>)) "tester/explorer_tester.c":110:3 80 {*movdi_internal}
     (nil))
(insn 57 56 58 4 (set (reg:DI 5 di)
        (reg:DI 0 ax [97])) "tester/explorer_tester.c":110:3 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7fb949071360 *.LC7>)
        (nil)))
(call_insn 58 57 63 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fb9492c6700 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":110:3 909 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 63 58 64 4 (set (pc)
        (label_ref 61)) 892 {jump}
     (nil)
 -> 61)
;;  succ:       5
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 64 63 66)
;; basic block 6, loop depth 0, maybe hot
;;  prev block 4, next block 7, flags: (RTL, MODIFIED)
;;  pred:       2 tester/explorer_tester.c:104:5
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(code_label 66 64 65 6 45 (nil) [1 uses])
(note 65 66 67 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 67 65 68 6 (const_int 0 [0]) "tester/explorer_tester.c":104:5 928 {nop}
     (nil))
(jump_insn 68 67 69 6 (set (pc)
        (label_ref 61)) 892 {jump}
     (nil)
 -> 61)
;;  succ:       5 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 69 68 71)
;; basic block 7, loop depth 0, maybe hot
;;  prev block 6, next block 5, flags: (RTL, MODIFIED)
;;  pred:       3 tester/explorer_tester.c:108:5
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(code_label 71 69 70 7 46 (nil) [1 uses])
(note 70 71 72 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 72 70 61 7 (const_int 0 [0]) "tester/explorer_tester.c":108:5 928 {nop}
     (nil))
;;  succ:       5 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 5, loop depth 0, maybe hot
;;  prev block 7, next block 1, flags: (RTL, MODIFIED)
;;  pred:       7 [always]  (FALLTHRU)
;;              4
;;              6 [always] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(code_label 61 72 62 5 41 (nil) [2 uses])
(note 62 61 73 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(note 73 62 0 NOTE_INSN_DELETED)

;; Function explorer_tester_create_file (explorer_tester_create_file, funcdef_no=14, decl_uid=2135, cgraph_uid=15, symbol_order=14)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=64, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 19 to 7 (offset=48, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 3:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 4:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 5:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 9:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 11:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 18:  (0) r  (1) i {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 20:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 22:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 23:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 24:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 25:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 29:  (1) rBwBz {*call_value}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 31:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 32:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 33:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 34:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 35:  (0) r  (1) i {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 36:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 41:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 43:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 50:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 51:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 52:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 55:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 57:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 60:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 61:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 62:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 64:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 69:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 71:  (1) rBwBz {*call_value}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #1: **********

EBB 2 3 4 5
EBB 6
EBB 8
EBB 9
EBB 7

********** Pseudo live ranges #1: **********

  BB 7
  BB 8
   Insn 83: point = 0, n_alt = -1
   Insn 82: point = 0, n_alt = -1
  BB 9
   Insn 87: point = 0, n_alt = -1
  BB 6
   Insn 78: point = 0, n_alt = -1
   Insn 71: point = 0, n_alt = 0
   Insn 70: point = 0, n_alt = -2
   Insn 69: point = 1, n_alt = 4
  BB 5
   Insn 76: point = 2, n_alt = -1
   Insn 64: point = 2, n_alt = 0
   Insn 63: point = 2, n_alt = -2
   Insn 62: point = 3, n_alt = 4
   Insn 61: point = 4, n_alt = 1
   Insn 60: point = 5, n_alt = 3
  BB 4
   Insn 58: point = 6, n_alt = -1
   Insn 57: point = 6, n_alt = 0
   Insn 56: point = 7, n_alt = -2
   Insn 55: point = 8, n_alt = 0
   Insn 54: point = 8, n_alt = -2
   Insn 53: point = 9, n_alt = -2
   Insn 52: point = 10, n_alt = 3
   Insn 51: point = 11, n_alt = 3
   Insn 50: point = 13, n_alt = 3
  BB 3
   Insn 44: point = 14, n_alt = -1
   Insn 43: point = 14, n_alt = 0
   Insn 42: point = 15, n_alt = -2
   Insn 41: point = 16, n_alt = 0
   Insn 40: point = 16, n_alt = -2
   Insn 39: point = 17, n_alt = -2
   Insn 38: point = 18, n_alt = -2
   Insn 37: point = 19, n_alt = -2
   Insn 36: point = 20, n_alt = 4
   Insn 35: point = 21, n_alt = 4
   Insn 34: point = 21, n_alt = 3
   Insn 33: point = 22, n_alt = 0
   Insn 32: point = 23, n_alt = 0
   Insn 31: point = 24, n_alt = 1
   Insn 30: point = 25, n_alt = -2
   Insn 29: point = 26, n_alt = 0
   Insn 28: point = 26, n_alt = -2
   Insn 27: point = 27, n_alt = -2
   Insn 26: point = 28, n_alt = -2
   Insn 25: point = 29, n_alt = 3
   Insn 24: point = 30, n_alt = 0
   Insn 23: point = 31, n_alt = 3
   Insn 22: point = 33, n_alt = 3
   Insn 21: point = 34, n_alt = 0
   Insn 20: point = 34, n_alt = 3
   Insn 19: point = 34, n_alt = -2
   Insn 18: point = 35, n_alt = 4
  BB 2
   Insn 12: point = 36, n_alt = -1
   Insn 11: point = 36, n_alt = 0
   Insn 10: point = 37, n_alt = 0
   Insn 9: point = 39, n_alt = 3
   Insn 5: point = 40, n_alt = 1
   Insn 4: point = 40, n_alt = 1
   Insn 3: point = 40, n_alt = 5
   Insn 2: point = 40, n_alt = 5
 r82: [36..37]
 r83: [26..31]
 r84: [14..15]
 r85: [8..11]
 r86: [6..7]
 r87: [38..39]
 r88: [34..35]
 r89: [32..33]
 r90: [28..30]
 r91: [27..29]
 r92: [24..25]
 r93: [18..23]
 r94: [17..22]
 r95: [16..21]
 r96: [19..20]
 r97: [12..13]
 r98: [9..10]
 r99: [4..5]
 r100: [2..3]
 r101: [0..1]
Compressing live ranges: from 40 to 28 - 70%
Ranges after the compression:
 r82: [24..25]
 r83: [18..19]
 r84: [12..13]
 r85: [8..9]
 r86: [6..7]
 r87: [26..27]
 r88: [22..23]
 r89: [20..21]
 r90: [18..19]
 r91: [18..19]
 r92: [16..17]
 r93: [14..15]
 r94: [14..15]
 r95: [14..15]
 r96: [14..15]
 r97: [10..11]
 r98: [8..9]
 r99: [4..5]
 r100: [2..3]
 r101: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 6
	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=64, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 19 to 7 (offset=48, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
changing reg in insn 10
changing reg in insn 11
changing reg in insn 23
changing reg in insn 28
changing reg in insn 42
changing reg in insn 43
changing reg in insn 51
changing reg in insn 54
changing reg in insn 56
changing reg in insn 57
changing reg in insn 9
changing reg in insn 10
changing reg in insn 18
changing reg in insn 19
changing reg in insn 22
changing reg in insn 23
changing reg in insn 24
changing reg in insn 26
changing reg in insn 25
changing reg in insn 27
changing reg in insn 30
changing reg in insn 31
changing reg in insn 32
changing reg in insn 38
changing reg in insn 33
changing reg in insn 39
changing reg in insn 34
changing reg in insn 40
changing reg in insn 36
changing reg in insn 37
changing reg in insn 50
changing reg in insn 51
changing reg in insn 52
changing reg in insn 53
changing reg in insn 60
changing reg in insn 61
changing reg in insn 62
changing reg in insn 63
changing reg in insn 69
changing reg in insn 70
deleting insn with uid = 26.
deleting insn with uid = 30.
deleting insn with uid = 37.
deleting insn with uid = 38.
deleting insn with uid = 39.
deleting insn with uid = 42.
deleting insn with uid = 56.
starting the processing of deferred insns
ending the processing of deferred insns


explorer_tester_create_file

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 36 [r8]
;;  ref usage 	r0={19d,15u} r1={10d,4u} r2={9d,3u} r4={10d,4u} r5={13d,7u} r6={1d,24u} r7={1d,15u} r8={6d} r9={6d} r10={6d} r11={6d} r12={6d} r13={6d} r14={6d} r15={6d} r17={9d,3u} r18={6d} r19={1d,1u} r20={7d} r21={7d} r22={7d} r23={7d} r24={7d} r25={7d} r26={7d} r27={7d} r28={6d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={8d,1u} r37={7d} r38={6d} r39={6d} r44={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} 
;;    total ref usage 527{450d,77u,0e} in 50{44 regular + 6 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags] 82 87
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [11 self+0 S8 A64])
        (reg:DI 5 di [ self ])) "tester/explorer_tester.c":113:58 80 {*movdi_internal}
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [1 name+0 S8 A64])
        (reg:DI 4 si [ name ])) "tester/explorer_tester.c":113:58 80 {*movdi_internal}
     (nil))
(insn 4 3 5 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [4 type+0 S4 A32])
        (reg:SI 1 dx [ type ])) "tester/explorer_tester.c":113:58 81 {*movsi_internal}
     (nil))
(insn 5 4 6 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [4 success+0 S4 A32])
        (reg:SI 2 cx [ success ])) "tester/explorer_tester.c":113:58 81 {*movsi_internal}
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (reg/f:DI 0 ax [87])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [11 self+0 S8 A64])) "tester/explorer_tester.c":114:11 80 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:SI 0 ax [orig:82 _1 ] [82])
        (mem:SI (plus:DI (reg/f:DI 0 ax [87])
                (const_int 32 [0x20])) [4 self_8(D)->error+0 S4 A64])) "tester/explorer_tester.c":114:11 81 {*movsi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:82 _1 ] [82])
            (const_int 0 [0]))) "tester/explorer_tester.c":114:6 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 12 11 17 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 81)
            (pc))) "tester/explorer_tester.c":114:6 891 {*jcc}
     (nil)
 -> 81)
;;  succ:       8 tester/explorer_tester.c:115:5
;;              3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 83 84 88 89 90 91 92 93 94 95 96
(note 17 12 18 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 3 (set (reg:DI 0 ax [88])
        (symbol_ref/f:DI ("*.LC16") [flags 0x2]  <var_decl 0x7fb949095360 *.LC16>)) "tester/explorer_tester.c":116:3 80 {*movdi_internal}
     (nil))
(insn 19 18 20 3 (set (reg:DI 5 di)
        (reg:DI 0 ax [88])) "tester/explorer_tester.c":116:3 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC16") [flags 0x2]  <var_decl 0x7fb949095360 *.LC16>)
        (nil)))
(insn 20 19 21 3 (set (reg:QI 0 ax)
        (const_int 0 [0])) "tester/explorer_tester.c":116:3 83 {*movqi_internal}
     (nil))
(call_insn 21 20 22 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fb9492c6000 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":116:3 909 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 22 21 23 3 (set (reg/f:DI 0 ax [89])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [11 self+0 S8 A64])) "tester/explorer_tester.c":117:17 80 {*movdi_internal}
     (nil))
(insn 23 22 24 3 (set (reg/f:DI 0 ax [orig:83 _2 ] [83])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [89])
                (const_int 24 [0x18])) [2 self_8(D)->inner_explore+0 S8 A64])) "tester/explorer_tester.c":117:17 80 {*movdi_internal}
     (nil))
(insn 24 23 25 3 (set (reg:SI 1 dx [90])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [4 type+0 S4 A32])) "tester/explorer_tester.c":117:17 81 {*movsi_internal}
     (nil))
(insn 25 24 27 3 (set (reg:DI 2 cx [91])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [1 name+0 S8 A64])) "tester/explorer_tester.c":117:17 80 {*movdi_internal}
     (nil))
(insn 27 25 28 3 (set (reg:DI 4 si)
        (reg:DI 2 cx [91])) "tester/explorer_tester.c":117:17 80 {*movdi_internal}
     (nil))
(insn 28 27 29 3 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:83 _2 ] [83])) "tester/explorer_tester.c":117:17 80 {*movdi_internal}
     (nil))
(call_insn 29 28 31 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("explorer_create") [flags 0x41]  <function_decl 0x7fb94936e200 explorer_create>) [0 explorer_create S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":117:17 909 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 31 29 32 3 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [4 result+0 S4 A32])
        (reg:SI 0 ax [92])) "tester/explorer_tester.c":117:17 81 {*movsi_internal}
     (nil))
(insn 32 31 33 3 (set (reg:SI 1 dx [93])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [4 result+0 S4 A32])) "tester/explorer_tester.c":118:8 81 {*movsi_internal}
     (nil))
(insn 33 32 34 3 (set (reg:SI 4 si [94])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [4 success+0 S4 A32])) "tester/explorer_tester.c":118:8 81 {*movsi_internal}
     (nil))
(insn 34 33 35 3 (set (reg:DI 0 ax [95])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [11 self+0 S8 A64])) "tester/explorer_tester.c":118:8 80 {*movdi_internal}
     (nil))
(insn 35 34 36 3 (set (reg:DI 36 r8)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7fb9490711b0 *.LC4>)) "tester/explorer_tester.c":118:8 80 {*movdi_internal}
     (nil))
(insn 36 35 40 3 (set (reg:DI 2 cx [96])
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7fb949071240 *.LC5>)) "tester/explorer_tester.c":118:8 80 {*movdi_internal}
     (nil))
(insn 40 36 41 3 (set (reg:DI 5 di)
        (reg:DI 0 ax [95])) "tester/explorer_tester.c":118:8 80 {*movdi_internal}
     (nil))
(call_insn 41 40 43 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("check_success") [flags 0x3]  <function_decl 0x7fb94901d900 check_success>) [0 check_success S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":118:8 909 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 36 r8))
                        (nil)))))))
(insn 43 41 44 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:84 _3 ] [84])
            (const_int 0 [0]))) "tester/explorer_tester.c":118:6 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 44 43 49 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 86)
            (pc))) "tester/explorer_tester.c":118:6 891 {*jcc}
     (nil)
 -> 86)
;;  succ:       9 tester/explorer_tester.c:119:5
;;              4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 85 86 97 98
(note 49 44 50 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 50 49 51 4 (set (reg/f:DI 0 ax [97])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [11 self+0 S8 A64])) "tester/explorer_tester.c":120:8 80 {*movdi_internal}
     (nil))
(insn 51 50 52 4 (set (reg/f:DI 0 ax [orig:85 _4 ] [85])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [97])
                (const_int 24 [0x18])) [2 self_8(D)->inner_explore+0 S8 A64])) "tester/explorer_tester.c":120:8 80 {*movdi_internal}
     (nil))
(insn 52 51 53 4 (set (reg:DI 1 dx [98])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [1 name+0 S8 A64])) "tester/explorer_tester.c":120:8 80 {*movdi_internal}
     (nil))
(insn 53 52 54 4 (set (reg:DI 4 si)
        (reg:DI 1 dx [98])) "tester/explorer_tester.c":120:8 80 {*movdi_internal}
     (nil))
(insn 54 53 55 4 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:85 _4 ] [85])) "tester/explorer_tester.c":120:8 80 {*movdi_internal}
     (nil))
(call_insn 55 54 57 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("explorer_contain") [flags 0x41]  <function_decl 0x7fb94936e500 explorer_contain>) [0 explorer_contain S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":120:8 909 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 57 55 58 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:86 _5 ] [86])
            (const_int 0 [0]))) "tester/explorer_tester.c":120:6 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 58 57 59 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 67)
            (pc))) "tester/explorer_tester.c":120:6 891 {*jcc}
     (nil)
 -> 67)
;;  succ:       5 (FALLTHRU)
;;              6
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 99 100
(note 59 58 60 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 60 59 61 5 (set (reg/f:DI 0 ax [99])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [11 self+0 S8 A64])) "tester/explorer_tester.c":121:17 80 {*movdi_internal}
     (nil))
(insn 61 60 62 5 (set (mem:SI (plus:DI (reg/f:DI 0 ax [99])
                (const_int 32 [0x20])) [4 self_8(D)->error+0 S4 A64])
        (const_int 1 [0x1])) "tester/explorer_tester.c":121:17 81 {*movsi_internal}
     (nil))
(insn 62 61 63 5 (set (reg:DI 0 ax [100])
        (symbol_ref/f:DI ("*.LC17") [flags 0x2]  <var_decl 0x7fb9490953f0 *.LC17>)) "tester/explorer_tester.c":122:5 80 {*movdi_internal}
     (nil))
(insn 63 62 64 5 (set (reg:DI 5 di)
        (reg:DI 0 ax [100])) "tester/explorer_tester.c":122:5 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC17") [flags 0x2]  <var_decl 0x7fb9490953f0 *.LC17>)
        (nil)))
(call_insn 64 63 76 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fb9492c6700 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":122:5 909 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 76 64 77 5 (set (pc)
        (label_ref 74)) "tester/explorer_tester.c":123:5 892 {jump}
     (nil)
 -> 74)
;;  succ:       7 [always]  tester/explorer_tester.c:123:5
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 77 76 67)
;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 8, flags: (RTL, MODIFIED)
;;  pred:       4
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 101
(code_label 67 77 68 6 51 (nil) [1 uses])
(note 68 67 69 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 69 68 70 6 (set (reg:DI 0 ax [101])
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7fb949071360 *.LC7>)) "tester/explorer_tester.c":125:3 80 {*movdi_internal}
     (nil))
(insn 70 69 71 6 (set (reg:DI 5 di)
        (reg:DI 0 ax [101])) "tester/explorer_tester.c":125:3 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7fb949071360 *.LC7>)
        (nil)))
(call_insn 71 70 78 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fb9492c6700 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":125:3 909 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 78 71 79 6 (set (pc)
        (label_ref 74)) 892 {jump}
     (nil)
 -> 74)
;;  succ:       7
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 79 78 81)
;; basic block 8, loop depth 0, maybe hot
;;  prev block 6, next block 9, flags: (RTL, MODIFIED)
;;  pred:       2 tester/explorer_tester.c:115:5
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(code_label 81 79 80 8 52 (nil) [1 uses])
(note 80 81 82 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 82 80 83 8 (const_int 0 [0]) "tester/explorer_tester.c":115:5 928 {nop}
     (nil))
(jump_insn 83 82 84 8 (set (pc)
        (label_ref 74)) 892 {jump}
     (nil)
 -> 74)
;;  succ:       7 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 84 83 86)
;; basic block 9, loop depth 0, maybe hot
;;  prev block 8, next block 7, flags: (RTL, MODIFIED)
;;  pred:       3 tester/explorer_tester.c:119:5
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(code_label 86 84 85 9 53 (nil) [1 uses])
(note 85 86 87 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 87 85 74 9 (const_int 0 [0]) "tester/explorer_tester.c":119:5 928 {nop}
     (nil))
;;  succ:       7 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 7, loop depth 0, maybe hot
;;  prev block 9, next block 1, flags: (RTL, MODIFIED)
;;  pred:       5 [always]  tester/explorer_tester.c:123:5
;;              6
;;              9 [always]  (FALLTHRU)
;;              8 [always] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(code_label 74 87 75 7 47 (nil) [3 uses])
(note 75 74 88 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(note 88 75 0 NOTE_INSN_DELETED)

;; Function explorer_tester_mkdir (explorer_tester_mkdir, funcdef_no=15, decl_uid=2139, cgraph_uid=16, symbol_order=15)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=64, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 19 to 7 (offset=48, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 3:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 4:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 8:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 17:  (0) r  (1) i {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 19:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 20:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 21:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 22:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 23:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (1) rBwBz {*call_value}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 28:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 29:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 30:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 31:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 32:  (0) r  (1) i {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 33:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 38:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 40:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 47:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 48:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 49:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 52:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 54:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 57:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 58:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 59:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 61:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 66:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 68:  (1) rBwBz {*call_value}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #1: **********

EBB 2 3 4 5
EBB 6
EBB 8
EBB 9
EBB 7

********** Pseudo live ranges #1: **********

  BB 7
  BB 8
   Insn 80: point = 0, n_alt = -1
   Insn 79: point = 0, n_alt = -1
  BB 9
   Insn 84: point = 0, n_alt = -1
  BB 6
   Insn 75: point = 0, n_alt = -1
   Insn 68: point = 0, n_alt = 0
   Insn 67: point = 0, n_alt = -2
   Insn 66: point = 1, n_alt = 4
  BB 5
   Insn 73: point = 2, n_alt = -1
   Insn 61: point = 2, n_alt = 0
   Insn 60: point = 2, n_alt = -2
   Insn 59: point = 3, n_alt = 4
   Insn 58: point = 4, n_alt = 1
   Insn 57: point = 5, n_alt = 3
  BB 4
   Insn 55: point = 6, n_alt = -1
   Insn 54: point = 6, n_alt = 0
   Insn 53: point = 7, n_alt = -2
   Insn 52: point = 8, n_alt = 0
   Insn 51: point = 8, n_alt = -2
   Insn 50: point = 9, n_alt = -2
   Insn 49: point = 10, n_alt = 3
   Insn 48: point = 11, n_alt = 3
   Insn 47: point = 13, n_alt = 3
  BB 3
   Insn 41: point = 14, n_alt = -1
   Insn 40: point = 14, n_alt = 0
   Insn 39: point = 15, n_alt = -2
   Insn 38: point = 16, n_alt = 0
   Insn 37: point = 16, n_alt = -2
   Insn 36: point = 17, n_alt = -2
   Insn 35: point = 18, n_alt = -2
   Insn 34: point = 19, n_alt = -2
   Insn 33: point = 20, n_alt = 4
   Insn 32: point = 21, n_alt = 4
   Insn 31: point = 21, n_alt = 3
   Insn 30: point = 22, n_alt = 0
   Insn 29: point = 23, n_alt = 0
   Insn 28: point = 24, n_alt = 1
   Insn 27: point = 25, n_alt = -2
   Insn 26: point = 26, n_alt = 0
   Insn 25: point = 26, n_alt = -2
   Insn 24: point = 27, n_alt = -2
   Insn 23: point = 28, n_alt = 3
   Insn 22: point = 29, n_alt = 3
   Insn 21: point = 31, n_alt = 3
   Insn 20: point = 32, n_alt = 0
   Insn 19: point = 32, n_alt = 3
   Insn 18: point = 32, n_alt = -2
   Insn 17: point = 33, n_alt = 4
  BB 2
   Insn 11: point = 34, n_alt = -1
   Insn 10: point = 34, n_alt = 0
   Insn 9: point = 35, n_alt = 0
   Insn 8: point = 37, n_alt = 3
   Insn 4: point = 38, n_alt = 1
   Insn 3: point = 38, n_alt = 5
   Insn 2: point = 38, n_alt = 5
 r82: [34..35]
 r83: [26..29]
 r84: [14..15]
 r85: [8..11]
 r86: [6..7]
 r87: [36..37]
 r88: [32..33]
 r89: [30..31]
 r90: [27..28]
 r91: [24..25]
 r92: [18..23]
 r93: [17..22]
 r94: [16..21]
 r95: [19..20]
 r96: [12..13]
 r97: [9..10]
 r98: [4..5]
 r99: [2..3]
 r100: [0..1]
Compressing live ranges: from 38 to 28 - 73%
Ranges after the compression:
 r82: [24..25]
 r83: [18..19]
 r84: [12..13]
 r85: [8..9]
 r86: [6..7]
 r87: [26..27]
 r88: [22..23]
 r89: [20..21]
 r90: [18..19]
 r91: [16..17]
 r92: [14..15]
 r93: [14..15]
 r94: [14..15]
 r95: [14..15]
 r96: [10..11]
 r97: [8..9]
 r98: [4..5]
 r99: [2..3]
 r100: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 6
	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=64, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 19 to 7 (offset=48, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
changing reg in insn 9
changing reg in insn 10
changing reg in insn 22
changing reg in insn 25
changing reg in insn 39
changing reg in insn 40
changing reg in insn 48
changing reg in insn 51
changing reg in insn 53
changing reg in insn 54
changing reg in insn 8
changing reg in insn 9
changing reg in insn 17
changing reg in insn 18
changing reg in insn 21
changing reg in insn 22
changing reg in insn 23
changing reg in insn 24
changing reg in insn 27
changing reg in insn 28
changing reg in insn 29
changing reg in insn 35
changing reg in insn 30
changing reg in insn 36
changing reg in insn 31
changing reg in insn 37
changing reg in insn 33
changing reg in insn 34
changing reg in insn 47
changing reg in insn 48
changing reg in insn 49
changing reg in insn 50
changing reg in insn 57
changing reg in insn 58
changing reg in insn 59
changing reg in insn 60
changing reg in insn 66
changing reg in insn 67
deleting insn with uid = 27.
deleting insn with uid = 34.
deleting insn with uid = 35.
deleting insn with uid = 36.
deleting insn with uid = 39.
deleting insn with uid = 53.
starting the processing of deferred insns
ending the processing of deferred insns


explorer_tester_mkdir

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 36 [r8]
;;  ref usage 	r0={19d,15u} r1={10d,4u} r2={8d,1u} r4={10d,4u} r5={13d,7u} r6={1d,22u} r7={1d,15u} r8={6d} r9={6d} r10={6d} r11={6d} r12={6d} r13={6d} r14={6d} r15={6d} r17={9d,3u} r18={6d} r19={1d,1u} r20={7d} r21={7d} r22={7d} r23={7d} r24={7d} r25={7d} r26={7d} r27={7d} r28={6d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={8d,1u} r37={7d} r38={6d} r39={6d} r44={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} 
;;    total ref usage 522{449d,73u,0e} in 48{42 regular + 6 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags] 82 87
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [11 self+0 S8 A64])
        (reg:DI 5 di [ self ])) "tester/explorer_tester.c":128:42 80 {*movdi_internal}
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [1 name+0 S8 A64])
        (reg:DI 4 si [ name ])) "tester/explorer_tester.c":128:42 80 {*movdi_internal}
     (nil))
(insn 4 3 5 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [4 success+0 S4 A32])
        (reg:SI 1 dx [ success ])) "tester/explorer_tester.c":128:42 81 {*movsi_internal}
     (nil))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg/f:DI 0 ax [87])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [11 self+0 S8 A64])) "tester/explorer_tester.c":129:11 80 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:SI 0 ax [orig:82 _1 ] [82])
        (mem:SI (plus:DI (reg/f:DI 0 ax [87])
                (const_int 32 [0x20])) [4 self_8(D)->error+0 S4 A64])) "tester/explorer_tester.c":129:11 81 {*movsi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:82 _1 ] [82])
            (const_int 0 [0]))) "tester/explorer_tester.c":129:6 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 11 10 16 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 78)
            (pc))) "tester/explorer_tester.c":129:6 891 {*jcc}
     (nil)
 -> 78)
;;  succ:       8 tester/explorer_tester.c:130:5
;;              3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 83 84 88 89 90 91 92 93 94 95
(note 16 11 17 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 3 (set (reg:DI 0 ax [88])
        (symbol_ref/f:DI ("*.LC18") [flags 0x2]  <var_decl 0x7fb949095c60 *.LC18>)) "tester/explorer_tester.c":131:3 80 {*movdi_internal}
     (nil))
(insn 18 17 19 3 (set (reg:DI 5 di)
        (reg:DI 0 ax [88])) "tester/explorer_tester.c":131:3 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC18") [flags 0x2]  <var_decl 0x7fb949095c60 *.LC18>)
        (nil)))
(insn 19 18 20 3 (set (reg:QI 0 ax)
        (const_int 0 [0])) "tester/explorer_tester.c":131:3 83 {*movqi_internal}
     (nil))
(call_insn 20 19 21 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fb9492c6000 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":131:3 909 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 21 20 22 3 (set (reg/f:DI 0 ax [89])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [11 self+0 S8 A64])) "tester/explorer_tester.c":132:17 80 {*movdi_internal}
     (nil))
(insn 22 21 23 3 (set (reg/f:DI 0 ax [orig:83 _2 ] [83])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [89])
                (const_int 24 [0x18])) [2 self_8(D)->inner_explore+0 S8 A64])) "tester/explorer_tester.c":132:17 80 {*movdi_internal}
     (nil))
(insn 23 22 24 3 (set (reg:DI 1 dx [90])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [1 name+0 S8 A64])) "tester/explorer_tester.c":132:17 80 {*movdi_internal}
     (nil))
(insn 24 23 25 3 (set (reg:DI 4 si)
        (reg:DI 1 dx [90])) "tester/explorer_tester.c":132:17 80 {*movdi_internal}
     (nil))
(insn 25 24 26 3 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:83 _2 ] [83])) "tester/explorer_tester.c":132:17 80 {*movdi_internal}
     (nil))
(call_insn 26 25 28 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("explorer_mkdir") [flags 0x41]  <function_decl 0x7fb94936e300 explorer_mkdir>) [0 explorer_mkdir S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":132:17 909 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 28 26 29 3 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [4 result+0 S4 A32])
        (reg:SI 0 ax [91])) "tester/explorer_tester.c":132:17 81 {*movsi_internal}
     (nil))
(insn 29 28 30 3 (set (reg:SI 1 dx [92])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [4 result+0 S4 A32])) "tester/explorer_tester.c":133:8 81 {*movsi_internal}
     (nil))
(insn 30 29 31 3 (set (reg:SI 4 si [93])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [4 success+0 S4 A32])) "tester/explorer_tester.c":133:8 81 {*movsi_internal}
     (nil))
(insn 31 30 32 3 (set (reg:DI 0 ax [94])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [11 self+0 S8 A64])) "tester/explorer_tester.c":133:8 80 {*movdi_internal}
     (nil))
(insn 32 31 33 3 (set (reg:DI 36 r8)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7fb9490711b0 *.LC4>)) "tester/explorer_tester.c":133:8 80 {*movdi_internal}
     (nil))
(insn 33 32 37 3 (set (reg:DI 2 cx [95])
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7fb949071240 *.LC5>)) "tester/explorer_tester.c":133:8 80 {*movdi_internal}
     (nil))
(insn 37 33 38 3 (set (reg:DI 5 di)
        (reg:DI 0 ax [94])) "tester/explorer_tester.c":133:8 80 {*movdi_internal}
     (nil))
(call_insn 38 37 40 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("check_success") [flags 0x3]  <function_decl 0x7fb94901d900 check_success>) [0 check_success S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":133:8 909 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 36 r8))
                        (nil)))))))
(insn 40 38 41 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:84 _3 ] [84])
            (const_int 0 [0]))) "tester/explorer_tester.c":133:6 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 41 40 46 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 83)
            (pc))) "tester/explorer_tester.c":133:6 891 {*jcc}
     (nil)
 -> 83)
;;  succ:       9 tester/explorer_tester.c:134:5
;;              4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 85 86 96 97
(note 46 41 47 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 47 46 48 4 (set (reg/f:DI 0 ax [96])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [11 self+0 S8 A64])) "tester/explorer_tester.c":135:8 80 {*movdi_internal}
     (nil))
(insn 48 47 49 4 (set (reg/f:DI 0 ax [orig:85 _4 ] [85])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [96])
                (const_int 24 [0x18])) [2 self_8(D)->inner_explore+0 S8 A64])) "tester/explorer_tester.c":135:8 80 {*movdi_internal}
     (nil))
(insn 49 48 50 4 (set (reg:DI 1 dx [97])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [1 name+0 S8 A64])) "tester/explorer_tester.c":135:8 80 {*movdi_internal}
     (nil))
(insn 50 49 51 4 (set (reg:DI 4 si)
        (reg:DI 1 dx [97])) "tester/explorer_tester.c":135:8 80 {*movdi_internal}
     (nil))
(insn 51 50 52 4 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:85 _4 ] [85])) "tester/explorer_tester.c":135:8 80 {*movdi_internal}
     (nil))
(call_insn 52 51 54 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("explorer_contain") [flags 0x41]  <function_decl 0x7fb94936e500 explorer_contain>) [0 explorer_contain S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":135:8 909 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 54 52 55 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:86 _5 ] [86])
            (const_int 0 [0]))) "tester/explorer_tester.c":135:6 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 55 54 56 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 64)
            (pc))) "tester/explorer_tester.c":135:6 891 {*jcc}
     (nil)
 -> 64)
;;  succ:       5 (FALLTHRU)
;;              6
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 98 99
(note 56 55 57 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 57 56 58 5 (set (reg/f:DI 0 ax [98])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [11 self+0 S8 A64])) "tester/explorer_tester.c":136:17 80 {*movdi_internal}
     (nil))
(insn 58 57 59 5 (set (mem:SI (plus:DI (reg/f:DI 0 ax [98])
                (const_int 32 [0x20])) [4 self_8(D)->error+0 S4 A64])
        (const_int 1 [0x1])) "tester/explorer_tester.c":136:17 81 {*movsi_internal}
     (nil))
(insn 59 58 60 5 (set (reg:DI 0 ax [99])
        (symbol_ref/f:DI ("*.LC17") [flags 0x2]  <var_decl 0x7fb9490953f0 *.LC17>)) "tester/explorer_tester.c":137:5 80 {*movdi_internal}
     (nil))
(insn 60 59 61 5 (set (reg:DI 5 di)
        (reg:DI 0 ax [99])) "tester/explorer_tester.c":137:5 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC17") [flags 0x2]  <var_decl 0x7fb9490953f0 *.LC17>)
        (nil)))
(call_insn 61 60 73 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fb9492c6700 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":137:5 909 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 73 61 74 5 (set (pc)
        (label_ref 71)) "tester/explorer_tester.c":138:5 892 {jump}
     (nil)
 -> 71)
;;  succ:       7 [always]  tester/explorer_tester.c:138:5
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 74 73 64)
;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 8, flags: (RTL, MODIFIED)
;;  pred:       4
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 100
(code_label 64 74 65 6 58 (nil) [1 uses])
(note 65 64 66 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 66 65 67 6 (set (reg:DI 0 ax [100])
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7fb949071360 *.LC7>)) "tester/explorer_tester.c":140:3 80 {*movdi_internal}
     (nil))
(insn 67 66 68 6 (set (reg:DI 5 di)
        (reg:DI 0 ax [100])) "tester/explorer_tester.c":140:3 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7fb949071360 *.LC7>)
        (nil)))
(call_insn 68 67 75 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fb9492c6700 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":140:3 909 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 75 68 76 6 (set (pc)
        (label_ref 71)) 892 {jump}
     (nil)
 -> 71)
;;  succ:       7
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 76 75 78)
;; basic block 8, loop depth 0, maybe hot
;;  prev block 6, next block 9, flags: (RTL, MODIFIED)
;;  pred:       2 tester/explorer_tester.c:130:5
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(code_label 78 76 77 8 59 (nil) [1 uses])
(note 77 78 79 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 79 77 80 8 (const_int 0 [0]) "tester/explorer_tester.c":130:5 928 {nop}
     (nil))
(jump_insn 80 79 81 8 (set (pc)
        (label_ref 71)) 892 {jump}
     (nil)
 -> 71)
;;  succ:       7 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 81 80 83)
;; basic block 9, loop depth 0, maybe hot
;;  prev block 8, next block 7, flags: (RTL, MODIFIED)
;;  pred:       3 tester/explorer_tester.c:134:5
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(code_label 83 81 82 9 60 (nil) [1 uses])
(note 82 83 84 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 84 82 71 9 (const_int 0 [0]) "tester/explorer_tester.c":134:5 928 {nop}
     (nil))
;;  succ:       7 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 7, loop depth 0, maybe hot
;;  prev block 9, next block 1, flags: (RTL, MODIFIED)
;;  pred:       5 [always]  tester/explorer_tester.c:138:5
;;              6
;;              9 [always]  (FALLTHRU)
;;              8 [always] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(code_label 71 84 72 7 54 (nil) [3 uses])
(note 72 71 85 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(note 85 72 0 NOTE_INSN_DELETED)

;; Function explorer_tester_delete (explorer_tester_delete, funcdef_no=16, decl_uid=2143, cgraph_uid=17, symbol_order=16)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=64, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 19 to 7 (offset=48, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 3:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 4:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 8:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 17:  (0) r  (1) i {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 19:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 20:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 21:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 22:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 23:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (1) rBwBz {*call_value}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 28:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 29:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 30:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 31:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 32:  (0) r  (1) i {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 33:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 38:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 40:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 47:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 48:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 49:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 52:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 54:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 57:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 58:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 59:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 61:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 66:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 68:  (1) rBwBz {*call_value}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #1: **********

EBB 2 3 4 5
EBB 6
EBB 8
EBB 9
EBB 7

********** Pseudo live ranges #1: **********

  BB 7
  BB 8
   Insn 80: point = 0, n_alt = -1
   Insn 79: point = 0, n_alt = -1
  BB 9
   Insn 84: point = 0, n_alt = -1
  BB 6
   Insn 75: point = 0, n_alt = -1
   Insn 68: point = 0, n_alt = 0
   Insn 67: point = 0, n_alt = -2
   Insn 66: point = 1, n_alt = 4
  BB 5
   Insn 73: point = 2, n_alt = -1
   Insn 61: point = 2, n_alt = 0
   Insn 60: point = 2, n_alt = -2
   Insn 59: point = 3, n_alt = 4
   Insn 58: point = 4, n_alt = 1
   Insn 57: point = 5, n_alt = 3
  BB 4
   Insn 55: point = 6, n_alt = -1
   Insn 54: point = 6, n_alt = 0
   Insn 53: point = 7, n_alt = -2
   Insn 52: point = 8, n_alt = 0
   Insn 51: point = 8, n_alt = -2
   Insn 50: point = 9, n_alt = -2
   Insn 49: point = 10, n_alt = 3
   Insn 48: point = 11, n_alt = 3
   Insn 47: point = 13, n_alt = 3
  BB 3
   Insn 41: point = 14, n_alt = -1
   Insn 40: point = 14, n_alt = 0
   Insn 39: point = 15, n_alt = -2
   Insn 38: point = 16, n_alt = 0
   Insn 37: point = 16, n_alt = -2
   Insn 36: point = 17, n_alt = -2
   Insn 35: point = 18, n_alt = -2
   Insn 34: point = 19, n_alt = -2
   Insn 33: point = 20, n_alt = 4
   Insn 32: point = 21, n_alt = 4
   Insn 31: point = 21, n_alt = 3
   Insn 30: point = 22, n_alt = 0
   Insn 29: point = 23, n_alt = 0
   Insn 28: point = 24, n_alt = 1
   Insn 27: point = 25, n_alt = -2
   Insn 26: point = 26, n_alt = 0
   Insn 25: point = 26, n_alt = -2
   Insn 24: point = 27, n_alt = -2
   Insn 23: point = 28, n_alt = 3
   Insn 22: point = 29, n_alt = 3
   Insn 21: point = 31, n_alt = 3
   Insn 20: point = 32, n_alt = 0
   Insn 19: point = 32, n_alt = 3
   Insn 18: point = 32, n_alt = -2
   Insn 17: point = 33, n_alt = 4
  BB 2
   Insn 11: point = 34, n_alt = -1
   Insn 10: point = 34, n_alt = 0
   Insn 9: point = 35, n_alt = 0
   Insn 8: point = 37, n_alt = 3
   Insn 4: point = 38, n_alt = 1
   Insn 3: point = 38, n_alt = 5
   Insn 2: point = 38, n_alt = 5
 r82: [34..35]
 r83: [26..29]
 r84: [14..15]
 r85: [8..11]
 r86: [6..7]
 r87: [36..37]
 r88: [32..33]
 r89: [30..31]
 r90: [27..28]
 r91: [24..25]
 r92: [18..23]
 r93: [17..22]
 r94: [16..21]
 r95: [19..20]
 r96: [12..13]
 r97: [9..10]
 r98: [4..5]
 r99: [2..3]
 r100: [0..1]
Compressing live ranges: from 38 to 28 - 73%
Ranges after the compression:
 r82: [24..25]
 r83: [18..19]
 r84: [12..13]
 r85: [8..9]
 r86: [6..7]
 r87: [26..27]
 r88: [22..23]
 r89: [20..21]
 r90: [18..19]
 r91: [16..17]
 r92: [14..15]
 r93: [14..15]
 r94: [14..15]
 r95: [14..15]
 r96: [10..11]
 r97: [8..9]
 r98: [4..5]
 r99: [2..3]
 r100: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 6
	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=64, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 19 to 7 (offset=48, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
changing reg in insn 9
changing reg in insn 10
changing reg in insn 22
changing reg in insn 25
changing reg in insn 39
changing reg in insn 40
changing reg in insn 48
changing reg in insn 51
changing reg in insn 53
changing reg in insn 54
changing reg in insn 8
changing reg in insn 9
changing reg in insn 17
changing reg in insn 18
changing reg in insn 21
changing reg in insn 22
changing reg in insn 23
changing reg in insn 24
changing reg in insn 27
changing reg in insn 28
changing reg in insn 29
changing reg in insn 35
changing reg in insn 30
changing reg in insn 36
changing reg in insn 31
changing reg in insn 37
changing reg in insn 33
changing reg in insn 34
changing reg in insn 47
changing reg in insn 48
changing reg in insn 49
changing reg in insn 50
changing reg in insn 57
changing reg in insn 58
changing reg in insn 59
changing reg in insn 60
changing reg in insn 66
changing reg in insn 67
deleting insn with uid = 27.
deleting insn with uid = 34.
deleting insn with uid = 35.
deleting insn with uid = 36.
deleting insn with uid = 39.
deleting insn with uid = 53.
starting the processing of deferred insns
ending the processing of deferred insns


explorer_tester_delete

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 36 [r8]
;;  ref usage 	r0={19d,15u} r1={10d,4u} r2={8d,1u} r4={10d,4u} r5={13d,7u} r6={1d,22u} r7={1d,15u} r8={6d} r9={6d} r10={6d} r11={6d} r12={6d} r13={6d} r14={6d} r15={6d} r17={9d,3u} r18={6d} r19={1d,1u} r20={7d} r21={7d} r22={7d} r23={7d} r24={7d} r25={7d} r26={7d} r27={7d} r28={6d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={8d,1u} r37={7d} r38={6d} r39={6d} r44={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} 
;;    total ref usage 522{449d,73u,0e} in 48{42 regular + 6 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags] 82 87
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [11 self+0 S8 A64])
        (reg:DI 5 di [ self ])) "tester/explorer_tester.c":143:43 80 {*movdi_internal}
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [1 name+0 S8 A64])
        (reg:DI 4 si [ name ])) "tester/explorer_tester.c":143:43 80 {*movdi_internal}
     (nil))
(insn 4 3 5 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [4 success+0 S4 A32])
        (reg:SI 1 dx [ success ])) "tester/explorer_tester.c":143:43 81 {*movsi_internal}
     (nil))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg/f:DI 0 ax [87])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [11 self+0 S8 A64])) "tester/explorer_tester.c":145:13 80 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:SI 0 ax [orig:82 _1 ] [82])
        (mem:SI (plus:DI (reg/f:DI 0 ax [87])
                (const_int 32 [0x20])) [4 self_8(D)->error+0 S4 A64])) "tester/explorer_tester.c":145:13 81 {*movsi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:82 _1 ] [82])
            (const_int 0 [0]))) "tester/explorer_tester.c":145:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 11 10 16 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 78)
            (pc))) "tester/explorer_tester.c":145:8 891 {*jcc}
     (nil)
 -> 78)
;;  succ:       8 tester/explorer_tester.c:146:7
;;              3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 83 84 88 89 90 91 92 93 94 95
(note 16 11 17 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 3 (set (reg:DI 0 ax [88])
        (symbol_ref/f:DI ("*.LC19") [flags 0x2]  <var_decl 0x7fb9490a2480 *.LC19>)) "tester/explorer_tester.c":147:5 80 {*movdi_internal}
     (nil))
(insn 18 17 19 3 (set (reg:DI 5 di)
        (reg:DI 0 ax [88])) "tester/explorer_tester.c":147:5 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC19") [flags 0x2]  <var_decl 0x7fb9490a2480 *.LC19>)
        (nil)))
(insn 19 18 20 3 (set (reg:QI 0 ax)
        (const_int 0 [0])) "tester/explorer_tester.c":147:5 83 {*movqi_internal}
     (nil))
(call_insn 20 19 21 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fb9492c6000 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":147:5 909 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 21 20 22 3 (set (reg/f:DI 0 ax [89])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [11 self+0 S8 A64])) "tester/explorer_tester.c":148:19 80 {*movdi_internal}
     (nil))
(insn 22 21 23 3 (set (reg/f:DI 0 ax [orig:83 _2 ] [83])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [89])
                (const_int 24 [0x18])) [2 self_8(D)->inner_explore+0 S8 A64])) "tester/explorer_tester.c":148:19 80 {*movdi_internal}
     (nil))
(insn 23 22 24 3 (set (reg:DI 1 dx [90])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [1 name+0 S8 A64])) "tester/explorer_tester.c":148:19 80 {*movdi_internal}
     (nil))
(insn 24 23 25 3 (set (reg:DI 4 si)
        (reg:DI 1 dx [90])) "tester/explorer_tester.c":148:19 80 {*movdi_internal}
     (nil))
(insn 25 24 26 3 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:83 _2 ] [83])) "tester/explorer_tester.c":148:19 80 {*movdi_internal}
     (nil))
(call_insn 26 25 28 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("explorer_delete") [flags 0x41]  <function_decl 0x7fb94936e400 explorer_delete>) [0 explorer_delete S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":148:19 909 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 28 26 29 3 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [4 result+0 S4 A32])
        (reg:SI 0 ax [91])) "tester/explorer_tester.c":148:19 81 {*movsi_internal}
     (nil))
(insn 29 28 30 3 (set (reg:SI 1 dx [92])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [4 result+0 S4 A32])) "tester/explorer_tester.c":149:10 81 {*movsi_internal}
     (nil))
(insn 30 29 31 3 (set (reg:SI 4 si [93])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [4 success+0 S4 A32])) "tester/explorer_tester.c":149:10 81 {*movsi_internal}
     (nil))
(insn 31 30 32 3 (set (reg:DI 0 ax [94])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [11 self+0 S8 A64])) "tester/explorer_tester.c":149:10 80 {*movdi_internal}
     (nil))
(insn 32 31 33 3 (set (reg:DI 36 r8)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7fb9490711b0 *.LC4>)) "tester/explorer_tester.c":149:10 80 {*movdi_internal}
     (nil))
(insn 33 32 37 3 (set (reg:DI 2 cx [95])
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7fb949071240 *.LC5>)) "tester/explorer_tester.c":149:10 80 {*movdi_internal}
     (nil))
(insn 37 33 38 3 (set (reg:DI 5 di)
        (reg:DI 0 ax [94])) "tester/explorer_tester.c":149:10 80 {*movdi_internal}
     (nil))
(call_insn 38 37 40 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("check_success") [flags 0x3]  <function_decl 0x7fb94901d900 check_success>) [0 check_success S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":149:10 909 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 36 r8))
                        (nil)))))))
(insn 40 38 41 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:84 _3 ] [84])
            (const_int 0 [0]))) "tester/explorer_tester.c":149:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 41 40 46 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 83)
            (pc))) "tester/explorer_tester.c":149:8 891 {*jcc}
     (nil)
 -> 83)
;;  succ:       9 tester/explorer_tester.c:150:7
;;              4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 85 86 96 97
(note 46 41 47 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 47 46 48 4 (set (reg/f:DI 0 ax [96])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [11 self+0 S8 A64])) "tester/explorer_tester.c":151:9 80 {*movdi_internal}
     (nil))
(insn 48 47 49 4 (set (reg/f:DI 0 ax [orig:85 _4 ] [85])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [96])
                (const_int 24 [0x18])) [2 self_8(D)->inner_explore+0 S8 A64])) "tester/explorer_tester.c":151:9 80 {*movdi_internal}
     (nil))
(insn 49 48 50 4 (set (reg:DI 1 dx [97])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [1 name+0 S8 A64])) "tester/explorer_tester.c":151:9 80 {*movdi_internal}
     (nil))
(insn 50 49 51 4 (set (reg:DI 4 si)
        (reg:DI 1 dx [97])) "tester/explorer_tester.c":151:9 80 {*movdi_internal}
     (nil))
(insn 51 50 52 4 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:85 _4 ] [85])) "tester/explorer_tester.c":151:9 80 {*movdi_internal}
     (nil))
(call_insn 52 51 54 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("explorer_contain") [flags 0x41]  <function_decl 0x7fb94936e500 explorer_contain>) [0 explorer_contain S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":151:9 909 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 54 52 55 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:86 _5 ] [86])
            (const_int 0 [0]))) "tester/explorer_tester.c":151:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 55 54 56 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 64)
            (pc))) "tester/explorer_tester.c":151:8 891 {*jcc}
     (nil)
 -> 64)
;;  succ:       5 (FALLTHRU)
;;              6
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 98 99
(note 56 55 57 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 57 56 58 5 (set (reg/f:DI 0 ax [98])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [11 self+0 S8 A64])) "tester/explorer_tester.c":152:19 80 {*movdi_internal}
     (nil))
(insn 58 57 59 5 (set (mem:SI (plus:DI (reg/f:DI 0 ax [98])
                (const_int 32 [0x20])) [4 self_8(D)->error+0 S4 A64])
        (const_int 1 [0x1])) "tester/explorer_tester.c":152:19 81 {*movsi_internal}
     (nil))
(insn 59 58 60 5 (set (reg:DI 0 ax [99])
        (symbol_ref/f:DI ("*.LC20") [flags 0x2]  <var_decl 0x7fb9490a2510 *.LC20>)) "tester/explorer_tester.c":153:7 80 {*movdi_internal}
     (nil))
(insn 60 59 61 5 (set (reg:DI 5 di)
        (reg:DI 0 ax [99])) "tester/explorer_tester.c":153:7 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC20") [flags 0x2]  <var_decl 0x7fb9490a2510 *.LC20>)
        (nil)))
(call_insn 61 60 73 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fb9492c6700 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":153:7 909 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 73 61 74 5 (set (pc)
        (label_ref 71)) "tester/explorer_tester.c":154:7 892 {jump}
     (nil)
 -> 71)
;;  succ:       7 [always]  tester/explorer_tester.c:154:7
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 74 73 64)
;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 8, flags: (RTL, MODIFIED)
;;  pred:       4
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 100
(code_label 64 74 65 6 65 (nil) [1 uses])
(note 65 64 66 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 66 65 67 6 (set (reg:DI 0 ax [100])
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7fb949071360 *.LC7>)) "tester/explorer_tester.c":156:5 80 {*movdi_internal}
     (nil))
(insn 67 66 68 6 (set (reg:DI 5 di)
        (reg:DI 0 ax [100])) "tester/explorer_tester.c":156:5 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7fb949071360 *.LC7>)
        (nil)))
(call_insn 68 67 75 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fb9492c6700 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":156:5 909 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 75 68 76 6 (set (pc)
        (label_ref 71)) 892 {jump}
     (nil)
 -> 71)
;;  succ:       7
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 76 75 78)
;; basic block 8, loop depth 0, maybe hot
;;  prev block 6, next block 9, flags: (RTL, MODIFIED)
;;  pred:       2 tester/explorer_tester.c:146:7
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(code_label 78 76 77 8 66 (nil) [1 uses])
(note 77 78 79 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 79 77 80 8 (const_int 0 [0]) "tester/explorer_tester.c":146:7 928 {nop}
     (nil))
(jump_insn 80 79 81 8 (set (pc)
        (label_ref 71)) 892 {jump}
     (nil)
 -> 71)
;;  succ:       7 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 81 80 83)
;; basic block 9, loop depth 0, maybe hot
;;  prev block 8, next block 7, flags: (RTL, MODIFIED)
;;  pred:       3 tester/explorer_tester.c:150:7
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(code_label 83 81 82 9 67 (nil) [1 uses])
(note 82 83 84 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 84 82 71 9 (const_int 0 [0]) "tester/explorer_tester.c":150:7 928 {nop}
     (nil))
;;  succ:       7 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 7, loop depth 0, maybe hot
;;  prev block 9, next block 1, flags: (RTL, MODIFIED)
;;  pred:       5 [always]  tester/explorer_tester.c:154:7
;;              6
;;              9 [always]  (FALLTHRU)
;;              8 [always] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(code_label 71 84 72 7 61 (nil) [3 uses])
(note 72 71 85 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(note 85 72 0 NOTE_INSN_DELETED)

;; Function explorer_tester_search_recursive (explorer_tester_search_recursive, funcdef_no=17, decl_uid=3335, cgraph_uid=18, symbol_order=17)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 3:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 7:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 8:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 16:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 18:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 19:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 20:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 21:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 24:  (1) rBwBz {*call_value}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #1: **********

EBB 2 3
EBB 5
EBB 4

********** Pseudo live ranges #1: **********

  BB 4
  BB 3
   Insn 29: point = 0, n_alt = -1
   Insn 24: point = 0, n_alt = 0
   Insn 23: point = 0, n_alt = -2
   Insn 22: point = 1, n_alt = -2
   Insn 21: point = 2, n_alt = 3
   Insn 20: point = 3, n_alt = 3
   Insn 19: point = 5, n_alt = 3
   Insn 18: point = 6, n_alt = 0
   Insn 17: point = 6, n_alt = -2
   Insn 16: point = 7, n_alt = 4
  BB 5
   Insn 33: point = 8, n_alt = -1
  BB 2
   Insn 10: point = 8, n_alt = -1
   Insn 9: point = 8, n_alt = 0
   Insn 8: point = 9, n_alt = 0
   Insn 7: point = 11, n_alt = 3
   Insn 3: point = 12, n_alt = 5
   Insn 2: point = 12, n_alt = 5
 r82: [8..9]
 r83: [0..3]
 r84: [10..11]
 r85: [6..7]
 r86: [4..5]
 r87: [1..2]
Compressing live ranges: from 12 to 10 - 83%
Ranges after the compression:
 r82: [6..7]
 r83: [0..1]
 r84: [8..9]
 r85: [4..5]
 r86: [2..3]
 r87: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 6
	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
changing reg in insn 8
changing reg in insn 9
changing reg in insn 20
changing reg in insn 23
changing reg in insn 7
changing reg in insn 8
changing reg in insn 16
changing reg in insn 17
changing reg in insn 19
changing reg in insn 20
changing reg in insn 21
changing reg in insn 22
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 18.
verify found no changes in insn with uid = 24.


explorer_tester_search_recursive

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;;  ref usage 	r0={8d,5u} r1={4d,1u} r2={3d} r4={4d,2u} r5={5d,3u} r6={1d,10u} r7={1d,7u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r17={3d,1u} r18={2d} r19={1d,1u} r20={3d} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={3d} r37={3d} r38={2d} r39={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} 
;;    total ref usage 192{162d,30u,0e} in 17{15 regular + 2 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags] 82 84
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [11 self+0 S8 A64])
        (reg:DI 5 di [ self ])) "tester/explorer_tester.c":160:57 80 {*movdi_internal}
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [1 name+0 S8 A64])
        (reg:DI 4 si [ name ])) "tester/explorer_tester.c":160:57 80 {*movdi_internal}
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg/f:DI 0 ax [84])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [11 self+0 S8 A64])) "tester/explorer_tester.c":161:11 80 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:SI 0 ax [orig:82 _1 ] [82])
        (mem:SI (plus:DI (reg/f:DI 0 ax [84])
                (const_int 32 [0x20])) [4 self_5(D)->error+0 S4 A64])) "tester/explorer_tester.c":161:11 81 {*movsi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:82 _1 ] [82])
            (const_int 0 [0]))) "tester/explorer_tester.c":161:6 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 10 9 15 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 32)
            (pc))) "tester/explorer_tester.c":161:6 891 {*jcc}
     (nil)
 -> 32)
;;  succ:       5 tester/explorer_tester.c:162:5
;;              3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 5, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 83 85 86 87
(note 15 10 16 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 3 (set (reg:DI 0 ax [85])
        (symbol_ref/f:DI ("*.LC21") [flags 0x2]  <var_decl 0x7fb9490a2cf0 *.LC21>)) "tester/explorer_tester.c":163:3 80 {*movdi_internal}
     (nil))
(insn 17 16 18 3 (set (reg:DI 5 di)
        (reg:DI 0 ax [85])) "tester/explorer_tester.c":163:3 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC21") [flags 0x2]  <var_decl 0x7fb9490a2cf0 *.LC21>)
        (nil)))
(call_insn 18 17 19 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fb9492c6700 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":163:3 909 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 19 18 20 3 (set (reg/f:DI 0 ax [86])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [11 self+0 S8 A64])) "tester/explorer_tester.c":164:21 80 {*movdi_internal}
     (nil))
(insn 20 19 21 3 (set (reg/f:DI 0 ax [orig:83 _2 ] [83])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [86])
                (const_int 24 [0x18])) [2 self_5(D)->inner_explore+0 S8 A64])) "tester/explorer_tester.c":164:21 80 {*movdi_internal}
     (nil))
(insn 21 20 22 3 (set (reg:DI 1 dx [87])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [1 name+0 S8 A64])) "tester/explorer_tester.c":164:3 80 {*movdi_internal}
     (nil))
(insn 22 21 23 3 (set (reg:DI 4 si)
        (reg:DI 1 dx [87])) "tester/explorer_tester.c":164:3 80 {*movdi_internal}
     (nil))
(insn 23 22 24 3 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:83 _2 ] [83])) "tester/explorer_tester.c":164:3 80 {*movdi_internal}
     (nil))
(call_insn 24 23 29 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("explorer_open") [flags 0x41]  <function_decl 0x7fb94936e900 explorer_open>) [0 explorer_open S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":164:3 909 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(jump_insn 29 24 30 3 (set (pc)
        (label_ref 27)) 892 {jump}
     (nil)
 -> 27)
;;  succ:       4
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 30 29 32)
;; basic block 5, loop depth 0, maybe hot
;;  prev block 3, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 tester/explorer_tester.c:162:5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(code_label 32 30 31 5 71 (nil) [1 uses])
(note 31 32 33 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 33 31 27 5 (const_int 0 [0]) "tester/explorer_tester.c":162:5 928 {nop}
     (nil))
;;  succ:       4 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 4, loop depth 0, maybe hot
;;  prev block 5, next block 1, flags: (RTL, MODIFIED)
;;  pred:       5 [always]  (FALLTHRU)
;;              3
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(code_label 27 33 28 4 68 (nil) [1 uses])
(note 28 27 34 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(note 34 28 0 NOTE_INSN_DELETED)

;; Function check_success (check_success, funcdef_no=18, decl_uid=3261, cgraph_uid=19, symbol_order=18)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=48, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 19 to 7 (offset=32, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 4:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 5:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 6:  (0) m  (1) re {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 11:  (0) r  (1) rBM {*cmpsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 14:  (0) ?mr {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 17:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 18:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 21:  (0) r  (1) i {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 23:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 24:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 29:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 30:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 33:  (0) r  (1) i {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 35:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 36:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 39:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 40:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 41:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 46:  (0) ?mr {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 49:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 51:  (0) r  (1) i {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 53:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 54:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 55:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 60:  (0) =r  (1) g {*movsi_internal}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #1: **********

EBB 2 3 4
EBB 5
EBB 6
EBB 7 8
EBB 9
EBB 10

********** Pseudo live ranges #1: **********

  BB 10
   Insn 68: point = 0, n_alt = -1
   Insn 67: point = 0, n_alt = -2
   Insn 63: point = 1, n_alt = -2
  BB 8
   Insn 74: point = 4, n_alt = -1
   Insn 55: point = 4, n_alt = 0
   Insn 54: point = 5, n_alt = 0
   Insn 53: point = 5, n_alt = 3
   Insn 52: point = 5, n_alt = -2
   Insn 51: point = 6, n_alt = 4
   Insn 50: point = 7, n_alt = -2
   Insn 49: point = 8, n_alt = 3
  BB 6
   Insn 72: point = 9, n_alt = -1
   Insn 41: point = 9, n_alt = 0
   Insn 40: point = 10, n_alt = 1
   Insn 39: point = 11, n_alt = 3
  BB 4
   Insn 70: point = 12, n_alt = -1
   Insn 24: point = 12, n_alt = 0
   Insn 23: point = 12, n_alt = 3
   Insn 22: point = 12, n_alt = -2
   Insn 21: point = 13, n_alt = 4
   Insn 20: point = 14, n_alt = -2
   Insn 19: point = 15, n_alt = -2
   Insn 18: point = 16, n_alt = 3
   Insn 17: point = 17, n_alt = 3
  BB 5
   Insn 36: point = 18, n_alt = 0
   Insn 35: point = 18, n_alt = 3
   Insn 34: point = 18, n_alt = -2
   Insn 33: point = 19, n_alt = 4
   Insn 32: point = 20, n_alt = -2
   Insn 31: point = 21, n_alt = -2
   Insn 30: point = 22, n_alt = 3
   Insn 29: point = 23, n_alt = 3
  BB 3
   Insn 15: point = 24, n_alt = -1
   Insn 14: point = 24, n_alt = 1
  BB 9
   Insn 60: point = 24, n_alt = 0
  BB 7
   Insn 47: point = 25, n_alt = -1
   Insn 46: point = 25, n_alt = 1
  BB 2
   Insn 12: point = 25, n_alt = -1
   Insn 11: point = 25, n_alt = 1
   Insn 10: point = 26, n_alt = 0
   Insn 6: point = 27, n_alt = 5
   Insn 5: point = 27, n_alt = 5
   Insn 4: point = 27, n_alt = 1
   Insn 3: point = 27, n_alt = 1
   Insn 2: point = 27, n_alt = 5
 r82: [24..24] [9..9] [2..4]
 r83: [0..1]
 r84: [25..26]
 r85: [15..17]
 r86: [14..16]
 r87: [12..13]
 r88: [21..23]
 r89: [20..22]
 r90: [18..19]
 r91: [10..11]
 r92: [7..8]
 r93: [5..6]
Compressing live ranges: from 27 to 22 - 81%
Ranges after the compression:
 r82: [19..19] [8..8] [2..3]
 r83: [0..1]
 r84: [20..21]
 r85: [13..14]
 r86: [13..14]
 r87: [11..12]
 r88: [17..18]
 r89: [17..18]
 r90: [15..16]
 r91: [9..10]
 r92: [6..7]
 r93: [4..5]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 6
	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=48, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 19 to 7 (offset=32, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
changing reg in insn 60
changing reg in insn 55
changing reg in insn 41
changing reg in insn 63
changing reg in insn 63
changing reg in insn 67
changing reg in insn 10
changing reg in insn 11
changing reg in insn 17
changing reg in insn 19
changing reg in insn 18
changing reg in insn 20
changing reg in insn 21
changing reg in insn 22
changing reg in insn 29
changing reg in insn 31
changing reg in insn 30
changing reg in insn 32
changing reg in insn 33
changing reg in insn 34
changing reg in insn 39
changing reg in insn 40
changing reg in insn 49
changing reg in insn 50
changing reg in insn 51
changing reg in insn 52
deleting insn with uid = 19.
deleting insn with uid = 31.
deleting insn with uid = 63.
deleting insn with uid = 67.
starting the processing of deferred insns
ending the processing of deferred insns


check_success

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 36 [r8]
;;  ref usage 	r0={18d,13u} r1={6d,3u} r2={4d,1u} r4={7d,4u} r5={7d,4u} r6={1d,25u} r7={1d,13u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r17={6d,3u} r18={3d} r19={1d,1u} r20={4d} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={4d,1u} r37={4d} r38={3d} r39={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} 
;;    total ref usage 312{244d,68u,0e} in 41{38 regular + 3 call} insns.
(note 1 0 8 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 36 [r8]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 36 [r8]
;; lr  def 	 17 [flags] 84
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [11 self+0 S8 A64])
        (reg:DI 5 di [ self ])) "tester/explorer_tester.c":168:77 80 {*movdi_internal}
     (nil))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [4 success+0 S4 A32])
        (reg:SI 4 si [ success ])) "tester/explorer_tester.c":168:77 81 {*movsi_internal}
     (nil))
(insn 4 3 5 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [4 result+0 S4 A32])
        (reg:SI 1 dx [ result ])) "tester/explorer_tester.c":168:77 81 {*movsi_internal}
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 success_tip+0 S8 A64])
        (reg:DI 2 cx [ success_tip ])) "tester/explorer_tester.c":168:77 80 {*movdi_internal}
     (nil))
(insn 6 5 7 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [1 failed_tip+0 S8 A64])
        (reg:DI 36 r8 [ failed_tip ])) "tester/explorer_tester.c":168:77 80 {*movdi_internal}
     (nil))
(note 7 6 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 7 11 2 (set (reg:SI 0 ax [84])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [4 success+0 S4 A32])) "tester/explorer_tester.c":170:6 81 {*movsi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [84])
            (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -16 [0xfffffffffffffff0])) [4 result+0 S4 A32]))) "tester/explorer_tester.c":170:6 11 {*cmpsi_1}
     (nil))
(jump_insn 12 11 13 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 44)
            (pc))) "tester/explorer_tester.c":170:6 891 {*jcc}
     (nil)
 -> 44)
;;  succ:       3 (FALLTHRU)
;;              7
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags]
(note 13 12 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 15 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -16 [0xfffffffffffffff0])) [4 result+0 S4 A32])
            (const_int 0 [0]))) "tester/explorer_tester.c":171:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 15 14 16 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 27)
            (pc))) "tester/explorer_tester.c":171:8 891 {*jcc}
     (nil)
 -> 27)
;;  succ:       4 (FALLTHRU)
;;              5
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 85 86 87
(note 16 15 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 4 (set (reg:DI 1 dx [85])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [1 failed_tip+0 S8 A64])) "tester/explorer_tester.c":172:7 80 {*movdi_internal}
     (nil))
(insn 18 17 20 4 (set (reg:DI 0 ax [86])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 success_tip+0 S8 A64])) "tester/explorer_tester.c":172:7 80 {*movdi_internal}
     (nil))
(insn 20 18 21 4 (set (reg:DI 4 si)
        (reg:DI 0 ax [86])) "tester/explorer_tester.c":172:7 80 {*movdi_internal}
     (nil))
(insn 21 20 22 4 (set (reg:DI 0 ax [87])
        (symbol_ref/f:DI ("*.LC22") [flags 0x2]  <var_decl 0x7fb9490aa2d0 *.LC22>)) "tester/explorer_tester.c":172:7 80 {*movdi_internal}
     (nil))
(insn 22 21 23 4 (set (reg:DI 5 di)
        (reg:DI 0 ax [87])) "tester/explorer_tester.c":172:7 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC22") [flags 0x2]  <var_decl 0x7fb9490aa2d0 *.LC22>)
        (nil)))
(insn 23 22 24 4 (set (reg:QI 0 ax)
        (const_int 0 [0])) "tester/explorer_tester.c":172:7 83 {*movqi_internal}
     (nil))
(call_insn 24 23 70 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fb9492c6000 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":172:7 909 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(jump_insn 70 24 71 4 (set (pc)
        (label_ref 37)) 892 {jump}
     (nil)
 -> 37)
;;  succ:       6 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 71 70 27)
;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL, MODIFIED)
;;  pred:       3
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 88 89 90
(code_label 27 71 28 5 74 (nil) [1 uses])
(note 28 27 29 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 30 5 (set (reg:DI 1 dx [88])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 success_tip+0 S8 A64])) "tester/explorer_tester.c":175:7 80 {*movdi_internal}
     (nil))
(insn 30 29 32 5 (set (reg:DI 0 ax [89])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [1 failed_tip+0 S8 A64])) "tester/explorer_tester.c":175:7 80 {*movdi_internal}
     (nil))
(insn 32 30 33 5 (set (reg:DI 4 si)
        (reg:DI 0 ax [89])) "tester/explorer_tester.c":175:7 80 {*movdi_internal}
     (nil))
(insn 33 32 34 5 (set (reg:DI 0 ax [90])
        (symbol_ref/f:DI ("*.LC22") [flags 0x2]  <var_decl 0x7fb9490aa2d0 *.LC22>)) "tester/explorer_tester.c":175:7 80 {*movdi_internal}
     (nil))
(insn 34 33 35 5 (set (reg:DI 5 di)
        (reg:DI 0 ax [90])) "tester/explorer_tester.c":175:7 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC22") [flags 0x2]  <var_decl 0x7fb9490aa2d0 *.LC22>)
        (nil)))
(insn 35 34 36 5 (set (reg:QI 0 ax)
        (const_int 0 [0])) "tester/explorer_tester.c":175:7 83 {*movqi_internal}
     (nil))
(call_insn 36 35 37 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fb9492c6000 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":175:7 909 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
;;  succ:       6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 7, flags: (RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;;              4 [always] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 82 91
(code_label 37 36 38 6 75 (nil) [1 uses])
(note 38 37 39 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 40 6 (set (reg/f:DI 0 ax [91])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [11 self+0 S8 A64])) "tester/explorer_tester.c":178:17 80 {*movdi_internal}
     (nil))
(insn 40 39 41 6 (set (mem:SI (plus:DI (reg/f:DI 0 ax [91])
                (const_int 32 [0x20])) [4 self_14(D)->error+0 S4 A64])
        (const_int 1 [0x1])) "tester/explorer_tester.c":178:17 81 {*movsi_internal}
     (nil))
(insn 41 40 72 6 (set (reg:SI 0 ax [orig:82 _1 ] [82])
        (const_int 0 [0])) "tester/explorer_tester.c":179:12 81 {*movsi_internal}
     (nil))
(jump_insn 72 41 73 6 (set (pc)
        (label_ref 61)) "tester/explorer_tester.c":179:12 892 {jump}
     (nil)
 -> 61)
;;  succ:       10 [always]  tester/explorer_tester.c:179:12
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82

(barrier 73 72 44)
;; basic block 7, loop depth 0, maybe hot
;;  prev block 6, next block 8, flags: (RTL, MODIFIED)
;;  pred:       2
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags]
(code_label 44 73 45 7 73 (nil) [1 uses])
(note 45 44 46 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 46 45 47 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -16 [0xfffffffffffffff0])) [4 result+0 S4 A32])
            (const_int 0 [0]))) "tester/explorer_tester.c":181:6 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 47 46 48 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 58)
            (pc))) "tester/explorer_tester.c":181:6 891 {*jcc}
     (nil)
 -> 58)
;;  succ:       8 (FALLTHRU)
;;              9
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 8, loop depth 0, maybe hot
;;  prev block 7, next block 9, flags: (RTL, MODIFIED)
;;  pred:       7 (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 82 92 93
(note 48 47 49 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 49 48 50 8 (set (reg:DI 0 ax [92])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [1 failed_tip+0 S8 A64])) "tester/explorer_tester.c":182:5 80 {*movdi_internal}
     (nil))
(insn 50 49 51 8 (set (reg:DI 4 si)
        (reg:DI 0 ax [92])) "tester/explorer_tester.c":182:5 80 {*movdi_internal}
     (nil))
(insn 51 50 52 8 (set (reg:DI 0 ax [93])
        (symbol_ref/f:DI ("*.LC23") [flags 0x2]  <var_decl 0x7fb9490aa360 *.LC23>)) "tester/explorer_tester.c":182:5 80 {*movdi_internal}
     (nil))
(insn 52 51 53 8 (set (reg:DI 5 di)
        (reg:DI 0 ax [93])) "tester/explorer_tester.c":182:5 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC23") [flags 0x2]  <var_decl 0x7fb9490aa360 *.LC23>)
        (nil)))
(insn 53 52 54 8 (set (reg:QI 0 ax)
        (const_int 0 [0])) "tester/explorer_tester.c":182:5 83 {*movqi_internal}
     (nil))
(call_insn 54 53 55 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fb9492c6000 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "tester/explorer_tester.c":182:5 909 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 55 54 74 8 (set (reg:SI 0 ax [orig:82 _1 ] [82])
        (const_int 0 [0])) "tester/explorer_tester.c":183:12 81 {*movsi_internal}
     (nil))
(jump_insn 74 55 75 8 (set (pc)
        (label_ref 61)) "tester/explorer_tester.c":183:12 892 {jump}
     (nil)
 -> 61)
;;  succ:       10 [always]  tester/explorer_tester.c:183:12
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82

(barrier 75 74 58)
;; basic block 9, loop depth 0, maybe hot
;;  prev block 8, next block 10, flags: (RTL, MODIFIED)
;;  pred:       7
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 82
(code_label 58 75 59 9 77 (nil) [1 uses])
(note 59 58 60 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 60 59 61 9 (set (reg:SI 0 ax [orig:82 _1 ] [82])
        (const_int 1 [0x1])) "tester/explorer_tester.c":185:10 81 {*movsi_internal}
     (nil))
;;  succ:       10 (FALLTHRU) tester/explorer_tester.c:185:10
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82

;; basic block 10, loop depth 0, maybe hot
;;  prev block 9, next block 1, flags: (RTL, MODIFIED)
;;  pred:       9 (FALLTHRU) tester/explorer_tester.c:185:10
;;              6 [always]  tester/explorer_tester.c:179:12
;;              8 [always]  tester/explorer_tester.c:183:12
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82
;; lr  def 	 0 [ax] 83
(code_label 61 60 62 10 76 (nil) [2 uses])
(note 62 61 68 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 68 62 76 10 (use (reg/i:SI 0 ax)) "tester/explorer_tester.c":186:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(note 76 68 0 NOTE_INSN_DELETED)
