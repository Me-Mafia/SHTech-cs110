
;; Function fill_random (fill_random, funcdef_no=6, decl_uid=3325, cgraph_uid=7, symbol_order=6)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=48, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 19 to 7 (offset=32, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 7:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 8:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 15:  (0) =rm  (1) %0  (2) re {*andsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 16:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 19:  (1) rBwBz {*call_value}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Small class reload: reject+=3
          alt=0,overall=22,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 21:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 22:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (0) =rm  (1) 0  (2) cJ {*lshrdi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 24:  (0) =rm  (1) 0  (2) cI {*ashrsi3_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly set: reject++
          alt=0,overall=12,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
	 Choosing alt 1 in insn 25:  (0) rm  (1) 0 {ashrsi3_cvt}
      Creating newreg=117 from oldreg=103, assigning class GENERAL_REGS to r117
   25: {r117:SI=r117:SI>>0x1f;clobber flags:CC;}
      REG_UNUSED flags:CC
    Inserting insn reload before:
   80: r117:SI=r85:SI
    Inserting insn reload after:
   81: r103:SI=r117:SI

          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (0) =rm  (1) 0  (2) re {*subsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 27:  (0) =r  (1) %rm  (2) K {*mulsi3_1}
          alt=0,overall=6,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
	 Choosing alt 0 in insn 28:  (0) =rm  (1) 0  (2) re {*subsi_1}
      Creating newreg=118 from oldreg=85, assigning class GENERAL_REGS to r118
   28: {r118:SI=r118:SI-r104:SI;clobber flags:CC;}
      REG_DEAD r104:SI
      REG_DEAD r85:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
   82: r118:SI=r85:SI
    Inserting insn reload after:
   83: r86:SI=r118:SI

          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 29:  (0) =Q  (1) Q {*movqi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=19,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=4,overall=11,losers=1 -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=9,losers=1 -- refuse
	 Choosing alt 5 in insn 30:  (0) Yp  (1) Yp  (2) ln {*addqi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 31:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 32:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 33:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 34
	 Choosing alt 0 in insn 34:  (0) =rm  (1) %0  (2) re {*adddi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=4,overall=21,losers=2,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=7,overall=27,losers=2 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 36:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 41:  (1) rBwBz {*call_value}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Small class reload: reject+=3
          alt=0,overall=22,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 43:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 44:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 45:  (0) =rm  (1) 0  (2) cJ {*lshrdi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 46:  (0) =rm  (1) 0  (2) cI {*ashrsi3_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly set: reject++
          alt=0,overall=12,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
	 Choosing alt 1 in insn 47:  (0) rm  (1) 0 {ashrsi3_cvt}
      Creating newreg=119 from oldreg=111, assigning class GENERAL_REGS to r119
   47: {r119:SI=r119:SI>>0x1f;clobber flags:CC;}
      REG_UNUSED flags:CC
    Inserting insn reload before:
   84: r119:SI=r92:SI
    Inserting insn reload after:
   85: r111:SI=r119:SI

          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 48:  (0) =rm  (1) 0  (2) re {*subsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 49:  (0) =r  (1) %rm  (2) K {*mulsi3_1}
          alt=0,overall=6,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
	 Choosing alt 0 in insn 50:  (0) =rm  (1) 0  (2) re {*subsi_1}
      Creating newreg=120 from oldreg=92, assigning class GENERAL_REGS to r120
   50: {r120:SI=r120:SI-r112:SI;clobber flags:CC;}
      REG_DEAD r112:SI
      REG_DEAD r92:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
   86: r120:SI=r92:SI
    Inserting insn reload after:
   87: r93:SI=r120:SI

          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 51:  (0) =Q  (1) Q {*movqi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            2 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 2: reject+=3
            2 Non input pseudo reload: reject++
            alt=1,overall=19,losers=2 -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=4,overall=11,losers=1 -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=9,losers=1 -- refuse
	 Choosing alt 5 in insn 52:  (0) Yp  (1) Yp  (2) ln {*addqi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 53:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 54:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 55:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 56
	 Choosing alt 0 in insn 56:  (0) =rm  (1) %0  (2) re {*adddi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=4,overall=21,losers=2,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=7,overall=27,losers=2 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 58:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 61:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 65:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 66:  (0) r  (1) rBM {*cmpsi_1}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #1: **********

EBB 2
EBB 3 4
EBB 5
EBB 6
EBB 7 9 8 10

********** Pseudo live ranges #1: **********

  BB 10
   Insn 78: point = 0, n_alt = -1
  BB 8
  BB 9
   Insn 76: point = 0, n_alt = -1
  BB 7
   Insn 67: point = 0, n_alt = -1
   Insn 66: point = 0, n_alt = 1
   Insn 65: point = 1, n_alt = 0
  BB 2
   Insn 71: point = 2, n_alt = -1
   Insn 8: point = 2, n_alt = 1
   Insn 7: point = 2, n_alt = 1
   Insn 3: point = 2, n_alt = 1
   Insn 2: point = 2, n_alt = 5
  BB 6
   Insn 61: point = 2, n_alt = 0
  BB 4
   Insn 73: point = 2, n_alt = -1
   Insn 36: point = 2, n_alt = 8
   Insn 35: point = 3, n_alt = -2
   Insn 34: point = 5, n_alt = 0
   Insn 33: point = 7, n_alt = 3
   Insn 32: point = 8, n_alt = 1
   Insn 31: point = 10, n_alt = 0
   Insn 30: point = 11, n_alt = 5
   Insn 29: point = 13, n_alt = 0
   Insn 83: point = 15, n_alt = -2
	Hard reg 1 is preferable by r118 with profit 1000
   Insn 28: point = 17, n_alt = 0
   Insn 82: point = 19, n_alt = -2
	Hard reg 1 is preferable by r118 with profit 1000
	Hard reg 0 is preferable by r118 with profit 1000
   Insn 27: point = 21, n_alt = 0
   Insn 26: point = 23, n_alt = 0
   Insn 81: point = 25, n_alt = -2
	Hard reg 2 is preferable by r117 with profit 1000
   Insn 25: point = 27, n_alt = 1
   Insn 80: point = 28, n_alt = -2
	Hard reg 2 is preferable by r117 with profit 1000
	Hard reg 0 is preferable by r117 with profit 1000
   Insn 24: point = 29, n_alt = 0
   Insn 23: point = 31, n_alt = 0
   Insn 22: point = 33, n_alt = 1
   Insn 21: point = 35, n_alt = 1
   Insn 20: point = 36, n_alt = -2
   Insn 19: point = 37, n_alt = 0
  BB 5
   Insn 58: point = 37, n_alt = 8
   Insn 57: point = 38, n_alt = -2
   Insn 56: point = 40, n_alt = 0
   Insn 55: point = 42, n_alt = 3
   Insn 54: point = 43, n_alt = 1
   Insn 53: point = 45, n_alt = 0
   Insn 52: point = 46, n_alt = 5
   Insn 51: point = 48, n_alt = 0
   Insn 87: point = 50, n_alt = -2
	Hard reg 1 is preferable by r120 with profit 1000
   Insn 50: point = 52, n_alt = 0
   Insn 86: point = 54, n_alt = -2
	Hard reg 1 is preferable by r120 with profit 1000
	Hard reg 0 is preferable by r120 with profit 1000
   Insn 49: point = 56, n_alt = 0
   Insn 48: point = 58, n_alt = 0
   Insn 85: point = 60, n_alt = -2
	Hard reg 2 is preferable by r119 with profit 1000
   Insn 47: point = 62, n_alt = 1
   Insn 84: point = 63, n_alt = -2
	Hard reg 2 is preferable by r119 with profit 1000
	Hard reg 0 is preferable by r119 with profit 1000
   Insn 46: point = 64, n_alt = 0
   Insn 45: point = 66, n_alt = 0
   Insn 44: point = 68, n_alt = 1
   Insn 43: point = 70, n_alt = 1
   Insn 42: point = 71, n_alt = -2
   Insn 41: point = 72, n_alt = 0
  BB 3
   Insn 17: point = 72, n_alt = -1
   Insn 16: point = 72, n_alt = 0
   Insn 15: point = 73, n_alt = 0
   Insn 14: point = 75, n_alt = -2
   Insn 13: point = 77, n_alt = -2
   Insn 12: point = 78, n_alt = 0
 r82: [76..77]
 r83: [74..75]
 r84: [72..73]
 r85: [20..36]
 r86: [22..23] [14..15]
 r87: [12..13]
 r88: [4..11]
 r89: [6..8]
 r90: [2..5]
 r91: [2..3]
 r92: [55..71]
 r93: [57..58] [49..50]
 r94: [47..48]
 r95: [39..46]
 r96: [41..43]
 r97: [37..40]
 r98: [37..38]
 r99: [34..35]
 r100: [32..33]
 r101: [30..31]
 r102: [24..29]
 r103: [24..25]
 r104: [18..21]
 r105: [9..10]
 r106: [6..7]
 r107: [69..70]
 r108: [67..68]
 r109: [65..66]
 r110: [59..64]
 r111: [59..60]
 r112: [53..56]
 r113: [44..45]
 r114: [41..42]
 r115: [0..1]
 r117: [26..28]
 r118: [16..19]
 r119: [61..63]
 r120: [51..54]
Compressing live ranges: from 78 to 64 - 82%
Ranges after the compression:
 r82: [62..63]
 r83: [60..61]
 r84: [58..59]
 r85: [16..29]
 r86: [18..19] [12..13]
 r87: [10..11]
 r88: [4..9]
 r89: [6..7]
 r90: [2..5]
 r91: [2..3]
 r92: [44..57]
 r93: [46..47] [40..41]
 r94: [38..39]
 r95: [32..37]
 r96: [34..35]
 r97: [30..33]
 r98: [30..31]
 r99: [28..29]
 r100: [26..27]
 r101: [24..25]
 r102: [20..23]
 r103: [20..21]
 r104: [14..17]
 r105: [8..9]
 r106: [6..7]
 r107: [56..57]
 r108: [54..55]
 r109: [52..53]
 r110: [48..51]
 r111: [48..49]
 r112: [42..45]
 r113: [36..37]
 r114: [34..35]
 r115: [0..1]
 r117: [22..23]
 r118: [14..15]
 r119: [50..51]
 r120: [42..43]

********** Assignment #1: **********

	 Assigning to 117 (cl=GENERAL_REGS, orig=103, freq=3000, tfirst=117, tfreq=3000)...
	   Assign 2 to reload r117 (freq=3000)
	 Assigning to 118 (cl=GENERAL_REGS, orig=85, freq=3000, tfirst=118, tfreq=3000)...
	   Assign 0 to reload r118 (freq=3000)
	 Assigning to 119 (cl=GENERAL_REGS, orig=111, freq=3000, tfirst=119, tfreq=3000)...
	   Assign 2 to reload r119 (freq=3000)
	 Assigning to 120 (cl=GENERAL_REGS, orig=92, freq=3000, tfirst=120, tfreq=3000)...
	   Assign 0 to reload r120 (freq=3000)

********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 6
	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=48, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 19 to 7 (offset=32, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
changing reg in insn 13
changing reg in insn 14
changing reg in insn 14
changing reg in insn 15
changing reg in insn 15
changing reg in insn 16
changing reg in insn 20
changing reg in insn 21
changing reg in insn 26
changing reg in insn 26
changing reg in insn 27
changing reg in insn 29
changing reg in insn 30
changing reg in insn 30
changing reg in insn 35
changing reg in insn 32
changing reg in insn 34
changing reg in insn 34
changing reg in insn 36
changing reg in insn 35
changing reg in insn 36
changing reg in insn 42
changing reg in insn 43
changing reg in insn 48
changing reg in insn 48
changing reg in insn 49
changing reg in insn 51
changing reg in insn 52
changing reg in insn 52
changing reg in insn 57
changing reg in insn 54
changing reg in insn 56
changing reg in insn 56
changing reg in insn 58
changing reg in insn 57
changing reg in insn 58
changing reg in insn 21
changing reg in insn 22
changing reg in insn 22
changing reg in insn 23
changing reg in insn 23
changing reg in insn 24
changing reg in insn 26
changing reg in insn 26
changing reg in insn 27
changing reg in insn 28
changing reg in insn 31
changing reg in insn 32
changing reg in insn 33
changing reg in insn 43
changing reg in insn 44
changing reg in insn 44
changing reg in insn 45
changing reg in insn 45
changing reg in insn 46
changing reg in insn 48
changing reg in insn 48
changing reg in insn 49
changing reg in insn 50
changing reg in insn 53
changing reg in insn 54
changing reg in insn 55
changing reg in insn 65
changing reg in insn 66
deleting insn with uid = 13.
deleting insn with uid = 14.
deleting insn with uid = 20.
deleting insn with uid = 81.
deleting insn with uid = 82.
deleting insn with uid = 42.
deleting insn with uid = 85.
deleting insn with uid = 86.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 12.
verify found no changes in insn with uid = 19.
verify found no changes in insn with uid = 41.


fill_random

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;;  ref usage 	r0={16d,19u,2e} r1={20d,16u,2e} r2={12d,8u} r4={4d,1u} r5={4d,1u} r6={1d,22u} r7={1d,13u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r17={25d,2u} r18={3d} r19={1d,1u,2e} r20={4d} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={4d} r37={4d} r38={3d} r39={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} 
;;    total ref usage 366{277d,83u,6e} in 54{51 regular + 3 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [3 buf+0 S8 A64])
        (reg:DI 5 di [ buf ])) "main.c":14:46 80 {*movdi_internal}
     (nil))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 size+0 S4 A32])
        (reg:SI 4 si [ size ])) "main.c":14:46 81 {*movsi_internal}
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
        (const_int 0 [0])) "main.c":15:7 81 {*movsi_internal}
     (nil))
(insn 8 7 71 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
        (const_int 0 [0])) "main.c":16:10 81 {*movsi_internal}
     (nil))
(jump_insn 71 8 72 2 (set (pc)
        (label_ref 62)) "main.c":16:3 892 {jump}
     (nil)
 -> 62)
;;  succ:       7 [always]  main.c:16:3
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 72 71 64)
;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       7
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 82 83 84
(code_label 64 72 11 3 5 (nil) [1 uses])
(note 11 64 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(call_insn 12 11 15 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("rand") [flags 0x41]  <function_decl 0x7fa610bed200 rand>) [0 rand S1 A8])
            (const_int 0 [0]))) "main.c":17:9 909 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
(insn 15 12 16 3 (parallel [
            (set (reg:SI 0 ax [orig:84 _3 ] [84])
                (and:SI (reg:SI 0 ax [orig:83 _2 ] [83])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":17:9 533 {*andsi_1}
     (nil))
(insn 16 15 17 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:84 _3 ] [84])
            (const_int 0 [0]))) "main.c":17:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 17 16 18 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 39)
            (pc))) "main.c":17:8 891 {*jcc}
     (nil)
 -> 39)
;;  succ:       4 (FALLTHRU)
;;              5
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 85 86 87 88 89 90 91 99 100 101 102 103 104 105 106
(note 18 17 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(call_insn 19 18 21 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("rand") [flags 0x41]  <function_decl 0x7fa610bed200 rand>) [0 rand S1 A8])
            (const_int 0 [0]))) "main.c":18:22 909 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
(insn 21 19 22 4 (set (reg:DI 1 dx [99])
        (sign_extend:DI (reg:SI 0 ax [orig:85 _4 ] [85]))) "main.c":18:29 154 {*extendsidi2_rex64}
     (nil))
(insn 22 21 23 4 (parallel [
            (set (reg:DI 1 dx [100])
                (mult:DI (reg:DI 1 dx [99])
                    (const_int 1321528399 [0x4ec4ec4f])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":18:29 445 {*muldi3_1}
     (nil))
(insn 23 22 24 4 (parallel [
            (set (reg:DI 1 dx [101])
                (lshiftrt:DI (reg:DI 1 dx [100])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":18:29 768 {*lshrdi3_1}
     (nil))
(insn 24 23 80 4 (parallel [
            (set (reg:SI 1 dx [102])
                (ashiftrt:SI (reg:SI 1 dx [101])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":18:29 765 {*ashrsi3_1}
     (nil))
(insn 80 24 25 4 (set (reg:SI 2 cx [103])
        (reg:SI 0 ax [orig:85 _4 ] [85])) "main.c":18:29 81 {*movsi_internal}
     (nil))
(insn 25 80 26 4 (parallel [
            (set (reg:SI 2 cx [103])
                (ashiftrt:SI (reg:SI 2 cx [103])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":18:29 758 {ashrsi3_cvt}
     (nil))
(insn 26 25 27 4 (parallel [
            (set (reg:SI 1 dx [orig:86 _5 ] [86])
                (minus:SI (reg:SI 1 dx [102])
                    (reg:SI 2 cx [103])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":18:29 302 {*subsi_1}
     (expr_list:REG_EQUAL (div:SI (reg:SI 0 ax [orig:85 _4 ] [85])
            (const_int 26 [0x1a]))
        (nil)))
(insn 27 26 28 4 (parallel [
            (set (reg:SI 2 cx [104])
                (mult:SI (reg:SI 1 dx [orig:86 _5 ] [86])
                    (const_int 26 [0x1a])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":18:29 444 {*mulsi3_1}
     (nil))
(insn 28 27 83 4 (parallel [
            (set (reg:SI 0 ax [orig:85 _4 ] [85])
                (minus:SI (reg:SI 0 ax [orig:85 _4 ] [85])
                    (reg:SI 2 cx [104])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":18:29 302 {*subsi_1}
     (nil))
(insn 83 28 29 4 (set (reg:SI 1 dx [orig:86 _5 ] [86])
        (reg:SI 0 ax [orig:85 _4 ] [85])) "main.c":18:29 81 {*movsi_internal}
     (nil))
(insn 29 83 30 4 (set (reg:QI 0 ax [orig:87 _6 ] [87])
        (reg:QI 1 dx [orig:86 _5 ] [86])) "main.c":18:20 83 {*movqi_internal}
     (nil))
(insn 30 29 31 4 (parallel [
            (set (reg:QI 2 cx [orig:88 _7 ] [88])
                (plus:QI (reg:QI 0 ax [orig:87 _6 ] [87])
                    (const_int 65 [0x41])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":18:20 233 {*addqi_1}
     (nil))
(insn 31 30 32 4 (set (reg:SI 0 ax [105])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "main.c":18:10 81 {*movsi_internal}
     (nil))
(insn 32 31 33 4 (set (reg:DI 1 dx [orig:89 _8 ] [89])
        (sign_extend:DI (reg:SI 0 ax [105]))) "main.c":18:10 154 {*extendsidi2_rex64}
     (nil))
(insn 33 32 34 4 (set (reg/f:DI 0 ax [106])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [3 buf+0 S8 A64])) "main.c":18:10 80 {*movdi_internal}
     (nil))
(insn 34 33 35 4 (parallel [
            (set (reg/f:DI 0 ax [orig:90 _9 ] [90])
                (plus:DI (reg/f:DI 0 ax [106])
                    (reg:DI 1 dx [orig:89 _8 ] [89])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":18:10 230 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                    (const_int -24 [0xffffffffffffffe8])) [3 buf+0 S8 A64])
            (reg:DI 1 dx [orig:89 _8 ] [89]))
        (nil)))
(insn 35 34 36 4 (set (reg:QI 1 dx [orig:91 _10 ] [91])
        (reg:QI 2 cx [orig:88 _7 ] [88])) "main.c":18:20 83 {*movqi_internal}
     (nil))
(insn 36 35 73 4 (set (mem:QI (reg/f:DI 0 ax [orig:90 _9 ] [90]) [0 *_9+0 S1 A8])
        (reg:QI 1 dx [orig:91 _10 ] [91])) "main.c":18:14 83 {*movqi_internal}
     (nil))
(jump_insn 73 36 74 4 (set (pc)
        (label_ref 59)) 892 {jump}
     (nil)
 -> 59)
;;  succ:       6 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 74 73 39)
;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL, MODIFIED)
;;  pred:       3
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 92 93 94 95 96 97 98 107 108 109 110 111 112 113 114
(code_label 39 74 40 5 3 (nil) [1 uses])
(note 40 39 41 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(call_insn 41 40 43 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("rand") [flags 0x41]  <function_decl 0x7fa610bed200 rand>) [0 rand S1 A8])
            (const_int 0 [0]))) "main.c":20:22 909 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
(insn 43 41 44 5 (set (reg:DI 1 dx [107])
        (sign_extend:DI (reg:SI 0 ax [orig:92 _11 ] [92]))) "main.c":20:29 154 {*extendsidi2_rex64}
     (nil))
(insn 44 43 45 5 (parallel [
            (set (reg:DI 1 dx [108])
                (mult:DI (reg:DI 1 dx [107])
                    (const_int 1321528399 [0x4ec4ec4f])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":20:29 445 {*muldi3_1}
     (nil))
(insn 45 44 46 5 (parallel [
            (set (reg:DI 1 dx [109])
                (lshiftrt:DI (reg:DI 1 dx [108])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":20:29 768 {*lshrdi3_1}
     (nil))
(insn 46 45 84 5 (parallel [
            (set (reg:SI 1 dx [110])
                (ashiftrt:SI (reg:SI 1 dx [109])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":20:29 765 {*ashrsi3_1}
     (nil))
(insn 84 46 47 5 (set (reg:SI 2 cx [111])
        (reg:SI 0 ax [orig:92 _11 ] [92])) "main.c":20:29 81 {*movsi_internal}
     (nil))
(insn 47 84 48 5 (parallel [
            (set (reg:SI 2 cx [111])
                (ashiftrt:SI (reg:SI 2 cx [111])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":20:29 758 {ashrsi3_cvt}
     (nil))
(insn 48 47 49 5 (parallel [
            (set (reg:SI 1 dx [orig:93 _12 ] [93])
                (minus:SI (reg:SI 1 dx [110])
                    (reg:SI 2 cx [111])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":20:29 302 {*subsi_1}
     (expr_list:REG_EQUAL (div:SI (reg:SI 0 ax [orig:92 _11 ] [92])
            (const_int 26 [0x1a]))
        (nil)))
(insn 49 48 50 5 (parallel [
            (set (reg:SI 2 cx [112])
                (mult:SI (reg:SI 1 dx [orig:93 _12 ] [93])
                    (const_int 26 [0x1a])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":20:29 444 {*mulsi3_1}
     (nil))
(insn 50 49 87 5 (parallel [
            (set (reg:SI 0 ax [orig:92 _11 ] [92])
                (minus:SI (reg:SI 0 ax [orig:92 _11 ] [92])
                    (reg:SI 2 cx [112])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":20:29 302 {*subsi_1}
     (nil))
(insn 87 50 51 5 (set (reg:SI 1 dx [orig:93 _12 ] [93])
        (reg:SI 0 ax [orig:92 _11 ] [92])) "main.c":20:29 81 {*movsi_internal}
     (nil))
(insn 51 87 52 5 (set (reg:QI 0 ax [orig:94 _13 ] [94])
        (reg:QI 1 dx [orig:93 _12 ] [93])) "main.c":20:20 83 {*movqi_internal}
     (nil))
(insn 52 51 53 5 (parallel [
            (set (reg:QI 2 cx [orig:95 _14 ] [95])
                (plus:QI (reg:QI 0 ax [orig:94 _13 ] [94])
                    (const_int 97 [0x61])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":20:20 233 {*addqi_1}
     (nil))
(insn 53 52 54 5 (set (reg:SI 0 ax [113])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "main.c":20:10 81 {*movsi_internal}
     (nil))
(insn 54 53 55 5 (set (reg:DI 1 dx [orig:96 _15 ] [96])
        (sign_extend:DI (reg:SI 0 ax [113]))) "main.c":20:10 154 {*extendsidi2_rex64}
     (nil))
(insn 55 54 56 5 (set (reg/f:DI 0 ax [114])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [3 buf+0 S8 A64])) "main.c":20:10 80 {*movdi_internal}
     (nil))
(insn 56 55 57 5 (parallel [
            (set (reg/f:DI 0 ax [orig:97 _16 ] [97])
                (plus:DI (reg/f:DI 0 ax [114])
                    (reg:DI 1 dx [orig:96 _15 ] [96])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":20:10 230 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                    (const_int -24 [0xffffffffffffffe8])) [3 buf+0 S8 A64])
            (reg:DI 1 dx [orig:96 _15 ] [96]))
        (nil)))
(insn 57 56 58 5 (set (reg:QI 1 dx [orig:98 _17 ] [98])
        (reg:QI 2 cx [orig:95 _14 ] [95])) "main.c":20:20 83 {*movqi_internal}
     (nil))
(insn 58 57 59 5 (set (mem:QI (reg/f:DI 0 ax [orig:97 _16 ] [97]) [0 *_16+0 S1 A8])
        (reg:QI 1 dx [orig:98 _17 ] [98])) "main.c":20:14 83 {*movqi_internal}
     (nil))
;;  succ:       6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 7, flags: (RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;;              4 [always] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags]
(code_label 59 58 60 6 4 (nil) [1 uses])
(note 60 59 61 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 61 60 62 6 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":16:26 229 {*addsi_1}
     (nil))
;;  succ:       7 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 7, loop depth 0, maybe hot
;;  prev block 6, next block 9, flags: (RTL, MODIFIED)
;;  pred:       6 (FALLTHRU,DFS_BACK)
;;              2 [always]  main.c:16:3
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags] 115
(code_label 62 61 63 7 2 (nil) [1 uses])
(note 63 62 65 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 65 63 66 7 (set (reg:SI 0 ax [115])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "main.c":16:17 81 {*movsi_internal}
     (nil))
(insn 66 65 67 7 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [115])
            (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -28 [0xffffffffffffffe4])) [1 size+0 S4 A32]))) "main.c":16:17 11 {*cmpsi_1}
     (nil))
(jump_insn 67 66 75 7 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 64)
            (pc))) "main.c":16:17 891 {*jcc}
     (nil)
 -> 64)
;;  succ:       3
;;              9 (FALLTHRU) main.c:23:1
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 9, loop depth 0, maybe hot
;;  prev block 7, next block 8, flags: (RTL, MODIFIED)
;;  pred:       7 (FALLTHRU) main.c:23:1
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(note 75 67 76 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 76 75 68 9 (const_int 0 [0]) "main.c":23:1 928 {nop}
     (nil))
;;  succ:       8 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 8, loop depth 0, maybe hot
;;  prev block 9, next block 10, flags: (RTL, MODIFIED)
;;  pred:       9 [always]  (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(note 68 76 77 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
;;  succ:       10 [always]  (FALLTHRU) main.c:23:1
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 10, loop depth 0, maybe hot
;;  prev block 8, next block 1, flags: (RTL, MODIFIED)
;;  pred:       8 [always]  (FALLTHRU) main.c:23:1
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(note 77 68 78 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 78 77 79 10 (const_int 0 [0]) "main.c":23:1 928 {nop}
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(note 79 78 0 NOTE_INSN_DELETED)

;; Function test_file_init (test_file_init, funcdef_no=7, decl_uid=3333, cgraph_uid=8, symbol_order=8)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 5:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (1) rBwBz {*call_value}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 9:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 10:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 11:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 16:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 18:  (0) rBwBz {*call}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #1: **********

EBB 2 3

********** Pseudo live ranges #1: **********

  BB 3
   Insn 22: point = 0, n_alt = -1
  BB 2
   Insn 18: point = 0, n_alt = 0
   Insn 17: point = 0, n_alt = -2
   Insn 16: point = 1, n_alt = 3
   Insn 15: point = 2, n_alt = 0
   Insn 14: point = 2, n_alt = -2
   Insn 13: point = 3, n_alt = 0
   Insn 12: point = 3, n_alt = -2
   Insn 11: point = 4, n_alt = 4
   Insn 10: point = 5, n_alt = 3
   Insn 9: point = 6, n_alt = 5
   Insn 8: point = 7, n_alt = -2
   Insn 7: point = 8, n_alt = 0
   Insn 6: point = 8, n_alt = -2
   Insn 5: point = 9, n_alt = 4
 r82: [8..9]
 r83: [6..7]
 r84: [2..5]
 r85: [3..4]
 r86: [0..1]
Compressing live ranges: from 10 to 8 - 80%
Ranges after the compression:
 r82: [6..7]
 r83: [4..5]
 r84: [2..3]
 r85: [2..3]
 r86: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 6
	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
changing reg in insn 5
changing reg in insn 6
changing reg in insn 8
changing reg in insn 9
changing reg in insn 10
changing reg in insn 14
changing reg in insn 11
changing reg in insn 12
changing reg in insn 16
changing reg in insn 17
deleting insn with uid = 8.
deleting insn with uid = 12.
starting the processing of deferred insns
ending the processing of deferred insns


test_file_init

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;;  ref usage 	r0={7d,4u} r1={5d,1u} r2={4d} r4={5d,1u} r5={7d,3u} r6={1d,6u} r7={1d,6u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r17={3d} r18={3d} r19={1d,1u} r20={4d} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={4d} r37={4d} r38={3d} r39={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} 
;;    total ref usage 249{227d,22u,0e} in 13{10 regular + 3 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 82 83 84 85 86
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:DI 0 ax [82])
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7fa6108a1630 *.LC0>)) "main.c":28:32 80 {*movdi_internal}
     (nil))
(insn 6 5 7 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [82])) "main.c":28:32 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7fa6108a1630 *.LC0>)
        (nil)))
(call_insn 7 6 9 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("file_tester_create") [flags 0x41]  <function_decl 0x7fa610b72e00 file_tester_create>) [0 file_tester_create S1 A8])
            (const_int 0 [0]))) "main.c":28:32 909 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 9 7 10 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [8 tester+0 S8 A64])
        (reg:DI 0 ax [83])) "main.c":28:32 80 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:DI 0 ax [84])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [8 tester+0 S8 A64])) "main.c":29:3 80 {*movdi_internal}
     (nil))
(insn 11 10 13 2 (set (reg:DI 1 dx [85])
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7fa6108a16c0 *.LC1>)) "main.c":29:3 80 {*movdi_internal}
     (nil))
(insn 13 11 14 2 (set (reg:SI 4 si)
        (const_int 0 [0])) "main.c":29:3 81 {*movsi_internal}
     (nil))
(insn 14 13 15 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [84])) "main.c":29:3 80 {*movdi_internal}
     (nil))
(call_insn 15 14 16 2 (call (mem:QI (symbol_ref:DI ("file_tester_init") [flags 0x41]  <function_decl 0x7fa610b77000 file_tester_init>) [0 file_tester_init S1 A8])
        (const_int 0 [0])) "main.c":29:3 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 16 15 17 2 (set (reg:DI 0 ax [86])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [8 tester+0 S8 A64])) "main.c":30:3 80 {*movdi_internal}
     (nil))
(insn 17 16 18 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [86])) "main.c":30:3 80 {*movdi_internal}
     (nil))
(call_insn 18 17 21 2 (call (mem:QI (symbol_ref:DI ("file_tester_destory") [flags 0x41]  <function_decl 0x7fa610b72f00 file_tester_destory>) [0 file_tester_destory S1 A8])
        (const_int 0 [0])) "main.c":30:3 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       3 [always]  (FALLTHRU) main.c:31:1
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 1, flags: (RTL, MODIFIED)
;;  pred:       2 [always]  (FALLTHRU) main.c:31:1
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(note 21 18 22 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 3 (const_int 0 [0]) "main.c":31:1 928 {nop}
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(note 23 22 0 NOTE_INSN_DELETED)

;; Function test_file_write_inbound (test_file_write_inbound, funcdef_no=8, decl_uid=3336, cgraph_uid=9, symbol_order=9)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=64, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 19 to 7 (offset=32, prev_offset=0)
Can eliminate 19 to 6 (offset=-16, prev_offset=0)
            2 Scratch win: reject+=2
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3:  (0) =m  (1) m  (2) =&r {stack_protect_set_1_di}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 8:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 9:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 11:  (0) =rm  (1) %0  (2) re {*adddi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 13:  (0) m  (1) re {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 14:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 15:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 16:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 17:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 18:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 24:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 25:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 26:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 27:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 29:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 30:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 31:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 88:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 32:  (0) =rm  (1) %0  (2) re {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 33:  (0) =rm  (1) %0  (2) re {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 89:  (0) r  (1) Z {*movdi_internal}
            1 Small class reload: reject+=3
            1 Non input pseudo reload: reject++
            1 Early clobber: reject++
          alt=0,overall=11,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 34:  (0) =a  (1) =&d  (2) 0  (3) rm {*udivmoddi4}
      Creating newreg=131 from oldreg=112, assigning class DREG to r131
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 35:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 36:  (0) =rm  (1) 0  (2) re {*subdi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 38:  (0) =rm  (1) %0  (2) re {*adddi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 39:  (0) m  (1) re {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 40:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 41:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 44:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 45:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 47:  (1) rBwBz {*call_value}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 49:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 50:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 51:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 53:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 55:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 56:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 57:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 58:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 61:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 63:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 64:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 65:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 66:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 69:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 71:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 72:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 74:  (0) rBwBz {*call}
            3 Scratch win: reject+=2
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 79:  (1) m  (2) m  (3) =&r {stack_protect_test_1_di}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 81:  (0) rBwBz {*call}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #1: **********

EBB 2 3
EBB 4

********** Pseudo live ranges #1: **********

  BB 3
   Insn 81: point = 0, n_alt = 0
  BB 4
  BB 2
   Insn 80: point = 0, n_alt = -1
   Insn 79: point = 0, n_alt = 0
   Insn 87: point = 2, n_alt = -1
   Insn 77: point = 2, n_alt = -2
   Insn 76: point = 3, n_alt = -1
   Insn 75: point = 3, n_alt = -1
   Insn 74: point = 3, n_alt = 0
   Insn 73: point = 3, n_alt = -2
   Insn 72: point = 4, n_alt = 3
   Insn 71: point = 5, n_alt = 0
   Insn 70: point = 5, n_alt = -2
   Insn 69: point = 6, n_alt = 0
   Insn 68: point = 6, n_alt = -2
   Insn 67: point = 7, n_alt = -2
   Insn 66: point = 8, n_alt = 3
   Insn 65: point = 9, n_alt = 3
   Insn 64: point = 10, n_alt = 0
   Insn 63: point = 11, n_alt = 0
   Insn 62: point = 11, n_alt = -2
   Insn 61: point = 12, n_alt = 0
   Insn 60: point = 12, n_alt = -2
   Insn 59: point = 13, n_alt = -2
   Insn 58: point = 14, n_alt = 3
   Insn 57: point = 15, n_alt = 3
   Insn 56: point = 16, n_alt = 0
   Insn 55: point = 17, n_alt = 0
   Insn 54: point = 17, n_alt = -2
   Insn 53: point = 18, n_alt = 0
   Insn 52: point = 18, n_alt = -2
   Insn 51: point = 19, n_alt = 4
   Insn 50: point = 20, n_alt = 3
   Insn 49: point = 21, n_alt = 5
   Insn 48: point = 22, n_alt = -2
   Insn 47: point = 23, n_alt = 0
   Insn 46: point = 23, n_alt = -2
   Insn 45: point = 24, n_alt = 4
   Insn 44: point = 25, n_alt = 0
   Insn 43: point = 25, n_alt = -2
   Insn 42: point = 26, n_alt = -2
   Insn 41: point = 27, n_alt = 3
   Insn 40: point = 28, n_alt = 0
   Insn 39: point = 29, n_alt = 5
   Insn 38: point = 30, n_alt = 0
   Insn 37: point = 32, n_alt = -2
   Insn 36: point = 33, n_alt = 0
   Insn 35: point = 34, n_alt = 0
   Insn 34: point = 36, n_alt = 0
   Insn 89: point = 38, n_alt = 2
   Insn 33: point = 39, n_alt = 0
   Insn 32: point = 41, n_alt = 0
   Insn 88: point = 43, n_alt = 2
   Insn 31: point = 44, n_alt = 0
   Insn 30: point = 46, n_alt = 0
   Insn 29: point = 48, n_alt = 0
   Insn 27: point = 49, n_alt = 2
   Insn 26: point = 50, n_alt = 3
   Insn 25: point = 51, n_alt = 0
   Insn 24: point = 53, n_alt = 0
   Insn 23: point = 55, n_alt = 0
   Insn 18: point = 56, n_alt = 2
   Insn 17: point = 57, n_alt = 3
   Insn 16: point = 58, n_alt = 0
   Insn 15: point = 60, n_alt = 0
   Insn 14: point = 62, n_alt = 0
   Insn 13: point = 63, n_alt = 5
   Insn 12: point = 64, n_alt = -2
   Insn 11: point = 66, n_alt = 0
   Insn 10: point = 68, n_alt = 0
   Insn 9: point = 70, n_alt = 0
   Insn 8: point = 72, n_alt = 0
   Insn 7: point = 73, n_alt = -2
   Insn 6: point = 75, n_alt = -2
   Insn 3: point = 76, n_alt = 0
 r82: [71..72]
 r83: [69..70]
 r84: [67..68]
 r85: [65..66]
 r86: [63..64]
 r87: [61..62]
 r88: [59..60]
 r89: [57..58]
 r90: [56..78]
 r95: [54..55]
 r96: [52..53]
 r97: [50..51]
 r98: [49..78]
 r100: [47..48]
 r101: [45..46]
 r102: [40..44]
 r103: [26..28]
 r104: [12..16]
 r105: [6..10]
 r106: [2..73]
 r107: [74..75]
 r108: [40..41]
 r109: [37..39]
 r111: [35..36]
 r113: [33..34]
 r114: [31..32]
 r115: [29..30]
 r116: [25..27]
 r117: [23..24]
 r118: [21..22]
 r119: [17..20]
 r120: [18..19]
 r121: [13..15]
 r122: [11..14]
 r123: [7..9]
 r124: [5..8]
 r125: [3..4]
 r126: [42..43]
 r127: [37..38]
 r128: [76..77]
 r129: [0..1]
 r131: [36..37]
Compressing live ranges: from 79 to 60 - 75%
Ranges after the compression:
 r82: [54..55]
 r83: [52..53]
 r84: [50..51]
 r85: [48..49]
 r86: [46..47]
 r87: [44..45]
 r88: [42..43]
 r89: [40..41]
 r90: [40..59]
 r95: [38..39]
 r96: [36..37]
 r97: [34..35]
 r98: [34..59]
 r100: [32..33]
 r101: [30..31]
 r102: [26..29]
 r103: [14..15]
 r104: [6..7]
 r105: [4..5]
 r106: [2..55]
 r107: [56..57]
 r108: [26..27]
 r109: [24..25]
 r111: [22..23]
 r113: [20..21]
 r114: [18..19]
 r115: [16..17]
 r116: [14..15]
 r117: [12..13]
 r118: [10..11]
 r119: [8..9]
 r120: [8..9]
 r121: [6..7]
 r122: [6..7]
 r123: [4..5]
 r124: [4..5]
 r125: [2..3]
 r126: [28..29]
 r127: [24..25]
 r128: [58..59]
 r129: [0..1]
 r131: [23..24]

********** Assignment #1: **********

	 Assigning to 131 (cl=DREG, orig=112, freq=1000, tfirst=131, tfreq=1000)...
	 Trying 1: spill 127(freq=2000)	 Now best 1(cost=1000, bad_spills=0, insn_pseudos=1)

      Spill r127(hr=1, freq=2000) for r131
	   Assign 1 to reload r131 (freq=1000)
  Reassigning non-reload pseudos
	   Assign 2 to r127 (freq=2000)

********** Undoing inheritance #1: **********


********** Pseudos coalescing #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 6
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 89:  (0) r  (1) Z {*movdi_internal}
            1 Early clobber: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 34:  (0) =a  (1) =&d  (2) 0  (3) rm {*udivmoddi4}
	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=64, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 19 to 7 (offset=32, prev_offset=0)
Can eliminate 19 to 6 (offset=-16, prev_offset=-16)
changing reg in insn 8
changing reg in insn 9
changing reg in insn 9
changing reg in insn 10
changing reg in insn 10
changing reg in insn 11
changing reg in insn 11
changing reg in insn 12
changing reg in insn 12
changing reg in insn 13
changing reg in insn 14
changing reg in insn 15
changing reg in insn 15
changing reg in insn 16
changing reg in insn 16
changing reg in insn 17
changing reg in insn 18
changing reg in insn 17
changing reg in insn 23
changing reg in insn 24
changing reg in insn 24
changing reg in insn 25
changing reg in insn 25
changing reg in insn 26
changing reg in insn 27
changing reg in insn 26
changing reg in insn 29
changing reg in insn 30
changing reg in insn 30
changing reg in insn 31
changing reg in insn 31
changing reg in insn 33
changing reg in insn 40
changing reg in insn 42
changing reg in insn 56
changing reg in insn 60
changing reg in insn 64
changing reg in insn 68
changing reg in insn 7
changing reg in insn 77
changing reg in insn 6
changing reg in insn 7
changing reg in insn 32
changing reg in insn 33
changing reg in insn 33
changing reg in insn 34
changing reg in insn 34
changing reg in insn 34
changing reg in insn 35
changing reg in insn 35
changing reg in insn 36
changing reg in insn 37
changing reg in insn 38
changing reg in insn 38
changing reg in insn 39
changing reg in insn 41
changing reg in insn 43
changing reg in insn 45
changing reg in insn 46
changing reg in insn 48
changing reg in insn 49
changing reg in insn 50
changing reg in insn 54
changing reg in insn 51
changing reg in insn 52
changing reg in insn 57
changing reg in insn 59
changing reg in insn 58
changing reg in insn 62
changing reg in insn 65
changing reg in insn 67
changing reg in insn 66
changing reg in insn 70
changing reg in insn 72
changing reg in insn 73
changing reg in insn 88
changing reg in insn 32
changing reg in insn 89
changing reg in insn 34
changing reg in insn 34
changing reg in insn 3
changing reg in insn 79
deleting insn with uid = 12.
deleting insn with uid = 48.
deleting insn with uid = 52.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 44.
verify found no changes in insn with uid = 47.
verify found no changes in insn with uid = 55.
verify found no changes in insn with uid = 63.
verify found no changes in insn with uid = 71.
verify found no changes in insn with uid = 74.
verify found no changes in insn with uid = 81.


test_file_write_inbound

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 36 [r8] 37 [r9]
;;  ref usage 	r0={35d,27u} r1={17d,8u} r2={11d,4u} r3={1d,1u} r4={15d,6u} r5={15d,6u} r6={1d,16u} r7={3d,17u} r8={7d} r9={7d} r10={7d} r11={7d} r12={7d} r13={7d} r14={7d} r15={7d} r17={20d,1u} r18={7d} r19={1d,1u} r20={8d} r21={8d} r22={8d} r23={8d} r24={8d} r25={8d} r26={8d} r27={8d} r28={7d} r29={7d} r30={7d} r31={7d} r32={7d} r33={7d} r34={7d} r35={7d} r36={9d} r37={9d} r38={7d} r39={7d} r44={7d} r45={7d} r46={7d} r47={7d} r48={7d} r49={7d} r50={7d} r51={7d} r52={7d} r53={7d} r54={7d} r55={7d} r56={7d} r57={7d} r58={7d} r59={7d} r60={7d} r61={7d} r62={7d} r63={7d} r64={7d} r65={7d} r66={7d} r67={7d} r68={7d} r69={7d} r70={7d} r71={7d} r72={7d} r73={7d} r74={7d} r75={7d} 
;;    total ref usage 645{558d,87u,0e} in 71{64 regular + 7 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 90 98
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 90 98
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 82 83 84 85 86 87 88 89 90 95 96 97 98 100 101 102 103 104 105 106 107 108 109 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 4 3 2 NOTE_INSN_FUNCTION_BEG)
(insn 3 2 6 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 6 bp)
                        (const_int -24 [0xffffffffffffffe8])) [9 D.3538+0 S8 A64])
                (unspec:DI [
                        (mem/v/f:DI (const_int 40 [0x28]) [0 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_SET))
            (set (reg:DI 0 ax [128])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "main.c":33:32 1265 {stack_protect_set_1_di}
     (nil))
(insn 6 3 7 2 (set (reg:DI 0 ax [107])
        (reg/f:DI 7 sp)) "main.c":33:32 80 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg/f:DI 3 bx [orig:106 saved_stack.9_27 ] [106])
        (reg:DI 0 ax [107])) "main.c":33:32 80 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:SI 0 ax [orig:82 FILE_SIZE.0_1 ] [82])
        (const_int 10 [0xa])) "main.c":34:28 81 {*movsi_internal}
     (nil))
(insn 9 8 10 2 (parallel [
            (set (reg:SI 0 ax [orig:83 _2 ] [83])
                (plus:SI (reg:SI 0 ax [orig:82 FILE_SIZE.0_1 ] [82])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":34:28 229 {*addsi_1}
     (nil))
(insn 10 9 11 2 (set (reg:DI 0 ax [orig:84 _3 ] [84])
        (sign_extend:DI (reg:SI 0 ax [orig:83 _2 ] [83]))) "main.c":34:28 154 {*extendsidi2_rex64}
     (nil))
(insn 11 10 13 2 (parallel [
            (set (reg:DI 0 ax [orig:85 _4 ] [85])
                (plus:DI (reg:DI 0 ax [orig:84 _3 ] [84])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":34:8 230 {*adddi_1}
     (nil))
(insn 13 11 14 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [10 D.3445+0 S8 A128])
        (reg:DI 0 ax [orig:86 _5 ] [86])) "main.c":34:8 80 {*movdi_internal}
     (nil))
(insn 14 13 15 2 (set (reg:SI 0 ax [orig:87 FILE_SIZE.1_6 ] [87])
        (const_int 10 [0xa])) "main.c":34:28 81 {*movsi_internal}
     (nil))
(insn 15 14 16 2 (parallel [
            (set (reg:SI 0 ax [orig:88 _7 ] [88])
                (plus:SI (reg:SI 0 ax [orig:87 FILE_SIZE.1_6 ] [87])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":34:28 229 {*addsi_1}
     (nil))
(insn 16 15 17 2 (set (reg:DI 0 ax [orig:89 _8 ] [89])
        (sign_extend:DI (reg:SI 0 ax [orig:88 _7 ] [88]))) "main.c":34:8 154 {*extendsidi2_rex64}
     (nil))
(insn 17 16 18 2 (set (reg:DI 36 r8 [orig:90 _9 ] [90])
        (reg:DI 0 ax [orig:89 _8 ] [89])) "main.c":34:8 80 {*movdi_internal}
     (nil))
(insn 18 17 23 2 (set (reg:DI 37 r9 [ _9+8 ])
        (const_int 0 [0])) "main.c":34:8 80 {*movdi_internal}
     (nil))
(insn 23 18 24 2 (set (reg:SI 0 ax [orig:95 FILE_SIZE.3_14 ] [95])
        (const_int 10 [0xa])) "main.c":34:28 81 {*movsi_internal}
     (nil))
(insn 24 23 25 2 (parallel [
            (set (reg:SI 0 ax [orig:96 _15 ] [96])
                (plus:SI (reg:SI 0 ax [orig:95 FILE_SIZE.3_14 ] [95])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":34:28 229 {*addsi_1}
     (nil))
(insn 25 24 26 2 (set (reg:DI 0 ax [orig:97 _16 ] [97])
        (sign_extend:DI (reg:SI 0 ax [orig:96 _15 ] [96]))) "main.c":34:8 154 {*extendsidi2_rex64}
     (nil))
(insn 26 25 27 2 (set (reg:DI 4 si [orig:98 _17 ] [98])
        (reg:DI 0 ax [orig:97 _16 ] [97])) "main.c":34:8 80 {*movdi_internal}
     (nil))
(insn 27 26 29 2 (set (reg:DI 5 di [ _17+8 ])
        (const_int 0 [0])) "main.c":34:8 80 {*movdi_internal}
     (nil))
(insn 29 27 30 2 (set (reg:SI 0 ax [orig:100 FILE_SIZE.4_19 ] [100])
        (const_int 10 [0xa])) "main.c":34:28 81 {*movsi_internal}
     (nil))
(insn 30 29 31 2 (parallel [
            (set (reg:SI 0 ax [orig:101 _20 ] [101])
                (plus:SI (reg:SI 0 ax [orig:100 FILE_SIZE.4_19 ] [100])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":34:28 229 {*addsi_1}
     (nil))
(insn 31 30 88 2 (set (reg:DI 0 ax [orig:102 _21 ] [102])
        (sign_extend:DI (reg:SI 0 ax [orig:101 _20 ] [101]))) "main.c":34:8 154 {*extendsidi2_rex64}
     (nil))
(insn 88 31 32 2 (set (reg:DI 1 dx [126])
        (const_int 16 [0x10])) "main.c":34:8 80 {*movdi_internal}
     (nil))
(insn 32 88 33 2 (parallel [
            (set (reg:DI 1 dx [108])
                (plus:DI (reg:DI 1 dx [126])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":34:8 230 {*adddi_1}
     (nil))
(insn 33 32 89 2 (parallel [
            (set (reg:DI 0 ax [109])
                (plus:DI (reg:DI 0 ax [orig:102 _21 ] [102])
                    (reg:DI 1 dx [108])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":34:8 230 {*adddi_1}
     (nil))
(insn 89 33 34 2 (set (reg:DI 2 cx [127])
        (const_int 16 [0x10])) "main.c":34:8 80 {*movdi_internal}
     (nil))
(insn 34 89 35 2 (parallel [
            (set (reg:DI 0 ax [111])
                (udiv:DI (reg:DI 0 ax [109])
                    (reg:DI 2 cx [127])))
            (set (reg:DI 1 dx [112])
                (umod:DI (reg:DI 0 ax [109])
                    (reg:DI 2 cx [127])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":34:8 492 {*udivmoddi4}
     (nil))
(insn 35 34 36 2 (parallel [
            (set (reg:DI 0 ax [113])
                (mult:DI (reg:DI 0 ax [111])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":34:8 445 {*muldi3_1}
     (nil))
(insn 36 35 37 2 (parallel [
            (set (reg/f:DI 7 sp)
                (minus:DI (reg/f:DI 7 sp)
                    (reg:DI 0 ax [113])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":34:8 303 {*subdi_1}
     (nil))
(insn 37 36 38 2 (set (reg:DI 0 ax [114])
        (reg/f:DI 7 sp)) "main.c":34:8 80 {*movdi_internal}
     (nil))
(insn 38 37 39 2 (parallel [
            (set (reg/f:DI 0 ax [115])
                (plus:DI (reg:DI 0 ax [114])
                    (const_int 0 [0])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":34:8 230 {*adddi_1}
     (nil))
(insn 39 38 40 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [3 buf_write.5+0 S8 A64])
        (reg/f:DI 0 ax [115])) "main.c":34:8 80 {*movdi_internal}
     (nil))
(insn 40 39 41 2 (set (reg:SI 1 dx [orig:103 FILE_SIZE.6_22 ] [103])
        (const_int 10 [0xa])) "main.c":35:3 81 {*movsi_internal}
     (nil))
(insn 41 40 42 2 (set (reg:DI 0 ax [116])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [3 buf_write.5+0 S8 A64])) "main.c":35:3 80 {*movdi_internal}
     (nil))
(insn 42 41 43 2 (set (reg:SI 4 si)
        (reg:SI 1 dx [orig:103 FILE_SIZE.6_22 ] [103])) "main.c":35:3 81 {*movsi_internal}
     (nil))
(insn 43 42 44 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [116])) "main.c":35:3 80 {*movdi_internal}
     (nil))
(call_insn 44 43 45 2 (call (mem:QI (symbol_ref:DI ("fill_random") [flags 0x3]  <function_decl 0x7fa610820900 fill_random>) [0 fill_random S1 A8])
        (const_int 0 [0])) "main.c":35:3 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 45 44 46 2 (set (reg:DI 0 ax [117])
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7fa6108a1ab0 *.LC2>)) "main.c":37:32 80 {*movdi_internal}
     (nil))
(insn 46 45 47 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [117])) "main.c":37:32 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7fa6108a1ab0 *.LC2>)
        (nil)))
(call_insn 47 46 49 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("file_tester_create") [flags 0x41]  <function_decl 0x7fa610b72e00 file_tester_create>) [0 file_tester_create S1 A8])
            (const_int 0 [0]))) "main.c":37:32 909 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 49 47 50 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [8 tester+0 S8 A128])
        (reg:DI 0 ax [118])) "main.c":37:32 80 {*movdi_internal}
     (nil))
(insn 50 49 51 2 (set (reg:DI 0 ax [119])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [8 tester+0 S8 A128])) "main.c":38:3 80 {*movdi_internal}
     (nil))
(insn 51 50 53 2 (set (reg:DI 1 dx [120])
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7fa6108a1b40 *.LC3>)) "main.c":38:3 80 {*movdi_internal}
     (nil))
(insn 53 51 54 2 (set (reg:SI 4 si)
        (const_int 0 [0])) "main.c":38:3 81 {*movsi_internal}
     (nil))
(insn 54 53 55 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [119])) "main.c":38:3 80 {*movdi_internal}
     (nil))
(call_insn 55 54 56 2 (call (mem:QI (symbol_ref:DI ("file_tester_init") [flags 0x41]  <function_decl 0x7fa610b77000 file_tester_init>) [0 file_tester_init S1 A8])
        (const_int 0 [0])) "main.c":38:3 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 56 55 57 2 (set (reg:SI 4 si [orig:104 FILE_SIZE.7_23 ] [104])
        (const_int 10 [0xa])) "main.c":39:3 81 {*movsi_internal}
     (nil))
(insn 57 56 58 2 (set (reg:DI 1 dx [121])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [3 buf_write.5+0 S8 A64])) "main.c":39:3 80 {*movdi_internal}
     (nil))
(insn 58 57 59 2 (set (reg:DI 0 ax [122])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [8 tester+0 S8 A128])) "main.c":39:3 80 {*movdi_internal}
     (nil))
(insn 59 58 60 2 (set (reg:DI 2 cx)
        (reg:DI 1 dx [121])) "main.c":39:3 80 {*movdi_internal}
     (nil))
(insn 60 59 61 2 (set (reg:SI 1 dx)
        (reg:SI 4 si [orig:104 FILE_SIZE.7_23 ] [104])) "main.c":39:3 81 {*movsi_internal}
     (nil))
(insn 61 60 62 2 (set (reg:SI 4 si)
        (const_int 0 [0])) "main.c":39:3 81 {*movsi_internal}
     (nil))
(insn 62 61 63 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [122])) "main.c":39:3 80 {*movdi_internal}
     (nil))
(call_insn 63 62 64 2 (call (mem:QI (symbol_ref:DI ("file_tester_write") [flags 0x41]  <function_decl 0x7fa610b77100 file_tester_write>) [0 file_tester_write S1 A8])
        (const_int 0 [0])) "main.c":39:3 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 64 63 65 2 (set (reg:SI 4 si [orig:105 FILE_SIZE.8_24 ] [105])
        (const_int 10 [0xa])) "main.c":40:3 81 {*movsi_internal}
     (nil))
(insn 65 64 66 2 (set (reg:DI 1 dx [123])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [3 buf_write.5+0 S8 A64])) "main.c":40:3 80 {*movdi_internal}
     (nil))
(insn 66 65 67 2 (set (reg:DI 0 ax [124])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [8 tester+0 S8 A128])) "main.c":40:3 80 {*movdi_internal}
     (nil))
(insn 67 66 68 2 (set (reg:DI 2 cx)
        (reg:DI 1 dx [123])) "main.c":40:3 80 {*movdi_internal}
     (nil))
(insn 68 67 69 2 (set (reg:SI 1 dx)
        (reg:SI 4 si [orig:105 FILE_SIZE.8_24 ] [105])) "main.c":40:3 81 {*movsi_internal}
     (nil))
(insn 69 68 70 2 (set (reg:SI 4 si)
        (const_int 0 [0])) "main.c":40:3 81 {*movsi_internal}
     (nil))
(insn 70 69 71 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [124])) "main.c":40:3 80 {*movdi_internal}
     (nil))
(call_insn 71 70 72 2 (call (mem:QI (symbol_ref:DI ("file_tester_read") [flags 0x41]  <function_decl 0x7fa610b77200 file_tester_read>) [0 file_tester_read S1 A8])
        (const_int 0 [0])) "main.c":40:3 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 72 71 73 2 (set (reg:DI 0 ax [125])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [8 tester+0 S8 A128])) "main.c":41:3 80 {*movdi_internal}
     (nil))
(insn 73 72 74 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [125])) "main.c":41:3 80 {*movdi_internal}
     (nil))
(call_insn 74 73 75 2 (call (mem:QI (symbol_ref:DI ("file_tester_destory") [flags 0x41]  <function_decl 0x7fa610b72f00 file_tester_destory>) [0 file_tester_destory S1 A8])
        (const_int 0 [0])) "main.c":41:3 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 75 74 76 2 (clobber (mem:BLK (scratch) [0  A8])) -1
     (nil))
(insn 76 75 77 2 (clobber (mem:BLK (reg/f:DI 7 sp) [0  A8])) -1
     (nil))
(insn 77 76 87 2 (set (reg/f:DI 7 sp)
        (reg/f:DI 3 bx [orig:106 saved_stack.9_27 ] [106])) 80 {*movdi_internal}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 87 77 79 2 (const_int 0 [0]) "main.c":42:1 928 {nop}
     (nil))
(insn 79 87 80 2 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 6 bp)
                                (const_int -24 [0xffffffffffffffe8])) [9 D.3538+0 S8 A64])
                        (mem/v/f:DI (const_int 40 [0x28]) [0 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_TEST))
            (clobber (reg:DI 0 ax [129]))
        ]) "main.c":42:1 1270 {stack_protect_test_1_di}
     (nil))
(jump_insn 80 79 85 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 83)
            (pc))) "main.c":42:1 891 {*jcc}
     (nil)
 -> 83)
;;  succ:       4
;;              3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
(note 85 80 81 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(call_insn 81 85 82 3 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fa61088e500 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) "main.c":42:1 898 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 19 [frame]

(barrier 82 81 83)
;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 1, flags: (RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(code_label 83 82 86 4 8 (nil) [1 uses])
(note 86 83 90 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(note 90 86 0 NOTE_INSN_DELETED)

;; Function test_file_write_outbound (test_file_write_outbound, funcdef_no=9, decl_uid=3340, cgraph_uid=10, symbol_order=10)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=80, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 19 to 7 (offset=48, prev_offset=0)
Can eliminate 19 to 6 (offset=-16, prev_offset=0)
            2 Scratch win: reject+=2
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3:  (0) =m  (1) m  (2) =&r {stack_protect_set_1_di}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 8:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 11
	 Choosing alt 0 in insn 11:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 12:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 14:  (0) =rm  (1) %0  (2) re {*adddi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 16:  (0) m  (1) re {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 17:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 18:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 19
	 Choosing alt 0 in insn 19:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 20:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 22:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 23:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 30:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 31:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 32
	 Choosing alt 0 in insn 32:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 33:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 34:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 35:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 36:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 38:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 39:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 40
	 Choosing alt 0 in insn 40:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 41:  (0) =rm  (1) %0  (2) re {*addsi_1}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 42:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 101:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 43:  (0) =rm  (1) %0  (2) re {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 44:  (0) =rm  (1) %0  (2) re {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 102:  (0) r  (1) Z {*movdi_internal}
            1 Small class reload: reject+=3
            1 Non input pseudo reload: reject++
            1 Early clobber: reject++
          alt=0,overall=11,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 45:  (0) =a  (1) =&d  (2) 0  (3) rm {*udivmoddi4}
      Creating newreg=143 from oldreg=122, assigning class DREG to r143
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 46:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 47:  (0) =rm  (1) 0  (2) re {*subdi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 49:  (0) =rm  (1) %0  (2) re {*adddi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 50:  (0) m  (1) re {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 51:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 52:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 55:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 56:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 58:  (1) rBwBz {*call_value}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 60:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 61:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 62:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 64:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 66:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 67:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 68:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 69:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 70:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 75:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 76:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 77:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 78:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 79:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 84:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 85:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 87:  (0) rBwBz {*call}
            3 Scratch win: reject+=2
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 92:  (1) m  (2) m  (3) =&r {stack_protect_test_1_di}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 94:  (0) rBwBz {*call}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #1: **********

EBB 2 3
EBB 4

********** Pseudo live ranges #1: **********

  BB 3
   Insn 94: point = 0, n_alt = 0
  BB 4
  BB 2
   Insn 93: point = 0, n_alt = -1
   Insn 92: point = 0, n_alt = 0
   Insn 100: point = 2, n_alt = -1
   Insn 90: point = 2, n_alt = -2
   Insn 89: point = 3, n_alt = -1
   Insn 88: point = 3, n_alt = -1
   Insn 87: point = 3, n_alt = 0
   Insn 86: point = 3, n_alt = -2
   Insn 85: point = 4, n_alt = 3
   Insn 84: point = 5, n_alt = 0
   Insn 83: point = 5, n_alt = -2
   Insn 82: point = 6, n_alt = -2
   Insn 81: point = 7, n_alt = -2
   Insn 80: point = 8, n_alt = -2
   Insn 79: point = 9, n_alt = 3
   Insn 78: point = 10, n_alt = 0
   Insn 77: point = 11, n_alt = 3
   Insn 76: point = 12, n_alt = 0
   Insn 75: point = 13, n_alt = 0
   Insn 74: point = 13, n_alt = -2
   Insn 73: point = 14, n_alt = -2
   Insn 72: point = 15, n_alt = -2
   Insn 71: point = 16, n_alt = -2
   Insn 70: point = 17, n_alt = 3
   Insn 69: point = 18, n_alt = 0
   Insn 68: point = 19, n_alt = 3
   Insn 67: point = 20, n_alt = 0
   Insn 66: point = 21, n_alt = 0
   Insn 65: point = 21, n_alt = -2
   Insn 64: point = 22, n_alt = 0
   Insn 63: point = 22, n_alt = -2
   Insn 62: point = 23, n_alt = 4
   Insn 61: point = 24, n_alt = 3
   Insn 60: point = 25, n_alt = 5
   Insn 59: point = 26, n_alt = -2
   Insn 58: point = 27, n_alt = 0
   Insn 57: point = 27, n_alt = -2
   Insn 56: point = 28, n_alt = 4
   Insn 55: point = 29, n_alt = 0
   Insn 54: point = 29, n_alt = -2
   Insn 53: point = 30, n_alt = -2
   Insn 52: point = 31, n_alt = 3
   Insn 51: point = 32, n_alt = 0
   Insn 50: point = 33, n_alt = 5
   Insn 49: point = 34, n_alt = 0
   Insn 48: point = 36, n_alt = -2
   Insn 47: point = 37, n_alt = 0
   Insn 46: point = 38, n_alt = 0
   Insn 45: point = 40, n_alt = 0
   Insn 102: point = 42, n_alt = 2
   Insn 44: point = 43, n_alt = 0
   Insn 43: point = 45, n_alt = 0
   Insn 101: point = 47, n_alt = 2
   Insn 42: point = 48, n_alt = 0
   Insn 41: point = 50, n_alt = 0
   Insn 40: point = 52, n_alt = 0
   Insn 39: point = 54, n_alt = 0
   Insn 38: point = 55, n_alt = 0
   Insn 36: point = 56, n_alt = 2
   Insn 35: point = 57, n_alt = 3
   Insn 34: point = 58, n_alt = 0
   Insn 33: point = 60, n_alt = 0
   Insn 32: point = 62, n_alt = 0
   Insn 31: point = 64, n_alt = 0
   Insn 30: point = 65, n_alt = 0
   Insn 23: point = 66, n_alt = 2
   Insn 22: point = 67, n_alt = 3
   Insn 21: point = 68, n_alt = 0
   Insn 20: point = 70, n_alt = 0
   Insn 19: point = 72, n_alt = 0
   Insn 18: point = 74, n_alt = 0
   Insn 17: point = 75, n_alt = 0
   Insn 16: point = 76, n_alt = 5
   Insn 15: point = 77, n_alt = -2
   Insn 14: point = 79, n_alt = 0
   Insn 13: point = 81, n_alt = 0
   Insn 12: point = 83, n_alt = 0
   Insn 11: point = 85, n_alt = 0
   Insn 10: point = 87, n_alt = 0
   Insn 9: point = 88, n_alt = 0
   Insn 8: point = 89, n_alt = 1
   Insn 7: point = 89, n_alt = -2
   Insn 6: point = 91, n_alt = -2
   Insn 3: point = 92, n_alt = 0
 r82: [86..88]
 r83: [84..85]
 r84: [82..83]
 r85: [80..81]
 r86: [78..79]
 r87: [76..77]
 r88: [73..75]
 r89: [71..72]
 r90: [69..70]
 r91: [67..68]
 r92: [66..94]
 r98: [63..65]
 r99: [61..62]
 r100: [59..60]
 r101: [57..58]
 r102: [56..94]
 r104: [53..55]
 r105: [51..52]
 r106: [49..50]
 r107: [44..48]
 r108: [30..32]
 r109: [15..20]
 r110: [7..12]
 r111: [2..89]
 r112: [90..91]
 r113: [86..87]
 r114: [73..74]
 r116: [63..64]
 r117: [53..54]
 r118: [44..45]
 r119: [41..43]
 r121: [39..40]
 r123: [37..38]
 r124: [35..36]
 r125: [33..34]
 r126: [29..31]
 r127: [27..28]
 r128: [25..26]
 r129: [21..24]
 r130: [22..23]
 r131: [16..19]
 r132: [14..18]
 r133: [13..17]
 r134: [8..11]
 r135: [6..10]
 r136: [5..9]
 r137: [3..4]
 r138: [46..47]
 r139: [41..42]
 r140: [92..93]
 r141: [0..1]
 r143: [40..41]
Compressing live ranges: from 95 to 68 - 71%
Ranges after the compression:
 r82: [62..63]
 r83: [60..61]
 r84: [58..59]
 r85: [56..57]
 r86: [54..55]
 r87: [52..53]
 r88: [50..51]
 r89: [48..49]
 r90: [46..47]
 r91: [44..45]
 r92: [44..67]
 r98: [42..43]
 r99: [40..41]
 r100: [38..39]
 r101: [36..37]
 r102: [36..67]
 r104: [34..35]
 r105: [32..33]
 r106: [30..31]
 r107: [26..29]
 r108: [14..15]
 r109: [6..7]
 r110: [4..5]
 r111: [2..63]
 r112: [64..65]
 r113: [62..63]
 r114: [50..51]
 r116: [42..43]
 r117: [34..35]
 r118: [26..27]
 r119: [24..25]
 r121: [22..23]
 r123: [20..21]
 r124: [18..19]
 r125: [16..17]
 r126: [14..15]
 r127: [12..13]
 r128: [10..11]
 r129: [8..9]
 r130: [8..9]
 r131: [6..7]
 r132: [6..7]
 r133: [6..7]
 r134: [4..5]
 r135: [4..5]
 r136: [4..5]
 r137: [2..3]
 r138: [28..29]
 r139: [24..25]
 r140: [66..67]
 r141: [0..1]
 r143: [23..24]

********** Assignment #1: **********

	 Assigning to 143 (cl=DREG, orig=122, freq=1000, tfirst=143, tfreq=1000)...
	 Trying 1: spill 139(freq=2000)	 Now best 1(cost=1000, bad_spills=0, insn_pseudos=1)

      Spill r139(hr=1, freq=2000) for r143
	   Assign 1 to reload r143 (freq=1000)
  Reassigning non-reload pseudos
	   Assign 2 to r139 (freq=2000)

********** Undoing inheritance #1: **********


********** Pseudos coalescing #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 6
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 102:  (0) r  (1) Z {*movdi_internal}
            1 Early clobber: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 45:  (0) =a  (1) =&d  (2) 0  (3) rm {*udivmoddi4}
	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=80, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 19 to 7 (offset=48, prev_offset=0)
Can eliminate 19 to 6 (offset=-16, prev_offset=-16)
changing reg in insn 9
changing reg in insn 11
changing reg in insn 11
changing reg in insn 12
changing reg in insn 12
changing reg in insn 13
changing reg in insn 13
changing reg in insn 14
changing reg in insn 14
changing reg in insn 15
changing reg in insn 15
changing reg in insn 16
changing reg in insn 17
changing reg in insn 19
changing reg in insn 19
changing reg in insn 20
changing reg in insn 20
changing reg in insn 21
changing reg in insn 21
changing reg in insn 22
changing reg in insn 23
changing reg in insn 22
changing reg in insn 30
changing reg in insn 32
changing reg in insn 32
changing reg in insn 33
changing reg in insn 33
changing reg in insn 34
changing reg in insn 34
changing reg in insn 35
changing reg in insn 36
changing reg in insn 35
changing reg in insn 38
changing reg in insn 40
changing reg in insn 40
changing reg in insn 41
changing reg in insn 41
changing reg in insn 42
changing reg in insn 42
changing reg in insn 44
changing reg in insn 51
changing reg in insn 53
changing reg in insn 67
changing reg in insn 72
changing reg in insn 76
changing reg in insn 81
changing reg in insn 7
changing reg in insn 90
changing reg in insn 6
changing reg in insn 7
changing reg in insn 10
changing reg in insn 18
changing reg in insn 31
changing reg in insn 39
changing reg in insn 43
changing reg in insn 44
changing reg in insn 44
changing reg in insn 45
changing reg in insn 45
changing reg in insn 45
changing reg in insn 46
changing reg in insn 46
changing reg in insn 47
changing reg in insn 48
changing reg in insn 49
changing reg in insn 49
changing reg in insn 50
changing reg in insn 52
changing reg in insn 54
changing reg in insn 56
changing reg in insn 57
changing reg in insn 59
changing reg in insn 60
changing reg in insn 61
changing reg in insn 65
changing reg in insn 62
changing reg in insn 63
changing reg in insn 68
changing reg in insn 71
changing reg in insn 69
changing reg in insn 73
changing reg in insn 70
changing reg in insn 74
changing reg in insn 77
changing reg in insn 80
changing reg in insn 78
changing reg in insn 82
changing reg in insn 79
changing reg in insn 83
changing reg in insn 85
changing reg in insn 86
changing reg in insn 101
changing reg in insn 43
changing reg in insn 102
changing reg in insn 45
changing reg in insn 45
changing reg in insn 3
changing reg in insn 92
deleting insn with uid = 15.
deleting insn with uid = 59.
deleting insn with uid = 63.
deleting insn with uid = 73.
deleting insn with uid = 82.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 55.
verify found no changes in insn with uid = 58.
verify found no changes in insn with uid = 66.
verify found no changes in insn with uid = 75.
verify found no changes in insn with uid = 84.
verify found no changes in insn with uid = 87.
verify found no changes in insn with uid = 94.


test_file_write_outbound

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 36 [r8] 37 [r9]
;;  ref usage 	r0={39d,31u} r1={21d,12u,4e} r2={11d,4u} r3={1d,1u} r4={13d,4u} r5={17d,8u} r6={1d,23u} r7={3d,17u} r8={7d} r9={7d} r10={7d} r11={7d} r12={7d} r13={7d} r14={7d} r15={7d} r17={24d,1u} r18={7d} r19={1d,1u,4e} r20={8d} r21={8d} r22={8d} r23={8d} r24={8d} r25={8d} r26={8d} r27={8d} r28={7d} r29={7d} r30={7d} r31={7d} r32={7d} r33={7d} r34={7d} r35={7d} r36={9d} r37={9d} r38={7d} r39={7d} r44={7d} r45={7d} r46={7d} r47={7d} r48={7d} r49={7d} r50={7d} r51={7d} r52={7d} r53={7d} r54={7d} r55={7d} r56={7d} r57={7d} r58={7d} r59={7d} r60={7d} r61={7d} r62={7d} r63={7d} r64={7d} r65={7d} r66={7d} r67={7d} r68={7d} r69={7d} r70={7d} r71={7d} r72={7d} r73={7d} r74={7d} r75={7d} 
;;    total ref usage 680{570d,102u,8e} in 80{73 regular + 7 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 92 102
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 92 102
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 82 83 84 85 86 87 88 89 90 91 92 98 99 100 101 102 104 105 106 107 108 109 110 111 112 113 114 116 117 118 119 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 4 3 2 NOTE_INSN_FUNCTION_BEG)
(insn 3 2 6 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 6 bp)
                        (const_int -24 [0xffffffffffffffe8])) [9 D.3543+0 S8 A64])
                (unspec:DI [
                        (mem/v/f:DI (const_int 40 [0x28]) [0 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_SET))
            (set (reg:DI 0 ax [140])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "main.c":44:33 1265 {stack_protect_set_1_di}
     (nil))
(insn 6 3 7 2 (set (reg:DI 0 ax [112])
        (reg/f:DI 7 sp)) "main.c":44:33 80 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg/f:DI 3 bx [orig:111 saved_stack.19_32 ] [111])
        (reg:DI 0 ax [112])) "main.c":44:33 80 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [1 WRITE_OFFSET+0 S4 A32])
        (const_int 5 [0x5])) "main.c":46:13 81 {*movsi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:SI 1 dx [orig:82 FILE_SIZE.10_1 ] [82])
        (const_int 10 [0xa])) "main.c":47:28 81 {*movsi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:SI 0 ax [113])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [1 WRITE_OFFSET+0 S4 A32])) "main.c":47:28 81 {*movsi_internal}
     (nil))
(insn 11 10 12 2 (parallel [
            (set (reg:SI 0 ax [orig:83 _2 ] [83])
                (plus:SI (reg:SI 0 ax [113])
                    (reg:SI 1 dx [orig:82 FILE_SIZE.10_1 ] [82])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":47:28 229 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (reg:SI 1 dx [orig:82 FILE_SIZE.10_1 ] [82])
            (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                    (const_int -36 [0xffffffffffffffdc])) [1 WRITE_OFFSET+0 S4 A32]))
        (nil)))
(insn 12 11 13 2 (parallel [
            (set (reg:SI 0 ax [orig:84 _3 ] [84])
                (plus:SI (reg:SI 0 ax [orig:83 _2 ] [83])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":47:43 229 {*addsi_1}
     (nil))
(insn 13 12 14 2 (set (reg:DI 0 ax [orig:85 _4 ] [85])
        (sign_extend:DI (reg:SI 0 ax [orig:84 _3 ] [84]))) "main.c":47:43 154 {*extendsidi2_rex64}
     (nil))
(insn 14 13 16 2 (parallel [
            (set (reg:DI 0 ax [orig:86 _5 ] [86])
                (plus:DI (reg:DI 0 ax [orig:85 _4 ] [85])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":47:8 230 {*adddi_1}
     (nil))
(insn 16 14 17 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [10 D.3452+0 S8 A128])
        (reg:DI 0 ax [orig:87 _6 ] [87])) "main.c":47:8 80 {*movdi_internal}
     (nil))
(insn 17 16 18 2 (set (reg:SI 1 dx [orig:88 FILE_SIZE.11_7 ] [88])
        (const_int 10 [0xa])) "main.c":47:28 81 {*movsi_internal}
     (nil))
(insn 18 17 19 2 (set (reg:SI 0 ax [114])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [1 WRITE_OFFSET+0 S4 A32])) "main.c":47:28 81 {*movsi_internal}
     (nil))
(insn 19 18 20 2 (parallel [
            (set (reg:SI 0 ax [orig:89 _8 ] [89])
                (plus:SI (reg:SI 0 ax [114])
                    (reg:SI 1 dx [orig:88 FILE_SIZE.11_7 ] [88])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":47:28 229 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (reg:SI 1 dx [orig:88 FILE_SIZE.11_7 ] [88])
            (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                    (const_int -36 [0xffffffffffffffdc])) [1 WRITE_OFFSET+0 S4 A32]))
        (nil)))
(insn 20 19 21 2 (parallel [
            (set (reg:SI 0 ax [orig:90 _9 ] [90])
                (plus:SI (reg:SI 0 ax [orig:89 _8 ] [89])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":47:43 229 {*addsi_1}
     (nil))
(insn 21 20 22 2 (set (reg:DI 0 ax [orig:91 _10 ] [91])
        (sign_extend:DI (reg:SI 0 ax [orig:90 _9 ] [90]))) "main.c":47:8 154 {*extendsidi2_rex64}
     (nil))
(insn 22 21 23 2 (set (reg:DI 36 r8 [orig:92 _11 ] [92])
        (reg:DI 0 ax [orig:91 _10 ] [91])) "main.c":47:8 80 {*movdi_internal}
     (nil))
(insn 23 22 30 2 (set (reg:DI 37 r9 [ _11+8 ])
        (const_int 0 [0])) "main.c":47:8 80 {*movdi_internal}
     (nil))
(insn 30 23 31 2 (set (reg:SI 1 dx [orig:98 FILE_SIZE.13_17 ] [98])
        (const_int 10 [0xa])) "main.c":47:28 81 {*movsi_internal}
     (nil))
(insn 31 30 32 2 (set (reg:SI 0 ax [116])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [1 WRITE_OFFSET+0 S4 A32])) "main.c":47:28 81 {*movsi_internal}
     (nil))
(insn 32 31 33 2 (parallel [
            (set (reg:SI 0 ax [orig:99 _18 ] [99])
                (plus:SI (reg:SI 0 ax [116])
                    (reg:SI 1 dx [orig:98 FILE_SIZE.13_17 ] [98])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":47:28 229 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (reg:SI 1 dx [orig:98 FILE_SIZE.13_17 ] [98])
            (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                    (const_int -36 [0xffffffffffffffdc])) [1 WRITE_OFFSET+0 S4 A32]))
        (nil)))
(insn 33 32 34 2 (parallel [
            (set (reg:SI 0 ax [orig:100 _19 ] [100])
                (plus:SI (reg:SI 0 ax [orig:99 _18 ] [99])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":47:43 229 {*addsi_1}
     (nil))
(insn 34 33 35 2 (set (reg:DI 0 ax [orig:101 _20 ] [101])
        (sign_extend:DI (reg:SI 0 ax [orig:100 _19 ] [100]))) "main.c":47:8 154 {*extendsidi2_rex64}
     (nil))
(insn 35 34 36 2 (set (reg:DI 4 si [orig:102 _21 ] [102])
        (reg:DI 0 ax [orig:101 _20 ] [101])) "main.c":47:8 80 {*movdi_internal}
     (nil))
(insn 36 35 38 2 (set (reg:DI 5 di [ _21+8 ])
        (const_int 0 [0])) "main.c":47:8 80 {*movdi_internal}
     (nil))
(insn 38 36 39 2 (set (reg:SI 1 dx [orig:104 FILE_SIZE.14_23 ] [104])
        (const_int 10 [0xa])) "main.c":47:28 81 {*movsi_internal}
     (nil))
(insn 39 38 40 2 (set (reg:SI 0 ax [117])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [1 WRITE_OFFSET+0 S4 A32])) "main.c":47:28 81 {*movsi_internal}
     (nil))
(insn 40 39 41 2 (parallel [
            (set (reg:SI 0 ax [orig:105 _24 ] [105])
                (plus:SI (reg:SI 0 ax [117])
                    (reg:SI 1 dx [orig:104 FILE_SIZE.14_23 ] [104])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":47:28 229 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (reg:SI 1 dx [orig:104 FILE_SIZE.14_23 ] [104])
            (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                    (const_int -36 [0xffffffffffffffdc])) [1 WRITE_OFFSET+0 S4 A32]))
        (nil)))
(insn 41 40 42 2 (parallel [
            (set (reg:SI 0 ax [orig:106 _25 ] [106])
                (plus:SI (reg:SI 0 ax [orig:105 _24 ] [105])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":47:43 229 {*addsi_1}
     (nil))
(insn 42 41 101 2 (set (reg:DI 0 ax [orig:107 _26 ] [107])
        (sign_extend:DI (reg:SI 0 ax [orig:106 _25 ] [106]))) "main.c":47:8 154 {*extendsidi2_rex64}
     (nil))
(insn 101 42 43 2 (set (reg:DI 1 dx [138])
        (const_int 16 [0x10])) "main.c":47:8 80 {*movdi_internal}
     (nil))
(insn 43 101 44 2 (parallel [
            (set (reg:DI 1 dx [118])
                (plus:DI (reg:DI 1 dx [138])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":47:8 230 {*adddi_1}
     (nil))
(insn 44 43 102 2 (parallel [
            (set (reg:DI 0 ax [119])
                (plus:DI (reg:DI 0 ax [orig:107 _26 ] [107])
                    (reg:DI 1 dx [118])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":47:8 230 {*adddi_1}
     (nil))
(insn 102 44 45 2 (set (reg:DI 2 cx [139])
        (const_int 16 [0x10])) "main.c":47:8 80 {*movdi_internal}
     (nil))
(insn 45 102 46 2 (parallel [
            (set (reg:DI 0 ax [121])
                (udiv:DI (reg:DI 0 ax [119])
                    (reg:DI 2 cx [139])))
            (set (reg:DI 1 dx [122])
                (umod:DI (reg:DI 0 ax [119])
                    (reg:DI 2 cx [139])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":47:8 492 {*udivmoddi4}
     (nil))
(insn 46 45 47 2 (parallel [
            (set (reg:DI 0 ax [123])
                (mult:DI (reg:DI 0 ax [121])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":47:8 445 {*muldi3_1}
     (nil))
(insn 47 46 48 2 (parallel [
            (set (reg/f:DI 7 sp)
                (minus:DI (reg/f:DI 7 sp)
                    (reg:DI 0 ax [123])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":47:8 303 {*subdi_1}
     (nil))
(insn 48 47 49 2 (set (reg:DI 0 ax [124])
        (reg/f:DI 7 sp)) "main.c":47:8 80 {*movdi_internal}
     (nil))
(insn 49 48 50 2 (parallel [
            (set (reg/f:DI 0 ax [125])
                (plus:DI (reg:DI 0 ax [124])
                    (const_int 0 [0])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":47:8 230 {*adddi_1}
     (nil))
(insn 50 49 51 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [3 buf_write.15+0 S8 A64])
        (reg/f:DI 0 ax [125])) "main.c":47:8 80 {*movdi_internal}
     (nil))
(insn 51 50 52 2 (set (reg:SI 1 dx [orig:108 FILE_SIZE.16_27 ] [108])
        (const_int 10 [0xa])) "main.c":48:3 81 {*movsi_internal}
     (nil))
(insn 52 51 53 2 (set (reg:DI 0 ax [126])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [3 buf_write.15+0 S8 A64])) "main.c":48:3 80 {*movdi_internal}
     (nil))
(insn 53 52 54 2 (set (reg:SI 4 si)
        (reg:SI 1 dx [orig:108 FILE_SIZE.16_27 ] [108])) "main.c":48:3 81 {*movsi_internal}
     (nil))
(insn 54 53 55 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [126])) "main.c":48:3 80 {*movdi_internal}
     (nil))
(call_insn 55 54 56 2 (call (mem:QI (symbol_ref:DI ("fill_random") [flags 0x3]  <function_decl 0x7fa610820900 fill_random>) [0 fill_random S1 A8])
        (const_int 0 [0])) "main.c":48:3 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 56 55 57 2 (set (reg:DI 0 ax [127])
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7fa6108ae000 *.LC4>)) "main.c":50:32 80 {*movdi_internal}
     (nil))
(insn 57 56 58 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [127])) "main.c":50:32 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7fa6108ae000 *.LC4>)
        (nil)))
(call_insn 58 57 60 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("file_tester_create") [flags 0x41]  <function_decl 0x7fa610b72e00 file_tester_create>) [0 file_tester_create S1 A8])
            (const_int 0 [0]))) "main.c":50:32 909 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 60 58 61 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [8 tester+0 S8 A128])
        (reg:DI 0 ax [128])) "main.c":50:32 80 {*movdi_internal}
     (nil))
(insn 61 60 62 2 (set (reg:DI 0 ax [129])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [8 tester+0 S8 A128])) "main.c":51:3 80 {*movdi_internal}
     (nil))
(insn 62 61 64 2 (set (reg:DI 1 dx [130])
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7fa6108ae090 *.LC5>)) "main.c":51:3 80 {*movdi_internal}
     (nil))
(insn 64 62 65 2 (set (reg:SI 4 si)
        (const_int 0 [0])) "main.c":51:3 81 {*movsi_internal}
     (nil))
(insn 65 64 66 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [129])) "main.c":51:3 80 {*movdi_internal}
     (nil))
(call_insn 66 65 67 2 (call (mem:QI (symbol_ref:DI ("file_tester_init") [flags 0x41]  <function_decl 0x7fa610b77000 file_tester_init>) [0 file_tester_init S1 A8])
        (const_int 0 [0])) "main.c":51:3 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 67 66 68 2 (set (reg:SI 5 di [orig:109 FILE_SIZE.17_28 ] [109])
        (const_int 10 [0xa])) "main.c":52:3 81 {*movsi_internal}
     (nil))
(insn 68 67 69 2 (set (reg:DI 1 dx [131])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [3 buf_write.15+0 S8 A64])) "main.c":52:3 80 {*movdi_internal}
     (nil))
(insn 69 68 70 2 (set (reg:SI 4 si [132])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [1 WRITE_OFFSET+0 S4 A32])) "main.c":52:3 81 {*movsi_internal}
     (nil))
(insn 70 69 71 2 (set (reg:DI 0 ax [133])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [8 tester+0 S8 A128])) "main.c":52:3 80 {*movdi_internal}
     (nil))
(insn 71 70 72 2 (set (reg:DI 2 cx)
        (reg:DI 1 dx [131])) "main.c":52:3 80 {*movdi_internal}
     (nil))
(insn 72 71 74 2 (set (reg:SI 1 dx)
        (reg:SI 5 di [orig:109 FILE_SIZE.17_28 ] [109])) "main.c":52:3 81 {*movsi_internal}
     (nil))
(insn 74 72 75 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [133])) "main.c":52:3 80 {*movdi_internal}
     (nil))
(call_insn 75 74 76 2 (call (mem:QI (symbol_ref:DI ("file_tester_write") [flags 0x41]  <function_decl 0x7fa610b77100 file_tester_write>) [0 file_tester_write S1 A8])
        (const_int 0 [0])) "main.c":52:3 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 76 75 77 2 (set (reg:SI 5 di [orig:110 FILE_SIZE.18_29 ] [110])
        (const_int 10 [0xa])) "main.c":53:3 81 {*movsi_internal}
     (nil))
(insn 77 76 78 2 (set (reg:DI 1 dx [134])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [3 buf_write.15+0 S8 A64])) "main.c":53:3 80 {*movdi_internal}
     (nil))
(insn 78 77 79 2 (set (reg:SI 4 si [135])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [1 WRITE_OFFSET+0 S4 A32])) "main.c":53:3 81 {*movsi_internal}
     (nil))
(insn 79 78 80 2 (set (reg:DI 0 ax [136])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [8 tester+0 S8 A128])) "main.c":53:3 80 {*movdi_internal}
     (nil))
(insn 80 79 81 2 (set (reg:DI 2 cx)
        (reg:DI 1 dx [134])) "main.c":53:3 80 {*movdi_internal}
     (nil))
(insn 81 80 83 2 (set (reg:SI 1 dx)
        (reg:SI 5 di [orig:110 FILE_SIZE.18_29 ] [110])) "main.c":53:3 81 {*movsi_internal}
     (nil))
(insn 83 81 84 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [136])) "main.c":53:3 80 {*movdi_internal}
     (nil))
(call_insn 84 83 85 2 (call (mem:QI (symbol_ref:DI ("file_tester_read") [flags 0x41]  <function_decl 0x7fa610b77200 file_tester_read>) [0 file_tester_read S1 A8])
        (const_int 0 [0])) "main.c":53:3 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 85 84 86 2 (set (reg:DI 0 ax [137])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [8 tester+0 S8 A128])) "main.c":54:3 80 {*movdi_internal}
     (nil))
(insn 86 85 87 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [137])) "main.c":54:3 80 {*movdi_internal}
     (nil))
(call_insn 87 86 88 2 (call (mem:QI (symbol_ref:DI ("file_tester_destory") [flags 0x41]  <function_decl 0x7fa610b72f00 file_tester_destory>) [0 file_tester_destory S1 A8])
        (const_int 0 [0])) "main.c":54:3 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 88 87 89 2 (clobber (mem:BLK (scratch) [0  A8])) -1
     (nil))
(insn 89 88 90 2 (clobber (mem:BLK (reg/f:DI 7 sp) [0  A8])) -1
     (nil))
(insn 90 89 100 2 (set (reg/f:DI 7 sp)
        (reg/f:DI 3 bx [orig:111 saved_stack.19_32 ] [111])) 80 {*movdi_internal}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 100 90 92 2 (const_int 0 [0]) "main.c":55:1 928 {nop}
     (nil))
(insn 92 100 93 2 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 6 bp)
                                (const_int -24 [0xffffffffffffffe8])) [9 D.3543+0 S8 A64])
                        (mem/v/f:DI (const_int 40 [0x28]) [0 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_TEST))
            (clobber (reg:DI 0 ax [141]))
        ]) "main.c":55:1 1270 {stack_protect_test_1_di}
     (nil))
(jump_insn 93 92 98 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 96)
            (pc))) "main.c":55:1 891 {*jcc}
     (nil)
 -> 96)
;;  succ:       4
;;              3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
(note 98 93 94 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(call_insn 94 98 95 3 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fa61088e500 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) "main.c":55:1 898 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 19 [frame]

(barrier 95 94 96)
;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 1, flags: (RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(code_label 96 95 99 4 10 (nil) [1 uses])
(note 99 96 103 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(note 103 99 0 NOTE_INSN_DELETED)

;; Function test_file_read_inbound (test_file_read_inbound, funcdef_no=10, decl_uid=3345, cgraph_uid=11, symbol_order=11)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 5:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (1) rBwBz {*call_value}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 9:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 10:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 11:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 16:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 17:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 19:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 20:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 22:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 23:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 24:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 27:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 29:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 30:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 31:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 33:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 34:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 36:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 37:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 38:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 40:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 41:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 43:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 44:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 46:  (0) rBwBz {*call}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #1: **********

EBB 2 3

********** Pseudo live ranges #1: **********

  BB 3
   Insn 50: point = 0, n_alt = -1
  BB 2
   Insn 46: point = 0, n_alt = 0
   Insn 45: point = 0, n_alt = -2
   Insn 44: point = 1, n_alt = 3
   Insn 43: point = 2, n_alt = 0
   Insn 42: point = 2, n_alt = -2
   Insn 41: point = 3, n_alt = 0
   Insn 40: point = 3, n_alt = 0
   Insn 39: point = 3, n_alt = -2
   Insn 38: point = 4, n_alt = 4
   Insn 37: point = 5, n_alt = 3
   Insn 36: point = 6, n_alt = 0
   Insn 35: point = 6, n_alt = -2
   Insn 34: point = 7, n_alt = 0
   Insn 33: point = 7, n_alt = 0
   Insn 32: point = 7, n_alt = -2
   Insn 31: point = 8, n_alt = 4
   Insn 30: point = 9, n_alt = 3
   Insn 29: point = 10, n_alt = 0
   Insn 28: point = 10, n_alt = -2
   Insn 27: point = 11, n_alt = 0
   Insn 26: point = 11, n_alt = 0
   Insn 25: point = 11, n_alt = -2
   Insn 24: point = 12, n_alt = 4
   Insn 23: point = 13, n_alt = 3
   Insn 22: point = 14, n_alt = 0
   Insn 21: point = 14, n_alt = -2
   Insn 20: point = 15, n_alt = 0
   Insn 19: point = 15, n_alt = 0
   Insn 18: point = 15, n_alt = -2
   Insn 17: point = 16, n_alt = 4
   Insn 16: point = 17, n_alt = 3
   Insn 15: point = 18, n_alt = 0
   Insn 14: point = 18, n_alt = -2
   Insn 13: point = 19, n_alt = 0
   Insn 12: point = 19, n_alt = -2
   Insn 11: point = 20, n_alt = 4
   Insn 10: point = 21, n_alt = 3
   Insn 9: point = 22, n_alt = 5
   Insn 8: point = 23, n_alt = -2
   Insn 7: point = 24, n_alt = 0
   Insn 6: point = 24, n_alt = -2
   Insn 5: point = 25, n_alt = 4
 r82: [24..25]
 r83: [22..23]
 r84: [18..21]
 r85: [19..20]
 r86: [14..17]
 r87: [15..16]
 r88: [10..13]
 r89: [11..12]
 r90: [6..9]
 r91: [7..8]
 r92: [2..5]
 r93: [3..4]
 r94: [0..1]
Compressing live ranges: from 26 to 16 - 61%
Ranges after the compression:
 r82: [14..15]
 r83: [12..13]
 r84: [10..11]
 r85: [10..11]
 r86: [8..9]
 r87: [8..9]
 r88: [6..7]
 r89: [6..7]
 r90: [4..5]
 r91: [4..5]
 r92: [2..3]
 r93: [2..3]
 r94: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 6
	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
changing reg in insn 5
changing reg in insn 6
changing reg in insn 8
changing reg in insn 9
changing reg in insn 10
changing reg in insn 14
changing reg in insn 11
changing reg in insn 12
changing reg in insn 16
changing reg in insn 21
changing reg in insn 17
changing reg in insn 18
changing reg in insn 23
changing reg in insn 28
changing reg in insn 24
changing reg in insn 25
changing reg in insn 30
changing reg in insn 35
changing reg in insn 31
changing reg in insn 32
changing reg in insn 37
changing reg in insn 42
changing reg in insn 38
changing reg in insn 39
changing reg in insn 44
changing reg in insn 45
deleting insn with uid = 8.
deleting insn with uid = 12.
starting the processing of deferred insns
ending the processing of deferred insns


test_file_read_inbound

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;;  ref usage 	r0={15d,8u} r1={17d,9u} r2={12d,4u} r4={13d,5u} r5={15d,7u} r6={1d,10u} r7={1d,10u} r8={7d} r9={7d} r10={7d} r11={7d} r12={7d} r13={7d} r14={7d} r15={7d} r17={7d} r18={7d} r19={1d,1u} r20={8d} r21={8d} r22={8d} r23={8d} r24={8d} r25={8d} r26={8d} r27={8d} r28={7d} r29={7d} r30={7d} r31={7d} r32={7d} r33={7d} r34={7d} r35={7d} r36={8d} r37={8d} r38={7d} r39={7d} r44={7d} r45={7d} r46={7d} r47={7d} r48={7d} r49={7d} r50={7d} r51={7d} r52={7d} r53={7d} r54={7d} r55={7d} r56={7d} r57={7d} r58={7d} r59={7d} r60={7d} r61={7d} r62={7d} r63={7d} r64={7d} r65={7d} r66={7d} r67={7d} r68={7d} r69={7d} r70={7d} r71={7d} r72={7d} r73={7d} r74={7d} r75={7d} 
;;    total ref usage 573{519d,54u,0e} in 41{34 regular + 7 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 82 83 84 85 86 87 88 89 90 91 92 93 94
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:DI 0 ax [82])
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7fa6108ae480 *.LC6>)) "main.c":58:32 80 {*movdi_internal}
     (nil))
(insn 6 5 7 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [82])) "main.c":58:32 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7fa6108ae480 *.LC6>)
        (nil)))
(call_insn 7 6 9 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("file_tester_create") [flags 0x41]  <function_decl 0x7fa610b72e00 file_tester_create>) [0 file_tester_create S1 A8])
            (const_int 0 [0]))) "main.c":58:32 909 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 9 7 10 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [8 tester+0 S8 A64])
        (reg:DI 0 ax [83])) "main.c":58:32 80 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:DI 0 ax [84])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [8 tester+0 S8 A64])) "main.c":59:3 80 {*movdi_internal}
     (nil))
(insn 11 10 13 2 (set (reg:DI 1 dx [85])
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7fa6108ae480 *.LC6>)) "main.c":59:3 80 {*movdi_internal}
     (nil))
(insn 13 11 14 2 (set (reg:SI 4 si)
        (const_int 0 [0])) "main.c":59:3 81 {*movsi_internal}
     (nil))
(insn 14 13 15 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [84])) "main.c":59:3 80 {*movdi_internal}
     (nil))
(call_insn 15 14 16 2 (call (mem:QI (symbol_ref:DI ("file_tester_init") [flags 0x41]  <function_decl 0x7fa610b77000 file_tester_init>) [0 file_tester_init S1 A8])
        (const_int 0 [0])) "main.c":59:3 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 16 15 17 2 (set (reg:DI 0 ax [86])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [8 tester+0 S8 A64])) "main.c":60:3 80 {*movdi_internal}
     (nil))
(insn 17 16 18 2 (set (reg:DI 1 dx [87])
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7fa6108ae510 *.LC7>)) "main.c":60:3 80 {*movdi_internal}
     (nil))
(insn 18 17 19 2 (set (reg:DI 2 cx)
        (reg:DI 1 dx [87])) "main.c":60:3 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7fa6108ae510 *.LC7>)
        (nil)))
(insn 19 18 20 2 (set (reg:SI 1 dx)
        (const_int 10 [0xa])) "main.c":60:3 81 {*movsi_internal}
     (nil))
(insn 20 19 21 2 (set (reg:SI 4 si)
        (const_int 0 [0])) "main.c":60:3 81 {*movsi_internal}
     (nil))
(insn 21 20 22 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [86])) "main.c":60:3 80 {*movdi_internal}
     (nil))
(call_insn 22 21 23 2 (call (mem:QI (symbol_ref:DI ("file_tester_write") [flags 0x41]  <function_decl 0x7fa610b77100 file_tester_write>) [0 file_tester_write S1 A8])
        (const_int 0 [0])) "main.c":60:3 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 23 22 24 2 (set (reg:DI 0 ax [88])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [8 tester+0 S8 A64])) "main.c":61:3 80 {*movdi_internal}
     (nil))
(insn 24 23 25 2 (set (reg:DI 1 dx [89])
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x7fa6108ae5a0 *.LC8>)) "main.c":61:3 80 {*movdi_internal}
     (nil))
(insn 25 24 26 2 (set (reg:DI 2 cx)
        (reg:DI 1 dx [89])) "main.c":61:3 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x7fa6108ae5a0 *.LC8>)
        (nil)))
(insn 26 25 27 2 (set (reg:SI 1 dx)
        (const_int 3 [0x3])) "main.c":61:3 81 {*movsi_internal}
     (nil))
(insn 27 26 28 2 (set (reg:SI 4 si)
        (const_int 0 [0])) "main.c":61:3 81 {*movsi_internal}
     (nil))
(insn 28 27 29 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [88])) "main.c":61:3 80 {*movdi_internal}
     (nil))
(call_insn 29 28 30 2 (call (mem:QI (symbol_ref:DI ("file_tester_read") [flags 0x41]  <function_decl 0x7fa610b77200 file_tester_read>) [0 file_tester_read S1 A8])
        (const_int 0 [0])) "main.c":61:3 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 30 29 31 2 (set (reg:DI 0 ax [90])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [8 tester+0 S8 A64])) "main.c":62:3 80 {*movdi_internal}
     (nil))
(insn 31 30 32 2 (set (reg:DI 1 dx [91])
        (symbol_ref/f:DI ("*.LC9") [flags 0x2]  <var_decl 0x7fa6108ae630 *.LC9>)) "main.c":62:3 80 {*movdi_internal}
     (nil))
(insn 32 31 33 2 (set (reg:DI 2 cx)
        (reg:DI 1 dx [91])) "main.c":62:3 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC9") [flags 0x2]  <var_decl 0x7fa6108ae630 *.LC9>)
        (nil)))
(insn 33 32 34 2 (set (reg:SI 1 dx)
        (const_int 3 [0x3])) "main.c":62:3 81 {*movsi_internal}
     (nil))
(insn 34 33 35 2 (set (reg:SI 4 si)
        (const_int 7 [0x7])) "main.c":62:3 81 {*movsi_internal}
     (nil))
(insn 35 34 36 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [90])) "main.c":62:3 80 {*movdi_internal}
     (nil))
(call_insn 36 35 37 2 (call (mem:QI (symbol_ref:DI ("file_tester_read") [flags 0x41]  <function_decl 0x7fa610b77200 file_tester_read>) [0 file_tester_read S1 A8])
        (const_int 0 [0])) "main.c":62:3 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 37 36 38 2 (set (reg:DI 0 ax [92])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [8 tester+0 S8 A64])) "main.c":63:3 80 {*movdi_internal}
     (nil))
(insn 38 37 39 2 (set (reg:DI 1 dx [93])
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7fa6108ae6c0 *.LC10>)) "main.c":63:3 80 {*movdi_internal}
     (nil))
(insn 39 38 40 2 (set (reg:DI 2 cx)
        (reg:DI 1 dx [93])) "main.c":63:3 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7fa6108ae6c0 *.LC10>)
        (nil)))
(insn 40 39 41 2 (set (reg:SI 1 dx)
        (const_int 0 [0])) "main.c":63:3 81 {*movsi_internal}
     (nil))
(insn 41 40 42 2 (set (reg:SI 4 si)
        (const_int 10 [0xa])) "main.c":63:3 81 {*movsi_internal}
     (nil))
(insn 42 41 43 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [92])) "main.c":63:3 80 {*movdi_internal}
     (nil))
(call_insn 43 42 44 2 (call (mem:QI (symbol_ref:DI ("file_tester_read") [flags 0x41]  <function_decl 0x7fa610b77200 file_tester_read>) [0 file_tester_read S1 A8])
        (const_int 0 [0])) "main.c":63:3 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 44 43 45 2 (set (reg:DI 0 ax [94])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [8 tester+0 S8 A64])) "main.c":64:3 80 {*movdi_internal}
     (nil))
(insn 45 44 46 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [94])) "main.c":64:3 80 {*movdi_internal}
     (nil))
(call_insn 46 45 49 2 (call (mem:QI (symbol_ref:DI ("file_tester_destory") [flags 0x41]  <function_decl 0x7fa610b72f00 file_tester_destory>) [0 file_tester_destory S1 A8])
        (const_int 0 [0])) "main.c":64:3 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       3 [always]  (FALLTHRU) main.c:65:1
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 1, flags: (RTL, MODIFIED)
;;  pred:       2 [always]  (FALLTHRU) main.c:65:1
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(note 49 46 50 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 50 49 51 3 (const_int 0 [0]) "main.c":65:1 928 {nop}
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(note 51 50 0 NOTE_INSN_DELETED)

;; Function test_file_read_outbound (test_file_read_outbound, funcdef_no=11, decl_uid=3348, cgraph_uid=12, symbol_order=12)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 5:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (1) rBwBz {*call_value}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 9:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 10:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 11:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 16:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 17:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 19:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 20:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 22:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 23:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 24:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 27:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 29:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 30:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 31:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 33:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 34:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 36:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 37:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 38:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 40:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 41:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 43:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 44:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 46:  (0) rBwBz {*call}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #1: **********

EBB 2 3

********** Pseudo live ranges #1: **********

  BB 3
   Insn 50: point = 0, n_alt = -1
  BB 2
   Insn 46: point = 0, n_alt = 0
   Insn 45: point = 0, n_alt = -2
   Insn 44: point = 1, n_alt = 3
   Insn 43: point = 2, n_alt = 0
   Insn 42: point = 2, n_alt = -2
   Insn 41: point = 3, n_alt = 0
   Insn 40: point = 3, n_alt = 0
   Insn 39: point = 3, n_alt = -2
   Insn 38: point = 4, n_alt = 4
   Insn 37: point = 5, n_alt = 3
   Insn 36: point = 6, n_alt = 0
   Insn 35: point = 6, n_alt = -2
   Insn 34: point = 7, n_alt = 0
   Insn 33: point = 7, n_alt = 0
   Insn 32: point = 7, n_alt = -2
   Insn 31: point = 8, n_alt = 4
   Insn 30: point = 9, n_alt = 3
   Insn 29: point = 10, n_alt = 0
   Insn 28: point = 10, n_alt = -2
   Insn 27: point = 11, n_alt = 0
   Insn 26: point = 11, n_alt = 0
   Insn 25: point = 11, n_alt = -2
   Insn 24: point = 12, n_alt = 4
   Insn 23: point = 13, n_alt = 3
   Insn 22: point = 14, n_alt = 0
   Insn 21: point = 14, n_alt = -2
   Insn 20: point = 15, n_alt = 0
   Insn 19: point = 15, n_alt = 0
   Insn 18: point = 15, n_alt = -2
   Insn 17: point = 16, n_alt = 4
   Insn 16: point = 17, n_alt = 3
   Insn 15: point = 18, n_alt = 0
   Insn 14: point = 18, n_alt = -2
   Insn 13: point = 19, n_alt = 0
   Insn 12: point = 19, n_alt = -2
   Insn 11: point = 20, n_alt = 4
   Insn 10: point = 21, n_alt = 3
   Insn 9: point = 22, n_alt = 5
   Insn 8: point = 23, n_alt = -2
   Insn 7: point = 24, n_alt = 0
   Insn 6: point = 24, n_alt = -2
   Insn 5: point = 25, n_alt = 4
 r82: [24..25]
 r83: [22..23]
 r84: [18..21]
 r85: [19..20]
 r86: [14..17]
 r87: [15..16]
 r88: [10..13]
 r89: [11..12]
 r90: [6..9]
 r91: [7..8]
 r92: [2..5]
 r93: [3..4]
 r94: [0..1]
Compressing live ranges: from 26 to 16 - 61%
Ranges after the compression:
 r82: [14..15]
 r83: [12..13]
 r84: [10..11]
 r85: [10..11]
 r86: [8..9]
 r87: [8..9]
 r88: [6..7]
 r89: [6..7]
 r90: [4..5]
 r91: [4..5]
 r92: [2..3]
 r93: [2..3]
 r94: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 6
	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
changing reg in insn 5
changing reg in insn 6
changing reg in insn 8
changing reg in insn 9
changing reg in insn 10
changing reg in insn 14
changing reg in insn 11
changing reg in insn 12
changing reg in insn 16
changing reg in insn 21
changing reg in insn 17
changing reg in insn 18
changing reg in insn 23
changing reg in insn 28
changing reg in insn 24
changing reg in insn 25
changing reg in insn 30
changing reg in insn 35
changing reg in insn 31
changing reg in insn 32
changing reg in insn 37
changing reg in insn 42
changing reg in insn 38
changing reg in insn 39
changing reg in insn 44
changing reg in insn 45
deleting insn with uid = 8.
deleting insn with uid = 12.
starting the processing of deferred insns
ending the processing of deferred insns


test_file_read_outbound

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;;  ref usage 	r0={15d,8u} r1={17d,9u} r2={12d,4u} r4={13d,5u} r5={15d,7u} r6={1d,10u} r7={1d,10u} r8={7d} r9={7d} r10={7d} r11={7d} r12={7d} r13={7d} r14={7d} r15={7d} r17={7d} r18={7d} r19={1d,1u} r20={8d} r21={8d} r22={8d} r23={8d} r24={8d} r25={8d} r26={8d} r27={8d} r28={7d} r29={7d} r30={7d} r31={7d} r32={7d} r33={7d} r34={7d} r35={7d} r36={8d} r37={8d} r38={7d} r39={7d} r44={7d} r45={7d} r46={7d} r47={7d} r48={7d} r49={7d} r50={7d} r51={7d} r52={7d} r53={7d} r54={7d} r55={7d} r56={7d} r57={7d} r58={7d} r59={7d} r60={7d} r61={7d} r62={7d} r63={7d} r64={7d} r65={7d} r66={7d} r67={7d} r68={7d} r69={7d} r70={7d} r71={7d} r72={7d} r73={7d} r74={7d} r75={7d} 
;;    total ref usage 573{519d,54u,0e} in 41{34 regular + 7 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 82 83 84 85 86 87 88 89 90 91 92 93 94
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:DI 0 ax [82])
        (symbol_ref/f:DI ("*.LC11") [flags 0x2]  <var_decl 0x7fa6108aea20 *.LC11>)) "main.c":68:32 80 {*movdi_internal}
     (nil))
(insn 6 5 7 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [82])) "main.c":68:32 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC11") [flags 0x2]  <var_decl 0x7fa6108aea20 *.LC11>)
        (nil)))
(call_insn 7 6 9 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("file_tester_create") [flags 0x41]  <function_decl 0x7fa610b72e00 file_tester_create>) [0 file_tester_create S1 A8])
            (const_int 0 [0]))) "main.c":68:32 909 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 9 7 10 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [8 tester+0 S8 A64])
        (reg:DI 0 ax [83])) "main.c":68:32 80 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:DI 0 ax [84])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [8 tester+0 S8 A64])) "main.c":69:3 80 {*movdi_internal}
     (nil))
(insn 11 10 13 2 (set (reg:DI 1 dx [85])
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7fa6108a16c0 *.LC1>)) "main.c":69:3 80 {*movdi_internal}
     (nil))
(insn 13 11 14 2 (set (reg:SI 4 si)
        (const_int 0 [0])) "main.c":69:3 81 {*movsi_internal}
     (nil))
(insn 14 13 15 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [84])) "main.c":69:3 80 {*movdi_internal}
     (nil))
(call_insn 15 14 16 2 (call (mem:QI (symbol_ref:DI ("file_tester_init") [flags 0x41]  <function_decl 0x7fa610b77000 file_tester_init>) [0 file_tester_init S1 A8])
        (const_int 0 [0])) "main.c":69:3 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 16 15 17 2 (set (reg:DI 0 ax [86])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [8 tester+0 S8 A64])) "main.c":70:3 80 {*movdi_internal}
     (nil))
(insn 17 16 18 2 (set (reg:DI 1 dx [87])
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7fa6108ae510 *.LC7>)) "main.c":70:3 80 {*movdi_internal}
     (nil))
(insn 18 17 19 2 (set (reg:DI 2 cx)
        (reg:DI 1 dx [87])) "main.c":70:3 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7fa6108ae510 *.LC7>)
        (nil)))
(insn 19 18 20 2 (set (reg:SI 1 dx)
        (const_int 10 [0xa])) "main.c":70:3 81 {*movsi_internal}
     (nil))
(insn 20 19 21 2 (set (reg:SI 4 si)
        (const_int 0 [0])) "main.c":70:3 81 {*movsi_internal}
     (nil))
(insn 21 20 22 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [86])) "main.c":70:3 80 {*movdi_internal}
     (nil))
(call_insn 22 21 23 2 (call (mem:QI (symbol_ref:DI ("file_tester_write") [flags 0x41]  <function_decl 0x7fa610b77100 file_tester_write>) [0 file_tester_write S1 A8])
        (const_int 0 [0])) "main.c":70:3 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 23 22 24 2 (set (reg:DI 0 ax [88])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [8 tester+0 S8 A64])) "main.c":71:3 80 {*movdi_internal}
     (nil))
(insn 24 23 25 2 (set (reg:DI 1 dx [89])
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7fa6108ae6c0 *.LC10>)) "main.c":71:3 80 {*movdi_internal}
     (nil))
(insn 25 24 26 2 (set (reg:DI 2 cx)
        (reg:DI 1 dx [89])) "main.c":71:3 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7fa6108ae6c0 *.LC10>)
        (nil)))
(insn 26 25 27 2 (set (reg:SI 1 dx)
        (const_int 11 [0xb])) "main.c":71:3 81 {*movsi_internal}
     (nil))
(insn 27 26 28 2 (set (reg:SI 4 si)
        (const_int 11 [0xb])) "main.c":71:3 81 {*movsi_internal}
     (nil))
(insn 28 27 29 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [88])) "main.c":71:3 80 {*movdi_internal}
     (nil))
(call_insn 29 28 30 2 (call (mem:QI (symbol_ref:DI ("file_tester_read") [flags 0x41]  <function_decl 0x7fa610b77200 file_tester_read>) [0 file_tester_read S1 A8])
        (const_int 0 [0])) "main.c":71:3 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 30 29 31 2 (set (reg:DI 0 ax [90])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [8 tester+0 S8 A64])) "main.c":72:3 80 {*movdi_internal}
     (nil))
(insn 31 30 32 2 (set (reg:DI 1 dx [91])
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7fa6108ae6c0 *.LC10>)) "main.c":72:3 80 {*movdi_internal}
     (nil))
(insn 32 31 33 2 (set (reg:DI 2 cx)
        (reg:DI 1 dx [91])) "main.c":72:3 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7fa6108ae6c0 *.LC10>)
        (nil)))
(insn 33 32 34 2 (set (reg:SI 1 dx)
        (const_int 0 [0])) "main.c":72:3 81 {*movsi_internal}
     (nil))
(insn 34 33 35 2 (set (reg:SI 4 si)
        (const_int 11 [0xb])) "main.c":72:3 81 {*movsi_internal}
     (nil))
(insn 35 34 36 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [90])) "main.c":72:3 80 {*movdi_internal}
     (nil))
(call_insn 36 35 37 2 (call (mem:QI (symbol_ref:DI ("file_tester_read") [flags 0x41]  <function_decl 0x7fa610b77200 file_tester_read>) [0 file_tester_read S1 A8])
        (const_int 0 [0])) "main.c":72:3 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 37 36 38 2 (set (reg:DI 0 ax [92])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [8 tester+0 S8 A64])) "main.c":73:3 80 {*movdi_internal}
     (nil))
(insn 38 37 39 2 (set (reg:DI 1 dx [93])
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7fa6108ae6c0 *.LC10>)) "main.c":73:3 80 {*movdi_internal}
     (nil))
(insn 39 38 40 2 (set (reg:DI 2 cx)
        (reg:DI 1 dx [93])) "main.c":73:3 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7fa6108ae6c0 *.LC10>)
        (nil)))
(insn 40 39 41 2 (set (reg:SI 1 dx)
        (const_int 11 [0xb])) "main.c":73:3 81 {*movsi_internal}
     (nil))
(insn 41 40 42 2 (set (reg:SI 4 si)
        (const_int 0 [0])) "main.c":73:3 81 {*movsi_internal}
     (nil))
(insn 42 41 43 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [92])) "main.c":73:3 80 {*movdi_internal}
     (nil))
(call_insn 43 42 44 2 (call (mem:QI (symbol_ref:DI ("file_tester_read") [flags 0x41]  <function_decl 0x7fa610b77200 file_tester_read>) [0 file_tester_read S1 A8])
        (const_int 0 [0])) "main.c":73:3 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 44 43 45 2 (set (reg:DI 0 ax [94])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [8 tester+0 S8 A64])) "main.c":74:3 80 {*movdi_internal}
     (nil))
(insn 45 44 46 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [94])) "main.c":74:3 80 {*movdi_internal}
     (nil))
(call_insn 46 45 49 2 (call (mem:QI (symbol_ref:DI ("file_tester_destory") [flags 0x41]  <function_decl 0x7fa610b72f00 file_tester_destory>) [0 file_tester_destory S1 A8])
        (const_int 0 [0])) "main.c":74:3 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       3 [always]  (FALLTHRU) main.c:75:1
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 1, flags: (RTL, MODIFIED)
;;  pred:       2 [always]  (FALLTHRU) main.c:75:1
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(note 49 46 50 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 50 49 51 3 (const_int 0 [0]) "main.c":75:1 928 {nop}
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(note 51 50 0 NOTE_INSN_DELETED)

;; Function test_file_read_write (test_file_read_write, funcdef_no=12, decl_uid=3351, cgraph_uid=13, symbol_order=13)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 5:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (1) rBwBz {*call_value}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 9:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 10:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 11:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 16:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 17:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 19:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 20:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 22:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 23:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 24:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 27:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 29:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 30:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 31:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 33:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 34:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 36:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 37:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 38:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 40:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 41:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 43:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 44:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 45:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 47:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 48:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 50:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 51:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 53:  (0) rBwBz {*call}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #1: **********

EBB 2 3

********** Pseudo live ranges #1: **********

  BB 3
   Insn 57: point = 0, n_alt = -1
  BB 2
   Insn 53: point = 0, n_alt = 0
   Insn 52: point = 0, n_alt = -2
   Insn 51: point = 1, n_alt = 3
   Insn 50: point = 2, n_alt = 0
   Insn 49: point = 2, n_alt = -2
   Insn 48: point = 3, n_alt = 0
   Insn 47: point = 3, n_alt = 0
   Insn 46: point = 3, n_alt = -2
   Insn 45: point = 4, n_alt = 4
   Insn 44: point = 5, n_alt = 3
   Insn 43: point = 6, n_alt = 0
   Insn 42: point = 6, n_alt = -2
   Insn 41: point = 7, n_alt = 0
   Insn 40: point = 7, n_alt = 0
   Insn 39: point = 7, n_alt = -2
   Insn 38: point = 8, n_alt = 4
   Insn 37: point = 9, n_alt = 3
   Insn 36: point = 10, n_alt = 0
   Insn 35: point = 10, n_alt = -2
   Insn 34: point = 11, n_alt = 0
   Insn 33: point = 11, n_alt = 0
   Insn 32: point = 11, n_alt = -2
   Insn 31: point = 12, n_alt = 4
   Insn 30: point = 13, n_alt = 3
   Insn 29: point = 14, n_alt = 0
   Insn 28: point = 14, n_alt = -2
   Insn 27: point = 15, n_alt = 0
   Insn 26: point = 15, n_alt = 0
   Insn 25: point = 15, n_alt = -2
   Insn 24: point = 16, n_alt = 4
   Insn 23: point = 17, n_alt = 3
   Insn 22: point = 18, n_alt = 0
   Insn 21: point = 18, n_alt = -2
   Insn 20: point = 19, n_alt = 0
   Insn 19: point = 19, n_alt = 0
   Insn 18: point = 19, n_alt = -2
   Insn 17: point = 20, n_alt = 4
   Insn 16: point = 21, n_alt = 3
   Insn 15: point = 22, n_alt = 0
   Insn 14: point = 22, n_alt = -2
   Insn 13: point = 23, n_alt = 0
   Insn 12: point = 23, n_alt = -2
   Insn 11: point = 24, n_alt = 4
   Insn 10: point = 25, n_alt = 3
   Insn 9: point = 26, n_alt = 5
   Insn 8: point = 27, n_alt = -2
   Insn 7: point = 28, n_alt = 0
   Insn 6: point = 28, n_alt = -2
   Insn 5: point = 29, n_alt = 4
 r82: [28..29]
 r83: [26..27]
 r84: [22..25]
 r85: [23..24]
 r86: [18..21]
 r87: [19..20]
 r88: [14..17]
 r89: [15..16]
 r90: [10..13]
 r91: [11..12]
 r92: [6..9]
 r93: [7..8]
 r94: [2..5]
 r95: [3..4]
 r96: [0..1]
Compressing live ranges: from 30 to 18 - 60%
Ranges after the compression:
 r82: [16..17]
 r83: [14..15]
 r84: [12..13]
 r85: [12..13]
 r86: [10..11]
 r87: [10..11]
 r88: [8..9]
 r89: [8..9]
 r90: [6..7]
 r91: [6..7]
 r92: [4..5]
 r93: [4..5]
 r94: [2..3]
 r95: [2..3]
 r96: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 6
	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
changing reg in insn 5
changing reg in insn 6
changing reg in insn 8
changing reg in insn 9
changing reg in insn 10
changing reg in insn 14
changing reg in insn 11
changing reg in insn 12
changing reg in insn 16
changing reg in insn 21
changing reg in insn 17
changing reg in insn 18
changing reg in insn 23
changing reg in insn 28
changing reg in insn 24
changing reg in insn 25
changing reg in insn 30
changing reg in insn 35
changing reg in insn 31
changing reg in insn 32
changing reg in insn 37
changing reg in insn 42
changing reg in insn 38
changing reg in insn 39
changing reg in insn 44
changing reg in insn 49
changing reg in insn 45
changing reg in insn 46
changing reg in insn 51
changing reg in insn 52
deleting insn with uid = 8.
deleting insn with uid = 12.
starting the processing of deferred insns
ending the processing of deferred insns


test_file_read_write

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;;  ref usage 	r0={17d,9u} r1={20d,11u} r2={14d,5u} r4={15d,6u} r5={17d,8u} r6={1d,11u} r7={1d,11u} r8={8d} r9={8d} r10={8d} r11={8d} r12={8d} r13={8d} r14={8d} r15={8d} r17={8d} r18={8d} r19={1d,1u} r20={9d} r21={9d} r22={9d} r23={9d} r24={9d} r25={9d} r26={9d} r27={9d} r28={8d} r29={8d} r30={8d} r31={8d} r32={8d} r33={8d} r34={8d} r35={8d} r36={9d} r37={9d} r38={8d} r39={8d} r44={8d} r45={8d} r46={8d} r47={8d} r48={8d} r49={8d} r50={8d} r51={8d} r52={8d} r53={8d} r54={8d} r55={8d} r56={8d} r57={8d} r58={8d} r59={8d} r60={8d} r61={8d} r62={8d} r63={8d} r64={8d} r65={8d} r66={8d} r67={8d} r68={8d} r69={8d} r70={8d} r71={8d} r72={8d} r73={8d} r74={8d} r75={8d} 
;;    total ref usage 654{592d,62u,0e} in 48{40 regular + 8 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:DI 0 ax [82])
        (symbol_ref/f:DI ("*.LC12") [flags 0x2]  <var_decl 0x7fa6108aed80 *.LC12>)) "main.c":78:32 80 {*movdi_internal}
     (nil))
(insn 6 5 7 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [82])) "main.c":78:32 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC12") [flags 0x2]  <var_decl 0x7fa6108aed80 *.LC12>)
        (nil)))
(call_insn 7 6 9 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("file_tester_create") [flags 0x41]  <function_decl 0x7fa610b72e00 file_tester_create>) [0 file_tester_create S1 A8])
            (const_int 0 [0]))) "main.c":78:32 909 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 9 7 10 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [8 tester+0 S8 A64])
        (reg:DI 0 ax [83])) "main.c":78:32 80 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:DI 0 ax [84])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [8 tester+0 S8 A64])) "main.c":79:3 80 {*movdi_internal}
     (nil))
(insn 11 10 13 2 (set (reg:DI 1 dx [85])
        (symbol_ref/f:DI ("*.LC13") [flags 0x2]  <var_decl 0x7fa6108aee10 *.LC13>)) "main.c":79:3 80 {*movdi_internal}
     (nil))
(insn 13 11 14 2 (set (reg:SI 4 si)
        (const_int 0 [0])) "main.c":79:3 81 {*movsi_internal}
     (nil))
(insn 14 13 15 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [84])) "main.c":79:3 80 {*movdi_internal}
     (nil))
(call_insn 15 14 16 2 (call (mem:QI (symbol_ref:DI ("file_tester_init") [flags 0x41]  <function_decl 0x7fa610b77000 file_tester_init>) [0 file_tester_init S1 A8])
        (const_int 0 [0])) "main.c":79:3 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 16 15 17 2 (set (reg:DI 0 ax [86])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [8 tester+0 S8 A64])) "main.c":80:3 80 {*movdi_internal}
     (nil))
(insn 17 16 18 2 (set (reg:DI 1 dx [87])
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x7fa6108ae5a0 *.LC8>)) "main.c":80:3 80 {*movdi_internal}
     (nil))
(insn 18 17 19 2 (set (reg:DI 2 cx)
        (reg:DI 1 dx [87])) "main.c":80:3 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x7fa6108ae5a0 *.LC8>)
        (nil)))
(insn 19 18 20 2 (set (reg:SI 1 dx)
        (const_int 3 [0x3])) "main.c":80:3 81 {*movsi_internal}
     (nil))
(insn 20 19 21 2 (set (reg:SI 4 si)
        (const_int 0 [0])) "main.c":80:3 81 {*movsi_internal}
     (nil))
(insn 21 20 22 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [86])) "main.c":80:3 80 {*movdi_internal}
     (nil))
(call_insn 22 21 23 2 (call (mem:QI (symbol_ref:DI ("file_tester_write") [flags 0x41]  <function_decl 0x7fa610b77100 file_tester_write>) [0 file_tester_write S1 A8])
        (const_int 0 [0])) "main.c":80:3 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 23 22 24 2 (set (reg:DI 0 ax [88])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [8 tester+0 S8 A64])) "main.c":81:3 80 {*movdi_internal}
     (nil))
(insn 24 23 25 2 (set (reg:DI 1 dx [89])
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x7fa6108ae5a0 *.LC8>)) "main.c":81:3 80 {*movdi_internal}
     (nil))
(insn 25 24 26 2 (set (reg:DI 2 cx)
        (reg:DI 1 dx [89])) "main.c":81:3 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x7fa6108ae5a0 *.LC8>)
        (nil)))
(insn 26 25 27 2 (set (reg:SI 1 dx)
        (const_int 3 [0x3])) "main.c":81:3 81 {*movsi_internal}
     (nil))
(insn 27 26 28 2 (set (reg:SI 4 si)
        (const_int 0 [0])) "main.c":81:3 81 {*movsi_internal}
     (nil))
(insn 28 27 29 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [88])) "main.c":81:3 80 {*movdi_internal}
     (nil))
(call_insn 29 28 30 2 (call (mem:QI (symbol_ref:DI ("file_tester_read") [flags 0x41]  <function_decl 0x7fa610b77200 file_tester_read>) [0 file_tester_read S1 A8])
        (const_int 0 [0])) "main.c":81:3 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 30 29 31 2 (set (reg:DI 0 ax [90])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [8 tester+0 S8 A64])) "main.c":82:3 80 {*movdi_internal}
     (nil))
(insn 31 30 32 2 (set (reg:DI 1 dx [91])
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7fa6108ae6c0 *.LC10>)) "main.c":82:3 80 {*movdi_internal}
     (nil))
(insn 32 31 33 2 (set (reg:DI 2 cx)
        (reg:DI 1 dx [91])) "main.c":82:3 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7fa6108ae6c0 *.LC10>)
        (nil)))
(insn 33 32 34 2 (set (reg:SI 1 dx)
        (const_int 3 [0x3])) "main.c":82:3 81 {*movsi_internal}
     (nil))
(insn 34 33 35 2 (set (reg:SI 4 si)
        (const_int 3 [0x3])) "main.c":82:3 81 {*movsi_internal}
     (nil))
(insn 35 34 36 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [90])) "main.c":82:3 80 {*movdi_internal}
     (nil))
(call_insn 36 35 37 2 (call (mem:QI (symbol_ref:DI ("file_tester_read") [flags 0x41]  <function_decl 0x7fa610b77200 file_tester_read>) [0 file_tester_read S1 A8])
        (const_int 0 [0])) "main.c":82:3 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 37 36 38 2 (set (reg:DI 0 ax [92])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [8 tester+0 S8 A64])) "main.c":83:3 80 {*movdi_internal}
     (nil))
(insn 38 37 39 2 (set (reg:DI 1 dx [93])
        (symbol_ref/f:DI ("*.LC14") [flags 0x2]  <var_decl 0x7fa6108aeea0 *.LC14>)) "main.c":83:3 80 {*movdi_internal}
     (nil))
(insn 39 38 40 2 (set (reg:DI 2 cx)
        (reg:DI 1 dx [93])) "main.c":83:3 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC14") [flags 0x2]  <var_decl 0x7fa6108aeea0 *.LC14>)
        (nil)))
(insn 40 39 41 2 (set (reg:SI 1 dx)
        (const_int 3 [0x3])) "main.c":83:3 81 {*movsi_internal}
     (nil))
(insn 41 40 42 2 (set (reg:SI 4 si)
        (const_int 3 [0x3])) "main.c":83:3 81 {*movsi_internal}
     (nil))
(insn 42 41 43 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [92])) "main.c":83:3 80 {*movdi_internal}
     (nil))
(call_insn 43 42 44 2 (call (mem:QI (symbol_ref:DI ("file_tester_write") [flags 0x41]  <function_decl 0x7fa610b77100 file_tester_write>) [0 file_tester_write S1 A8])
        (const_int 0 [0])) "main.c":83:3 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 44 43 45 2 (set (reg:DI 0 ax [94])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [8 tester+0 S8 A64])) "main.c":84:3 80 {*movdi_internal}
     (nil))
(insn 45 44 46 2 (set (reg:DI 1 dx [95])
        (symbol_ref/f:DI ("*.LC14") [flags 0x2]  <var_decl 0x7fa6108aeea0 *.LC14>)) "main.c":84:3 80 {*movdi_internal}
     (nil))
(insn 46 45 47 2 (set (reg:DI 2 cx)
        (reg:DI 1 dx [95])) "main.c":84:3 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC14") [flags 0x2]  <var_decl 0x7fa6108aeea0 *.LC14>)
        (nil)))
(insn 47 46 48 2 (set (reg:SI 1 dx)
        (const_int 3 [0x3])) "main.c":84:3 81 {*movsi_internal}
     (nil))
(insn 48 47 49 2 (set (reg:SI 4 si)
        (const_int 3 [0x3])) "main.c":84:3 81 {*movsi_internal}
     (nil))
(insn 49 48 50 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [94])) "main.c":84:3 80 {*movdi_internal}
     (nil))
(call_insn 50 49 51 2 (call (mem:QI (symbol_ref:DI ("file_tester_read") [flags 0x41]  <function_decl 0x7fa610b77200 file_tester_read>) [0 file_tester_read S1 A8])
        (const_int 0 [0])) "main.c":84:3 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 51 50 52 2 (set (reg:DI 0 ax [96])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [8 tester+0 S8 A64])) "main.c":85:3 80 {*movdi_internal}
     (nil))
(insn 52 51 53 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [96])) "main.c":85:3 80 {*movdi_internal}
     (nil))
(call_insn 53 52 56 2 (call (mem:QI (symbol_ref:DI ("file_tester_destory") [flags 0x41]  <function_decl 0x7fa610b72f00 file_tester_destory>) [0 file_tester_destory S1 A8])
        (const_int 0 [0])) "main.c":85:3 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       3 [always]  (FALLTHRU) main.c:86:1
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 1, flags: (RTL, MODIFIED)
;;  pred:       2 [always]  (FALLTHRU) main.c:86:1
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(note 56 53 57 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 57 56 58 3 (const_int 0 [0]) "main.c":86:1 928 {nop}
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(note 58 57 0 NOTE_INSN_DELETED)

;; Function test_dir_add_file (test_dir_add_file, funcdef_no=13, decl_uid=3354, cgraph_uid=14, symbol_order=14)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 5:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (1) rBwBz {*call_value}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 9:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 10:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 11:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 12:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 14:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 16:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 17:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 18:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 19:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 24:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (0) rBwBz {*call}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #1: **********

EBB 2 3

********** Pseudo live ranges #1: **********

  BB 3
   Insn 30: point = 0, n_alt = -1
  BB 2
   Insn 26: point = 0, n_alt = 0
   Insn 25: point = 0, n_alt = -2
   Insn 24: point = 1, n_alt = 3
   Insn 23: point = 2, n_alt = 0
   Insn 22: point = 2, n_alt = -2
   Insn 21: point = 3, n_alt = 0
   Insn 20: point = 3, n_alt = -2
   Insn 19: point = 4, n_alt = 4
   Insn 18: point = 5, n_alt = 0
   Insn 17: point = 5, n_alt = 3
   Insn 16: point = 6, n_alt = 0
   Insn 15: point = 6, n_alt = -2
   Insn 14: point = 7, n_alt = 0
   Insn 13: point = 7, n_alt = -2
   Insn 12: point = 8, n_alt = 4
   Insn 11: point = 9, n_alt = 0
   Insn 10: point = 9, n_alt = 3
   Insn 9: point = 10, n_alt = 5
   Insn 8: point = 11, n_alt = -2
   Insn 7: point = 12, n_alt = 0
   Insn 6: point = 12, n_alt = -2
   Insn 5: point = 13, n_alt = 4
 r82: [12..13]
 r83: [10..11]
 r84: [6..9]
 r85: [7..8]
 r86: [2..5]
 r87: [3..4]
 r88: [0..1]
Compressing live ranges: from 14 to 10 - 71%
Ranges after the compression:
 r82: [8..9]
 r83: [6..7]
 r84: [4..5]
 r85: [4..5]
 r86: [2..3]
 r87: [2..3]
 r88: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 6
	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
changing reg in insn 5
changing reg in insn 6
changing reg in insn 8
changing reg in insn 9
changing reg in insn 10
changing reg in insn 15
changing reg in insn 12
changing reg in insn 13
changing reg in insn 17
changing reg in insn 22
changing reg in insn 19
changing reg in insn 20
changing reg in insn 24
changing reg in insn 25
deleting insn with uid = 8.
deleting insn with uid = 13.
deleting insn with uid = 20.
starting the processing of deferred insns
ending the processing of deferred insns


test_dir_add_file

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;;  ref usage 	r0={9d,5u} r1={7d,2u} r2={7d,2u} r4={7d,2u} r5={9d,4u} r6={1d,7u} r7={1d,7u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r17={4d} r18={4d} r19={1d,1u} r20={5d} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={5d} r37={5d} r38={4d} r39={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} 
;;    total ref usage 330{300d,30u,0e} in 20{16 regular + 4 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 82 83 84 85 86 87 88
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:DI 0 ax [82])
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x7fa6108bd240 *.LC15>)) "main.c":91:31 80 {*movdi_internal}
     (nil))
(insn 6 5 7 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [82])) "main.c":91:31 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x7fa6108bd240 *.LC15>)
        (nil)))
(call_insn 7 6 9 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("dir_tester_create") [flags 0x41]  <function_decl 0x7fa610b6eb00 dir_tester_create>) [0 dir_tester_create S1 A8])
            (const_int 0 [0]))) "main.c":91:31 909 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 9 7 10 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [12 tester+0 S8 A64])
        (reg:DI 0 ax [83])) "main.c":91:31 80 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:DI 0 ax [84])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [12 tester+0 S8 A64])) "main.c":92:3 80 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:SI 2 cx)
        (const_int 1 [0x1])) "main.c":92:3 81 {*movsi_internal}
     (nil))
(insn 12 11 14 2 (set (reg:DI 1 dx [85])
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7fa6108a16c0 *.LC1>)) "main.c":92:3 80 {*movdi_internal}
     (nil))
(insn 14 12 15 2 (set (reg:SI 4 si)
        (const_int 1 [0x1])) "main.c":92:3 81 {*movsi_internal}
     (nil))
(insn 15 14 16 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [84])) "main.c":92:3 80 {*movdi_internal}
     (nil))
(call_insn 16 15 17 2 (call (mem:QI (symbol_ref:DI ("dir_tester_add_file") [flags 0x41]  <function_decl 0x7fa610b6ee00 dir_tester_add_file>) [0 dir_tester_add_file S1 A8])
        (const_int 0 [0])) "main.c":92:3 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 17 16 18 2 (set (reg:DI 0 ax [86])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [12 tester+0 S8 A64])) "main.c":93:3 80 {*movdi_internal}
     (nil))
(insn 18 17 19 2 (set (reg:SI 2 cx)
        (const_int 0 [0])) "main.c":93:3 81 {*movsi_internal}
     (nil))
(insn 19 18 21 2 (set (reg:DI 1 dx [87])
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7fa6108a16c0 *.LC1>)) "main.c":93:3 80 {*movdi_internal}
     (nil))
(insn 21 19 22 2 (set (reg:SI 4 si)
        (const_int 1 [0x1])) "main.c":93:3 81 {*movsi_internal}
     (nil))
(insn 22 21 23 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [86])) "main.c":93:3 80 {*movdi_internal}
     (nil))
(call_insn 23 22 24 2 (call (mem:QI (symbol_ref:DI ("dir_tester_add_file") [flags 0x41]  <function_decl 0x7fa610b6ee00 dir_tester_add_file>) [0 dir_tester_add_file S1 A8])
        (const_int 0 [0])) "main.c":93:3 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 24 23 25 2 (set (reg:DI 0 ax [88])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [12 tester+0 S8 A64])) "main.c":94:3 80 {*movdi_internal}
     (nil))
(insn 25 24 26 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [88])) "main.c":94:3 80 {*movdi_internal}
     (nil))
(call_insn 26 25 29 2 (call (mem:QI (symbol_ref:DI ("dir_tester_destory") [flags 0x41]  <function_decl 0x7fa610b6ec00 dir_tester_destory>) [0 dir_tester_destory S1 A8])
        (const_int 0 [0])) "main.c":94:3 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       3 [always]  (FALLTHRU) main.c:95:1
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 1, flags: (RTL, MODIFIED)
;;  pred:       2 [always]  (FALLTHRU) main.c:95:1
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(note 29 26 30 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 31 3 (const_int 0 [0]) "main.c":95:1 928 {nop}
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(note 31 30 0 NOTE_INSN_DELETED)

;; Function test_dir_add_dir (test_dir_add_dir, funcdef_no=14, decl_uid=3357, cgraph_uid=15, symbol_order=15)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 5:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (1) rBwBz {*call_value}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 9:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 10:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 11:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 12:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 16:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 17:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 18:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 20:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 22:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 23:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 24:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 25:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 28:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 29:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 31:  (0) rBwBz {*call}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #1: **********

EBB 2 3

********** Pseudo live ranges #1: **********

  BB 3
   Insn 35: point = 0, n_alt = -1
  BB 2
   Insn 31: point = 0, n_alt = 0
   Insn 30: point = 0, n_alt = -2
   Insn 29: point = 1, n_alt = 3
   Insn 28: point = 2, n_alt = 0
   Insn 27: point = 2, n_alt = -2
   Insn 26: point = 3, n_alt = -2
   Insn 25: point = 4, n_alt = 4
   Insn 24: point = 5, n_alt = 0
   Insn 23: point = 5, n_alt = 3
   Insn 22: point = 6, n_alt = 0
   Insn 21: point = 6, n_alt = -2
   Insn 20: point = 7, n_alt = 0
   Insn 19: point = 7, n_alt = -2
   Insn 18: point = 8, n_alt = 4
   Insn 17: point = 9, n_alt = 0
   Insn 16: point = 9, n_alt = 3
   Insn 15: point = 10, n_alt = 0
   Insn 14: point = 10, n_alt = -2
   Insn 13: point = 11, n_alt = -2
   Insn 12: point = 12, n_alt = 4
   Insn 11: point = 13, n_alt = 0
   Insn 10: point = 13, n_alt = 3
   Insn 9: point = 14, n_alt = 5
   Insn 8: point = 15, n_alt = -2
   Insn 7: point = 16, n_alt = 0
   Insn 6: point = 16, n_alt = -2
   Insn 5: point = 17, n_alt = 4
 r82: [16..17]
 r83: [14..15]
 r84: [10..13]
 r85: [11..12]
 r86: [6..9]
 r87: [7..8]
 r88: [2..5]
 r89: [3..4]
 r90: [0..1]
Compressing live ranges: from 18 to 12 - 66%
Ranges after the compression:
 r82: [10..11]
 r83: [8..9]
 r84: [6..7]
 r85: [6..7]
 r86: [4..5]
 r87: [4..5]
 r88: [2..3]
 r89: [2..3]
 r90: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 6
	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
changing reg in insn 5
changing reg in insn 6
changing reg in insn 8
changing reg in insn 9
changing reg in insn 10
changing reg in insn 14
changing reg in insn 12
changing reg in insn 13
changing reg in insn 16
changing reg in insn 21
changing reg in insn 18
changing reg in insn 19
changing reg in insn 23
changing reg in insn 27
changing reg in insn 25
changing reg in insn 26
changing reg in insn 29
changing reg in insn 30
deleting insn with uid = 8.
deleting insn with uid = 19.
starting the processing of deferred insns
ending the processing of deferred insns


test_dir_add_dir

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;;  ref usage 	r0={11d,6u} r1={9d,3u} r2={9d,3u} r4={9d,3u} r5={11d,5u} r6={1d,8u} r7={1d,8u} r8={5d} r9={5d} r10={5d} r11={5d} r12={5d} r13={5d} r14={5d} r15={5d} r17={5d} r18={5d} r19={1d,1u} r20={6d} r21={6d} r22={6d} r23={6d} r24={6d} r25={6d} r26={6d} r27={6d} r28={5d} r29={5d} r30={5d} r31={5d} r32={5d} r33={5d} r34={5d} r35={5d} r36={6d} r37={6d} r38={5d} r39={5d} r44={5d} r45={5d} r46={5d} r47={5d} r48={5d} r49={5d} r50={5d} r51={5d} r52={5d} r53={5d} r54={5d} r55={5d} r56={5d} r57={5d} r58={5d} r59={5d} r60={5d} r61={5d} r62={5d} r63={5d} r64={5d} r65={5d} r66={5d} r67={5d} r68={5d} r69={5d} r70={5d} r71={5d} r72={5d} r73={5d} r74={5d} r75={5d} 
;;    total ref usage 409{372d,37u,0e} in 26{21 regular + 5 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 82 83 84 85 86 87 88 89 90
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:DI 0 ax [82])
        (symbol_ref/f:DI ("*.LC16") [flags 0x2]  <var_decl 0x7fa6108bd5a0 *.LC16>)) "main.c":98:31 80 {*movdi_internal}
     (nil))
(insn 6 5 7 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [82])) "main.c":98:31 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC16") [flags 0x2]  <var_decl 0x7fa6108bd5a0 *.LC16>)
        (nil)))
(call_insn 7 6 9 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("dir_tester_create") [flags 0x41]  <function_decl 0x7fa610b6eb00 dir_tester_create>) [0 dir_tester_create S1 A8])
            (const_int 0 [0]))) "main.c":98:31 909 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 9 7 10 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [12 tester+0 S8 A64])
        (reg:DI 0 ax [83])) "main.c":98:31 80 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:DI 0 ax [84])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [12 tester+0 S8 A64])) "main.c":99:3 80 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "main.c":99:3 81 {*movsi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:DI 2 cx [85])
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7fa6108a16c0 *.LC1>)) "main.c":99:3 80 {*movdi_internal}
     (nil))
(insn 13 12 14 2 (set (reg:DI 4 si)
        (reg:DI 2 cx [85])) "main.c":99:3 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7fa6108a16c0 *.LC1>)
        (nil)))
(insn 14 13 15 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [84])) "main.c":99:3 80 {*movdi_internal}
     (nil))
(call_insn 15 14 16 2 (call (mem:QI (symbol_ref:DI ("dir_tester_add_subdir") [flags 0x41]  <function_decl 0x7fa610b6ef00 dir_tester_add_subdir>) [0 dir_tester_add_subdir S1 A8])
        (const_int 0 [0])) "main.c":99:3 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 16 15 17 2 (set (reg:DI 0 ax [86])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [12 tester+0 S8 A64])) "main.c":100:3 80 {*movdi_internal}
     (nil))
(insn 17 16 18 2 (set (reg:SI 2 cx)
        (const_int 0 [0])) "main.c":100:3 81 {*movsi_internal}
     (nil))
(insn 18 17 20 2 (set (reg:DI 1 dx [87])
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7fa6108a16c0 *.LC1>)) "main.c":100:3 80 {*movdi_internal}
     (nil))
(insn 20 18 21 2 (set (reg:SI 4 si)
        (const_int 1 [0x1])) "main.c":100:3 81 {*movsi_internal}
     (nil))
(insn 21 20 22 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [86])) "main.c":100:3 80 {*movdi_internal}
     (nil))
(call_insn 22 21 23 2 (call (mem:QI (symbol_ref:DI ("dir_tester_add_file") [flags 0x41]  <function_decl 0x7fa610b6ee00 dir_tester_add_file>) [0 dir_tester_add_file S1 A8])
        (const_int 0 [0])) "main.c":100:3 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 23 22 24 2 (set (reg:DI 0 ax [88])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [12 tester+0 S8 A64])) "main.c":101:3 80 {*movdi_internal}
     (nil))
(insn 24 23 25 2 (set (reg:SI 1 dx)
        (const_int 0 [0])) "main.c":101:3 81 {*movsi_internal}
     (nil))
(insn 25 24 26 2 (set (reg:DI 2 cx [89])
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7fa6108a16c0 *.LC1>)) "main.c":101:3 80 {*movdi_internal}
     (nil))
(insn 26 25 27 2 (set (reg:DI 4 si)
        (reg:DI 2 cx [89])) "main.c":101:3 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7fa6108a16c0 *.LC1>)
        (nil)))
(insn 27 26 28 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [88])) "main.c":101:3 80 {*movdi_internal}
     (nil))
(call_insn 28 27 29 2 (call (mem:QI (symbol_ref:DI ("dir_tester_add_subdir") [flags 0x41]  <function_decl 0x7fa610b6ef00 dir_tester_add_subdir>) [0 dir_tester_add_subdir S1 A8])
        (const_int 0 [0])) "main.c":101:3 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 29 28 30 2 (set (reg:DI 0 ax [90])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [12 tester+0 S8 A64])) "main.c":102:3 80 {*movdi_internal}
     (nil))
(insn 30 29 31 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [90])) "main.c":102:3 80 {*movdi_internal}
     (nil))
(call_insn 31 30 34 2 (call (mem:QI (symbol_ref:DI ("dir_tester_destory") [flags 0x41]  <function_decl 0x7fa610b6ec00 dir_tester_destory>) [0 dir_tester_destory S1 A8])
        (const_int 0 [0])) "main.c":102:3 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       3 [always]  (FALLTHRU) main.c:103:1
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 1, flags: (RTL, MODIFIED)
;;  pred:       2 [always]  (FALLTHRU) main.c:103:1
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(note 34 31 35 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 3 (const_int 0 [0]) "main.c":103:1 928 {nop}
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(note 36 35 0 NOTE_INSN_DELETED)

;; Function test_dir_add_delete (test_dir_add_delete, funcdef_no=15, decl_uid=3360, cgraph_uid=16, symbol_order=16)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 5:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (1) rBwBz {*call_value}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 9:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 10:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 11:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 12:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 16:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 17:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 18:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 20:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 22:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 23:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 24:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 25:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 28:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 29:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 30:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 31:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 33:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 35:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 36:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 37:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 38:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 41:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 42:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 43:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 44:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 47:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 48:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 49:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 50:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 53:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 54:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 56:  (0) rBwBz {*call}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #1: **********

EBB 2 3

********** Pseudo live ranges #1: **********

  BB 3
   Insn 60: point = 0, n_alt = -1
  BB 2
   Insn 56: point = 0, n_alt = 0
   Insn 55: point = 0, n_alt = -2
   Insn 54: point = 1, n_alt = 3
   Insn 53: point = 2, n_alt = 0
   Insn 52: point = 2, n_alt = -2
   Insn 51: point = 3, n_alt = -2
   Insn 50: point = 4, n_alt = 4
   Insn 49: point = 5, n_alt = 0
   Insn 48: point = 5, n_alt = 3
   Insn 47: point = 6, n_alt = 0
   Insn 46: point = 6, n_alt = -2
   Insn 45: point = 7, n_alt = -2
   Insn 44: point = 8, n_alt = 4
   Insn 43: point = 9, n_alt = 0
   Insn 42: point = 9, n_alt = 3
   Insn 41: point = 10, n_alt = 0
   Insn 40: point = 10, n_alt = -2
   Insn 39: point = 11, n_alt = -2
   Insn 38: point = 12, n_alt = 4
   Insn 37: point = 13, n_alt = 0
   Insn 36: point = 13, n_alt = 3
   Insn 35: point = 14, n_alt = 0
   Insn 34: point = 14, n_alt = -2
   Insn 33: point = 15, n_alt = 0
   Insn 32: point = 15, n_alt = -2
   Insn 31: point = 16, n_alt = 4
   Insn 30: point = 17, n_alt = 0
   Insn 29: point = 17, n_alt = 3
   Insn 28: point = 18, n_alt = 0
   Insn 27: point = 18, n_alt = -2
   Insn 26: point = 19, n_alt = -2
   Insn 25: point = 20, n_alt = 4
   Insn 24: point = 21, n_alt = 0
   Insn 23: point = 21, n_alt = 3
   Insn 22: point = 22, n_alt = 0
   Insn 21: point = 22, n_alt = -2
   Insn 20: point = 23, n_alt = 0
   Insn 19: point = 23, n_alt = -2
   Insn 18: point = 24, n_alt = 4
   Insn 17: point = 25, n_alt = 0
   Insn 16: point = 25, n_alt = 3
   Insn 15: point = 26, n_alt = 0
   Insn 14: point = 26, n_alt = -2
   Insn 13: point = 27, n_alt = -2
   Insn 12: point = 28, n_alt = 4
   Insn 11: point = 29, n_alt = 0
   Insn 10: point = 29, n_alt = 3
   Insn 9: point = 30, n_alt = 5
   Insn 8: point = 31, n_alt = -2
   Insn 7: point = 32, n_alt = 0
   Insn 6: point = 32, n_alt = -2
   Insn 5: point = 33, n_alt = 4
 r82: [32..33]
 r83: [30..31]
 r84: [26..29]
 r85: [27..28]
 r86: [22..25]
 r87: [23..24]
 r88: [18..21]
 r89: [19..20]
 r90: [14..17]
 r91: [15..16]
 r92: [10..13]
 r93: [11..12]
 r94: [6..9]
 r95: [7..8]
 r96: [2..5]
 r97: [3..4]
 r98: [0..1]
Compressing live ranges: from 34 to 20 - 58%
Ranges after the compression:
 r82: [18..19]
 r83: [16..17]
 r84: [14..15]
 r85: [14..15]
 r86: [12..13]
 r87: [12..13]
 r88: [10..11]
 r89: [10..11]
 r90: [8..9]
 r91: [8..9]
 r92: [6..7]
 r93: [6..7]
 r94: [4..5]
 r95: [4..5]
 r96: [2..3]
 r97: [2..3]
 r98: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 6
	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
changing reg in insn 5
changing reg in insn 6
changing reg in insn 8
changing reg in insn 9
changing reg in insn 10
changing reg in insn 14
changing reg in insn 12
changing reg in insn 13
changing reg in insn 16
changing reg in insn 21
changing reg in insn 18
changing reg in insn 19
changing reg in insn 23
changing reg in insn 27
changing reg in insn 25
changing reg in insn 26
changing reg in insn 29
changing reg in insn 34
changing reg in insn 31
changing reg in insn 32
changing reg in insn 36
changing reg in insn 40
changing reg in insn 38
changing reg in insn 39
changing reg in insn 42
changing reg in insn 46
changing reg in insn 44
changing reg in insn 45
changing reg in insn 48
changing reg in insn 52
changing reg in insn 50
changing reg in insn 51
changing reg in insn 54
changing reg in insn 55
deleting insn with uid = 8.
deleting insn with uid = 19.
deleting insn with uid = 32.
starting the processing of deferred insns
ending the processing of deferred insns


test_dir_add_delete

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;;  ref usage 	r0={19d,10u} r1={17d,7u} r2={17d,7u} r4={17d,7u} r5={19d,9u} r6={1d,12u} r7={1d,12u} r8={9d} r9={9d} r10={9d} r11={9d} r12={9d} r13={9d} r14={9d} r15={9d} r17={9d} r18={9d} r19={1d,1u} r20={10d} r21={10d} r22={10d} r23={10d} r24={10d} r25={10d} r26={10d} r27={10d} r28={9d} r29={9d} r30={9d} r31={9d} r32={9d} r33={9d} r34={9d} r35={9d} r36={10d} r37={10d} r38={9d} r39={9d} r44={9d} r45={9d} r46={9d} r47={9d} r48={9d} r49={9d} r50={9d} r51={9d} r52={9d} r53={9d} r54={9d} r55={9d} r56={9d} r57={9d} r58={9d} r59={9d} r60={9d} r61={9d} r62={9d} r63={9d} r64={9d} r65={9d} r66={9d} r67={9d} r68={9d} r69={9d} r70={9d} r71={9d} r72={9d} r73={9d} r74={9d} r75={9d} 
;;    total ref usage 725{660d,65u,0e} in 50{41 regular + 9 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:DI 0 ax [82])
        (symbol_ref/f:DI ("*.LC17") [flags 0x2]  <var_decl 0x7fa6108bd990 *.LC17>)) "main.c":106:31 80 {*movdi_internal}
     (nil))
(insn 6 5 7 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [82])) "main.c":106:31 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC17") [flags 0x2]  <var_decl 0x7fa6108bd990 *.LC17>)
        (nil)))
(call_insn 7 6 9 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("dir_tester_create") [flags 0x41]  <function_decl 0x7fa610b6eb00 dir_tester_create>) [0 dir_tester_create S1 A8])
            (const_int 0 [0]))) "main.c":106:31 909 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 9 7 10 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [12 tester+0 S8 A64])
        (reg:DI 0 ax [83])) "main.c":106:31 80 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:DI 0 ax [84])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [12 tester+0 S8 A64])) "main.c":107:3 80 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "main.c":107:3 81 {*movsi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:DI 2 cx [85])
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7fa6108a16c0 *.LC1>)) "main.c":107:3 80 {*movdi_internal}
     (nil))
(insn 13 12 14 2 (set (reg:DI 4 si)
        (reg:DI 2 cx [85])) "main.c":107:3 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7fa6108a16c0 *.LC1>)
        (nil)))
(insn 14 13 15 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [84])) "main.c":107:3 80 {*movdi_internal}
     (nil))
(call_insn 15 14 16 2 (call (mem:QI (symbol_ref:DI ("dir_tester_add_subdir") [flags 0x41]  <function_decl 0x7fa610b6ef00 dir_tester_add_subdir>) [0 dir_tester_add_subdir S1 A8])
        (const_int 0 [0])) "main.c":107:3 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 16 15 17 2 (set (reg:DI 0 ax [86])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [12 tester+0 S8 A64])) "main.c":108:3 80 {*movdi_internal}
     (nil))
(insn 17 16 18 2 (set (reg:SI 2 cx)
        (const_int 0 [0])) "main.c":108:3 81 {*movsi_internal}
     (nil))
(insn 18 17 20 2 (set (reg:DI 1 dx [87])
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7fa6108a16c0 *.LC1>)) "main.c":108:3 80 {*movdi_internal}
     (nil))
(insn 20 18 21 2 (set (reg:SI 4 si)
        (const_int 1 [0x1])) "main.c":108:3 81 {*movsi_internal}
     (nil))
(insn 21 20 22 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [86])) "main.c":108:3 80 {*movdi_internal}
     (nil))
(call_insn 22 21 23 2 (call (mem:QI (symbol_ref:DI ("dir_tester_add_file") [flags 0x41]  <function_decl 0x7fa610b6ee00 dir_tester_add_file>) [0 dir_tester_add_file S1 A8])
        (const_int 0 [0])) "main.c":108:3 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 23 22 24 2 (set (reg:DI 0 ax [88])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [12 tester+0 S8 A64])) "main.c":109:3 80 {*movdi_internal}
     (nil))
(insn 24 23 25 2 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "main.c":109:3 81 {*movsi_internal}
     (nil))
(insn 25 24 26 2 (set (reg:DI 2 cx [89])
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7fa6108a16c0 *.LC1>)) "main.c":109:3 80 {*movdi_internal}
     (nil))
(insn 26 25 27 2 (set (reg:DI 4 si)
        (reg:DI 2 cx [89])) "main.c":109:3 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7fa6108a16c0 *.LC1>)
        (nil)))
(insn 27 26 28 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [88])) "main.c":109:3 80 {*movdi_internal}
     (nil))
(call_insn 28 27 29 2 (call (mem:QI (symbol_ref:DI ("dir_tester_delete") [flags 0x41]  <function_decl 0x7fa610b72000 dir_tester_delete>) [0 dir_tester_delete S1 A8])
        (const_int 0 [0])) "main.c":109:3 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 29 28 30 2 (set (reg:DI 0 ax [90])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [12 tester+0 S8 A64])) "main.c":110:3 80 {*movdi_internal}
     (nil))
(insn 30 29 31 2 (set (reg:SI 2 cx)
        (const_int 1 [0x1])) "main.c":110:3 81 {*movsi_internal}
     (nil))
(insn 31 30 33 2 (set (reg:DI 1 dx [91])
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7fa6108a16c0 *.LC1>)) "main.c":110:3 80 {*movdi_internal}
     (nil))
(insn 33 31 34 2 (set (reg:SI 4 si)
        (const_int 1 [0x1])) "main.c":110:3 81 {*movsi_internal}
     (nil))
(insn 34 33 35 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [90])) "main.c":110:3 80 {*movdi_internal}
     (nil))
(call_insn 35 34 36 2 (call (mem:QI (symbol_ref:DI ("dir_tester_add_file") [flags 0x41]  <function_decl 0x7fa610b6ee00 dir_tester_add_file>) [0 dir_tester_add_file S1 A8])
        (const_int 0 [0])) "main.c":110:3 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 36 35 37 2 (set (reg:DI 0 ax [92])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [12 tester+0 S8 A64])) "main.c":111:3 80 {*movdi_internal}
     (nil))
(insn 37 36 38 2 (set (reg:SI 1 dx)
        (const_int 0 [0])) "main.c":111:3 81 {*movsi_internal}
     (nil))
(insn 38 37 39 2 (set (reg:DI 2 cx [93])
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7fa6108a16c0 *.LC1>)) "main.c":111:3 80 {*movdi_internal}
     (nil))
(insn 39 38 40 2 (set (reg:DI 4 si)
        (reg:DI 2 cx [93])) "main.c":111:3 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7fa6108a16c0 *.LC1>)
        (nil)))
(insn 40 39 41 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [92])) "main.c":111:3 80 {*movdi_internal}
     (nil))
(call_insn 41 40 42 2 (call (mem:QI (symbol_ref:DI ("dir_tester_add_subdir") [flags 0x41]  <function_decl 0x7fa610b6ef00 dir_tester_add_subdir>) [0 dir_tester_add_subdir S1 A8])
        (const_int 0 [0])) "main.c":111:3 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 42 41 43 2 (set (reg:DI 0 ax [94])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [12 tester+0 S8 A64])) "main.c":112:3 80 {*movdi_internal}
     (nil))
(insn 43 42 44 2 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "main.c":112:3 81 {*movsi_internal}
     (nil))
(insn 44 43 45 2 (set (reg:DI 2 cx [95])
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7fa6108a16c0 *.LC1>)) "main.c":112:3 80 {*movdi_internal}
     (nil))
(insn 45 44 46 2 (set (reg:DI 4 si)
        (reg:DI 2 cx [95])) "main.c":112:3 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7fa6108a16c0 *.LC1>)
        (nil)))
(insn 46 45 47 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [94])) "main.c":112:3 80 {*movdi_internal}
     (nil))
(call_insn 47 46 48 2 (call (mem:QI (symbol_ref:DI ("dir_tester_delete") [flags 0x41]  <function_decl 0x7fa610b72000 dir_tester_delete>) [0 dir_tester_delete S1 A8])
        (const_int 0 [0])) "main.c":112:3 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 48 47 49 2 (set (reg:DI 0 ax [96])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [12 tester+0 S8 A64])) "main.c":113:3 80 {*movdi_internal}
     (nil))
(insn 49 48 50 2 (set (reg:SI 1 dx)
        (const_int 0 [0])) "main.c":113:3 81 {*movsi_internal}
     (nil))
(insn 50 49 51 2 (set (reg:DI 2 cx [97])
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7fa6108a16c0 *.LC1>)) "main.c":113:3 80 {*movdi_internal}
     (nil))
(insn 51 50 52 2 (set (reg:DI 4 si)
        (reg:DI 2 cx [97])) "main.c":113:3 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7fa6108a16c0 *.LC1>)
        (nil)))
(insn 52 51 53 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [96])) "main.c":113:3 80 {*movdi_internal}
     (nil))
(call_insn 53 52 54 2 (call (mem:QI (symbol_ref:DI ("dir_tester_delete") [flags 0x41]  <function_decl 0x7fa610b72000 dir_tester_delete>) [0 dir_tester_delete S1 A8])
        (const_int 0 [0])) "main.c":113:3 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 54 53 55 2 (set (reg:DI 0 ax [98])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [12 tester+0 S8 A64])) "main.c":114:3 80 {*movdi_internal}
     (nil))
(insn 55 54 56 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [98])) "main.c":114:3 80 {*movdi_internal}
     (nil))
(call_insn 56 55 59 2 (call (mem:QI (symbol_ref:DI ("dir_tester_destory") [flags 0x41]  <function_decl 0x7fa610b6ec00 dir_tester_destory>) [0 dir_tester_destory S1 A8])
        (const_int 0 [0])) "main.c":114:3 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       3 [always]  (FALLTHRU) main.c:115:1
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 1, flags: (RTL, MODIFIED)
;;  pred:       2 [always]  (FALLTHRU) main.c:115:1
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(note 59 56 60 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 60 59 61 3 (const_int 0 [0]) "main.c":115:1 928 {nop}
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(note 61 60 0 NOTE_INSN_DELETED)

;; Function test_dir_size (test_dir_size, funcdef_no=16, decl_uid=3363, cgraph_uid=17, symbol_order=17)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=48, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 19 to 7 (offset=32, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
            2 Scratch win: reject+=2
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3:  (0) =m  (1) m  (2) =&r {stack_protect_set_1_di}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 6:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 7:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (1) rBwBz {*call_value}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 11:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=2,overall=22,losers=2 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 12:  (0) m  (1) rn {*movhi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 13:  (0) m  (1) re {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            alt=1: Bad operand -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 17:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 18:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 19:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (0) rBwBz {*call}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 24:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 26:  (0) =qm  (1) %0  (2) qn {*addqi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=4,overall=21,losers=2,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=7,overall=27,losers=2 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 28:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 29:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 35:  (0) rm  (1) re {*cmpsi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 38:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 39:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 41:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 42:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 43:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 45:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            alt=1: Bad operand -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 46:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 47:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 48:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 50:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 52:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 53:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 54:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 56:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 57:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 58:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 60:  (0) rBwBz {*call}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=2,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=4,overall=22,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 61:  (0) m  (1) qn {*movqi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 62:  (0) m  (1) re {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            alt=1: Bad operand -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 66:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 67:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 68:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 71:  (0) rBwBz {*call}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 72:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 74:  (0) =qm  (1) %0  (2) qn {*addqi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=4,overall=21,losers=2,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=5,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            alt=7,overall=27,losers=2 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 76:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 77:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 83:  (0) rm  (1) re {*cmpsi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 86:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 87:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 89:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 90:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 91:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 93:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 94:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 96:  (0) rBwBz {*call}
            3 Scratch win: reject+=2
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 98:  (1) m  (2) m  (3) =&r {stack_protect_test_1_di}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 100:  (0) rBwBz {*call}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #1: **********

EBB 2
EBB 3
EBB 4 5
EBB 6
EBB 7 8 9
EBB 10

********** Pseudo live ranges #1: **********

  BB 9
   Insn 100: point = 0, n_alt = 0
  BB 10
  BB 8
   Insn 99: point = 0, n_alt = -1
   Insn 98: point = 0, n_alt = 0
   Insn 106: point = 2, n_alt = -1
   Insn 96: point = 2, n_alt = 0
   Insn 95: point = 2, n_alt = -2
   Insn 94: point = 3, n_alt = 3
   Insn 93: point = 4, n_alt = 0
   Insn 92: point = 4, n_alt = -2
   Insn 91: point = 5, n_alt = 0
   Insn 90: point = 5, n_alt = 3
   Insn 89: point = 6, n_alt = 0
   Insn 88: point = 6, n_alt = -2
   Insn 87: point = 7, n_alt = 0
   Insn 86: point = 7, n_alt = 3
  BB 7
   Insn 84: point = 8, n_alt = -1
   Insn 83: point = 8, n_alt = 0
  BB 5
   Insn 109: point = 8, n_alt = -1
   Insn 62: point = 8, n_alt = 1
   Insn 61: point = 8, n_alt = 8
   Insn 60: point = 8, n_alt = 0
   Insn 59: point = 8, n_alt = -2
   Insn 58: point = 9, n_alt = 0
   Insn 57: point = 9, n_alt = 3
   Insn 56: point = 10, n_alt = 0
   Insn 55: point = 10, n_alt = -2
   Insn 54: point = 11, n_alt = 0
   Insn 53: point = 11, n_alt = 3
   Insn 52: point = 12, n_alt = 0
   Insn 51: point = 12, n_alt = -2
   Insn 50: point = 13, n_alt = 0
   Insn 49: point = 13, n_alt = -2
   Insn 48: point = 14, n_alt = 0
   Insn 47: point = 14, n_alt = 3
   Insn 46: point = 15, n_alt = 3
   Insn 45: point = 16, n_alt = 0
   Insn 44: point = 16, n_alt = -2
   Insn 43: point = 17, n_alt = 0
   Insn 42: point = 17, n_alt = 3
   Insn 41: point = 18, n_alt = 0
   Insn 40: point = 18, n_alt = -2
   Insn 39: point = 19, n_alt = 0
   Insn 38: point = 19, n_alt = 3
  BB 4
   Insn 36: point = 20, n_alt = -1
   Insn 35: point = 20, n_alt = 0
  BB 2
   Insn 107: point = 20, n_alt = -1
   Insn 13: point = 20, n_alt = 1
   Insn 12: point = 20, n_alt = 3
   Insn 11: point = 20, n_alt = 5
   Insn 10: point = 21, n_alt = -2
   Insn 9: point = 22, n_alt = 0
   Insn 8: point = 22, n_alt = -2
   Insn 7: point = 23, n_alt = 4
   Insn 6: point = 24, n_alt = 1
   Insn 3: point = 24, n_alt = 0
  BB 3
   Insn 29: point = 26, n_alt = 0
   Insn 28: point = 26, n_alt = 8
   Insn 27: point = 27, n_alt = -2
   Insn 26: point = 29, n_alt = 0
   Insn 25: point = 31, n_alt = -2
   Insn 24: point = 33, n_alt = 4
   Insn 23: point = 34, n_alt = 0
   Insn 22: point = 34, n_alt = -2
   Insn 21: point = 35, n_alt = 0
   Insn 20: point = 35, n_alt = -2
   Insn 19: point = 36, n_alt = 0
   Insn 18: point = 36, n_alt = 3
   Insn 17: point = 37, n_alt = 3
  BB 6
   Insn 77: point = 38, n_alt = 0
   Insn 76: point = 38, n_alt = 8
   Insn 75: point = 39, n_alt = -2
   Insn 74: point = 41, n_alt = 0
   Insn 73: point = 43, n_alt = -2
   Insn 72: point = 45, n_alt = 4
   Insn 71: point = 46, n_alt = 0
   Insn 70: point = 46, n_alt = -2
   Insn 69: point = 47, n_alt = -2
   Insn 68: point = 48, n_alt = 0
   Insn 67: point = 48, n_alt = 3
   Insn 66: point = 49, n_alt = 3
 r82: [32..33]
 r83: [30..31]
 r84: [28..29]
 r85: [26..27]
 r86: [44..45]
 r87: [42..43]
 r88: [40..41]
 r89: [38..39]
 r90: [22..23]
 r91: [20..21]
 r92: [35..37]
 r93: [34..36]
 r94: [18..19]
 r95: [16..17]
 r96: [13..15]
 r97: [12..14]
 r98: [10..11]
 r99: [8..9]
 r100: [47..49]
 r101: [46..48]
 r102: [6..7]
 r103: [4..5]
 r104: [2..3]
 r105: [24..25]
 r106: [0..1]
Compressing live ranges: from 50 to 44 - 88%
Ranges after the compression:
 r82: [30..31]
 r83: [28..29]
 r84: [26..27]
 r85: [24..25]
 r86: [40..41]
 r87: [38..39]
 r88: [36..37]
 r89: [34..35]
 r90: [20..21]
 r91: [18..19]
 r92: [32..33]
 r93: [32..33]
 r94: [16..17]
 r95: [14..15]
 r96: [12..13]
 r97: [12..13]
 r98: [10..11]
 r99: [8..9]
 r100: [42..43]
 r101: [42..43]
 r102: [6..7]
 r103: [4..5]
 r104: [2..3]
 r105: [22..23]
 r106: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 6
	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=48, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 19 to 7 (offset=32, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
changing reg in insn 24
changing reg in insn 25
changing reg in insn 25
changing reg in insn 26
changing reg in insn 26
changing reg in insn 27
changing reg in insn 27
changing reg in insn 28
changing reg in insn 72
changing reg in insn 73
changing reg in insn 73
changing reg in insn 74
changing reg in insn 74
changing reg in insn 75
changing reg in insn 75
changing reg in insn 76
changing reg in insn 7
changing reg in insn 8
changing reg in insn 10
changing reg in insn 11
changing reg in insn 17
changing reg in insn 20
changing reg in insn 18
changing reg in insn 22
changing reg in insn 38
changing reg in insn 40
changing reg in insn 42
changing reg in insn 44
changing reg in insn 46
changing reg in insn 49
changing reg in insn 47
changing reg in insn 51
changing reg in insn 53
changing reg in insn 55
changing reg in insn 57
changing reg in insn 59
changing reg in insn 66
changing reg in insn 69
changing reg in insn 67
changing reg in insn 70
changing reg in insn 86
changing reg in insn 88
changing reg in insn 90
changing reg in insn 92
changing reg in insn 94
changing reg in insn 95
changing reg in insn 3
changing reg in insn 98
deleting insn with uid = 10.
deleting insn with uid = 20.
deleting insn with uid = 25.
deleting insn with uid = 27.
deleting insn with uid = 49.
deleting insn with uid = 73.
deleting insn with uid = 75.
starting the processing of deferred insns
ending the processing of deferred insns


test_dir_size

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;;  ref usage 	r0={30d,16u} r1={16d,3u} r2={16d,3u} r4={22d,9u} r5={24d,11u} r6={1d,41u} r7={1d,22u} r8={12d} r9={12d} r10={12d} r11={12d} r12={12d} r13={12d} r14={12d} r15={12d} r17={23d,3u} r18={12d} r19={1d,1u} r20={13d} r21={13d} r22={13d} r23={13d} r24={13d} r25={13d} r26={13d} r27={13d} r28={12d} r29={12d} r30={12d} r31={12d} r32={12d} r33={12d} r34={12d} r35={12d} r36={13d} r37={13d} r38={12d} r39={12d} r44={12d} r45={12d} r46={12d} r47={12d} r48={12d} r49={12d} r50={12d} r51={12d} r52={12d} r53={12d} r54={12d} r55={12d} r56={12d} r57={12d} r58={12d} r59={12d} r60={12d} r61={12d} r62={12d} r63={12d} r64={12d} r65={12d} r66={12d} r67={12d} r68={12d} r69={12d} r70={12d} r71={12d} r72={12d} r73={12d} r74={12d} r75={12d} 
;;    total ref usage 985{876d,109u,0e} in 73{61 regular + 12 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 90 91 105
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 4 3 2 NOTE_INSN_FUNCTION_BEG)
(insn 3 2 6 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 6 bp)
                        (const_int -8 [0xfffffffffffffff8])) [9 D.3558+0 S8 A64])
                (unspec:DI [
                        (mem/v/f:DI (const_int 40 [0x28]) [0 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_SET))
            (set (reg:DI 0 ax [105])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "main.c":117:22 1265 {stack_protect_set_1_di}
     (nil))
(insn 6 3 7 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 i+0 S4 A32])
        (const_int 0 [0])) "main.c":118:7 81 {*movsi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:DI 0 ax [90])
        (symbol_ref/f:DI ("*.LC18") [flags 0x2]  <var_decl 0x7fa6108bdd80 *.LC18>)) "main.c":119:31 80 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [90])) "main.c":119:31 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC18") [flags 0x2]  <var_decl 0x7fa6108bdd80 *.LC18>)
        (nil)))
(call_insn 9 8 11 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("dir_tester_create") [flags 0x41]  <function_decl 0x7fa610b6eb00 dir_tester_create>) [0 dir_tester_create S1 A8])
            (const_int 0 [0]))) "main.c":119:31 909 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 11 9 12 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [12 tester+0 S8 A64])
        (reg:DI 0 ax [91])) "main.c":119:31 80 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (set (mem/c:HI (plus:DI (reg/f:DI 6 bp)
                (const_int -10 [0xfffffffffffffff6])) [0 name+0 S2 A16])
        (const_int 97 [0x61])) "main.c":120:8 82 {*movhi_internal}
     (nil))
(insn 13 12 107 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 i+0 S4 A32])
        (const_int 0 [0])) "main.c":121:10 81 {*movsi_internal}
     (nil))
(jump_insn 107 13 108 2 (set (pc)
        (label_ref 30)) "main.c":121:3 892 {jump}
     (nil)
 -> 30)
;;  succ:       4 [always]  main.c:121:3
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 108 107 32)
;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       4
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 82 83 84 85 92 93
(code_label 32 108 16 3 19 (nil) [1 uses])
(note 16 32 17 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 3 (parallel [
            (set (reg:DI 1 dx [92])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -10 [0xfffffffffffffff6])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":122:5 230 {*adddi_1}
     (nil))
(insn 18 17 19 3 (set (reg:DI 0 ax [93])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [12 tester+0 S8 A64])) "main.c":122:5 80 {*movdi_internal}
     (nil))
(insn 19 18 21 3 (set (reg:SI 2 cx)
        (const_int 1 [0x1])) "main.c":122:5 81 {*movsi_internal}
     (nil))
(insn 21 19 22 3 (set (reg:SI 4 si)
        (const_int 1 [0x1])) "main.c":122:5 81 {*movsi_internal}
     (nil))
(insn 22 21 23 3 (set (reg:DI 5 di)
        (reg:DI 0 ax [93])) "main.c":122:5 80 {*movdi_internal}
     (nil))
(call_insn 23 22 24 3 (call (mem:QI (symbol_ref:DI ("dir_tester_add_file") [flags 0x41]  <function_decl 0x7fa610b6ee00 dir_tester_add_file>) [0 dir_tester_add_file S1 A8])
        (const_int 0 [0])) "main.c":122:5 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 24 23 26 3 (set (reg:QI 0 ax [orig:82 _1 ] [82])
        (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -10 [0xfffffffffffffff6])) [0 name[0]+0 S1 A16])) "main.c":123:9 83 {*movqi_internal}
     (nil))
(insn 26 24 28 3 (parallel [
            (set (reg:QI 0 ax [orig:84 _4 ] [84])
                (plus:QI (reg:QI 0 ax [orig:83 _3 ] [83])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":123:12 233 {*addqi_1}
     (nil))
(insn 28 26 29 3 (set (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -10 [0xfffffffffffffff6])) [0 name[0]+0 S1 A16])
        (reg:QI 0 ax [orig:85 _5 ] [85])) "main.c":123:12 83 {*movqi_internal}
     (nil))
(insn 29 28 30 3 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -28 [0xffffffffffffffe4])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -28 [0xffffffffffffffe4])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":121:24 229 {*addsi_1}
     (nil))
;;  succ:       4 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       3 (FALLTHRU,DFS_BACK)
;;              2 [always]  main.c:121:3
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags]
(code_label 30 29 31 4 18 (nil) [1 uses])
(note 31 30 35 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 35 31 36 4 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -28 [0xffffffffffffffe4])) [1 i+0 S4 A32])
            (const_int 15 [0xf]))) "main.c":121:17 11 {*cmpsi_1}
     (nil))
(jump_insn 36 35 37 4 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 32)
            (pc))) "main.c":121:17 891 {*jcc}
     (nil)
 -> 32)
;;  succ:       3
;;              5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 94 95 96 97 98 99
(note 37 36 38 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 39 5 (set (reg:DI 0 ax [94])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [12 tester+0 S8 A64])) "main.c":125:3 80 {*movdi_internal}
     (nil))
(insn 39 38 40 5 (set (reg:SI 4 si)
        (const_int 16 [0x10])) "main.c":125:3 81 {*movsi_internal}
     (nil))
(insn 40 39 41 5 (set (reg:DI 5 di)
        (reg:DI 0 ax [94])) "main.c":125:3 80 {*movdi_internal}
     (nil))
(call_insn 41 40 42 5 (call (mem:QI (symbol_ref:DI ("dir_tester_size") [flags 0x41]  <function_decl 0x7fa610b72100 dir_tester_size>) [0 dir_tester_size S1 A8])
        (const_int 0 [0])) "main.c":125:3 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 42 41 43 5 (set (reg:DI 0 ax [95])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [12 tester+0 S8 A64])) "main.c":126:3 80 {*movdi_internal}
     (nil))
(insn 43 42 44 5 (set (reg:SI 4 si)
        (const_int 16 [0x10])) "main.c":126:3 81 {*movsi_internal}
     (nil))
(insn 44 43 45 5 (set (reg:DI 5 di)
        (reg:DI 0 ax [95])) "main.c":126:3 80 {*movdi_internal}
     (nil))
(call_insn 45 44 46 5 (call (mem:QI (symbol_ref:DI ("dir_tester_capacity") [flags 0x41]  <function_decl 0x7fa610b72200 dir_tester_capacity>) [0 dir_tester_capacity S1 A8])
        (const_int 0 [0])) "main.c":126:3 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 46 45 47 5 (parallel [
            (set (reg:DI 1 dx [96])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -10 [0xfffffffffffffff6])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":127:3 230 {*adddi_1}
     (nil))
(insn 47 46 48 5 (set (reg:DI 0 ax [97])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [12 tester+0 S8 A64])) "main.c":127:3 80 {*movdi_internal}
     (nil))
(insn 48 47 50 5 (set (reg:SI 2 cx)
        (const_int 1 [0x1])) "main.c":127:3 81 {*movsi_internal}
     (nil))
(insn 50 48 51 5 (set (reg:SI 4 si)
        (const_int 1 [0x1])) "main.c":127:3 81 {*movsi_internal}
     (nil))
(insn 51 50 52 5 (set (reg:DI 5 di)
        (reg:DI 0 ax [97])) "main.c":127:3 80 {*movdi_internal}
     (nil))
(call_insn 52 51 53 5 (call (mem:QI (symbol_ref:DI ("dir_tester_add_file") [flags 0x41]  <function_decl 0x7fa610b6ee00 dir_tester_add_file>) [0 dir_tester_add_file S1 A8])
        (const_int 0 [0])) "main.c":127:3 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 53 52 54 5 (set (reg:DI 0 ax [98])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [12 tester+0 S8 A64])) "main.c":128:3 80 {*movdi_internal}
     (nil))
(insn 54 53 55 5 (set (reg:SI 4 si)
        (const_int 17 [0x11])) "main.c":128:3 81 {*movsi_internal}
     (nil))
(insn 55 54 56 5 (set (reg:DI 5 di)
        (reg:DI 0 ax [98])) "main.c":128:3 80 {*movdi_internal}
     (nil))
(call_insn 56 55 57 5 (call (mem:QI (symbol_ref:DI ("dir_tester_size") [flags 0x41]  <function_decl 0x7fa610b72100 dir_tester_size>) [0 dir_tester_size S1 A8])
        (const_int 0 [0])) "main.c":128:3 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 57 56 58 5 (set (reg:DI 0 ax [99])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [12 tester+0 S8 A64])) "main.c":129:3 80 {*movdi_internal}
     (nil))
(insn 58 57 59 5 (set (reg:SI 4 si)
        (const_int 32 [0x20])) "main.c":129:3 81 {*movsi_internal}
     (nil))
(insn 59 58 60 5 (set (reg:DI 5 di)
        (reg:DI 0 ax [99])) "main.c":129:3 80 {*movdi_internal}
     (nil))
(call_insn 60 59 61 5 (call (mem:QI (symbol_ref:DI ("dir_tester_capacity") [flags 0x41]  <function_decl 0x7fa610b72200 dir_tester_capacity>) [0 dir_tester_capacity S1 A8])
        (const_int 0 [0])) "main.c":129:3 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 61 60 62 5 (set (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -10 [0xfffffffffffffff6])) [0 name[0]+0 S1 A16])
        (const_int 97 [0x61])) "main.c":130:11 83 {*movqi_internal}
     (nil))
(insn 62 61 109 5 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 i+0 S4 A32])
        (const_int 0 [0])) "main.c":131:10 81 {*movsi_internal}
     (nil))
(jump_insn 109 62 110 5 (set (pc)
        (label_ref 78)) "main.c":131:3 892 {jump}
     (nil)
 -> 78)
;;  succ:       7 [always]  main.c:131:3
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 110 109 80)
;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 7, flags: (RTL, MODIFIED)
;;  pred:       7
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 86 87 88 89 100 101
(code_label 80 110 65 6 21 (nil) [1 uses])
(note 65 80 66 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 66 65 67 6 (parallel [
            (set (reg:DI 2 cx [100])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -10 [0xfffffffffffffff6])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":132:5 230 {*adddi_1}
     (nil))
(insn 67 66 68 6 (set (reg:DI 0 ax [101])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [12 tester+0 S8 A64])) "main.c":132:5 80 {*movdi_internal}
     (nil))
(insn 68 67 69 6 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "main.c":132:5 81 {*movsi_internal}
     (nil))
(insn 69 68 70 6 (set (reg:DI 4 si)
        (reg:DI 2 cx [100])) "main.c":132:5 80 {*movdi_internal}
     (nil))
(insn 70 69 71 6 (set (reg:DI 5 di)
        (reg:DI 0 ax [101])) "main.c":132:5 80 {*movdi_internal}
     (nil))
(call_insn 71 70 72 6 (call (mem:QI (symbol_ref:DI ("dir_tester_delete") [flags 0x41]  <function_decl 0x7fa610b72000 dir_tester_delete>) [0 dir_tester_delete S1 A8])
        (const_int 0 [0])) "main.c":132:5 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 72 71 74 6 (set (reg:QI 0 ax [orig:86 _6 ] [86])
        (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -10 [0xfffffffffffffff6])) [0 name[0]+0 S1 A16])) "main.c":133:9 83 {*movqi_internal}
     (nil))
(insn 74 72 76 6 (parallel [
            (set (reg:QI 0 ax [orig:88 _9 ] [88])
                (plus:QI (reg:QI 0 ax [orig:87 _8 ] [87])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":133:12 233 {*addqi_1}
     (nil))
(insn 76 74 77 6 (set (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -10 [0xfffffffffffffff6])) [0 name[0]+0 S1 A16])
        (reg:QI 0 ax [orig:89 _10 ] [89])) "main.c":133:12 83 {*movqi_internal}
     (nil))
(insn 77 76 78 6 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -28 [0xffffffffffffffe4])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -28 [0xffffffffffffffe4])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":131:24 229 {*addsi_1}
     (nil))
;;  succ:       7 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 7, loop depth 0, maybe hot
;;  prev block 6, next block 8, flags: (RTL, MODIFIED)
;;  pred:       6 (FALLTHRU,DFS_BACK)
;;              5 [always]  main.c:131:3
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags]
(code_label 78 77 79 7 20 (nil) [1 uses])
(note 79 78 83 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 83 79 84 7 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -28 [0xffffffffffffffe4])) [1 i+0 S4 A32])
            (const_int 13 [0xd]))) "main.c":131:17 11 {*cmpsi_1}
     (nil))
(jump_insn 84 83 85 7 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 80)
            (pc))) "main.c":131:17 891 {*jcc}
     (nil)
 -> 80)
;;  succ:       6
;;              8 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 8, loop depth 0, maybe hot
;;  prev block 7, next block 9, flags: (RTL, MODIFIED)
;;  pred:       7 (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 102 103 104 106
(note 85 84 86 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 86 85 87 8 (set (reg:DI 0 ax [102])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [12 tester+0 S8 A64])) "main.c":135:3 80 {*movdi_internal}
     (nil))
(insn 87 86 88 8 (set (reg:SI 4 si)
        (const_int 3 [0x3])) "main.c":135:3 81 {*movsi_internal}
     (nil))
(insn 88 87 89 8 (set (reg:DI 5 di)
        (reg:DI 0 ax [102])) "main.c":135:3 80 {*movdi_internal}
     (nil))
(call_insn 89 88 90 8 (call (mem:QI (symbol_ref:DI ("dir_tester_size") [flags 0x41]  <function_decl 0x7fa610b72100 dir_tester_size>) [0 dir_tester_size S1 A8])
        (const_int 0 [0])) "main.c":135:3 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 90 89 91 8 (set (reg:DI 0 ax [103])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [12 tester+0 S8 A64])) "main.c":136:3 80 {*movdi_internal}
     (nil))
(insn 91 90 92 8 (set (reg:SI 4 si)
        (const_int 32 [0x20])) "main.c":136:3 81 {*movsi_internal}
     (nil))
(insn 92 91 93 8 (set (reg:DI 5 di)
        (reg:DI 0 ax [103])) "main.c":136:3 80 {*movdi_internal}
     (nil))
(call_insn 93 92 94 8 (call (mem:QI (symbol_ref:DI ("dir_tester_capacity") [flags 0x41]  <function_decl 0x7fa610b72200 dir_tester_capacity>) [0 dir_tester_capacity S1 A8])
        (const_int 0 [0])) "main.c":136:3 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 94 93 95 8 (set (reg:DI 0 ax [104])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [12 tester+0 S8 A64])) "main.c":138:3 80 {*movdi_internal}
     (nil))
(insn 95 94 96 8 (set (reg:DI 5 di)
        (reg:DI 0 ax [104])) "main.c":138:3 80 {*movdi_internal}
     (nil))
(call_insn 96 95 106 8 (call (mem:QI (symbol_ref:DI ("dir_tester_destory") [flags 0x41]  <function_decl 0x7fa610b6ec00 dir_tester_destory>) [0 dir_tester_destory S1 A8])
        (const_int 0 [0])) "main.c":138:3 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 106 96 98 8 (const_int 0 [0]) "main.c":139:1 928 {nop}
     (nil))
(insn 98 106 99 8 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 6 bp)
                                (const_int -8 [0xfffffffffffffff8])) [9 D.3558+0 S8 A64])
                        (mem/v/f:DI (const_int 40 [0x28]) [0 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_TEST))
            (clobber (reg:DI 0 ax [106]))
        ]) "main.c":139:1 1270 {stack_protect_test_1_di}
     (nil))
(jump_insn 99 98 104 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 102)
            (pc))) "main.c":139:1 891 {*jcc}
     (nil)
 -> 102)
;;  succ:       10
;;              9 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 9, loop depth 0, maybe hot
;;  prev block 8, next block 10, flags: (RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
(note 104 99 100 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(call_insn 100 104 101 9 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fa61088e500 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) "main.c":139:1 898 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 19 [frame]

(barrier 101 100 102)
;; basic block 10, loop depth 0, maybe hot
;;  prev block 9, next block 1, flags: (RTL, MODIFIED)
;;  pred:       8
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(code_label 102 101 105 10 22 (nil) [1 uses])
(note 105 102 111 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(note 111 105 0 NOTE_INSN_DELETED)

;; Function checksum_reset (checksum_reset, funcdef_no=17, decl_uid=3377, cgraph_uid=18, symbol_order=19)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=16, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 5:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 7:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (1) rBwBz {*call_value}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #1: **********

EBB 2 3

********** Pseudo live ranges #1: **********

  BB 3
   Insn 13: point = 0, n_alt = -1
  BB 2
   Insn 9: point = 0, n_alt = 0
   Insn 8: point = 0, n_alt = -2
   Insn 7: point = 1, n_alt = 4
   Insn 6: point = 2, n_alt = 0
   Insn 5: point = 2, n_alt = 2
 r82: [0..1]
Compressing live ranges: from 2 to 2 - 100%
Ranges after the compression:
 r82: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 6
	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=16, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
changing reg in insn 7
changing reg in insn 8
starting the processing of deferred insns
ending the processing of deferred insns


checksum_reset

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;;  ref usage 	r0={3d,1u} r1={3d,1u} r2={2d} r4={3d,1u} r5={3d,1u} r6={1d,3u} r7={1d,4u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r17={1d} r18={1d} r19={1d,1u} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={2d} r37={2d} r38={1d} r39={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} 
;;    total ref usage 101{89d,12u,0e} in 6{5 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 82
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:DI 1 dx)
        (const_int 64 [0x40])) "main.c":144:32 80 {*movdi_internal}
     (nil))
(insn 6 5 7 2 (set (reg:SI 4 si)
        (const_int 0 [0])) "main.c":144:32 81 {*movsi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:DI 0 ax [82])
        (symbol_ref:DI ("checksum") [flags 0x2]  <var_decl 0x7fa61082b870 checksum>)) "main.c":144:32 80 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [82])) "main.c":144:32 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("checksum") [flags 0x2]  <var_decl 0x7fa61082b870 checksum>)
        (nil)))
(call_insn 9 8 12 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memset") [flags 0x41]  <function_decl 0x7fa610abbe00 memset>) [0 __builtin_memset S1 A8])
            (const_int 0 [0]))) "main.c":144:32 909 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
;;  succ:       3 [always]  (FALLTHRU) main.c:144:71
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 1, flags: (RTL, MODIFIED)
;;  pred:       2 [always]  (FALLTHRU) main.c:144:71
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(note 12 9 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 3 (const_int 0 [0]) "main.c":144:71 928 {nop}
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(note 14 13 0 NOTE_INSN_DELETED)

;; Function checksum_test (checksum_test, funcdef_no=18, decl_uid=3380, cgraph_uid=19, symbol_order=20)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=16, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 6:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 7:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 11:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 13:  (0) r  (1) l  (2) M {*ashldi3_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 14:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 16:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 19:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 20:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 23:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 29:  (0) rm  (1) re {*cmpsi_1}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #1: **********

EBB 2
EBB 3 4
EBB 5
EBB 6 8 7 9

********** Pseudo live ranges #1: **********

  BB 9
   Insn 39: point = 0, n_alt = -1
  BB 7
  BB 8
   Insn 37: point = 0, n_alt = -1
  BB 6
   Insn 30: point = 0, n_alt = -1
   Insn 29: point = 0, n_alt = 0
  BB 2
   Insn 34: point = 0, n_alt = -1
   Insn 7: point = 0, n_alt = 1
   Insn 6: point = 0, n_alt = 1
   Insn 2: point = 0, n_alt = 5
  BB 5
   Insn 23: point = 0, n_alt = 0
  BB 4
   Insn 20: point = 0, n_alt = 1
   Insn 19: point = 1, n_alt = 3
  BB 3
   Insn 17: point = 2, n_alt = -1
   Insn 16: point = 2, n_alt = 0
   Insn 15: point = 3, n_alt = 0
   Insn 14: point = 5, n_alt = 4
   Insn 13: point = 6, n_alt = 1
   Insn 12: point = 8, n_alt = 0
   Insn 11: point = 10, n_alt = 0
 r82: [2..3]
 r83: [7..8]
 r84: [9..10]
 r85: [4..6]
 r86: [4..5]
 r87: [0..1]
Compressing live ranges: from 11 to 10 - 90%
Ranges after the compression:
 r82: [2..3]
 r83: [6..7]
 r84: [8..9]
 r85: [4..5]
 r86: [4..5]
 r87: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 6
	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=16, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
changing reg in insn 15
changing reg in insn 16
changing reg in insn 12
changing reg in insn 13
changing reg in insn 11
changing reg in insn 12
changing reg in insn 13
changing reg in insn 15
changing reg in insn 14
changing reg in insn 15
changing reg in insn 19
changing reg in insn 20
starting the processing of deferred insns
ending the processing of deferred insns


checksum_test

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 5 [di] 6 [bp] 17 [flags]
;;  ref usage 	r0={6d,5u} r1={2d,1u} r2={1d} r4={1d} r5={1d,1u} r6={1d,17u} r7={1d,9u} r17={4d,2u} r19={1d,1u} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r36={1d} r37={1d} 
;;    total ref usage 64{28d,36u,0e} in 18{18 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [5 err+0 S8 A64])
        (reg:DI 5 di [ err ])) "main.c":145:37 80 {*movdi_internal}
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
        (const_int 0 [0])) "main.c":146:7 81 {*movsi_internal}
     (nil))
(insn 7 6 34 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
        (const_int 0 [0])) "main.c":147:10 81 {*movsi_internal}
     (nil))
(jump_insn 34 7 35 2 (set (pc)
        (label_ref 24)) "main.c":147:3 892 {jump}
     (nil)
 -> 24)
;;  succ:       6 [always]  main.c:147:3
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 35 34 26)
;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       6
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags] 82 83 84 85 86
(code_label 26 35 10 3 27 (nil) [1 uses])
(note 10 26 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 3 (set (reg:SI 0 ax [84])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "main.c":148:17 81 {*movsi_internal}
     (nil))
(insn 12 11 13 3 (set (reg:DI 0 ax [83])
        (sign_extend:DI (reg:SI 0 ax [84]))) "main.c":148:17 154 {*extendsidi2_rex64}
     (nil))
(insn 13 12 14 3 (parallel [
            (set (reg:DI 1 dx [85])
                (ashift:DI (reg:DI 0 ax [83])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":148:17 713 {*ashldi3_1}
     (nil))
(insn 14 13 15 3 (set (reg:DI 0 ax [86])
        (symbol_ref:DI ("checksum") [flags 0x2]  <var_decl 0x7fa61082b870 checksum>)) "main.c":148:17 80 {*movdi_internal}
     (nil))
(insn 15 14 16 3 (set (reg:SI 0 ax [orig:82 _1 ] [82])
        (mem:SI (plus:DI (reg:DI 1 dx [85])
                (reg:DI 0 ax [86])) [1 checksum[i_2]+0 S4 A32])) "main.c":148:17 81 {*movsi_internal}
     (nil))
(insn 16 15 17 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:82 _1 ] [82])
            (const_int 0 [0]))) "main.c":148:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 17 16 18 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 21)
            (pc))) "main.c":148:8 891 {*jcc}
     (nil)
 -> 21)
;;  succ:       4 (FALLTHRU)
;;              5
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 87
(note 18 17 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 4 (set (reg/f:DI 0 ax [87])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [5 err+0 S8 A64])) "main.c":149:12 80 {*movdi_internal}
     (nil))
(insn 20 19 21 4 (set (mem:SI (reg/f:DI 0 ax [87]) [1 *err_8(D)+0 S4 A32])
        (const_int 1 [0x1])) "main.c":149:12 81 {*movsi_internal}
     (nil))
;;  succ:       5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL, MODIFIED)
;;  pred:       3
;;              4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags]
(code_label 21 20 22 5 26 (nil) [1 uses])
(note 22 21 23 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 24 5 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":147:36 229 {*addsi_1}
     (nil))
;;  succ:       6 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 8, flags: (RTL, MODIFIED)
;;  pred:       5 (FALLTHRU,DFS_BACK)
;;              2 [always]  main.c:147:3
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags]
(code_label 24 23 25 6 25 (nil) [1 uses])
(note 25 24 29 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 29 25 30 6 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
            (const_int 15 [0xf]))) "main.c":147:17 11 {*cmpsi_1}
     (nil))
(jump_insn 30 29 36 6 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 26)
            (pc))) "main.c":147:17 891 {*jcc}
     (nil)
 -> 26)
;;  succ:       3
;;              8 (FALLTHRU) main.c:150:1
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 8, loop depth 0, maybe hot
;;  prev block 6, next block 7, flags: (RTL, MODIFIED)
;;  pred:       6 (FALLTHRU) main.c:150:1
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(note 36 30 37 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 37 36 31 8 (const_int 0 [0]) "main.c":150:1 928 {nop}
     (nil))
;;  succ:       7 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 7, loop depth 0, maybe hot
;;  prev block 8, next block 9, flags: (RTL, MODIFIED)
;;  pred:       8 [always]  (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(note 31 37 38 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
;;  succ:       9 [always]  (FALLTHRU) main.c:150:1
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 9, loop depth 0, maybe hot
;;  prev block 7, next block 1, flags: (RTL, MODIFIED)
;;  pred:       7 [always]  (FALLTHRU) main.c:150:1
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(note 38 31 39 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 40 9 (const_int 0 [0]) "main.c":150:1 928 {nop}
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(note 40 39 0 NOTE_INSN_DELETED)

;; Function checksum_upd_bytes (checksum_upd_bytes, funcdef_no=19, decl_uid=3389, cgraph_uid=20, symbol_order=21)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=16, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 7:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 8:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Small class reload: reject+=3
          alt=0,overall=21,losers=2,rld_nregs=2
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
	 Choosing alt 1 in insn 15:  (0) rm  (1) 0 {ashrsi3_cvt}
      Creating newreg=105 from oldreg=90, assigning class GENERAL_REGS to r105
   15: {r105:SI=r105:SI>>0x1f;clobber flags:CC;}
      REG_UNUSED flags:CC
    Inserting insn reload before:
   53: r105:SI=r89:SI
    Inserting insn reload after:
   54: r90:SI=r105:SI

          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 16:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            alt=0,overall=8,losers=1 -- refuse
            1 Matching alt: reject+=2
            alt=1,overall=8,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 17:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 18:  (0) =rm  (1) %0  (2) re {*andsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 19:  (0) =rm  (1) 0  (2) re {*subsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Small class reload: reject+=3
          alt=0,overall=22,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 21:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 22:  (0) r  (1) l  (2) M {*ashldi3_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 23:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 24:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 25:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 26:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 27:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 28
	 Choosing alt 0 in insn 28:  (0) =rm  (1) %0  (2) re {*adddi_1}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 29:  (0) q  (1) m {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 30:  (0) =r  (1) qm {extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 0 in insn 31:  (0) =rm  (1) %0  (2) re {*xorsi_1}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 32:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 33:  (0) r  (1) l  (2) M {*ashldi3_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 34:  (0) r  (1) i {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 35:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 36:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 40:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 41:  (0) r  (1) rBM {*cmpsi_1}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #1: **********

EBB 2
EBB 3
EBB 4 6 5 7

********** Pseudo live ranges #1: **********

  BB 7
   Insn 51: point = 0, n_alt = -1
  BB 5
  BB 6
   Insn 49: point = 0, n_alt = -1
  BB 4
   Insn 42: point = 0, n_alt = -1
   Insn 41: point = 0, n_alt = 1
   Insn 40: point = 1, n_alt = 0
  BB 2
   Insn 46: point = 2, n_alt = -1
   Insn 8: point = 2, n_alt = 1
   Insn 7: point = 2, n_alt = 1
   Insn 3: point = 2, n_alt = 1
   Insn 2: point = 2, n_alt = 5
  BB 3
   Insn 36: point = 2, n_alt = 0
   Insn 35: point = 2, n_alt = 1
   Insn 34: point = 3, n_alt = 4
   Insn 33: point = 4, n_alt = 1
   Insn 32: point = 6, n_alt = 0
   Insn 31: point = 8, n_alt = 0
   Insn 30: point = 10, n_alt = 0
   Insn 29: point = 12, n_alt = 4
   Insn 28: point = 14, n_alt = 0
   Insn 27: point = 16, n_alt = 3
   Insn 26: point = 17, n_alt = 1
   Insn 25: point = 19, n_alt = 0
   Insn 24: point = 20, n_alt = 0
   Insn 23: point = 22, n_alt = 4
   Insn 22: point = 23, n_alt = 1
   Insn 21: point = 25, n_alt = 1
   Insn 20: point = 26, n_alt = -2
   Insn 19: point = 28, n_alt = 0
   Insn 18: point = 30, n_alt = 0
   Insn 17: point = 32, n_alt = 0
   Insn 16: point = 34, n_alt = 0
   Insn 54: point = 36, n_alt = -2
	Hard reg 0 is preferable by r105 with profit 1000
   Insn 15: point = 38, n_alt = 1
   Insn 53: point = 39, n_alt = -2
	Hard reg 0 is preferable by r105 with profit 1000
	Hard reg 1 is preferable by r105 with profit 1000
   Insn 12: point = 40, n_alt = 0
 r82: [9..20]
 r83: [15..17]
 r84: [13..14]
 r85: [11..12]
 r86: [9..10]
 r87: [2..8]
 r88: [7..26]
 r89: [33..40]
 r90: [35..36]
 r91: [29..34]
 r92: [31..32]
 r93: [29..30]
 r94: [27..28]
 r95: [24..25]
 r96: [21..23]
 r97: [21..22]
 r98: [18..19]
 r99: [15..16]
 r100: [5..6]
 r101: [2..4]
 r102: [2..3]
 r103: [0..1]
 r105: [37..39]
Compressing live ranges: from 41 to 34 - 82%
Ranges after the compression:
 r82: [8..17]
 r83: [14..15]
 r84: [12..13]
 r85: [10..11]
 r86: [8..9]
 r87: [2..7]
 r88: [6..21]
 r89: [28..33]
 r90: [30..31]
 r91: [24..29]
 r92: [26..27]
 r93: [24..25]
 r94: [22..23]
 r95: [20..21]
 r96: [18..19]
 r97: [18..19]
 r98: [16..17]
 r99: [14..15]
 r100: [4..5]
 r101: [2..3]
 r102: [2..3]
 r103: [0..1]
 r105: [32..33]

********** Assignment #1: **********

	 Assigning to 105 (cl=GENERAL_REGS, orig=90, freq=3000, tfirst=105, tfreq=3000)...
	   Assign 0 to reload r105 (freq=3000)

********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 6
	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=16, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
changing reg in insn 24
changing reg in insn 31
changing reg in insn 26
changing reg in insn 28
changing reg in insn 28
changing reg in insn 29
changing reg in insn 29
changing reg in insn 30
changing reg in insn 30
changing reg in insn 31
changing reg in insn 31
changing reg in insn 35
changing reg in insn 20
changing reg in insn 32
changing reg in insn 21
changing reg in insn 12
changing reg in insn 17
changing reg in insn 16
changing reg in insn 16
changing reg in insn 19
changing reg in insn 17
changing reg in insn 17
changing reg in insn 18
changing reg in insn 18
changing reg in insn 19
changing reg in insn 19
changing reg in insn 20
changing reg in insn 21
changing reg in insn 22
changing reg in insn 22
changing reg in insn 24
changing reg in insn 23
changing reg in insn 24
changing reg in insn 25
changing reg in insn 26
changing reg in insn 27
changing reg in insn 32
changing reg in insn 33
changing reg in insn 33
changing reg in insn 35
changing reg in insn 34
changing reg in insn 35
changing reg in insn 40
changing reg in insn 41
deleting insn with uid = 54.
starting the processing of deferred insns
ending the processing of deferred insns


checksum_upd_bytes

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 17 [flags]
;;  ref usage 	r0={8d,9u} r1={13d,13u} r2={4d,3u} r4={2d,2u,1e} r5={1d,1u} r6={1d,18u} r7={1d,7u} r17={11d,1u} r19={1d,1u,1e} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r36={1d} r37={1d} 
;;    total ref usage 109{52d,55u,2e} in 34{34 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [3 bytes+0 S8 A64])
        (reg:DI 5 di [ bytes ])) "main.c":151:58 80 {*movdi_internal}
     (nil))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 n+0 S4 A32])
        (reg:SI 4 si [ n ])) "main.c":151:58 81 {*movsi_internal}
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
        (const_int 0 [0])) "main.c":152:7 81 {*movsi_internal}
     (nil))
(insn 8 7 46 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
        (const_int 0 [0])) "main.c":153:10 81 {*movsi_internal}
     (nil))
(jump_insn 46 8 47 2 (set (pc)
        (label_ref 37)) "main.c":153:3 892 {jump}
     (nil)
 -> 37)
;;  succ:       4 [always]  main.c:153:3
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 47 46 39)
;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       4
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags] 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102
(code_label 39 47 11 3 30 (nil) [1 uses])
(note 11 39 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 12 11 53 3 (set (reg:SI 1 dx [89])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "main.c":154:16 81 {*movsi_internal}
     (nil))
(insn 53 12 15 3 (set (reg:SI 0 ax [90])
        (reg:SI 1 dx [89])) "main.c":154:16 81 {*movsi_internal}
     (nil))
(insn 15 53 16 3 (parallel [
            (set (reg:SI 0 ax [90])
                (ashiftrt:SI (reg:SI 0 ax [90])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":154:16 758 {ashrsi3_cvt}
     (nil))
(insn 16 15 17 3 (parallel [
            (set (reg:SI 0 ax [91])
                (lshiftrt:SI (reg:SI 0 ax [90])
                    (const_int 29 [0x1d])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":154:16 767 {*lshrsi3_1}
     (nil))
(insn 17 16 18 3 (parallel [
            (set (reg:SI 1 dx [92])
                (plus:SI (reg:SI 1 dx [89])
                    (reg:SI 0 ax [91])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":154:16 229 {*addsi_1}
     (nil))
(insn 18 17 19 3 (parallel [
            (set (reg:SI 1 dx [93])
                (and:SI (reg:SI 1 dx [92])
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":154:16 533 {*andsi_1}
     (nil))
(insn 19 18 20 3 (parallel [
            (set (reg:SI 1 dx [94])
                (minus:SI (reg:SI 1 dx [93])
                    (reg:SI 0 ax [91])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":154:16 302 {*subsi_1}
     (nil))
(insn 20 19 21 3 (set (reg:SI 0 ax [orig:88 _13 ] [88])
        (reg:SI 1 dx [94])) "main.c":154:16 81 {*movsi_internal}
     (nil))
(insn 21 20 22 3 (set (reg:DI 1 dx [95])
        (sign_extend:DI (reg:SI 0 ax [orig:88 _13 ] [88]))) "main.c":154:13 154 {*extendsidi2_rex64}
     (nil))
(insn 22 21 23 3 (parallel [
            (set (reg:DI 2 cx [96])
                (ashift:DI (reg:DI 1 dx [95])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":154:13 713 {*ashldi3_1}
     (nil))
(insn 23 22 24 3 (set (reg:DI 1 dx [97])
        (symbol_ref:DI ("checksum") [flags 0x2]  <var_decl 0x7fa61082b870 checksum>)) "main.c":154:13 80 {*movdi_internal}
     (nil))
(insn 24 23 25 3 (set (reg:SI 2 cx [orig:82 _1 ] [82])
        (mem:SI (plus:DI (reg:DI 2 cx [96])
                (reg:DI 1 dx [97])) [1 checksum[_13]+0 S4 A32])) "main.c":154:13 81 {*movsi_internal}
     (nil))
(insn 25 24 26 3 (set (reg:SI 1 dx [98])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "main.c":154:29 81 {*movsi_internal}
     (nil))
(insn 26 25 27 3 (set (reg:DI 4 si [orig:83 _2 ] [83])
        (sign_extend:DI (reg:SI 1 dx [98]))) "main.c":154:29 154 {*extendsidi2_rex64}
     (nil))
(insn 27 26 28 3 (set (reg/f:DI 1 dx [99])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [3 bytes+0 S8 A64])) "main.c":154:29 80 {*movdi_internal}
     (nil))
(insn 28 27 29 3 (parallel [
            (set (reg/f:DI 1 dx [orig:84 _3 ] [84])
                (plus:DI (reg/f:DI 1 dx [99])
                    (reg:DI 4 si [orig:83 _2 ] [83])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":154:29 230 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                    (const_int -24 [0xffffffffffffffe8])) [3 bytes+0 S8 A64])
            (reg:DI 4 si [orig:83 _2 ] [83]))
        (nil)))
(insn 29 28 30 3 (set (reg:QI 1 dx [orig:85 _4 ] [85])
        (mem:QI (reg/f:DI 1 dx [orig:84 _3 ] [84]) [0 *_3+0 S1 A8])) "main.c":154:29 83 {*movqi_internal}
     (nil))
(insn 30 29 31 3 (set (reg:SI 1 dx [orig:86 _5 ] [86])
        (sign_extend:SI (reg:QI 1 dx [orig:85 _4 ] [85]))) "main.c":154:29 160 {extendqisi2}
     (nil))
(insn 31 30 32 3 (parallel [
            (set (reg:SI 2 cx [orig:87 _6 ] [87])
                (xor:SI (reg:SI 2 cx [orig:82 _1 ] [82])
                    (reg:SI 1 dx [orig:86 _5 ] [86])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":154:21 564 {*xorsi_1}
     (nil))
(insn 32 31 33 3 (set (reg:DI 0 ax [100])
        (sign_extend:DI (reg:SI 0 ax [orig:88 _13 ] [88]))) "main.c":154:21 154 {*extendsidi2_rex64}
     (nil))
(insn 33 32 34 3 (parallel [
            (set (reg:DI 1 dx [101])
                (ashift:DI (reg:DI 0 ax [100])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":154:21 713 {*ashldi3_1}
     (nil))
(insn 34 33 35 3 (set (reg:DI 0 ax [102])
        (symbol_ref:DI ("checksum") [flags 0x2]  <var_decl 0x7fa61082b870 checksum>)) "main.c":154:21 80 {*movdi_internal}
     (nil))
(insn 35 34 36 3 (set (mem:SI (plus:DI (reg:DI 1 dx [101])
                (reg:DI 0 ax [102])) [1 checksum[_13]+0 S4 A32])
        (reg:SI 2 cx [orig:87 _6 ] [87])) "main.c":154:21 81 {*movsi_internal}
     (nil))
(insn 36 35 37 3 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":153:23 229 {*addsi_1}
     (nil))
;;  succ:       4 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 6, flags: (RTL, MODIFIED)
;;  pred:       3 (FALLTHRU,DFS_BACK)
;;              2 [always]  main.c:153:3
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags] 103
(code_label 37 36 38 4 29 (nil) [1 uses])
(note 38 37 40 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 40 38 41 4 (set (reg:SI 0 ax [103])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "main.c":153:17 81 {*movsi_internal}
     (nil))
(insn 41 40 42 4 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [103])
            (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -28 [0xffffffffffffffe4])) [1 n+0 S4 A32]))) "main.c":153:17 11 {*cmpsi_1}
     (nil))
(jump_insn 42 41 48 4 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 39)
            (pc))) "main.c":153:17 891 {*jcc}
     (nil)
 -> 39)
;;  succ:       3
;;              6 (FALLTHRU) main.c:155:1
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 6, loop depth 0, maybe hot
;;  prev block 4, next block 5, flags: (RTL, MODIFIED)
;;  pred:       4 (FALLTHRU) main.c:155:1
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(note 48 42 49 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 49 48 43 6 (const_int 0 [0]) "main.c":155:1 928 {nop}
     (nil))
;;  succ:       5 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 5, loop depth 0, maybe hot
;;  prev block 6, next block 7, flags: (RTL, MODIFIED)
;;  pred:       6 [always]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(note 43 49 50 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;;  succ:       7 [always]  (FALLTHRU) main.c:155:1
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 7, loop depth 0, maybe hot
;;  prev block 5, next block 1, flags: (RTL, MODIFIED)
;;  pred:       5 [always]  (FALLTHRU) main.c:155:1
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(note 50 43 51 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 51 50 52 7 (const_int 0 [0]) "main.c":155:1 928 {nop}
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(note 52 51 0 NOTE_INSN_DELETED)

;; Function checksum_upd_file (checksum_upd_file, funcdef_no=20, decl_uid=3397, cgraph_uid=21, symbol_order=22)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=24, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 19 to 7 (offset=8, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 6:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 8:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 9:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (0) rBwBz {*call}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #1: **********

EBB 2 3

********** Pseudo live ranges #1: **********

  BB 3
   Insn 16: point = 0, n_alt = -1
  BB 2
   Insn 12: point = 0, n_alt = 0
   Insn 11: point = 0, n_alt = -2
   Insn 10: point = 1, n_alt = -2
   Insn 9: point = 2, n_alt = 3
   Insn 8: point = 4, n_alt = 3
   Insn 7: point = 5, n_alt = 0
   Insn 6: point = 7, n_alt = 3
   Insn 2: point = 8, n_alt = 5
 r82: [1..5]
 r83: [0..2]
 r84: [6..7]
 r85: [3..4]
Compressing live ranges: from 8 to 6 - 75%
Ranges after the compression:
 r82: [0..3]
 r83: [0..1]
 r84: [4..5]
 r85: [2..3]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 6
	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=24, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 19 to 7 (offset=8, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
changing reg in insn 7
changing reg in insn 10
changing reg in insn 9
changing reg in insn 11
changing reg in insn 6
changing reg in insn 7
changing reg in insn 8
changing reg in insn 9
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 12.


checksum_upd_file

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;;  ref usage 	r0={5d,3u} r1={3d,1u} r2={2d} r4={3d,1u} r5={3d,2u} r6={1d,6u} r7={1d,4u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r17={1d} r18={1d} r19={1d,1u} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={2d} r37={2d} r38={1d} r39={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} 
;;    total ref usage 109{91d,18u,0e} in 9{8 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 82 83 84 85
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [13 file+0 S8 A64])
        (reg:DI 5 di [ file ])) "main.c":156:50 80 {*movdi_internal}
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 0 ax [84])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [13 file+0 S8 A64])) "main.c":157:3 80 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:SI 1 dx [orig:82 _1 ] [82])
        (mem:SI (plus:DI (reg/f:DI 0 ax [84])
                (const_int 4 [0x4])) [1 file_4(D)->size+0 S4 A32])) "main.c":157:3 81 {*movsi_internal}
     (nil))
(insn 8 7 9 2 (set (reg/f:DI 0 ax [85])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [13 file+0 S8 A64])) "main.c":157:26 80 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg/f:DI 0 ax [orig:83 _2 ] [83])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [85])
                (const_int 8 [0x8])) [3 file_4(D)->data+0 S8 A64])) "main.c":157:26 80 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:SI 4 si)
        (reg:SI 1 dx [orig:82 _1 ] [82])) "main.c":157:3 81 {*movsi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:83 _2 ] [83])) "main.c":157:3 80 {*movdi_internal}
     (nil))
(call_insn 12 11 15 2 (call (mem:QI (symbol_ref:DI ("checksum_upd_bytes") [flags 0x3]  <function_decl 0x7fa610835500 checksum_upd_bytes>) [0 checksum_upd_bytes S1 A8])
        (const_int 0 [0])) "main.c":157:3 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       3 [always]  (FALLTHRU) main.c:158:1
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 1, flags: (RTL, MODIFIED)
;;  pred:       2 [always]  (FALLTHRU) main.c:158:1
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(note 15 12 16 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 3 (const_int 0 [0]) "main.c":158:1 928 {nop}
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(note 17 16 0 NOTE_INSN_DELETED)

;; Function test_explorer_init (test_explorer_init, funcdef_no=21, decl_uid=3399, cgraph_uid=22, symbol_order=23)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 5:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (1) rBwBz {*call_value}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 9:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 10:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (0) rBwBz {*call}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #1: **********

EBB 2 3

********** Pseudo live ranges #1: **********

  BB 3
   Insn 16: point = 0, n_alt = -1
  BB 2
   Insn 12: point = 0, n_alt = 0
   Insn 11: point = 0, n_alt = -2
   Insn 10: point = 1, n_alt = 3
   Insn 9: point = 2, n_alt = 5
   Insn 8: point = 3, n_alt = -2
   Insn 7: point = 4, n_alt = 0
   Insn 6: point = 4, n_alt = -2
   Insn 5: point = 5, n_alt = 4
 r82: [4..5]
 r83: [2..3]
 r84: [0..1]
Compressing live ranges: from 6 to 6 - 100%
Ranges after the compression:
 r82: [4..5]
 r83: [2..3]
 r84: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 6
	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
changing reg in insn 5
changing reg in insn 6
changing reg in insn 8
changing reg in insn 9
changing reg in insn 10
changing reg in insn 11
deleting insn with uid = 8.
starting the processing of deferred insns
ending the processing of deferred insns


test_explorer_init

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 5 [di] 6 [bp] 7 [sp]
;;  ref usage 	r0={5d,3u} r1={3d} r2={3d} r4={3d} r5={5d,2u} r6={1d,5u} r7={1d,5u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r17={2d} r18={2d} r19={1d,1u} r20={3d} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={3d} r37={3d} r38={2d} r39={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} 
;;    total ref usage 172{156d,16u,0e} in 8{6 regular + 2 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 82 83 84
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:DI 0 ax [82])
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7fa6108a1630 *.LC0>)) "main.c":161:36 80 {*movdi_internal}
     (nil))
(insn 6 5 7 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [82])) "main.c":161:36 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7fa6108a1630 *.LC0>)
        (nil)))
(call_insn 7 6 9 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("explorer_tester_create") [flags 0x41]  <function_decl 0x7fa610b72300 explorer_tester_create>) [0 explorer_tester_create S1 A8])
            (const_int 0 [0]))) "main.c":161:36 909 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 9 7 10 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [14 tester+0 S8 A64])
        (reg:DI 0 ax [83])) "main.c":161:36 80 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:DI 0 ax [84])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [14 tester+0 S8 A64])) "main.c":162:3 80 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [84])) "main.c":162:3 80 {*movdi_internal}
     (nil))
(call_insn 12 11 15 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_destory") [flags 0x41]  <function_decl 0x7fa610b72400 explorer_tester_destory>) [0 explorer_tester_destory S1 A8])
        (const_int 0 [0])) "main.c":162:3 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       3 [always]  (FALLTHRU) main.c:163:1
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 1, flags: (RTL, MODIFIED)
;;  pred:       2 [always]  (FALLTHRU) main.c:163:1
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(note 15 12 16 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 3 (const_int 0 [0]) "main.c":163:1 928 {nop}
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(note 17 16 0 NOTE_INSN_DELETED)

;; Function test_explorer_file1 (test_explorer_file1, funcdef_no=22, decl_uid=3402, cgraph_uid=23, symbol_order=24)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=1040, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 19 to 7 (offset=1024, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
            2 Scratch win: reject+=2
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3:  (0) =m  (1) m  (2) =&r {stack_protect_set_1_di}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 6:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 8:  (1) rBwBz {*call_value}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 10:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 11:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 14:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 17:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 18:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 19:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 20:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 21:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 24:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            alt=1: Bad operand -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 25:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 28:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            alt=1: Bad operand -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 29:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 30:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 31:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 33:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 34:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 35:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 38:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            alt=1: Bad operand -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 39:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 40:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 42:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 43:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 44:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 45:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 48:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 49:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 51:  (0) rBwBz {*call}
            3 Scratch win: reject+=2
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 53:  (1) m  (2) m  (3) =&r {stack_protect_test_1_di}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 55:  (0) rBwBz {*call}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #1: **********

EBB 2 3
EBB 4

********** Pseudo live ranges #1: **********

  BB 3
   Insn 55: point = 0, n_alt = 0
  BB 4
  BB 2
   Insn 54: point = 0, n_alt = -1
   Insn 53: point = 0, n_alt = 0
   Insn 61: point = 2, n_alt = -1
   Insn 51: point = 2, n_alt = 0
   Insn 50: point = 2, n_alt = -2
   Insn 49: point = 3, n_alt = 3
   Insn 48: point = 4, n_alt = 0
   Insn 47: point = 4, n_alt = -2
   Insn 46: point = 5, n_alt = -2
   Insn 45: point = 6, n_alt = 4
   Insn 44: point = 7, n_alt = 0
   Insn 43: point = 7, n_alt = 0
   Insn 42: point = 7, n_alt = 0
   Insn 41: point = 7, n_alt = -2
   Insn 40: point = 8, n_alt = 3
   Insn 39: point = 9, n_alt = 3
   Insn 38: point = 10, n_alt = 0
   Insn 37: point = 10, n_alt = -2
   Insn 36: point = 11, n_alt = -2
   Insn 35: point = 12, n_alt = 4
   Insn 34: point = 13, n_alt = 0
   Insn 33: point = 13, n_alt = 0
   Insn 32: point = 13, n_alt = -2
   Insn 31: point = 14, n_alt = 0
   Insn 30: point = 14, n_alt = 3
   Insn 29: point = 15, n_alt = 3
   Insn 28: point = 16, n_alt = 0
   Insn 27: point = 16, n_alt = -2
   Insn 26: point = 17, n_alt = 0
   Insn 25: point = 17, n_alt = 3
   Insn 24: point = 18, n_alt = 0
   Insn 23: point = 18, n_alt = -2
   Insn 22: point = 19, n_alt = -2
   Insn 21: point = 20, n_alt = 4
   Insn 20: point = 21, n_alt = 0
   Insn 19: point = 21, n_alt = 0
   Insn 18: point = 21, n_alt = 3
   Insn 17: point = 22, n_alt = 0
   Insn 16: point = 22, n_alt = -2
   Insn 15: point = 23, n_alt = -2
   Insn 14: point = 24, n_alt = 4
   Insn 13: point = 25, n_alt = 0
   Insn 12: point = 25, n_alt = 0
   Insn 11: point = 25, n_alt = 3
   Insn 10: point = 26, n_alt = 5
   Insn 9: point = 27, n_alt = -2
   Insn 8: point = 28, n_alt = 0
   Insn 7: point = 28, n_alt = -2
   Insn 6: point = 29, n_alt = 4
   Insn 3: point = 30, n_alt = 0
 r82: [28..29]
 r83: [26..27]
 r84: [22..25]
 r85: [23..24]
 r86: [18..21]
 r87: [19..20]
 r88: [16..17]
 r89: [13..15]
 r90: [10..14]
 r91: [11..12]
 r92: [7..9]
 r93: [4..8]
 r94: [5..6]
 r95: [2..3]
 r96: [30..31]
 r97: [0..1]
Compressing live ranges: from 32 to 24 - 75%
Ranges after the compression:
 r82: [20..21]
 r83: [18..19]
 r84: [16..17]
 r85: [16..17]
 r86: [14..15]
 r87: [14..15]
 r88: [12..13]
 r89: [10..11]
 r90: [8..11]
 r91: [8..9]
 r92: [6..7]
 r93: [4..7]
 r94: [4..5]
 r95: [2..3]
 r96: [22..23]
 r97: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 6
	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=1040, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 19 to 7 (offset=1024, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
changing reg in insn 6
changing reg in insn 7
changing reg in insn 9
changing reg in insn 10
changing reg in insn 11
changing reg in insn 16
changing reg in insn 14
changing reg in insn 15
changing reg in insn 18
changing reg in insn 23
changing reg in insn 21
changing reg in insn 22
changing reg in insn 25
changing reg in insn 27
changing reg in insn 29
changing reg in insn 32
changing reg in insn 30
changing reg in insn 37
changing reg in insn 35
changing reg in insn 36
changing reg in insn 39
changing reg in insn 41
changing reg in insn 40
changing reg in insn 47
changing reg in insn 45
changing reg in insn 46
changing reg in insn 49
changing reg in insn 50
changing reg in insn 3
changing reg in insn 53
deleting insn with uid = 9.
deleting insn with uid = 15.
deleting insn with uid = 22.
deleting insn with uid = 36.
deleting insn with uid = 46.
starting the processing of deferred insns
ending the processing of deferred insns


test_explorer_file1

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 36 [r8] 37 [r9]
;;  ref usage 	r0={18d,8u} r1={15d,6u} r2={13d,4u} r4={14d,5u} r5={16d,7u} r6={1d,15u} r7={1d,12u} r8={8d} r9={8d} r10={8d} r11={8d} r12={8d} r13={8d} r14={8d} r15={8d} r17={13d,1u} r18={8d} r19={1d,1u} r20={9d} r21={9d} r22={9d} r23={9d} r24={9d} r25={9d} r26={9d} r27={9d} r28={8d} r29={8d} r30={8d} r31={8d} r32={8d} r33={8d} r34={8d} r35={8d} r36={11d,2u} r37={11d,2u} r38={8d} r39={8d} r44={8d} r45={8d} r46={8d} r47={8d} r48={8d} r49={8d} r50={8d} r51={8d} r52={8d} r53={8d} r54={8d} r55={8d} r56={8d} r57={8d} r58={8d} r59={8d} r60={8d} r61={8d} r62={8d} r63={8d} r64={8d} r65={8d} r66={8d} r67={8d} r68={8d} r69={8d} r70={8d} r71={8d} r72={8d} r73={8d} r74={8d} r75={8d} 
;;    total ref usage 657{594d,63u,0e} in 46{38 regular + 8 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 4 3 2 NOTE_INSN_FUNCTION_BEG)
(insn 3 2 6 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 6 bp)
                        (const_int -8 [0xfffffffffffffff8])) [9 D.3560+0 S8 A64])
                (unspec:DI [
                        (mem/v/f:DI (const_int 40 [0x28]) [0 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_SET))
            (set (reg:DI 0 ax [96])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "main.c":165:28 1265 {stack_protect_set_1_di}
     (nil))
(insn 6 3 7 2 (set (reg:DI 0 ax [82])
        (symbol_ref/f:DI ("*.LC19") [flags 0x2]  <var_decl 0x7fa6108d9b40 *.LC19>)) "main.c":167:36 80 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [82])) "main.c":167:36 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC19") [flags 0x2]  <var_decl 0x7fa6108d9b40 *.LC19>)
        (nil)))
(call_insn 8 7 10 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("explorer_tester_create") [flags 0x41]  <function_decl 0x7fa610b72300 explorer_tester_create>) [0 explorer_tester_create S1 A8])
            (const_int 0 [0]))) "main.c":167:36 909 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 10 8 11 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -1016 [0xfffffffffffffc08])) [14 tester+0 S8 A64])
        (reg:DI 0 ax [83])) "main.c":167:36 80 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:DI 0 ax [84])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -1016 [0xfffffffffffffc08])) [14 tester+0 S8 A64])) "main.c":168:3 80 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:SI 2 cx)
        (const_int 1 [0x1])) "main.c":168:3 81 {*movsi_internal}
     (nil))
(insn 13 12 14 2 (set (reg:SI 1 dx)
        (const_int 3 [0x3])) "main.c":168:3 81 {*movsi_internal}
     (nil))
(insn 14 13 16 2 (set (reg:DI 4 si [85])
        (symbol_ref/f:DI ("*.LC20") [flags 0x2]  <var_decl 0x7fa6108d9bd0 *.LC20>)) "main.c":168:3 80 {*movdi_internal}
     (nil))
(insn 16 14 17 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [84])) "main.c":168:3 80 {*movdi_internal}
     (nil))
(call_insn 17 16 18 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_create_file") [flags 0x41]  <function_decl 0x7fa610b72b00 explorer_tester_create_file>) [0 explorer_tester_create_file S1 A8])
        (const_int 0 [0])) "main.c":168:3 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 18 17 19 2 (set (reg:DI 0 ax [86])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -1016 [0xfffffffffffffc08])) [14 tester+0 S8 A64])) "main.c":169:3 80 {*movdi_internal}
     (nil))
(insn 19 18 20 2 (set (reg:SI 2 cx)
        (const_int 0 [0])) "main.c":169:3 81 {*movsi_internal}
     (nil))
(insn 20 19 21 2 (set (reg:SI 1 dx)
        (const_int 4 [0x4])) "main.c":169:3 81 {*movsi_internal}
     (nil))
(insn 21 20 23 2 (set (reg:DI 4 si [87])
        (symbol_ref/f:DI ("*.LC20") [flags 0x2]  <var_decl 0x7fa6108d9bd0 *.LC20>)) "main.c":169:3 80 {*movdi_internal}
     (nil))
(insn 23 21 24 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [86])) "main.c":169:3 80 {*movdi_internal}
     (nil))
(call_insn 24 23 25 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_create_file") [flags 0x41]  <function_decl 0x7fa610b72b00 explorer_tester_create_file>) [0 explorer_tester_create_file S1 A8])
        (const_int 0 [0])) "main.c":169:3 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 25 24 26 2 (parallel [
            (set (reg:DI 0 ax [88])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -1008 [0xfffffffffffffc10])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":171:3 230 {*adddi_1}
     (nil))
(insn 26 25 27 2 (set (reg:SI 4 si)
        (const_int 1000 [0x3e8])) "main.c":171:3 81 {*movsi_internal}
     (nil))
(insn 27 26 28 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [88])) "main.c":171:3 80 {*movdi_internal}
     (nil))
(call_insn 28 27 29 2 (call (mem:QI (symbol_ref:DI ("fill_random") [flags 0x3]  <function_decl 0x7fa610820900 fill_random>) [0 fill_random S1 A8])
        (const_int 0 [0])) "main.c":171:3 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 29 28 30 2 (parallel [
            (set (reg:DI 1 dx [89])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -1008 [0xfffffffffffffc10])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":172:3 230 {*adddi_1}
     (nil))
(insn 30 29 31 2 (set (reg:DI 0 ax [90])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -1016 [0xfffffffffffffc08])) [14 tester+0 S8 A64])) "main.c":172:3 80 {*movdi_internal}
     (nil))
(insn 31 30 32 2 (set (reg:SI 37 r9)
        (const_int 1 [0x1])) "main.c":172:3 81 {*movsi_internal}
     (nil))
(insn 32 31 33 2 (set (reg:DI 36 r8)
        (reg:DI 1 dx [89])) "main.c":172:3 80 {*movdi_internal}
     (nil))
(insn 33 32 34 2 (set (reg:SI 2 cx)
        (const_int 1000 [0x3e8])) "main.c":172:3 81 {*movsi_internal}
     (nil))
(insn 34 33 35 2 (set (reg:SI 1 dx)
        (const_int 3 [0x3])) "main.c":172:3 81 {*movsi_internal}
     (nil))
(insn 35 34 37 2 (set (reg:DI 4 si [91])
        (symbol_ref/f:DI ("*.LC20") [flags 0x2]  <var_decl 0x7fa6108d9bd0 *.LC20>)) "main.c":172:3 80 {*movdi_internal}
     (nil))
(insn 37 35 38 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [90])) "main.c":172:3 80 {*movdi_internal}
     (nil))
(call_insn 38 37 39 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_write") [flags 0x41]  <function_decl 0x7fa610b72a00 explorer_tester_write>) [0 explorer_tester_write S1 A8])
        (const_int 0 [0])) "main.c":172:3 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:DI (use (reg:DI 36 r8))
                        (expr_list:SI (use (reg:SI 37 r9))
                            (nil))))))))
(insn 39 38 40 2 (parallel [
            (set (reg:DI 1 dx [92])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -1008 [0xfffffffffffffc10])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":173:3 230 {*adddi_1}
     (nil))
(insn 40 39 41 2 (set (reg:DI 0 ax [93])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -1016 [0xfffffffffffffc08])) [14 tester+0 S8 A64])) "main.c":173:3 80 {*movdi_internal}
     (nil))
(insn 41 40 42 2 (set (reg:DI 37 r9)
        (reg:DI 1 dx [92])) "main.c":173:3 80 {*movdi_internal}
     (nil))
(insn 42 41 43 2 (set (reg:SI 36 r8)
        (const_int 1 [0x1])) "main.c":173:3 81 {*movsi_internal}
     (nil))
(insn 43 42 44 2 (set (reg:SI 2 cx)
        (const_int 1000 [0x3e8])) "main.c":173:3 81 {*movsi_internal}
     (nil))
(insn 44 43 45 2 (set (reg:SI 1 dx)
        (const_int 3 [0x3])) "main.c":173:3 81 {*movsi_internal}
     (nil))
(insn 45 44 47 2 (set (reg:DI 4 si [94])
        (symbol_ref/f:DI ("*.LC20") [flags 0x2]  <var_decl 0x7fa6108d9bd0 *.LC20>)) "main.c":173:3 80 {*movdi_internal}
     (nil))
(insn 47 45 48 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [93])) "main.c":173:3 80 {*movdi_internal}
     (nil))
(call_insn 48 47 49 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_read") [flags 0x41]  <function_decl 0x7fa610b72900 explorer_tester_read>) [0 explorer_tester_read S1 A8])
        (const_int 0 [0])) "main.c":173:3 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:SI (use (reg:SI 36 r8))
                        (expr_list:DI (use (reg:DI 37 r9))
                            (nil))))))))
(insn 49 48 50 2 (set (reg:DI 0 ax [95])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -1016 [0xfffffffffffffc08])) [14 tester+0 S8 A64])) "main.c":175:3 80 {*movdi_internal}
     (nil))
(insn 50 49 51 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [95])) "main.c":175:3 80 {*movdi_internal}
     (nil))
(call_insn 51 50 61 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_destory") [flags 0x41]  <function_decl 0x7fa610b72400 explorer_tester_destory>) [0 explorer_tester_destory S1 A8])
        (const_int 0 [0])) "main.c":175:3 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 61 51 53 2 (const_int 0 [0]) "main.c":176:1 928 {nop}
     (nil))
(insn 53 61 54 2 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 6 bp)
                                (const_int -8 [0xfffffffffffffff8])) [9 D.3560+0 S8 A64])
                        (mem/v/f:DI (const_int 40 [0x28]) [0 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_TEST))
            (clobber (reg:DI 0 ax [97]))
        ]) "main.c":176:1 1270 {stack_protect_test_1_di}
     (nil))
(jump_insn 54 53 59 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 57)
            (pc))) "main.c":176:1 891 {*jcc}
     (nil)
 -> 57)
;;  succ:       4
;;              3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
(note 59 54 55 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(call_insn 55 59 56 3 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fa61088e500 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) "main.c":176:1 898 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 19 [frame]

(barrier 56 55 57)
;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 1, flags: (RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(code_label 57 56 60 4 34 (nil) [1 uses])
(note 60 57 62 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(note 62 60 0 NOTE_INSN_DELETED)

;; Function test_explorer_file2 (test_explorer_file2, funcdef_no=23, decl_uid=3406, cgraph_uid=24, symbol_order=25)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=144, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 19 to 7 (offset=80, prev_offset=0)
Can eliminate 19 to 6 (offset=-48, prev_offset=0)
            2 Scratch win: reject+=2
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3:  (0) =m  (1) m  (2) =&r {stack_protect_set_1_di}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 8:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 9:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 10:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 11:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 13:  (0) =rm  (1) %0  (2) re {*adddi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 15:  (0) m  (1) re {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 16:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 17:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 18:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 19:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 24:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 25:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 26:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 28:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 29:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 242:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 30:  (0) =rm  (1) %0  (2) re {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 31:  (0) =rm  (1) %0  (2) re {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 243:  (0) r  (1) Z {*movdi_internal}
            1 Small class reload: reject+=3
            1 Non input pseudo reload: reject++
            1 Early clobber: reject++
          alt=0,overall=11,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 32:  (0) =a  (1) =&d  (2) 0  (3) rm {*udivmoddi4}
      Creating newreg=212 from oldreg=127, assigning class DREG to r212
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 33:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 34:  (0) =rm  (1) 0  (2) re {*subdi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 36:  (0) =rm  (1) %0  (2) re {*adddi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 37:  (0) m  (1) re {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 38:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 39:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 40:  (0) =rm  (1) %0  (2) re {*adddi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 42:  (0) m  (1) re {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 43:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 44:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 45:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 46:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 50:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 51:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 52:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 53:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 55:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 56:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 244:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 57:  (0) =rm  (1) %0  (2) re {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 58:  (0) =rm  (1) %0  (2) re {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 245:  (0) r  (1) Z {*movdi_internal}
            1 Small class reload: reject+=3
            1 Non input pseudo reload: reject++
            1 Early clobber: reject++
          alt=0,overall=11,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 59:  (0) =a  (1) =&d  (2) 0  (3) rm {*udivmoddi4}
      Creating newreg=213 from oldreg=140, assigning class DREG to r213
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 60:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 61:  (0) =rm  (1) 0  (2) re {*subdi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 63:  (0) =rm  (1) %0  (2) re {*adddi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 64:  (0) m  (1) re {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 65:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 66:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 67:  (0) =rm  (1) %0  (2) re {*adddi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 69:  (0) m  (1) re {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 70:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 71:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 72:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 73:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 77:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 78:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 79:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 80:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 82:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 83:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 246:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 84:  (0) =rm  (1) %0  (2) re {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 85:  (0) =rm  (1) %0  (2) re {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 247:  (0) r  (1) Z {*movdi_internal}
            1 Small class reload: reject+=3
            1 Non input pseudo reload: reject++
            1 Early clobber: reject++
          alt=0,overall=11,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 86:  (0) =a  (1) =&d  (2) 0  (3) rm {*udivmoddi4}
      Creating newreg=214 from oldreg=153, assigning class DREG to r214
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 87:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 88:  (0) =rm  (1) 0  (2) re {*subdi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 90:  (0) =rm  (1) %0  (2) re {*adddi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 91:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 92:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 94:  (1) rBwBz {*call_value}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 96:  (0) m  (1) re {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 97:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 98:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 99:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 100:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 103:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 104:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 105:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 108:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 109:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 110:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 113:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 114:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 115:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 118:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 119:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 120:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 123:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 124:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 125:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 128:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 129:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 130:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 131:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 133:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 135:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 136:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 137:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 138:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 140:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 142:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 143:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 144:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 145:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 147:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 149:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 150:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 151:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 152:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 153:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 156:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 157:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 158:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 159:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 160:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 163:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 164:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 165:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 166:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 167:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 170:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 171:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 172:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 173:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 174:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 177:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 178:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 181:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 182:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 183:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 184:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 185:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 188:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 189:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 192:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 193:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 194:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 195:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 196:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 199:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 200:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 203:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 204:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 205:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 206:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 209:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 210:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 211:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 212:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 215:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 216:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 217:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 218:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 221:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 222:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 223:  (0) =rm  (1) %0  (2) re {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 225:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 226:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 228:  (0) rBwBz {*call}
            3 Scratch win: reject+=2
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 233:  (1) m  (2) m  (3) =&r {stack_protect_test_1_di}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 235:  (0) rBwBz {*call}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #1: **********

EBB 2 3
EBB 4

********** Pseudo live ranges #1: **********

  BB 3
   Insn 235: point = 0, n_alt = 0
  BB 4
  BB 2
   Insn 234: point = 0, n_alt = -1
   Insn 233: point = 0, n_alt = 0
   Insn 241: point = 2, n_alt = -1
   Insn 231: point = 2, n_alt = -2
   Insn 230: point = 3, n_alt = -1
   Insn 229: point = 3, n_alt = -1
   Insn 228: point = 3, n_alt = 0
   Insn 227: point = 3, n_alt = -2
   Insn 226: point = 4, n_alt = 3
   Insn 225: point = 5, n_alt = 0
   Insn 224: point = 5, n_alt = -2
   Insn 223: point = 6, n_alt = 0
   Insn 222: point = 8, n_alt = 3
   Insn 221: point = 9, n_alt = 0
   Insn 220: point = 9, n_alt = -2
   Insn 219: point = 10, n_alt = -2
   Insn 218: point = 11, n_alt = 4
   Insn 217: point = 12, n_alt = 0
   Insn 216: point = 12, n_alt = 3
   Insn 215: point = 13, n_alt = 0
   Insn 214: point = 13, n_alt = -2
   Insn 213: point = 14, n_alt = -2
   Insn 212: point = 15, n_alt = 4
   Insn 211: point = 16, n_alt = 0
   Insn 210: point = 16, n_alt = 3
   Insn 209: point = 17, n_alt = 0
   Insn 208: point = 17, n_alt = -2
   Insn 207: point = 18, n_alt = -2
   Insn 206: point = 19, n_alt = 4
   Insn 205: point = 20, n_alt = 0
   Insn 204: point = 20, n_alt = 3
   Insn 203: point = 21, n_alt = 0
   Insn 202: point = 21, n_alt = -2
   Insn 201: point = 22, n_alt = -2
   Insn 200: point = 23, n_alt = 4
   Insn 199: point = 24, n_alt = 0
   Insn 198: point = 24, n_alt = -2
   Insn 197: point = 25, n_alt = -2
   Insn 196: point = 26, n_alt = 0
   Insn 195: point = 26, n_alt = 3
   Insn 194: point = 27, n_alt = 0
   Insn 193: point = 28, n_alt = 3
   Insn 192: point = 29, n_alt = 0
   Insn 191: point = 29, n_alt = -2
   Insn 190: point = 30, n_alt = -2
   Insn 189: point = 31, n_alt = 4
   Insn 188: point = 32, n_alt = 0
   Insn 187: point = 32, n_alt = -2
   Insn 186: point = 33, n_alt = -2
   Insn 185: point = 34, n_alt = 0
   Insn 184: point = 34, n_alt = 3
   Insn 183: point = 35, n_alt = 0
   Insn 182: point = 36, n_alt = 3
   Insn 181: point = 37, n_alt = 0
   Insn 180: point = 37, n_alt = -2
   Insn 179: point = 38, n_alt = -2
   Insn 178: point = 39, n_alt = 4
   Insn 177: point = 40, n_alt = 0
   Insn 176: point = 40, n_alt = -2
   Insn 175: point = 41, n_alt = -2
   Insn 174: point = 42, n_alt = 0
   Insn 173: point = 42, n_alt = 3
   Insn 172: point = 43, n_alt = 0
   Insn 171: point = 44, n_alt = 3
   Insn 170: point = 45, n_alt = 0
   Insn 169: point = 45, n_alt = -2
   Insn 168: point = 46, n_alt = -2
   Insn 167: point = 47, n_alt = 4
   Insn 166: point = 48, n_alt = 0
   Insn 165: point = 48, n_alt = 0
   Insn 164: point = 48, n_alt = 3
   Insn 163: point = 49, n_alt = 0
   Insn 162: point = 49, n_alt = -2
   Insn 161: point = 50, n_alt = -2
   Insn 160: point = 51, n_alt = 4
   Insn 159: point = 52, n_alt = 0
   Insn 158: point = 52, n_alt = 0
   Insn 157: point = 52, n_alt = 3
   Insn 156: point = 53, n_alt = 0
   Insn 155: point = 53, n_alt = -2
   Insn 154: point = 54, n_alt = -2
   Insn 153: point = 55, n_alt = 4
   Insn 152: point = 56, n_alt = 0
   Insn 151: point = 56, n_alt = 0
   Insn 150: point = 56, n_alt = 3
   Insn 149: point = 57, n_alt = 0
   Insn 148: point = 57, n_alt = -2
   Insn 147: point = 58, n_alt = 0
   Insn 146: point = 58, n_alt = -2
   Insn 145: point = 59, n_alt = 4
   Insn 144: point = 60, n_alt = 0
   Insn 143: point = 60, n_alt = 3
   Insn 142: point = 61, n_alt = 0
   Insn 141: point = 61, n_alt = -2
   Insn 140: point = 62, n_alt = 0
   Insn 139: point = 62, n_alt = -2
   Insn 138: point = 63, n_alt = 4
   Insn 137: point = 64, n_alt = 0
   Insn 136: point = 64, n_alt = 3
   Insn 135: point = 65, n_alt = 0
   Insn 134: point = 65, n_alt = -2
   Insn 133: point = 66, n_alt = 0
   Insn 132: point = 66, n_alt = -2
   Insn 131: point = 67, n_alt = 4
   Insn 130: point = 68, n_alt = 0
   Insn 129: point = 68, n_alt = 3
   Insn 128: point = 69, n_alt = 0
   Insn 127: point = 69, n_alt = -2
   Insn 126: point = 70, n_alt = -2
   Insn 125: point = 71, n_alt = 3
   Insn 124: point = 72, n_alt = 0
   Insn 123: point = 73, n_alt = 0
   Insn 122: point = 73, n_alt = -2
   Insn 121: point = 74, n_alt = -2
   Insn 120: point = 75, n_alt = 3
   Insn 119: point = 76, n_alt = 0
   Insn 118: point = 77, n_alt = 0
   Insn 117: point = 77, n_alt = -2
   Insn 116: point = 78, n_alt = -2
   Insn 115: point = 79, n_alt = 3
   Insn 114: point = 80, n_alt = 0
   Insn 113: point = 81, n_alt = 0
   Insn 112: point = 81, n_alt = -2
   Insn 111: point = 82, n_alt = -2
   Insn 110: point = 83, n_alt = 3
   Insn 109: point = 84, n_alt = 0
   Insn 108: point = 85, n_alt = 0
   Insn 107: point = 85, n_alt = -2
   Insn 106: point = 86, n_alt = -2
   Insn 105: point = 87, n_alt = 3
   Insn 104: point = 88, n_alt = 0
   Insn 103: point = 89, n_alt = 0
   Insn 102: point = 89, n_alt = -2
   Insn 101: point = 90, n_alt = -2
   Insn 100: point = 91, n_alt = 3
   Insn 99: point = 92, n_alt = 0
   Insn 98: point = 93, n_alt = 0
   Insn 97: point = 93, n_alt = 3
   Insn 96: point = 93, n_alt = 5
   Insn 95: point = 94, n_alt = -2
   Insn 94: point = 95, n_alt = 0
   Insn 93: point = 95, n_alt = -2
   Insn 92: point = 96, n_alt = 4
   Insn 91: point = 97, n_alt = 5
   Insn 90: point = 98, n_alt = 0
   Insn 89: point = 100, n_alt = -2
   Insn 88: point = 101, n_alt = 0
   Insn 87: point = 102, n_alt = 0
   Insn 86: point = 104, n_alt = 0
   Insn 247: point = 106, n_alt = 2
   Insn 85: point = 107, n_alt = 0
   Insn 84: point = 109, n_alt = 0
   Insn 246: point = 111, n_alt = 2
   Insn 83: point = 112, n_alt = 0
   Insn 82: point = 114, n_alt = 0
   Insn 80: point = 115, n_alt = 2
   Insn 79: point = 116, n_alt = 3
   Insn 78: point = 117, n_alt = 0
   Insn 77: point = 119, n_alt = 0
   Insn 73: point = 120, n_alt = 2
   Insn 72: point = 121, n_alt = 3
   Insn 71: point = 122, n_alt = 0
   Insn 70: point = 124, n_alt = 0
   Insn 69: point = 125, n_alt = 5
   Insn 68: point = 126, n_alt = -2
   Insn 67: point = 128, n_alt = 0
   Insn 66: point = 130, n_alt = 0
   Insn 65: point = 132, n_alt = 0
   Insn 64: point = 133, n_alt = 5
   Insn 63: point = 134, n_alt = 0
   Insn 62: point = 136, n_alt = -2
   Insn 61: point = 137, n_alt = 0
   Insn 60: point = 138, n_alt = 0
   Insn 59: point = 140, n_alt = 0
   Insn 245: point = 142, n_alt = 2
   Insn 58: point = 143, n_alt = 0
   Insn 57: point = 145, n_alt = 0
   Insn 244: point = 147, n_alt = 2
   Insn 56: point = 148, n_alt = 0
   Insn 55: point = 150, n_alt = 0
   Insn 53: point = 151, n_alt = 2
   Insn 52: point = 152, n_alt = 3
   Insn 51: point = 153, n_alt = 0
   Insn 50: point = 155, n_alt = 0
   Insn 46: point = 156, n_alt = 2
   Insn 45: point = 157, n_alt = 3
   Insn 44: point = 158, n_alt = 0
   Insn 43: point = 160, n_alt = 0
   Insn 42: point = 161, n_alt = 5
   Insn 41: point = 162, n_alt = -2
   Insn 40: point = 164, n_alt = 0
   Insn 39: point = 166, n_alt = 0
   Insn 38: point = 168, n_alt = 0
   Insn 37: point = 169, n_alt = 5
   Insn 36: point = 170, n_alt = 0
   Insn 35: point = 172, n_alt = -2
   Insn 34: point = 173, n_alt = 0
   Insn 33: point = 174, n_alt = 0
   Insn 32: point = 176, n_alt = 0
   Insn 243: point = 178, n_alt = 2
   Insn 31: point = 179, n_alt = 0
   Insn 30: point = 181, n_alt = 0
   Insn 242: point = 183, n_alt = 2
   Insn 29: point = 184, n_alt = 0
   Insn 28: point = 186, n_alt = 0
   Insn 26: point = 187, n_alt = 2
   Insn 25: point = 188, n_alt = 3
   Insn 24: point = 189, n_alt = 0
   Insn 23: point = 191, n_alt = 0
   Insn 19: point = 192, n_alt = 2
   Insn 18: point = 193, n_alt = 3
   Insn 17: point = 194, n_alt = 0
   Insn 16: point = 196, n_alt = 0
   Insn 15: point = 197, n_alt = 5
   Insn 14: point = 198, n_alt = -2
   Insn 13: point = 200, n_alt = 0
   Insn 12: point = 202, n_alt = 0
   Insn 11: point = 204, n_alt = 0
   Insn 10: point = 205, n_alt = 1
   Insn 9: point = 205, n_alt = 1
   Insn 8: point = 205, n_alt = 1
   Insn 7: point = 205, n_alt = -2
   Insn 6: point = 207, n_alt = -2
   Insn 3: point = 208, n_alt = 0
 r82: [201..202]
 r83: [199..200]
 r84: [197..198]
 r85: [193..194]
 r86: [192..210]
 r89: [188..189]
 r90: [187..210]
 r92: [180..184]
 r93: [165..166]
 r94: [163..164]
 r95: [161..162]
 r96: [157..158]
 r97: [156..210]
 r100: [152..153]
 r101: [151..210]
 r103: [144..148]
 r104: [129..130]
 r105: [127..128]
 r106: [125..126]
 r107: [121..122]
 r108: [120..210]
 r111: [116..117]
 r112: [115..210]
 r114: [108..112]
 r115: [5..6]
 r116: [2..205]
 r117: [206..207]
 r118: [203..204]
 r119: [195..196]
 r121: [190..191]
 r122: [185..186]
 r123: [180..181]
 r124: [177..179]
 r126: [175..176]
 r128: [173..174]
 r129: [171..172]
 r130: [169..170]
 r131: [167..168]
 r132: [159..160]
 r134: [154..155]
 r135: [149..150]
 r136: [144..145]
 r137: [141..143]
 r139: [139..140]
 r141: [137..138]
 r142: [135..136]
 r143: [133..134]
 r144: [131..132]
 r145: [123..124]
 r147: [118..119]
 r148: [113..114]
 r149: [108..109]
 r150: [105..107]
 r152: [103..104]
 r154: [101..102]
 r155: [99..100]
 r156: [97..98]
 r157: [95..96]
 r158: [93..94]
 r159: [90..92]
 r160: [89..91]
 r161: [86..88]
 r162: [85..87]
 r163: [82..84]
 r164: [81..83]
 r165: [78..80]
 r166: [77..79]
 r167: [74..76]
 r168: [73..75]
 r169: [70..72]
 r170: [69..71]
 r171: [65..68]
 r172: [66..67]
 r173: [61..64]
 r174: [62..63]
 r175: [57..60]
 r176: [58..59]
 r177: [53..56]
 r178: [54..55]
 r179: [49..52]
 r180: [50..51]
 r181: [45..48]
 r182: [46..47]
 r183: [41..44]
 r184: [40..43]
 r185: [37..42]
 r186: [38..39]
 r187: [33..36]
 r188: [32..35]
 r189: [29..34]
 r190: [30..31]
 r191: [25..28]
 r192: [24..27]
 r193: [21..26]
 r194: [22..23]
 r195: [17..20]
 r196: [18..19]
 r197: [13..16]
 r198: [14..15]
 r199: [9..12]
 r200: [10..11]
 r201: [7..8]
 r202: [3..4]
 r203: [182..183]
 r204: [177..178]
 r205: [146..147]
 r206: [141..142]
 r207: [110..111]
 r208: [105..106]
 r209: [208..209]
 r210: [0..1]
 r212: [176..177]
 r213: [140..141]
 r214: [104..105]
Compressing live ranges: from 211 to 154 - 72%
Ranges after the compression:
 r82: [146..147]
 r83: [144..145]
 r84: [142..143]
 r85: [138..139]
 r86: [138..153]
 r89: [134..135]
 r90: [134..153]
 r92: [128..131]
 r93: [114..115]
 r94: [112..113]
 r95: [110..111]
 r96: [106..107]
 r97: [106..153]
 r100: [102..103]
 r101: [102..153]
 r103: [96..99]
 r104: [82..83]
 r105: [80..81]
 r106: [78..79]
 r107: [74..75]
 r108: [74..153]
 r111: [70..71]
 r112: [70..153]
 r114: [64..67]
 r115: [4..5]
 r116: [2..149]
 r117: [150..151]
 r118: [148..149]
 r119: [140..141]
 r121: [136..137]
 r122: [132..133]
 r123: [128..129]
 r124: [126..127]
 r126: [124..125]
 r128: [122..123]
 r129: [120..121]
 r130: [118..119]
 r131: [116..117]
 r132: [108..109]
 r134: [104..105]
 r135: [100..101]
 r136: [96..97]
 r137: [94..95]
 r139: [92..93]
 r141: [90..91]
 r142: [88..89]
 r143: [86..87]
 r144: [84..85]
 r145: [76..77]
 r147: [72..73]
 r148: [68..69]
 r149: [64..65]
 r150: [62..63]
 r152: [60..61]
 r154: [58..59]
 r155: [56..57]
 r156: [54..55]
 r157: [52..53]
 r158: [50..51]
 r159: [48..49]
 r160: [48..49]
 r161: [46..47]
 r162: [46..47]
 r163: [44..45]
 r164: [44..45]
 r165: [42..43]
 r166: [42..43]
 r167: [40..41]
 r168: [40..41]
 r169: [38..39]
 r170: [38..39]
 r171: [36..37]
 r172: [36..37]
 r173: [34..35]
 r174: [34..35]
 r175: [32..33]
 r176: [32..33]
 r177: [30..31]
 r178: [30..31]
 r179: [28..29]
 r180: [28..29]
 r181: [26..27]
 r182: [26..27]
 r183: [24..25]
 r184: [24..25]
 r185: [22..25]
 r186: [22..23]
 r187: [20..21]
 r188: [20..21]
 r189: [18..21]
 r190: [18..19]
 r191: [16..17]
 r192: [16..17]
 r193: [14..17]
 r194: [14..15]
 r195: [12..13]
 r196: [12..13]
 r197: [10..11]
 r198: [10..11]
 r199: [8..9]
 r200: [8..9]
 r201: [6..7]
 r202: [2..3]
 r203: [130..131]
 r204: [126..127]
 r205: [98..99]
 r206: [94..95]
 r207: [66..67]
 r208: [62..63]
 r209: [152..153]
 r210: [0..1]
 r212: [125..126]
 r213: [93..94]
 r214: [61..62]

********** Assignment #1: **********

	 Assigning to 212 (cl=DREG, orig=127, freq=1000, tfirst=212, tfreq=1000)...
	 Trying 1: spill 204(freq=2000)	 Now best 1(cost=1000, bad_spills=0, insn_pseudos=1)

      Spill r204(hr=1, freq=2000) for r212
	   Assign 1 to reload r212 (freq=1000)
	 Assigning to 213 (cl=DREG, orig=140, freq=1000, tfirst=213, tfreq=1000)...
	 Trying 1: spill 206(freq=2000)	 Now best 1(cost=1000, bad_spills=0, insn_pseudos=1)

      Spill r206(hr=1, freq=2000) for r213
	   Assign 1 to reload r213 (freq=1000)
	 Assigning to 214 (cl=DREG, orig=153, freq=1000, tfirst=214, tfreq=1000)...
	 Trying 1: spill 208(freq=2000)	 Now best 1(cost=1000, bad_spills=0, insn_pseudos=1)

      Spill r208(hr=1, freq=2000) for r214
	   Assign 1 to reload r214 (freq=1000)
  Reassigning non-reload pseudos
	   Assign 2 to r204 (freq=2000)
	   Assign 2 to r206 (freq=2000)
	   Assign 5 to r208 (freq=2000)

********** Undoing inheritance #1: **********


********** Pseudos coalescing #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 6
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 247:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 245:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 243:  (0) r  (1) Z {*movdi_internal}
            1 Early clobber: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 86:  (0) =a  (1) =&d  (2) 0  (3) rm {*udivmoddi4}
            1 Early clobber: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 59:  (0) =a  (1) =&d  (2) 0  (3) rm {*udivmoddi4}
            1 Early clobber: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 32:  (0) =a  (1) =&d  (2) 0  (3) rm {*udivmoddi4}
	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=144, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 19 to 7 (offset=80, prev_offset=0)
Can eliminate 19 to 6 (offset=-48, prev_offset=-48)
changing reg in insn 12
changing reg in insn 13
changing reg in insn 13
changing reg in insn 14
changing reg in insn 14
changing reg in insn 15
changing reg in insn 17
changing reg in insn 18
changing reg in insn 19
changing reg in insn 18
changing reg in insn 24
changing reg in insn 25
changing reg in insn 26
changing reg in insn 25
changing reg in insn 29
changing reg in insn 31
changing reg in insn 39
changing reg in insn 40
changing reg in insn 40
changing reg in insn 41
changing reg in insn 41
changing reg in insn 42
changing reg in insn 44
changing reg in insn 45
changing reg in insn 46
changing reg in insn 45
changing reg in insn 51
changing reg in insn 52
changing reg in insn 53
changing reg in insn 52
changing reg in insn 56
changing reg in insn 58
changing reg in insn 66
changing reg in insn 67
changing reg in insn 67
changing reg in insn 68
changing reg in insn 68
changing reg in insn 69
changing reg in insn 71
changing reg in insn 72
changing reg in insn 73
changing reg in insn 72
changing reg in insn 78
changing reg in insn 79
changing reg in insn 80
changing reg in insn 79
changing reg in insn 83
changing reg in insn 85
changing reg in insn 223
changing reg in insn 224
changing reg in insn 7
changing reg in insn 231
changing reg in insn 6
changing reg in insn 7
changing reg in insn 11
changing reg in insn 12
changing reg in insn 16
changing reg in insn 17
changing reg in insn 23
changing reg in insn 24
changing reg in insn 28
changing reg in insn 29
changing reg in insn 30
changing reg in insn 31
changing reg in insn 31
changing reg in insn 32
changing reg in insn 32
changing reg in insn 32
changing reg in insn 33
changing reg in insn 33
changing reg in insn 34
changing reg in insn 35
changing reg in insn 36
changing reg in insn 36
changing reg in insn 37
changing reg in insn 38
changing reg in insn 39
changing reg in insn 43
changing reg in insn 44
changing reg in insn 50
changing reg in insn 51
changing reg in insn 55
changing reg in insn 56
changing reg in insn 57
changing reg in insn 58
changing reg in insn 58
changing reg in insn 59
changing reg in insn 59
changing reg in insn 59
changing reg in insn 60
changing reg in insn 60
changing reg in insn 61
changing reg in insn 62
changing reg in insn 63
changing reg in insn 63
changing reg in insn 64
changing reg in insn 65
changing reg in insn 66
changing reg in insn 70
changing reg in insn 71
changing reg in insn 77
changing reg in insn 78
changing reg in insn 82
changing reg in insn 83
changing reg in insn 84
changing reg in insn 85
changing reg in insn 85
changing reg in insn 86
changing reg in insn 86
changing reg in insn 86
changing reg in insn 87
changing reg in insn 87
changing reg in insn 88
changing reg in insn 89
changing reg in insn 90
changing reg in insn 90
changing reg in insn 91
changing reg in insn 92
changing reg in insn 93
changing reg in insn 95
changing reg in insn 96
changing reg in insn 99
changing reg in insn 101
changing reg in insn 100
changing reg in insn 102
changing reg in insn 104
changing reg in insn 106
changing reg in insn 105
changing reg in insn 107
changing reg in insn 109
changing reg in insn 111
changing reg in insn 110
changing reg in insn 112
changing reg in insn 114
changing reg in insn 116
changing reg in insn 115
changing reg in insn 117
changing reg in insn 119
changing reg in insn 121
changing reg in insn 120
changing reg in insn 122
changing reg in insn 124
changing reg in insn 126
changing reg in insn 125
changing reg in insn 127
changing reg in insn 129
changing reg in insn 134
changing reg in insn 131
changing reg in insn 132
changing reg in insn 136
changing reg in insn 141
changing reg in insn 138
changing reg in insn 139
changing reg in insn 143
changing reg in insn 148
changing reg in insn 145
changing reg in insn 146
changing reg in insn 150
changing reg in insn 155
changing reg in insn 153
changing reg in insn 154
changing reg in insn 157
changing reg in insn 162
changing reg in insn 160
changing reg in insn 161
changing reg in insn 164
changing reg in insn 169
changing reg in insn 167
changing reg in insn 168
changing reg in insn 171
changing reg in insn 175
changing reg in insn 172
changing reg in insn 176
changing reg in insn 173
changing reg in insn 180
changing reg in insn 178
changing reg in insn 179
changing reg in insn 182
changing reg in insn 186
changing reg in insn 183
changing reg in insn 187
changing reg in insn 184
changing reg in insn 191
changing reg in insn 189
changing reg in insn 190
changing reg in insn 193
changing reg in insn 197
changing reg in insn 194
changing reg in insn 198
changing reg in insn 195
changing reg in insn 202
changing reg in insn 200
changing reg in insn 201
changing reg in insn 204
changing reg in insn 208
changing reg in insn 206
changing reg in insn 207
changing reg in insn 210
changing reg in insn 214
changing reg in insn 212
changing reg in insn 213
changing reg in insn 216
changing reg in insn 220
changing reg in insn 218
changing reg in insn 219
changing reg in insn 222
changing reg in insn 223
changing reg in insn 226
changing reg in insn 227
changing reg in insn 242
changing reg in insn 30
changing reg in insn 243
changing reg in insn 32
changing reg in insn 32
changing reg in insn 244
changing reg in insn 57
changing reg in insn 245
changing reg in insn 59
changing reg in insn 59
changing reg in insn 246
changing reg in insn 84
changing reg in insn 247
changing reg in insn 86
changing reg in insn 86
changing reg in insn 3
changing reg in insn 233
deleting insn with uid = 14.
deleting insn with uid = 41.
deleting insn with uid = 68.
deleting insn with uid = 95.
deleting insn with uid = 132.
deleting insn with uid = 139.
deleting insn with uid = 146.
deleting insn with uid = 154.
deleting insn with uid = 161.
deleting insn with uid = 168.
deleting insn with uid = 179.
deleting insn with uid = 190.
deleting insn with uid = 201.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 94.
verify found no changes in insn with uid = 98.
verify found no changes in insn with uid = 103.
verify found no changes in insn with uid = 108.
verify found no changes in insn with uid = 113.
verify found no changes in insn with uid = 118.
verify found no changes in insn with uid = 123.
verify found no changes in insn with uid = 128.
verify found no changes in insn with uid = 135.
verify found no changes in insn with uid = 142.
verify found no changes in insn with uid = 149.
verify found no changes in insn with uid = 156.
verify found no changes in insn with uid = 163.
verify found no changes in insn with uid = 170.
verify found no changes in insn with uid = 181.
verify found no changes in insn with uid = 192.
verify found no changes in insn with uid = 203.
verify found no changes in insn with uid = 209.
verify found no changes in insn with uid = 215.
verify found no changes in insn with uid = 221.
verify found no changes in insn with uid = 225.
verify found no changes in insn with uid = 228.
verify found no changes in insn with uid = 235.


test_explorer_file2

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 41 [r13] 42 [r14] 43 [r15]
;;  ref usage 	r0={92d,70u} r1={55d,27u} r2={42d,19u} r3={1d,1u} r4={43d,18u} r5={47d,23u} r6={1d,60u} r7={5d,39u} r8={23d} r9={23d} r10={23d} r11={23d} r12={23d} r13={23d} r14={23d} r15={23d} r17={47d,1u} r18={23d} r19={1d,1u,1e} r20={24d} r21={24d} r22={24d} r23={24d} r24={24d} r25={24d} r26={24d} r27={24d} r28={23d} r29={23d} r30={23d} r31={23d} r32={23d} r33={23d} r34={23d} r35={23d} r36={28d,3u} r37={28d,3u} r38={24d} r39={24d} r40={1d} r41={1d} r42={1d} r43={1d} r44={23d} r45={23d} r46={23d} r47={23d} r48={23d} r49={23d} r50={23d} r51={23d} r52={23d} r53={23d} r54={23d} r55={23d} r56={23d} r57={23d} r58={23d} r59={23d} r60={23d} r61={23d} r62={23d} r63={23d} r64={23d} r65={23d} r66={23d} r67={23d} r68={23d} r69={23d} r70={23d} r71={23d} r72={23d} r73={23d} r74={23d} r75={23d} 
;;    total ref usage 2027{1761d,265u,1e} in 212{189 regular + 23 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 86 90 97 101 108 112
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 86 90 97 101 108 112
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 82 83 84 85 86 89 90 92 93 94 95 96 97 100 101 103 104 105 106 107 108 111 112 114 115 116 117 118 119 121 122 123 124 126 127 128 129 130 131 132 134 135 136 137 139 140 141 142 143 144 145 147 148 149 150 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 4 3 2 NOTE_INSN_FUNCTION_BEG)
(insn 3 2 6 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 6 bp)
                        (const_int -56 [0xffffffffffffffc8])) [9 D.3563+0 S8 A64])
                (unspec:DI [
                        (mem/v/f:DI (const_int 40 [0x28]) [0 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_SET))
            (set (reg:DI 0 ax [209])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "main.c":177:28 1265 {stack_protect_set_1_di}
     (nil))
(insn 6 3 7 2 (set (reg:DI 0 ax [117])
        (reg/f:DI 7 sp)) "main.c":177:28 80 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg/f:DI 3 bx [orig:116 saved_stack.23_37 ] [116])
        (reg:DI 0 ax [117])) "main.c":177:28 80 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -124 [0xffffffffffffff84])) [1 len_a+0 S4 A32])
        (const_int 100 [0x64])) "main.c":178:13 81 {*movsi_internal}
     (nil))
(insn 9 8 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [1 len_b+0 S4 A64])
        (const_int 1000 [0x3e8])) "main.c":178:26 81 {*movsi_internal}
     (nil))
(insn 10 9 11 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -116 [0xffffffffffffff8c])) [1 len_c+0 S4 A32])
        (const_int 3000 [0xbb8])) "main.c":178:40 81 {*movsi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:SI 0 ax [118])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -124 [0xffffffffffffff84])) [1 len_a+0 S4 A32])) "main.c":179:8 81 {*movsi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:DI 0 ax [orig:82 _1 ] [82])
        (sign_extend:DI (reg:SI 0 ax [118]))) "main.c":179:8 154 {*extendsidi2_rex64}
     (nil))
(insn 13 12 15 2 (parallel [
            (set (reg:DI 0 ax [orig:83 _2 ] [83])
                (plus:DI (reg:DI 0 ax [orig:82 _1 ] [82])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":179:8 230 {*adddi_1}
     (nil))
(insn 15 13 16 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [10 D.3462+0 S8 A128])
        (reg:DI 0 ax [orig:84 _3 ] [84])) "main.c":179:8 80 {*movdi_internal}
     (nil))
(insn 16 15 17 2 (set (reg:SI 0 ax [119])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -124 [0xffffffffffffff84])) [1 len_a+0 S4 A32])) "main.c":179:8 81 {*movsi_internal}
     (nil))
(insn 17 16 18 2 (set (reg:DI 0 ax [orig:85 _4 ] [85])
        (sign_extend:DI (reg:SI 0 ax [119]))) "main.c":179:8 154 {*extendsidi2_rex64}
     (nil))
(insn 18 17 19 2 (set (reg:DI 1 dx [orig:86 _5 ] [86])
        (reg:DI 0 ax [orig:85 _4 ] [85])) "main.c":179:8 80 {*movdi_internal}
     (nil))
(insn 19 18 23 2 (set (reg:DI 2 cx [ _5+8 ])
        (const_int 0 [0])) "main.c":179:8 80 {*movdi_internal}
     (nil))
(insn 23 19 24 2 (set (reg:SI 0 ax [121])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -124 [0xffffffffffffff84])) [1 len_a+0 S4 A32])) "main.c":179:8 81 {*movsi_internal}
     (nil))
(insn 24 23 25 2 (set (reg:DI 0 ax [orig:89 _8 ] [89])
        (sign_extend:DI (reg:SI 0 ax [121]))) "main.c":179:8 154 {*extendsidi2_rex64}
     (nil))
(insn 25 24 26 2 (set (reg:DI 42 r14 [orig:90 _9 ] [90])
        (reg:DI 0 ax [orig:89 _8 ] [89])) "main.c":179:8 80 {*movdi_internal}
     (nil))
(insn 26 25 28 2 (set (reg:DI 43 r15 [ _9+8 ])
        (const_int 0 [0])) "main.c":179:8 80 {*movdi_internal}
     (nil))
(insn 28 26 29 2 (set (reg:SI 0 ax [122])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -124 [0xffffffffffffff84])) [1 len_a+0 S4 A32])) "main.c":179:8 81 {*movsi_internal}
     (nil))
(insn 29 28 242 2 (set (reg:DI 0 ax [orig:92 _11 ] [92])
        (sign_extend:DI (reg:SI 0 ax [122]))) "main.c":179:8 154 {*extendsidi2_rex64}
     (nil))
(insn 242 29 30 2 (set (reg:DI 1 dx [203])
        (const_int 16 [0x10])) "main.c":179:8 80 {*movdi_internal}
     (nil))
(insn 30 242 31 2 (parallel [
            (set (reg:DI 1 dx [123])
                (plus:DI (reg:DI 1 dx [203])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":179:8 230 {*adddi_1}
     (nil))
(insn 31 30 243 2 (parallel [
            (set (reg:DI 0 ax [124])
                (plus:DI (reg:DI 0 ax [orig:92 _11 ] [92])
                    (reg:DI 1 dx [123])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":179:8 230 {*adddi_1}
     (nil))
(insn 243 31 32 2 (set (reg:DI 2 cx [204])
        (const_int 16 [0x10])) "main.c":179:8 80 {*movdi_internal}
     (nil))
(insn 32 243 33 2 (parallel [
            (set (reg:DI 0 ax [126])
                (udiv:DI (reg:DI 0 ax [124])
                    (reg:DI 2 cx [204])))
            (set (reg:DI 1 dx [127])
                (umod:DI (reg:DI 0 ax [124])
                    (reg:DI 2 cx [204])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":179:8 492 {*udivmoddi4}
     (nil))
(insn 33 32 34 2 (parallel [
            (set (reg:DI 0 ax [128])
                (mult:DI (reg:DI 0 ax [126])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":179:8 445 {*muldi3_1}
     (nil))
(insn 34 33 35 2 (parallel [
            (set (reg/f:DI 7 sp)
                (minus:DI (reg/f:DI 7 sp)
                    (reg:DI 0 ax [128])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":179:8 303 {*subdi_1}
     (nil))
(insn 35 34 36 2 (set (reg:DI 0 ax [129])
        (reg/f:DI 7 sp)) "main.c":179:8 80 {*movdi_internal}
     (nil))
(insn 36 35 37 2 (parallel [
            (set (reg/f:DI 0 ax [130])
                (plus:DI (reg:DI 0 ax [129])
                    (const_int 0 [0])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":179:8 230 {*adddi_1}
     (nil))
(insn 37 36 38 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [3 buf_a.20+0 S8 A64])
        (reg/f:DI 0 ax [130])) "main.c":179:8 80 {*movdi_internal}
     (nil))
(insn 38 37 39 2 (set (reg:SI 0 ax [131])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [1 len_b+0 S4 A64])) "main.c":179:22 81 {*movsi_internal}
     (nil))
(insn 39 38 40 2 (set (reg:DI 0 ax [orig:93 _12 ] [93])
        (sign_extend:DI (reg:SI 0 ax [131]))) "main.c":179:22 154 {*extendsidi2_rex64}
     (nil))
(insn 40 39 42 2 (parallel [
            (set (reg:DI 0 ax [orig:94 _13 ] [94])
                (plus:DI (reg:DI 0 ax [orig:93 _12 ] [93])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":179:22 230 {*adddi_1}
     (nil))
(insn 42 40 43 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [10 D.3468+0 S8 A128])
        (reg:DI 0 ax [orig:95 _14 ] [95])) "main.c":179:22 80 {*movdi_internal}
     (nil))
(insn 43 42 44 2 (set (reg:SI 0 ax [132])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [1 len_b+0 S4 A64])) "main.c":179:22 81 {*movsi_internal}
     (nil))
(insn 44 43 45 2 (set (reg:DI 0 ax [orig:96 _15 ] [96])
        (sign_extend:DI (reg:SI 0 ax [132]))) "main.c":179:22 154 {*extendsidi2_rex64}
     (nil))
(insn 45 44 46 2 (set (reg:DI 40 r12 [orig:97 _16 ] [97])
        (reg:DI 0 ax [orig:96 _15 ] [96])) "main.c":179:22 80 {*movdi_internal}
     (nil))
(insn 46 45 50 2 (set (reg:DI 41 r13 [ _16+8 ])
        (const_int 0 [0])) "main.c":179:22 80 {*movdi_internal}
     (nil))
(insn 50 46 51 2 (set (reg:SI 0 ax [134])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [1 len_b+0 S4 A64])) "main.c":179:22 81 {*movsi_internal}
     (nil))
(insn 51 50 52 2 (set (reg:DI 0 ax [orig:100 _19 ] [100])
        (sign_extend:DI (reg:SI 0 ax [134]))) "main.c":179:22 154 {*extendsidi2_rex64}
     (nil))
(insn 52 51 53 2 (set (reg:DI 38 r10 [orig:101 _20 ] [101])
        (reg:DI 0 ax [orig:100 _19 ] [100])) "main.c":179:22 80 {*movdi_internal}
     (nil))
(insn 53 52 55 2 (set (reg:DI 39 r11 [ _20+8 ])
        (const_int 0 [0])) "main.c":179:22 80 {*movdi_internal}
     (nil))
(insn 55 53 56 2 (set (reg:SI 0 ax [135])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [1 len_b+0 S4 A64])) "main.c":179:22 81 {*movsi_internal}
     (nil))
(insn 56 55 244 2 (set (reg:DI 0 ax [orig:103 _22 ] [103])
        (sign_extend:DI (reg:SI 0 ax [135]))) "main.c":179:22 154 {*extendsidi2_rex64}
     (nil))
(insn 244 56 57 2 (set (reg:DI 1 dx [205])
        (const_int 16 [0x10])) "main.c":179:22 80 {*movdi_internal}
     (nil))
(insn 57 244 58 2 (parallel [
            (set (reg:DI 1 dx [136])
                (plus:DI (reg:DI 1 dx [205])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":179:22 230 {*adddi_1}
     (nil))
(insn 58 57 245 2 (parallel [
            (set (reg:DI 0 ax [137])
                (plus:DI (reg:DI 0 ax [orig:103 _22 ] [103])
                    (reg:DI 1 dx [136])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":179:22 230 {*adddi_1}
     (nil))
(insn 245 58 59 2 (set (reg:DI 2 cx [206])
        (const_int 16 [0x10])) "main.c":179:22 80 {*movdi_internal}
     (nil))
(insn 59 245 60 2 (parallel [
            (set (reg:DI 0 ax [139])
                (udiv:DI (reg:DI 0 ax [137])
                    (reg:DI 2 cx [206])))
            (set (reg:DI 1 dx [140])
                (umod:DI (reg:DI 0 ax [137])
                    (reg:DI 2 cx [206])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":179:22 492 {*udivmoddi4}
     (nil))
(insn 60 59 61 2 (parallel [
            (set (reg:DI 0 ax [141])
                (mult:DI (reg:DI 0 ax [139])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":179:22 445 {*muldi3_1}
     (nil))
(insn 61 60 62 2 (parallel [
            (set (reg/f:DI 7 sp)
                (minus:DI (reg/f:DI 7 sp)
                    (reg:DI 0 ax [141])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":179:22 303 {*subdi_1}
     (nil))
(insn 62 61 63 2 (set (reg:DI 0 ax [142])
        (reg/f:DI 7 sp)) "main.c":179:22 80 {*movdi_internal}
     (nil))
(insn 63 62 64 2 (parallel [
            (set (reg/f:DI 0 ax [143])
                (plus:DI (reg:DI 0 ax [142])
                    (const_int 0 [0])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":179:22 230 {*adddi_1}
     (nil))
(insn 64 63 65 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [3 buf_b.21+0 S8 A64])
        (reg/f:DI 0 ax [143])) "main.c":179:22 80 {*movdi_internal}
     (nil))
(insn 65 64 66 2 (set (reg:SI 0 ax [144])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -116 [0xffffffffffffff8c])) [1 len_c+0 S4 A32])) "main.c":179:36 81 {*movsi_internal}
     (nil))
(insn 66 65 67 2 (set (reg:DI 0 ax [orig:104 _23 ] [104])
        (sign_extend:DI (reg:SI 0 ax [144]))) "main.c":179:36 154 {*extendsidi2_rex64}
     (nil))
(insn 67 66 69 2 (parallel [
            (set (reg:DI 0 ax [orig:105 _24 ] [105])
                (plus:DI (reg:DI 0 ax [orig:104 _23 ] [104])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":179:36 230 {*adddi_1}
     (nil))
(insn 69 67 70 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -80 [0xffffffffffffffb0])) [10 D.3474+0 S8 A128])
        (reg:DI 0 ax [orig:106 _25 ] [106])) "main.c":179:36 80 {*movdi_internal}
     (nil))
(insn 70 69 71 2 (set (reg:SI 0 ax [145])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -116 [0xffffffffffffff8c])) [1 len_c+0 S4 A32])) "main.c":179:36 81 {*movsi_internal}
     (nil))
(insn 71 70 72 2 (set (reg:DI 0 ax [orig:107 _26 ] [107])
        (sign_extend:DI (reg:SI 0 ax [145]))) "main.c":179:36 154 {*extendsidi2_rex64}
     (nil))
(insn 72 71 73 2 (set (reg:DI 36 r8 [orig:108 _27 ] [108])
        (reg:DI 0 ax [orig:107 _26 ] [107])) "main.c":179:36 80 {*movdi_internal}
     (nil))
(insn 73 72 77 2 (set (reg:DI 37 r9 [ _27+8 ])
        (const_int 0 [0])) "main.c":179:36 80 {*movdi_internal}
     (nil))
(insn 77 73 78 2 (set (reg:SI 0 ax [147])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -116 [0xffffffffffffff8c])) [1 len_c+0 S4 A32])) "main.c":179:36 81 {*movsi_internal}
     (nil))
(insn 78 77 79 2 (set (reg:DI 0 ax [orig:111 _30 ] [111])
        (sign_extend:DI (reg:SI 0 ax [147]))) "main.c":179:36 154 {*extendsidi2_rex64}
     (nil))
(insn 79 78 80 2 (set (reg:DI 4 si [orig:112 _31 ] [112])
        (reg:DI 0 ax [orig:111 _30 ] [111])) "main.c":179:36 80 {*movdi_internal}
     (nil))
(insn 80 79 82 2 (set (reg:DI 5 di [ _31+8 ])
        (const_int 0 [0])) "main.c":179:36 80 {*movdi_internal}
     (nil))
(insn 82 80 83 2 (set (reg:SI 0 ax [148])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -116 [0xffffffffffffff8c])) [1 len_c+0 S4 A32])) "main.c":179:36 81 {*movsi_internal}
     (nil))
(insn 83 82 246 2 (set (reg:DI 0 ax [orig:114 _33 ] [114])
        (sign_extend:DI (reg:SI 0 ax [148]))) "main.c":179:36 154 {*extendsidi2_rex64}
     (nil))
(insn 246 83 84 2 (set (reg:DI 1 dx [207])
        (const_int 16 [0x10])) "main.c":179:36 80 {*movdi_internal}
     (nil))
(insn 84 246 85 2 (parallel [
            (set (reg:DI 1 dx [149])
                (plus:DI (reg:DI 1 dx [207])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":179:36 230 {*adddi_1}
     (nil))
(insn 85 84 247 2 (parallel [
            (set (reg:DI 0 ax [150])
                (plus:DI (reg:DI 0 ax [orig:114 _33 ] [114])
                    (reg:DI 1 dx [149])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":179:36 230 {*adddi_1}
     (nil))
(insn 247 85 86 2 (set (reg:DI 5 di [208])
        (const_int 16 [0x10])) "main.c":179:36 80 {*movdi_internal}
     (nil))
(insn 86 247 87 2 (parallel [
            (set (reg:DI 0 ax [152])
                (udiv:DI (reg:DI 0 ax [150])
                    (reg:DI 5 di [208])))
            (set (reg:DI 1 dx [153])
                (umod:DI (reg:DI 0 ax [150])
                    (reg:DI 5 di [208])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":179:36 492 {*udivmoddi4}
     (nil))
(insn 87 86 88 2 (parallel [
            (set (reg:DI 0 ax [154])
                (mult:DI (reg:DI 0 ax [152])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":179:36 445 {*muldi3_1}
     (nil))
(insn 88 87 89 2 (parallel [
            (set (reg/f:DI 7 sp)
                (minus:DI (reg/f:DI 7 sp)
                    (reg:DI 0 ax [154])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":179:36 303 {*subdi_1}
     (nil))
(insn 89 88 90 2 (set (reg:DI 0 ax [155])
        (reg/f:DI 7 sp)) "main.c":179:36 80 {*movdi_internal}
     (nil))
(insn 90 89 91 2 (parallel [
            (set (reg/f:DI 0 ax [156])
                (plus:DI (reg:DI 0 ax [155])
                    (const_int 0 [0])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":179:36 230 {*adddi_1}
     (nil))
(insn 91 90 92 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [3 buf_c.22+0 S8 A64])
        (reg/f:DI 0 ax [156])) "main.c":179:36 80 {*movdi_internal}
     (nil))
(insn 92 91 93 2 (set (reg:DI 0 ax [157])
        (symbol_ref/f:DI ("*.LC21") [flags 0x2]  <var_decl 0x7fa6108e2120 *.LC21>)) "main.c":180:36 80 {*movdi_internal}
     (nil))
(insn 93 92 94 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [157])) "main.c":180:36 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC21") [flags 0x2]  <var_decl 0x7fa6108e2120 *.LC21>)
        (nil)))
(call_insn 94 93 96 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("explorer_tester_create") [flags 0x41]  <function_decl 0x7fa610b72300 explorer_tester_create>) [0 explorer_tester_create S1 A8])
            (const_int 0 [0]))) "main.c":180:36 909 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 96 94 97 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [14 tester+0 S8 A128])
        (reg:DI 0 ax [158])) "main.c":180:36 80 {*movdi_internal}
     (nil))
(insn 97 96 98 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "main.c":182:3 83 {*movqi_internal}
     (nil))
(call_insn 98 97 99 2 (call (mem:QI (symbol_ref:DI ("checksum_reset") [flags 0x3]  <function_decl 0x7fa610835100 checksum_reset>) [0 checksum_reset S1 A8])
        (const_int 0 [0])) "main.c":182:3 898 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (nil)))
(insn 99 98 100 2 (set (reg:SI 1 dx [159])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -124 [0xffffffffffffff84])) [1 len_a+0 S4 A32])) "main.c":183:3 81 {*movsi_internal}
     (nil))
(insn 100 99 101 2 (set (reg:DI 0 ax [160])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [3 buf_a.20+0 S8 A64])) "main.c":183:3 80 {*movdi_internal}
     (nil))
(insn 101 100 102 2 (set (reg:SI 4 si)
        (reg:SI 1 dx [159])) "main.c":183:3 81 {*movsi_internal}
     (nil))
(insn 102 101 103 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [160])) "main.c":183:3 80 {*movdi_internal}
     (nil))
(call_insn 103 102 104 2 (call (mem:QI (symbol_ref:DI ("fill_random") [flags 0x3]  <function_decl 0x7fa610820900 fill_random>) [0 fill_random S1 A8])
        (const_int 0 [0])) "main.c":183:3 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 104 103 105 2 (set (reg:SI 1 dx [161])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -124 [0xffffffffffffff84])) [1 len_a+0 S4 A32])) "main.c":183:30 81 {*movsi_internal}
     (nil))
(insn 105 104 106 2 (set (reg:DI 0 ax [162])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [3 buf_a.20+0 S8 A64])) "main.c":183:30 80 {*movdi_internal}
     (nil))
(insn 106 105 107 2 (set (reg:SI 4 si)
        (reg:SI 1 dx [161])) "main.c":183:30 81 {*movsi_internal}
     (nil))
(insn 107 106 108 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [162])) "main.c":183:30 80 {*movdi_internal}
     (nil))
(call_insn 108 107 109 2 (call (mem:QI (symbol_ref:DI ("checksum_upd_bytes") [flags 0x3]  <function_decl 0x7fa610835500 checksum_upd_bytes>) [0 checksum_upd_bytes S1 A8])
        (const_int 0 [0])) "main.c":183:30 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 109 108 110 2 (set (reg:SI 1 dx [163])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [1 len_b+0 S4 A64])) "main.c":184:3 81 {*movsi_internal}
     (nil))
(insn 110 109 111 2 (set (reg:DI 0 ax [164])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [3 buf_b.21+0 S8 A64])) "main.c":184:3 80 {*movdi_internal}
     (nil))
(insn 111 110 112 2 (set (reg:SI 4 si)
        (reg:SI 1 dx [163])) "main.c":184:3 81 {*movsi_internal}
     (nil))
(insn 112 111 113 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [164])) "main.c":184:3 80 {*movdi_internal}
     (nil))
(call_insn 113 112 114 2 (call (mem:QI (symbol_ref:DI ("fill_random") [flags 0x3]  <function_decl 0x7fa610820900 fill_random>) [0 fill_random S1 A8])
        (const_int 0 [0])) "main.c":184:3 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 114 113 115 2 (set (reg:SI 1 dx [165])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [1 len_b+0 S4 A64])) "main.c":184:30 81 {*movsi_internal}
     (nil))
(insn 115 114 116 2 (set (reg:DI 0 ax [166])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [3 buf_b.21+0 S8 A64])) "main.c":184:30 80 {*movdi_internal}
     (nil))
(insn 116 115 117 2 (set (reg:SI 4 si)
        (reg:SI 1 dx [165])) "main.c":184:30 81 {*movsi_internal}
     (nil))
(insn 117 116 118 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [166])) "main.c":184:30 80 {*movdi_internal}
     (nil))
(call_insn 118 117 119 2 (call (mem:QI (symbol_ref:DI ("checksum_upd_bytes") [flags 0x3]  <function_decl 0x7fa610835500 checksum_upd_bytes>) [0 checksum_upd_bytes S1 A8])
        (const_int 0 [0])) "main.c":184:30 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 119 118 120 2 (set (reg:SI 1 dx [167])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -116 [0xffffffffffffff8c])) [1 len_c+0 S4 A32])) "main.c":185:3 81 {*movsi_internal}
     (nil))
(insn 120 119 121 2 (set (reg:DI 0 ax [168])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [3 buf_c.22+0 S8 A64])) "main.c":185:3 80 {*movdi_internal}
     (nil))
(insn 121 120 122 2 (set (reg:SI 4 si)
        (reg:SI 1 dx [167])) "main.c":185:3 81 {*movsi_internal}
     (nil))
(insn 122 121 123 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [168])) "main.c":185:3 80 {*movdi_internal}
     (nil))
(call_insn 123 122 124 2 (call (mem:QI (symbol_ref:DI ("fill_random") [flags 0x3]  <function_decl 0x7fa610820900 fill_random>) [0 fill_random S1 A8])
        (const_int 0 [0])) "main.c":185:3 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 124 123 125 2 (set (reg:SI 1 dx [169])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -116 [0xffffffffffffff8c])) [1 len_c+0 S4 A32])) "main.c":185:30 81 {*movsi_internal}
     (nil))
(insn 125 124 126 2 (set (reg:DI 0 ax [170])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [3 buf_c.22+0 S8 A64])) "main.c":185:30 80 {*movdi_internal}
     (nil))
(insn 126 125 127 2 (set (reg:SI 4 si)
        (reg:SI 1 dx [169])) "main.c":185:30 81 {*movsi_internal}
     (nil))
(insn 127 126 128 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [170])) "main.c":185:30 80 {*movdi_internal}
     (nil))
(call_insn 128 127 129 2 (call (mem:QI (symbol_ref:DI ("checksum_upd_bytes") [flags 0x3]  <function_decl 0x7fa610835500 checksum_upd_bytes>) [0 checksum_upd_bytes S1 A8])
        (const_int 0 [0])) "main.c":185:30 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 129 128 130 2 (set (reg:DI 0 ax [171])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [14 tester+0 S8 A128])) "main.c":187:3 80 {*movdi_internal}
     (nil))
(insn 130 129 131 2 (set (reg:SI 2 cx)
        (const_int 1 [0x1])) "main.c":187:3 81 {*movsi_internal}
     (nil))
(insn 131 130 133 2 (set (reg:DI 1 dx [172])
        (symbol_ref:DI ("checksum_upd_file") [flags 0x3]  <function_decl 0x7fa610835700 checksum_upd_file>)) "main.c":187:3 80 {*movdi_internal}
     (nil))
(insn 133 131 134 2 (set (reg:SI 4 si)
        (const_int 1 [0x1])) "main.c":187:3 81 {*movsi_internal}
     (nil))
(insn 134 133 135 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [171])) "main.c":187:3 80 {*movdi_internal}
     (nil))
(call_insn 135 134 136 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_support_file_type") [flags 0x41]  <function_decl 0x7fa610b72700 explorer_tester_support_file_type>) [0 explorer_tester_support_file_type S1 A8])
        (const_int 0 [0])) "main.c":187:3 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 136 135 137 2 (set (reg:DI 0 ax [173])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [14 tester+0 S8 A128])) "main.c":188:3 80 {*movdi_internal}
     (nil))
(insn 137 136 138 2 (set (reg:SI 2 cx)
        (const_int 1 [0x1])) "main.c":188:3 81 {*movsi_internal}
     (nil))
(insn 138 137 140 2 (set (reg:DI 1 dx [174])
        (symbol_ref:DI ("checksum_upd_file") [flags 0x3]  <function_decl 0x7fa610835700 checksum_upd_file>)) "main.c":188:3 80 {*movdi_internal}
     (nil))
(insn 140 138 141 2 (set (reg:SI 4 si)
        (const_int 2 [0x2])) "main.c":188:3 81 {*movsi_internal}
     (nil))
(insn 141 140 142 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [173])) "main.c":188:3 80 {*movdi_internal}
     (nil))
(call_insn 142 141 143 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_support_file_type") [flags 0x41]  <function_decl 0x7fa610b72700 explorer_tester_support_file_type>) [0 explorer_tester_support_file_type S1 A8])
        (const_int 0 [0])) "main.c":188:3 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 143 142 144 2 (set (reg:DI 0 ax [175])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [14 tester+0 S8 A128])) "main.c":189:3 80 {*movdi_internal}
     (nil))
(insn 144 143 145 2 (set (reg:SI 2 cx)
        (const_int 1 [0x1])) "main.c":189:3 81 {*movsi_internal}
     (nil))
(insn 145 144 147 2 (set (reg:DI 1 dx [176])
        (symbol_ref:DI ("checksum_upd_file") [flags 0x3]  <function_decl 0x7fa610835700 checksum_upd_file>)) "main.c":189:3 80 {*movdi_internal}
     (nil))
(insn 147 145 148 2 (set (reg:SI 4 si)
        (const_int 3 [0x3])) "main.c":189:3 81 {*movsi_internal}
     (nil))
(insn 148 147 149 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [175])) "main.c":189:3 80 {*movdi_internal}
     (nil))
(call_insn 149 148 150 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_support_file_type") [flags 0x41]  <function_decl 0x7fa610b72700 explorer_tester_support_file_type>) [0 explorer_tester_support_file_type S1 A8])
        (const_int 0 [0])) "main.c":189:3 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 150 149 151 2 (set (reg:DI 0 ax [177])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [14 tester+0 S8 A128])) "main.c":190:3 80 {*movdi_internal}
     (nil))
(insn 151 150 152 2 (set (reg:SI 2 cx)
        (const_int 1 [0x1])) "main.c":190:3 81 {*movsi_internal}
     (nil))
(insn 152 151 153 2 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "main.c":190:3 81 {*movsi_internal}
     (nil))
(insn 153 152 155 2 (set (reg:DI 4 si [178])
        (symbol_ref/f:DI ("*.LC22") [flags 0x2]  <var_decl 0x7fa6108e21b0 *.LC22>)) "main.c":190:3 80 {*movdi_internal}
     (nil))
(insn 155 153 156 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [177])) "main.c":190:3 80 {*movdi_internal}
     (nil))
(call_insn 156 155 157 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_create_file") [flags 0x41]  <function_decl 0x7fa610b72b00 explorer_tester_create_file>) [0 explorer_tester_create_file S1 A8])
        (const_int 0 [0])) "main.c":190:3 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 157 156 158 2 (set (reg:DI 0 ax [179])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [14 tester+0 S8 A128])) "main.c":191:3 80 {*movdi_internal}
     (nil))
(insn 158 157 159 2 (set (reg:SI 2 cx)
        (const_int 1 [0x1])) "main.c":191:3 81 {*movsi_internal}
     (nil))
(insn 159 158 160 2 (set (reg:SI 1 dx)
        (const_int 2 [0x2])) "main.c":191:3 81 {*movsi_internal}
     (nil))
(insn 160 159 162 2 (set (reg:DI 4 si [180])
        (symbol_ref/f:DI ("*.LC23") [flags 0x2]  <var_decl 0x7fa6108e2240 *.LC23>)) "main.c":191:3 80 {*movdi_internal}
     (nil))
(insn 162 160 163 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [179])) "main.c":191:3 80 {*movdi_internal}
     (nil))
(call_insn 163 162 164 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_create_file") [flags 0x41]  <function_decl 0x7fa610b72b00 explorer_tester_create_file>) [0 explorer_tester_create_file S1 A8])
        (const_int 0 [0])) "main.c":191:3 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 164 163 165 2 (set (reg:DI 0 ax [181])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [14 tester+0 S8 A128])) "main.c":192:3 80 {*movdi_internal}
     (nil))
(insn 165 164 166 2 (set (reg:SI 2 cx)
        (const_int 1 [0x1])) "main.c":192:3 81 {*movsi_internal}
     (nil))
(insn 166 165 167 2 (set (reg:SI 1 dx)
        (const_int 3 [0x3])) "main.c":192:3 81 {*movsi_internal}
     (nil))
(insn 167 166 169 2 (set (reg:DI 4 si [182])
        (symbol_ref/f:DI ("*.LC24") [flags 0x2]  <var_decl 0x7fa6108e22d0 *.LC24>)) "main.c":192:3 80 {*movdi_internal}
     (nil))
(insn 169 167 170 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [181])) "main.c":192:3 80 {*movdi_internal}
     (nil))
(call_insn 170 169 171 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_create_file") [flags 0x41]  <function_decl 0x7fa610b72b00 explorer_tester_create_file>) [0 explorer_tester_create_file S1 A8])
        (const_int 0 [0])) "main.c":192:3 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 171 170 172 2 (set (reg:DI 2 cx [183])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [3 buf_a.20+0 S8 A64])) "main.c":193:3 80 {*movdi_internal}
     (nil))
(insn 172 171 173 2 (set (reg:SI 1 dx [184])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -124 [0xffffffffffffff84])) [1 len_a+0 S4 A32])) "main.c":193:3 81 {*movsi_internal}
     (nil))
(insn 173 172 174 2 (set (reg:DI 0 ax [185])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [14 tester+0 S8 A128])) "main.c":193:3 80 {*movdi_internal}
     (nil))
(insn 174 173 175 2 (set (reg:SI 37 r9)
        (const_int 1 [0x1])) "main.c":193:3 81 {*movsi_internal}
     (nil))
(insn 175 174 176 2 (set (reg:DI 36 r8)
        (reg:DI 2 cx [183])) "main.c":193:3 80 {*movdi_internal}
     (nil))
(insn 176 175 177 2 (set (reg:SI 2 cx)
        (reg:SI 1 dx [184])) "main.c":193:3 81 {*movsi_internal}
     (nil))
(insn 177 176 178 2 (set (reg:SI 1 dx)
        (const_int 176 [0xb0])) "main.c":193:3 81 {*movsi_internal}
     (nil))
(insn 178 177 180 2 (set (reg:DI 4 si [186])
        (symbol_ref/f:DI ("*.LC22") [flags 0x2]  <var_decl 0x7fa6108e21b0 *.LC22>)) "main.c":193:3 80 {*movdi_internal}
     (nil))
(insn 180 178 181 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [185])) "main.c":193:3 80 {*movdi_internal}
     (nil))
(call_insn 181 180 182 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_write") [flags 0x41]  <function_decl 0x7fa610b72a00 explorer_tester_write>) [0 explorer_tester_write S1 A8])
        (const_int 0 [0])) "main.c":193:3 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:DI (use (reg:DI 36 r8))
                        (expr_list:SI (use (reg:SI 37 r9))
                            (nil))))))))
(insn 182 181 183 2 (set (reg:DI 2 cx [187])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [3 buf_b.21+0 S8 A64])) "main.c":194:3 80 {*movdi_internal}
     (nil))
(insn 183 182 184 2 (set (reg:SI 1 dx [188])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [1 len_b+0 S4 A64])) "main.c":194:3 81 {*movsi_internal}
     (nil))
(insn 184 183 185 2 (set (reg:DI 0 ax [189])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [14 tester+0 S8 A128])) "main.c":194:3 80 {*movdi_internal}
     (nil))
(insn 185 184 186 2 (set (reg:SI 37 r9)
        (const_int 1 [0x1])) "main.c":194:3 81 {*movsi_internal}
     (nil))
(insn 186 185 187 2 (set (reg:DI 36 r8)
        (reg:DI 2 cx [187])) "main.c":194:3 80 {*movdi_internal}
     (nil))
(insn 187 186 188 2 (set (reg:SI 2 cx)
        (reg:SI 1 dx [188])) "main.c":194:3 81 {*movsi_internal}
     (nil))
(insn 188 187 189 2 (set (reg:SI 1 dx)
        (const_int 352 [0x160])) "main.c":194:3 81 {*movsi_internal}
     (nil))
(insn 189 188 191 2 (set (reg:DI 4 si [190])
        (symbol_ref/f:DI ("*.LC23") [flags 0x2]  <var_decl 0x7fa6108e2240 *.LC23>)) "main.c":194:3 80 {*movdi_internal}
     (nil))
(insn 191 189 192 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [189])) "main.c":194:3 80 {*movdi_internal}
     (nil))
(call_insn 192 191 193 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_write") [flags 0x41]  <function_decl 0x7fa610b72a00 explorer_tester_write>) [0 explorer_tester_write S1 A8])
        (const_int 0 [0])) "main.c":194:3 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:DI (use (reg:DI 36 r8))
                        (expr_list:SI (use (reg:SI 37 r9))
                            (nil))))))))
(insn 193 192 194 2 (set (reg:DI 2 cx [191])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [3 buf_c.22+0 S8 A64])) "main.c":195:3 80 {*movdi_internal}
     (nil))
(insn 194 193 195 2 (set (reg:SI 1 dx [192])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -116 [0xffffffffffffff8c])) [1 len_c+0 S4 A32])) "main.c":195:3 81 {*movsi_internal}
     (nil))
(insn 195 194 196 2 (set (reg:DI 0 ax [193])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [14 tester+0 S8 A128])) "main.c":195:3 80 {*movdi_internal}
     (nil))
(insn 196 195 197 2 (set (reg:SI 37 r9)
        (const_int 1 [0x1])) "main.c":195:3 81 {*movsi_internal}
     (nil))
(insn 197 196 198 2 (set (reg:DI 36 r8)
        (reg:DI 2 cx [191])) "main.c":195:3 80 {*movdi_internal}
     (nil))
(insn 198 197 199 2 (set (reg:SI 2 cx)
        (reg:SI 1 dx [192])) "main.c":195:3 81 {*movsi_internal}
     (nil))
(insn 199 198 200 2 (set (reg:SI 1 dx)
        (const_int 528 [0x210])) "main.c":195:3 81 {*movsi_internal}
     (nil))
(insn 200 199 202 2 (set (reg:DI 4 si [194])
        (symbol_ref/f:DI ("*.LC24") [flags 0x2]  <var_decl 0x7fa6108e22d0 *.LC24>)) "main.c":195:3 80 {*movdi_internal}
     (nil))
(insn 202 200 203 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [193])) "main.c":195:3 80 {*movdi_internal}
     (nil))
(call_insn 203 202 204 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_write") [flags 0x41]  <function_decl 0x7fa610b72a00 explorer_tester_write>) [0 explorer_tester_write S1 A8])
        (const_int 0 [0])) "main.c":195:3 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:DI (use (reg:DI 36 r8))
                        (expr_list:SI (use (reg:SI 37 r9))
                            (nil))))))))
(insn 204 203 205 2 (set (reg:DI 0 ax [195])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [14 tester+0 S8 A128])) "main.c":196:3 80 {*movdi_internal}
     (nil))
(insn 205 204 206 2 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "main.c":196:3 81 {*movsi_internal}
     (nil))
(insn 206 205 207 2 (set (reg:DI 2 cx [196])
        (symbol_ref/f:DI ("*.LC22") [flags 0x2]  <var_decl 0x7fa6108e21b0 *.LC22>)) "main.c":196:3 80 {*movdi_internal}
     (nil))
(insn 207 206 208 2 (set (reg:DI 4 si)
        (reg:DI 2 cx [196])) "main.c":196:3 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC22") [flags 0x2]  <var_decl 0x7fa6108e21b0 *.LC22>)
        (nil)))
(insn 208 207 209 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [195])) "main.c":196:3 80 {*movdi_internal}
     (nil))
(call_insn 209 208 210 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_open") [flags 0x41]  <function_decl 0x7fa610b72800 explorer_tester_open>) [0 explorer_tester_open S1 A8])
        (const_int 0 [0])) "main.c":196:3 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 210 209 211 2 (set (reg:DI 0 ax [197])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [14 tester+0 S8 A128])) "main.c":197:3 80 {*movdi_internal}
     (nil))
(insn 211 210 212 2 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "main.c":197:3 81 {*movsi_internal}
     (nil))
(insn 212 211 213 2 (set (reg:DI 2 cx [198])
        (symbol_ref/f:DI ("*.LC23") [flags 0x2]  <var_decl 0x7fa6108e2240 *.LC23>)) "main.c":197:3 80 {*movdi_internal}
     (nil))
(insn 213 212 214 2 (set (reg:DI 4 si)
        (reg:DI 2 cx [198])) "main.c":197:3 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC23") [flags 0x2]  <var_decl 0x7fa6108e2240 *.LC23>)
        (nil)))
(insn 214 213 215 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [197])) "main.c":197:3 80 {*movdi_internal}
     (nil))
(call_insn 215 214 216 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_open") [flags 0x41]  <function_decl 0x7fa610b72800 explorer_tester_open>) [0 explorer_tester_open S1 A8])
        (const_int 0 [0])) "main.c":197:3 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 216 215 217 2 (set (reg:DI 0 ax [199])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [14 tester+0 S8 A128])) "main.c":198:3 80 {*movdi_internal}
     (nil))
(insn 217 216 218 2 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "main.c":198:3 81 {*movsi_internal}
     (nil))
(insn 218 217 219 2 (set (reg:DI 2 cx [200])
        (symbol_ref/f:DI ("*.LC24") [flags 0x2]  <var_decl 0x7fa6108e22d0 *.LC24>)) "main.c":198:3 80 {*movdi_internal}
     (nil))
(insn 219 218 220 2 (set (reg:DI 4 si)
        (reg:DI 2 cx [200])) "main.c":198:3 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC24") [flags 0x2]  <var_decl 0x7fa6108e22d0 *.LC24>)
        (nil)))
(insn 220 219 221 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [199])) "main.c":198:3 80 {*movdi_internal}
     (nil))
(call_insn 221 220 222 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_open") [flags 0x41]  <function_decl 0x7fa610b72800 explorer_tester_open>) [0 explorer_tester_open S1 A8])
        (const_int 0 [0])) "main.c":198:3 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 222 221 223 2 (set (reg/f:DI 0 ax [201])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [14 tester+0 S8 A128])) "main.c":200:3 80 {*movdi_internal}
     (nil))
(insn 223 222 224 2 (parallel [
            (set (reg/f:DI 0 ax [orig:115 _34 ] [115])
                (plus:DI (reg/f:DI 0 ax [201])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":200:3 230 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                    (const_int -16 [0xfffffffffffffff0])) [14 tester+0 S8 A128])
            (const_int 32 [0x20]))
        (nil)))
(insn 224 223 225 2 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:115 _34 ] [115])) "main.c":200:3 80 {*movdi_internal}
     (nil))
(call_insn 225 224 226 2 (call (mem:QI (symbol_ref:DI ("checksum_test") [flags 0x3]  <function_decl 0x7fa610835300 checksum_test>) [0 checksum_test S1 A8])
        (const_int 0 [0])) "main.c":200:3 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 226 225 227 2 (set (reg:DI 0 ax [202])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [14 tester+0 S8 A128])) "main.c":202:3 80 {*movdi_internal}
     (nil))
(insn 227 226 228 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [202])) "main.c":202:3 80 {*movdi_internal}
     (nil))
(call_insn 228 227 229 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_destory") [flags 0x41]  <function_decl 0x7fa610b72400 explorer_tester_destory>) [0 explorer_tester_destory S1 A8])
        (const_int 0 [0])) "main.c":202:3 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 229 228 230 2 (clobber (mem:BLK (scratch) [0  A8])) -1
     (nil))
(insn 230 229 231 2 (clobber (mem:BLK (reg/f:DI 7 sp) [0  A8])) -1
     (nil))
(insn 231 230 241 2 (set (reg/f:DI 7 sp)
        (reg/f:DI 3 bx [orig:116 saved_stack.23_37 ] [116])) 80 {*movdi_internal}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 241 231 233 2 (const_int 0 [0]) "main.c":203:1 928 {nop}
     (nil))
(insn 233 241 234 2 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 6 bp)
                                (const_int -56 [0xffffffffffffffc8])) [9 D.3563+0 S8 A64])
                        (mem/v/f:DI (const_int 40 [0x28]) [0 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_TEST))
            (clobber (reg:DI 0 ax [210]))
        ]) "main.c":203:1 1270 {stack_protect_test_1_di}
     (nil))
(jump_insn 234 233 239 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 237)
            (pc))) "main.c":203:1 891 {*jcc}
     (nil)
 -> 237)
;;  succ:       4
;;              3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
(note 239 234 235 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(call_insn 235 239 236 3 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fa61088e500 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) "main.c":203:1 898 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 19 [frame]

(barrier 236 235 237)
;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 1, flags: (RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(code_label 237 236 240 4 36 (nil) [1 uses])
(note 240 237 248 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(note 248 240 0 NOTE_INSN_DELETED)

;; Function test_explorer_dir1 (test_explorer_dir1, funcdef_no=24, decl_uid=3415, cgraph_uid=25, symbol_order=26)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 5:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (1) rBwBz {*call_value}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 9:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 10:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 11:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 12:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 16:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 17:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 18:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 22:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 24:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 27:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 28:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 29:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 30:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 33:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 34:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 35:  (0) =r  (1) g {*movsi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 36:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 38:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 39:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 40:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 41:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 44:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 45:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 46:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 47:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 50:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 51:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 52:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 53:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 56:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 57:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 59:  (0) rBwBz {*call}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #1: **********

EBB 2 3

********** Pseudo live ranges #1: **********

  BB 3
   Insn 63: point = 0, n_alt = -1
  BB 2
   Insn 59: point = 0, n_alt = 0
   Insn 58: point = 0, n_alt = -2
   Insn 57: point = 1, n_alt = 3
   Insn 56: point = 2, n_alt = 0
   Insn 55: point = 2, n_alt = -2
   Insn 54: point = 3, n_alt = -2
   Insn 53: point = 4, n_alt = 4
   Insn 52: point = 5, n_alt = 0
   Insn 51: point = 5, n_alt = 3
   Insn 50: point = 6, n_alt = 0
   Insn 49: point = 6, n_alt = -2
   Insn 48: point = 7, n_alt = -2
   Insn 47: point = 8, n_alt = 4
   Insn 46: point = 9, n_alt = 0
   Insn 45: point = 9, n_alt = 3
   Insn 44: point = 10, n_alt = 0
   Insn 43: point = 10, n_alt = -2
   Insn 42: point = 11, n_alt = -2
   Insn 41: point = 12, n_alt = 4
   Insn 40: point = 13, n_alt = 0
   Insn 39: point = 13, n_alt = 3
   Insn 38: point = 14, n_alt = 0
   Insn 37: point = 14, n_alt = -2
   Insn 36: point = 15, n_alt = 2
   Insn 35: point = 15, n_alt = 0
   Insn 34: point = 15, n_alt = 3
   Insn 33: point = 16, n_alt = 0
   Insn 32: point = 16, n_alt = -2
   Insn 31: point = 17, n_alt = -2
   Insn 30: point = 18, n_alt = 4
   Insn 29: point = 19, n_alt = 0
   Insn 28: point = 19, n_alt = 3
   Insn 27: point = 20, n_alt = 0
   Insn 26: point = 20, n_alt = -2
   Insn 25: point = 21, n_alt = -2
   Insn 24: point = 22, n_alt = 4
   Insn 23: point = 23, n_alt = 0
   Insn 22: point = 23, n_alt = 3
   Insn 21: point = 24, n_alt = 0
   Insn 20: point = 24, n_alt = -2
   Insn 19: point = 25, n_alt = -2
   Insn 18: point = 26, n_alt = 4
   Insn 17: point = 27, n_alt = 0
   Insn 16: point = 27, n_alt = 3
   Insn 15: point = 28, n_alt = 0
   Insn 14: point = 28, n_alt = -2
   Insn 13: point = 29, n_alt = -2
   Insn 12: point = 30, n_alt = 4
   Insn 11: point = 31, n_alt = 0
   Insn 10: point = 31, n_alt = 3
   Insn 9: point = 32, n_alt = 5
   Insn 8: point = 33, n_alt = -2
   Insn 7: point = 34, n_alt = 0
   Insn 6: point = 34, n_alt = -2
   Insn 5: point = 35, n_alt = 4
 r82: [34..35]
 r83: [32..33]
 r84: [28..31]
 r85: [29..30]
 r86: [24..27]
 r87: [25..26]
 r88: [20..23]
 r89: [21..22]
 r90: [16..19]
 r91: [17..18]
 r92: [14..15]
 r93: [10..13]
 r94: [11..12]
 r95: [6..9]
 r96: [7..8]
 r97: [2..5]
 r98: [3..4]
 r99: [0..1]
Compressing live ranges: from 36 to 22 - 61%
Ranges after the compression:
 r82: [20..21]
 r83: [18..19]
 r84: [16..17]
 r85: [16..17]
 r86: [14..15]
 r87: [14..15]
 r88: [12..13]
 r89: [12..13]
 r90: [10..11]
 r91: [10..11]
 r92: [8..9]
 r93: [6..7]
 r94: [6..7]
 r95: [4..5]
 r96: [4..5]
 r97: [2..3]
 r98: [2..3]
 r99: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 6
	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
changing reg in insn 5
changing reg in insn 6
changing reg in insn 8
changing reg in insn 9
changing reg in insn 10
changing reg in insn 14
changing reg in insn 12
changing reg in insn 13
changing reg in insn 16
changing reg in insn 20
changing reg in insn 18
changing reg in insn 19
changing reg in insn 22
changing reg in insn 26
changing reg in insn 24
changing reg in insn 25
changing reg in insn 28
changing reg in insn 32
changing reg in insn 30
changing reg in insn 31
changing reg in insn 34
changing reg in insn 37
changing reg in insn 39
changing reg in insn 43
changing reg in insn 41
changing reg in insn 42
changing reg in insn 45
changing reg in insn 49
changing reg in insn 47
changing reg in insn 48
changing reg in insn 51
changing reg in insn 55
changing reg in insn 53
changing reg in insn 54
changing reg in insn 57
changing reg in insn 58
deleting insn with uid = 8.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 7.
verify found no changes in insn with uid = 15.
verify found no changes in insn with uid = 21.
verify found no changes in insn with uid = 27.
verify found no changes in insn with uid = 33.
verify found no changes in insn with uid = 38.
verify found no changes in insn with uid = 44.
verify found no changes in insn with uid = 50.
verify found no changes in insn with uid = 56.
verify found no changes in insn with uid = 59.


test_explorer_dir1

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;;  ref usage 	r0={21d,11u} r1={19d,8u} r2={18d,7u} r4={19d,8u} r5={21d,10u} r6={1d,13u} r7={1d,13u} r8={10d} r9={10d} r10={10d} r11={10d} r12={10d} r13={10d} r14={10d} r15={10d} r17={10d} r18={10d} r19={1d,1u} r20={11d} r21={11d} r22={11d} r23={11d} r24={11d} r25={11d} r26={11d} r27={11d} r28={10d} r29={10d} r30={10d} r31={10d} r32={10d} r33={10d} r34={10d} r35={10d} r36={11d} r37={11d} r38={10d} r39={10d} r44={10d} r45={10d} r46={10d} r47={10d} r48={10d} r49={10d} r50={10d} r51={10d} r52={10d} r53={10d} r54={10d} r55={10d} r56={10d} r57={10d} r58={10d} r59={10d} r60={10d} r61={10d} r62={10d} r63={10d} r64={10d} r65={10d} r66={10d} r67={10d} r68={10d} r69={10d} r70={10d} r71={10d} r72={10d} r73={10d} r74={10d} r75={10d} 
;;    total ref usage 802{731d,71u,0e} in 55{45 regular + 10 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:DI 0 ax [82])
        (symbol_ref/f:DI ("*.LC25") [flags 0x2]  <var_decl 0x7fa6108e2750 *.LC25>)) "main.c":205:36 80 {*movdi_internal}
     (nil))
(insn 6 5 7 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [82])) "main.c":205:36 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC25") [flags 0x2]  <var_decl 0x7fa6108e2750 *.LC25>)
        (nil)))
(call_insn 7 6 9 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("explorer_tester_create") [flags 0x41]  <function_decl 0x7fa610b72300 explorer_tester_create>) [0 explorer_tester_create S1 A8])
            (const_int 0 [0]))) "main.c":205:36 909 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 9 7 10 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [14 tester+0 S8 A64])
        (reg:DI 0 ax [83])) "main.c":205:36 80 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:DI 0 ax [84])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [14 tester+0 S8 A64])) "main.c":207:3 80 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "main.c":207:3 81 {*movsi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:DI 2 cx [85])
        (symbol_ref/f:DI ("*.LC26") [flags 0x2]  <var_decl 0x7fa6108e27e0 *.LC26>)) "main.c":207:3 80 {*movdi_internal}
     (nil))
(insn 13 12 14 2 (set (reg:DI 4 si)
        (reg:DI 2 cx [85])) "main.c":207:3 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC26") [flags 0x2]  <var_decl 0x7fa6108e27e0 *.LC26>)
        (nil)))
(insn 14 13 15 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [84])) "main.c":207:3 80 {*movdi_internal}
     (nil))
(call_insn 15 14 16 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_mkdir") [flags 0x41]  <function_decl 0x7fa610b72c00 explorer_tester_mkdir>) [0 explorer_tester_mkdir S1 A8])
        (const_int 0 [0])) "main.c":207:3 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 16 15 17 2 (set (reg:DI 0 ax [86])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [14 tester+0 S8 A64])) "main.c":208:3 80 {*movdi_internal}
     (nil))
(insn 17 16 18 2 (set (reg:SI 1 dx)
        (const_int 0 [0])) "main.c":208:3 81 {*movsi_internal}
     (nil))
(insn 18 17 19 2 (set (reg:DI 2 cx [87])
        (symbol_ref/f:DI ("*.LC26") [flags 0x2]  <var_decl 0x7fa6108e27e0 *.LC26>)) "main.c":208:3 80 {*movdi_internal}
     (nil))
(insn 19 18 20 2 (set (reg:DI 4 si)
        (reg:DI 2 cx [87])) "main.c":208:3 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC26") [flags 0x2]  <var_decl 0x7fa6108e27e0 *.LC26>)
        (nil)))
(insn 20 19 21 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [86])) "main.c":208:3 80 {*movdi_internal}
     (nil))
(call_insn 21 20 22 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_mkdir") [flags 0x41]  <function_decl 0x7fa610b72c00 explorer_tester_mkdir>) [0 explorer_tester_mkdir S1 A8])
        (const_int 0 [0])) "main.c":208:3 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 22 21 23 2 (set (reg:DI 0 ax [88])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [14 tester+0 S8 A64])) "main.c":209:3 80 {*movdi_internal}
     (nil))
(insn 23 22 24 2 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "main.c":209:3 81 {*movsi_internal}
     (nil))
(insn 24 23 25 2 (set (reg:DI 2 cx [89])
        (symbol_ref/f:DI ("*.LC27") [flags 0x2]  <var_decl 0x7fa6108e2870 *.LC27>)) "main.c":209:3 80 {*movdi_internal}
     (nil))
(insn 25 24 26 2 (set (reg:DI 4 si)
        (reg:DI 2 cx [89])) "main.c":209:3 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC27") [flags 0x2]  <var_decl 0x7fa6108e2870 *.LC27>)
        (nil)))
(insn 26 25 27 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [88])) "main.c":209:3 80 {*movdi_internal}
     (nil))
(call_insn 27 26 28 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_mkdir") [flags 0x41]  <function_decl 0x7fa610b72c00 explorer_tester_mkdir>) [0 explorer_tester_mkdir S1 A8])
        (const_int 0 [0])) "main.c":209:3 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 28 27 29 2 (set (reg:DI 0 ax [90])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [14 tester+0 S8 A64])) "main.c":210:3 80 {*movdi_internal}
     (nil))
(insn 29 28 30 2 (set (reg:SI 1 dx)
        (const_int 0 [0])) "main.c":210:3 81 {*movsi_internal}
     (nil))
(insn 30 29 31 2 (set (reg:DI 2 cx [91])
        (symbol_ref/f:DI ("*.LC27") [flags 0x2]  <var_decl 0x7fa6108e2870 *.LC27>)) "main.c":210:3 80 {*movdi_internal}
     (nil))
(insn 31 30 32 2 (set (reg:DI 4 si)
        (reg:DI 2 cx [91])) "main.c":210:3 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC27") [flags 0x2]  <var_decl 0x7fa6108e2870 *.LC27>)
        (nil)))
(insn 32 31 33 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [90])) "main.c":210:3 80 {*movdi_internal}
     (nil))
(call_insn 33 32 34 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_mkdir") [flags 0x41]  <function_decl 0x7fa610b72c00 explorer_tester_mkdir>) [0 explorer_tester_mkdir S1 A8])
        (const_int 0 [0])) "main.c":210:3 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 34 33 35 2 (set (reg:DI 0 ax [92])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [14 tester+0 S8 A64])) "main.c":212:3 80 {*movdi_internal}
     (nil))
(insn 35 34 36 2 (set (reg:SI 1 dx)
        (const_int 0 [0])) "main.c":212:3 81 {*movsi_internal}
     (nil))
(insn 36 35 37 2 (set (reg:DI 4 si)
        (const_int 0 [0])) "main.c":212:3 80 {*movdi_internal}
     (nil))
(insn 37 36 38 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [92])) "main.c":212:3 80 {*movdi_internal}
     (nil))
(call_insn 38 37 39 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_cdpar") [flags 0x41]  <function_decl 0x7fa610b72500 explorer_tester_cdpar>) [0 explorer_tester_cdpar S1 A8])
        (const_int 0 [0])) "main.c":212:3 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 39 38 40 2 (set (reg:DI 0 ax [93])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [14 tester+0 S8 A64])) "main.c":213:3 80 {*movdi_internal}
     (nil))
(insn 40 39 41 2 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "main.c":213:3 81 {*movsi_internal}
     (nil))
(insn 41 40 42 2 (set (reg:DI 2 cx [94])
        (symbol_ref/f:DI ("*.LC26") [flags 0x2]  <var_decl 0x7fa6108e27e0 *.LC26>)) "main.c":213:3 80 {*movdi_internal}
     (nil))
(insn 42 41 43 2 (set (reg:DI 4 si)
        (reg:DI 2 cx [94])) "main.c":213:3 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC26") [flags 0x2]  <var_decl 0x7fa6108e27e0 *.LC26>)
        (nil)))
(insn 43 42 44 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [93])) "main.c":213:3 80 {*movdi_internal}
     (nil))
(call_insn 44 43 45 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_chdir") [flags 0x41]  <function_decl 0x7fa610b72600 explorer_tester_chdir>) [0 explorer_tester_chdir S1 A8])
        (const_int 0 [0])) "main.c":213:3 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 45 44 46 2 (set (reg:DI 0 ax [95])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [14 tester+0 S8 A64])) "main.c":214:3 80 {*movdi_internal}
     (nil))
(insn 46 45 47 2 (set (reg:SI 1 dx)
        (const_int 0 [0])) "main.c":214:3 81 {*movsi_internal}
     (nil))
(insn 47 46 48 2 (set (reg:DI 2 cx [96])
        (symbol_ref/f:DI ("*.LC28") [flags 0x2]  <var_decl 0x7fa6108e2900 *.LC28>)) "main.c":214:3 80 {*movdi_internal}
     (nil))
(insn 48 47 49 2 (set (reg:DI 4 si)
        (reg:DI 2 cx [96])) "main.c":214:3 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC28") [flags 0x2]  <var_decl 0x7fa6108e2900 *.LC28>)
        (nil)))
(insn 49 48 50 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [95])) "main.c":214:3 80 {*movdi_internal}
     (nil))
(call_insn 50 49 51 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_chdir") [flags 0x41]  <function_decl 0x7fa610b72600 explorer_tester_chdir>) [0 explorer_tester_chdir S1 A8])
        (const_int 0 [0])) "main.c":214:3 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 51 50 52 2 (set (reg:DI 0 ax [97])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [14 tester+0 S8 A64])) "main.c":215:3 80 {*movdi_internal}
     (nil))
(insn 52 51 53 2 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "main.c":215:3 81 {*movsi_internal}
     (nil))
(insn 53 52 54 2 (set (reg:DI 2 cx [98])
        (symbol_ref/f:DI ("*.LC29") [flags 0x2]  <var_decl 0x7fa6108e2990 *.LC29>)) "main.c":215:3 80 {*movdi_internal}
     (nil))
(insn 54 53 55 2 (set (reg:DI 4 si)
        (reg:DI 2 cx [98])) "main.c":215:3 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC29") [flags 0x2]  <var_decl 0x7fa6108e2990 *.LC29>)
        (nil)))
(insn 55 54 56 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [97])) "main.c":215:3 80 {*movdi_internal}
     (nil))
(call_insn 56 55 57 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_cdpar") [flags 0x41]  <function_decl 0x7fa610b72500 explorer_tester_cdpar>) [0 explorer_tester_cdpar S1 A8])
        (const_int 0 [0])) "main.c":215:3 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 57 56 58 2 (set (reg:DI 0 ax [99])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [14 tester+0 S8 A64])) "main.c":217:3 80 {*movdi_internal}
     (nil))
(insn 58 57 59 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [99])) "main.c":217:3 80 {*movdi_internal}
     (nil))
(call_insn 59 58 62 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_destory") [flags 0x41]  <function_decl 0x7fa610b72400 explorer_tester_destory>) [0 explorer_tester_destory S1 A8])
        (const_int 0 [0])) "main.c":217:3 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       3 [always]  (FALLTHRU) main.c:218:1
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 1, flags: (RTL, MODIFIED)
;;  pred:       2 [always]  (FALLTHRU) main.c:218:1
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(note 62 59 63 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 63 62 64 3 (const_int 0 [0]) "main.c":218:1 928 {nop}
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(note 64 63 0 NOTE_INSN_DELETED)

;; Function test_explorer_dir2 (test_explorer_dir2, funcdef_no=25, decl_uid=3418, cgraph_uid=26, symbol_order=27)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 5:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (1) rBwBz {*call_value}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 9:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 10:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 11:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 12:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 16:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 17:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 18:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 22:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 24:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 27:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 28:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 29:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 30:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 33:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 34:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 35:  (0) =r  (1) g {*movsi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 36:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 38:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 39:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 40:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 41:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 44:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 45:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 46:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 47:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 50:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 51:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 52:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 53:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 56:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 57:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 58:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 59:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 62:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 63:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 64:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 65:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 68:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 69:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 70:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 71:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 74:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 75:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 77:  (0) rBwBz {*call}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #1: **********

EBB 2 3

********** Pseudo live ranges #1: **********

  BB 3
   Insn 81: point = 0, n_alt = -1
  BB 2
   Insn 77: point = 0, n_alt = 0
   Insn 76: point = 0, n_alt = -2
   Insn 75: point = 1, n_alt = 3
   Insn 74: point = 2, n_alt = 0
   Insn 73: point = 2, n_alt = -2
   Insn 72: point = 3, n_alt = -2
   Insn 71: point = 4, n_alt = 4
   Insn 70: point = 5, n_alt = 0
   Insn 69: point = 5, n_alt = 3
   Insn 68: point = 6, n_alt = 0
   Insn 67: point = 6, n_alt = -2
   Insn 66: point = 7, n_alt = -2
   Insn 65: point = 8, n_alt = 4
   Insn 64: point = 9, n_alt = 0
   Insn 63: point = 9, n_alt = 3
   Insn 62: point = 10, n_alt = 0
   Insn 61: point = 10, n_alt = -2
   Insn 60: point = 11, n_alt = -2
   Insn 59: point = 12, n_alt = 4
   Insn 58: point = 13, n_alt = 0
   Insn 57: point = 13, n_alt = 3
   Insn 56: point = 14, n_alt = 0
   Insn 55: point = 14, n_alt = -2
   Insn 54: point = 15, n_alt = -2
   Insn 53: point = 16, n_alt = 4
   Insn 52: point = 17, n_alt = 0
   Insn 51: point = 17, n_alt = 3
   Insn 50: point = 18, n_alt = 0
   Insn 49: point = 18, n_alt = -2
   Insn 48: point = 19, n_alt = -2
   Insn 47: point = 20, n_alt = 4
   Insn 46: point = 21, n_alt = 0
   Insn 45: point = 21, n_alt = 3
   Insn 44: point = 22, n_alt = 0
   Insn 43: point = 22, n_alt = -2
   Insn 42: point = 23, n_alt = -2
   Insn 41: point = 24, n_alt = 4
   Insn 40: point = 25, n_alt = 0
   Insn 39: point = 25, n_alt = 3
   Insn 38: point = 26, n_alt = 0
   Insn 37: point = 26, n_alt = -2
   Insn 36: point = 27, n_alt = 2
   Insn 35: point = 27, n_alt = 0
   Insn 34: point = 27, n_alt = 3
   Insn 33: point = 28, n_alt = 0
   Insn 32: point = 28, n_alt = -2
   Insn 31: point = 29, n_alt = -2
   Insn 30: point = 30, n_alt = 4
   Insn 29: point = 31, n_alt = 0
   Insn 28: point = 31, n_alt = 3
   Insn 27: point = 32, n_alt = 0
   Insn 26: point = 32, n_alt = -2
   Insn 25: point = 33, n_alt = -2
   Insn 24: point = 34, n_alt = 4
   Insn 23: point = 35, n_alt = 0
   Insn 22: point = 35, n_alt = 3
   Insn 21: point = 36, n_alt = 0
   Insn 20: point = 36, n_alt = -2
   Insn 19: point = 37, n_alt = -2
   Insn 18: point = 38, n_alt = 4
   Insn 17: point = 39, n_alt = 0
   Insn 16: point = 39, n_alt = 3
   Insn 15: point = 40, n_alt = 0
   Insn 14: point = 40, n_alt = -2
   Insn 13: point = 41, n_alt = -2
   Insn 12: point = 42, n_alt = 4
   Insn 11: point = 43, n_alt = 0
   Insn 10: point = 43, n_alt = 3
   Insn 9: point = 44, n_alt = 5
   Insn 8: point = 45, n_alt = -2
   Insn 7: point = 46, n_alt = 0
   Insn 6: point = 46, n_alt = -2
   Insn 5: point = 47, n_alt = 4
 r82: [46..47]
 r83: [44..45]
 r84: [40..43]
 r85: [41..42]
 r86: [36..39]
 r87: [37..38]
 r88: [32..35]
 r89: [33..34]
 r90: [28..31]
 r91: [29..30]
 r92: [26..27]
 r93: [22..25]
 r94: [23..24]
 r95: [18..21]
 r96: [19..20]
 r97: [14..17]
 r98: [15..16]
 r99: [10..13]
 r100: [11..12]
 r101: [6..9]
 r102: [7..8]
 r103: [2..5]
 r104: [3..4]
 r105: [0..1]
Compressing live ranges: from 48 to 28 - 58%
Ranges after the compression:
 r82: [26..27]
 r83: [24..25]
 r84: [22..23]
 r85: [22..23]
 r86: [20..21]
 r87: [20..21]
 r88: [18..19]
 r89: [18..19]
 r90: [16..17]
 r91: [16..17]
 r92: [14..15]
 r93: [12..13]
 r94: [12..13]
 r95: [10..11]
 r96: [10..11]
 r97: [8..9]
 r98: [8..9]
 r99: [6..7]
 r100: [6..7]
 r101: [4..5]
 r102: [4..5]
 r103: [2..3]
 r104: [2..3]
 r105: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 6
	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
changing reg in insn 5
changing reg in insn 6
changing reg in insn 8
changing reg in insn 9
changing reg in insn 10
changing reg in insn 14
changing reg in insn 12
changing reg in insn 13
changing reg in insn 16
changing reg in insn 20
changing reg in insn 18
changing reg in insn 19
changing reg in insn 22
changing reg in insn 26
changing reg in insn 24
changing reg in insn 25
changing reg in insn 28
changing reg in insn 32
changing reg in insn 30
changing reg in insn 31
changing reg in insn 34
changing reg in insn 37
changing reg in insn 39
changing reg in insn 43
changing reg in insn 41
changing reg in insn 42
changing reg in insn 45
changing reg in insn 49
changing reg in insn 47
changing reg in insn 48
changing reg in insn 51
changing reg in insn 55
changing reg in insn 53
changing reg in insn 54
changing reg in insn 57
changing reg in insn 61
changing reg in insn 59
changing reg in insn 60
changing reg in insn 63
changing reg in insn 67
changing reg in insn 65
changing reg in insn 66
changing reg in insn 69
changing reg in insn 73
changing reg in insn 71
changing reg in insn 72
changing reg in insn 75
changing reg in insn 76
deleting insn with uid = 8.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 7.
verify found no changes in insn with uid = 15.
verify found no changes in insn with uid = 21.
verify found no changes in insn with uid = 27.
verify found no changes in insn with uid = 33.
verify found no changes in insn with uid = 38.
verify found no changes in insn with uid = 44.
verify found no changes in insn with uid = 50.
verify found no changes in insn with uid = 56.
verify found no changes in insn with uid = 62.
verify found no changes in insn with uid = 68.
verify found no changes in insn with uid = 74.
verify found no changes in insn with uid = 77.


test_explorer_dir2

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;;  ref usage 	r0={27d,14u} r1={25d,11u} r2={24d,10u} r4={25d,11u} r5={27d,13u} r6={1d,16u} r7={1d,16u} r8={13d} r9={13d} r10={13d} r11={13d} r12={13d} r13={13d} r14={13d} r15={13d} r17={13d} r18={13d} r19={1d,1u} r20={14d} r21={14d} r22={14d} r23={14d} r24={14d} r25={14d} r26={14d} r27={14d} r28={13d} r29={13d} r30={13d} r31={13d} r32={13d} r33={13d} r34={13d} r35={13d} r36={14d} r37={14d} r38={13d} r39={13d} r44={13d} r45={13d} r46={13d} r47={13d} r48={13d} r49={13d} r50={13d} r51={13d} r52={13d} r53={13d} r54={13d} r55={13d} r56={13d} r57={13d} r58={13d} r59={13d} r60={13d} r61={13d} r62={13d} r63={13d} r64={13d} r65={13d} r66={13d} r67={13d} r68={13d} r69={13d} r70={13d} r71={13d} r72={13d} r73={13d} r74={13d} r75={13d} 
;;    total ref usage 1039{947d,92u,0e} in 73{60 regular + 13 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:DI 0 ax [82])
        (symbol_ref/f:DI ("*.LC25") [flags 0x2]  <var_decl 0x7fa6108e2750 *.LC25>)) "main.c":221:36 80 {*movdi_internal}
     (nil))
(insn 6 5 7 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [82])) "main.c":221:36 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC25") [flags 0x2]  <var_decl 0x7fa6108e2750 *.LC25>)
        (nil)))
(call_insn 7 6 9 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("explorer_tester_create") [flags 0x41]  <function_decl 0x7fa610b72300 explorer_tester_create>) [0 explorer_tester_create S1 A8])
            (const_int 0 [0]))) "main.c":221:36 909 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 9 7 10 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [14 tester+0 S8 A64])
        (reg:DI 0 ax [83])) "main.c":221:36 80 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:DI 0 ax [84])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [14 tester+0 S8 A64])) "main.c":223:3 80 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "main.c":223:3 81 {*movsi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:DI 2 cx [85])
        (symbol_ref/f:DI ("*.LC26") [flags 0x2]  <var_decl 0x7fa6108e27e0 *.LC26>)) "main.c":223:3 80 {*movdi_internal}
     (nil))
(insn 13 12 14 2 (set (reg:DI 4 si)
        (reg:DI 2 cx [85])) "main.c":223:3 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC26") [flags 0x2]  <var_decl 0x7fa6108e27e0 *.LC26>)
        (nil)))
(insn 14 13 15 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [84])) "main.c":223:3 80 {*movdi_internal}
     (nil))
(call_insn 15 14 16 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_mkdir") [flags 0x41]  <function_decl 0x7fa610b72c00 explorer_tester_mkdir>) [0 explorer_tester_mkdir S1 A8])
        (const_int 0 [0])) "main.c":223:3 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 16 15 17 2 (set (reg:DI 0 ax [86])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [14 tester+0 S8 A64])) "main.c":224:3 80 {*movdi_internal}
     (nil))
(insn 17 16 18 2 (set (reg:SI 1 dx)
        (const_int 0 [0])) "main.c":224:3 81 {*movsi_internal}
     (nil))
(insn 18 17 19 2 (set (reg:DI 2 cx [87])
        (symbol_ref/f:DI ("*.LC26") [flags 0x2]  <var_decl 0x7fa6108e27e0 *.LC26>)) "main.c":224:3 80 {*movdi_internal}
     (nil))
(insn 19 18 20 2 (set (reg:DI 4 si)
        (reg:DI 2 cx [87])) "main.c":224:3 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC26") [flags 0x2]  <var_decl 0x7fa6108e27e0 *.LC26>)
        (nil)))
(insn 20 19 21 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [86])) "main.c":224:3 80 {*movdi_internal}
     (nil))
(call_insn 21 20 22 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_mkdir") [flags 0x41]  <function_decl 0x7fa610b72c00 explorer_tester_mkdir>) [0 explorer_tester_mkdir S1 A8])
        (const_int 0 [0])) "main.c":224:3 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 22 21 23 2 (set (reg:DI 0 ax [88])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [14 tester+0 S8 A64])) "main.c":225:3 80 {*movdi_internal}
     (nil))
(insn 23 22 24 2 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "main.c":225:3 81 {*movsi_internal}
     (nil))
(insn 24 23 25 2 (set (reg:DI 2 cx [89])
        (symbol_ref/f:DI ("*.LC27") [flags 0x2]  <var_decl 0x7fa6108e2870 *.LC27>)) "main.c":225:3 80 {*movdi_internal}
     (nil))
(insn 25 24 26 2 (set (reg:DI 4 si)
        (reg:DI 2 cx [89])) "main.c":225:3 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC27") [flags 0x2]  <var_decl 0x7fa6108e2870 *.LC27>)
        (nil)))
(insn 26 25 27 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [88])) "main.c":225:3 80 {*movdi_internal}
     (nil))
(call_insn 27 26 28 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_mkdir") [flags 0x41]  <function_decl 0x7fa610b72c00 explorer_tester_mkdir>) [0 explorer_tester_mkdir S1 A8])
        (const_int 0 [0])) "main.c":225:3 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 28 27 29 2 (set (reg:DI 0 ax [90])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [14 tester+0 S8 A64])) "main.c":226:3 80 {*movdi_internal}
     (nil))
(insn 29 28 30 2 (set (reg:SI 1 dx)
        (const_int 0 [0])) "main.c":226:3 81 {*movsi_internal}
     (nil))
(insn 30 29 31 2 (set (reg:DI 2 cx [91])
        (symbol_ref/f:DI ("*.LC27") [flags 0x2]  <var_decl 0x7fa6108e2870 *.LC27>)) "main.c":226:3 80 {*movdi_internal}
     (nil))
(insn 31 30 32 2 (set (reg:DI 4 si)
        (reg:DI 2 cx [91])) "main.c":226:3 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC27") [flags 0x2]  <var_decl 0x7fa6108e2870 *.LC27>)
        (nil)))
(insn 32 31 33 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [90])) "main.c":226:3 80 {*movdi_internal}
     (nil))
(call_insn 33 32 34 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_mkdir") [flags 0x41]  <function_decl 0x7fa610b72c00 explorer_tester_mkdir>) [0 explorer_tester_mkdir S1 A8])
        (const_int 0 [0])) "main.c":226:3 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 34 33 35 2 (set (reg:DI 0 ax [92])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [14 tester+0 S8 A64])) "main.c":228:3 80 {*movdi_internal}
     (nil))
(insn 35 34 36 2 (set (reg:SI 1 dx)
        (const_int 0 [0])) "main.c":228:3 81 {*movsi_internal}
     (nil))
(insn 36 35 37 2 (set (reg:DI 4 si)
        (const_int 0 [0])) "main.c":228:3 80 {*movdi_internal}
     (nil))
(insn 37 36 38 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [92])) "main.c":228:3 80 {*movdi_internal}
     (nil))
(call_insn 38 37 39 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_cdpar") [flags 0x41]  <function_decl 0x7fa610b72500 explorer_tester_cdpar>) [0 explorer_tester_cdpar S1 A8])
        (const_int 0 [0])) "main.c":228:3 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 39 38 40 2 (set (reg:DI 0 ax [93])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [14 tester+0 S8 A64])) "main.c":229:3 80 {*movdi_internal}
     (nil))
(insn 40 39 41 2 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "main.c":229:3 81 {*movsi_internal}
     (nil))
(insn 41 40 42 2 (set (reg:DI 2 cx [94])
        (symbol_ref/f:DI ("*.LC26") [flags 0x2]  <var_decl 0x7fa6108e27e0 *.LC26>)) "main.c":229:3 80 {*movdi_internal}
     (nil))
(insn 42 41 43 2 (set (reg:DI 4 si)
        (reg:DI 2 cx [94])) "main.c":229:3 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC26") [flags 0x2]  <var_decl 0x7fa6108e27e0 *.LC26>)
        (nil)))
(insn 43 42 44 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [93])) "main.c":229:3 80 {*movdi_internal}
     (nil))
(call_insn 44 43 45 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_chdir") [flags 0x41]  <function_decl 0x7fa610b72600 explorer_tester_chdir>) [0 explorer_tester_chdir S1 A8])
        (const_int 0 [0])) "main.c":229:3 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 45 44 46 2 (set (reg:DI 0 ax [95])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [14 tester+0 S8 A64])) "main.c":230:3 80 {*movdi_internal}
     (nil))
(insn 46 45 47 2 (set (reg:SI 1 dx)
        (const_int 0 [0])) "main.c":230:3 81 {*movsi_internal}
     (nil))
(insn 47 46 48 2 (set (reg:DI 2 cx [96])
        (symbol_ref/f:DI ("*.LC28") [flags 0x2]  <var_decl 0x7fa6108e2900 *.LC28>)) "main.c":230:3 80 {*movdi_internal}
     (nil))
(insn 48 47 49 2 (set (reg:DI 4 si)
        (reg:DI 2 cx [96])) "main.c":230:3 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC28") [flags 0x2]  <var_decl 0x7fa6108e2900 *.LC28>)
        (nil)))
(insn 49 48 50 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [95])) "main.c":230:3 80 {*movdi_internal}
     (nil))
(call_insn 50 49 51 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_chdir") [flags 0x41]  <function_decl 0x7fa610b72600 explorer_tester_chdir>) [0 explorer_tester_chdir S1 A8])
        (const_int 0 [0])) "main.c":230:3 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 51 50 52 2 (set (reg:DI 0 ax [97])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [14 tester+0 S8 A64])) "main.c":231:3 80 {*movdi_internal}
     (nil))
(insn 52 51 53 2 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "main.c":231:3 81 {*movsi_internal}
     (nil))
(insn 53 52 54 2 (set (reg:DI 2 cx [98])
        (symbol_ref/f:DI ("*.LC29") [flags 0x2]  <var_decl 0x7fa6108e2990 *.LC29>)) "main.c":231:3 80 {*movdi_internal}
     (nil))
(insn 54 53 55 2 (set (reg:DI 4 si)
        (reg:DI 2 cx [98])) "main.c":231:3 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC29") [flags 0x2]  <var_decl 0x7fa6108e2990 *.LC29>)
        (nil)))
(insn 55 54 56 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [97])) "main.c":231:3 80 {*movdi_internal}
     (nil))
(call_insn 56 55 57 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_cdpar") [flags 0x41]  <function_decl 0x7fa610b72500 explorer_tester_cdpar>) [0 explorer_tester_cdpar S1 A8])
        (const_int 0 [0])) "main.c":231:3 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 57 56 58 2 (set (reg:DI 0 ax [99])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [14 tester+0 S8 A64])) "main.c":233:3 80 {*movdi_internal}
     (nil))
(insn 58 57 59 2 (set (reg:SI 1 dx)
        (const_int 0 [0])) "main.c":233:3 81 {*movsi_internal}
     (nil))
(insn 59 58 60 2 (set (reg:DI 2 cx [100])
        (symbol_ref/f:DI ("*.LC22") [flags 0x2]  <var_decl 0x7fa6108e21b0 *.LC22>)) "main.c":233:3 80 {*movdi_internal}
     (nil))
(insn 60 59 61 2 (set (reg:DI 4 si)
        (reg:DI 2 cx [100])) "main.c":233:3 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC22") [flags 0x2]  <var_decl 0x7fa6108e21b0 *.LC22>)
        (nil)))
(insn 61 60 62 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [99])) "main.c":233:3 80 {*movdi_internal}
     (nil))
(call_insn 62 61 63 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_delete") [flags 0x41]  <function_decl 0x7fa610b72d00 explorer_tester_delete>) [0 explorer_tester_delete S1 A8])
        (const_int 0 [0])) "main.c":233:3 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 63 62 64 2 (set (reg:DI 0 ax [101])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [14 tester+0 S8 A64])) "main.c":234:3 80 {*movdi_internal}
     (nil))
(insn 64 63 65 2 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "main.c":234:3 81 {*movsi_internal}
     (nil))
(insn 65 64 66 2 (set (reg:DI 2 cx [102])
        (symbol_ref/f:DI ("*.LC26") [flags 0x2]  <var_decl 0x7fa6108e27e0 *.LC26>)) "main.c":234:3 80 {*movdi_internal}
     (nil))
(insn 66 65 67 2 (set (reg:DI 4 si)
        (reg:DI 2 cx [102])) "main.c":234:3 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC26") [flags 0x2]  <var_decl 0x7fa6108e27e0 *.LC26>)
        (nil)))
(insn 67 66 68 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [101])) "main.c":234:3 80 {*movdi_internal}
     (nil))
(call_insn 68 67 69 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_delete") [flags 0x41]  <function_decl 0x7fa610b72d00 explorer_tester_delete>) [0 explorer_tester_delete S1 A8])
        (const_int 0 [0])) "main.c":234:3 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 69 68 70 2 (set (reg:DI 0 ax [103])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [14 tester+0 S8 A64])) "main.c":235:3 80 {*movdi_internal}
     (nil))
(insn 70 69 71 2 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "main.c":235:3 81 {*movsi_internal}
     (nil))
(insn 71 70 72 2 (set (reg:DI 2 cx [104])
        (symbol_ref/f:DI ("*.LC27") [flags 0x2]  <var_decl 0x7fa6108e2870 *.LC27>)) "main.c":235:3 80 {*movdi_internal}
     (nil))
(insn 72 71 73 2 (set (reg:DI 4 si)
        (reg:DI 2 cx [104])) "main.c":235:3 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC27") [flags 0x2]  <var_decl 0x7fa6108e2870 *.LC27>)
        (nil)))
(insn 73 72 74 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [103])) "main.c":235:3 80 {*movdi_internal}
     (nil))
(call_insn 74 73 75 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_delete") [flags 0x41]  <function_decl 0x7fa610b72d00 explorer_tester_delete>) [0 explorer_tester_delete S1 A8])
        (const_int 0 [0])) "main.c":235:3 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 75 74 76 2 (set (reg:DI 0 ax [105])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [14 tester+0 S8 A64])) "main.c":237:3 80 {*movdi_internal}
     (nil))
(insn 76 75 77 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [105])) "main.c":237:3 80 {*movdi_internal}
     (nil))
(call_insn 77 76 80 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_destory") [flags 0x41]  <function_decl 0x7fa610b72400 explorer_tester_destory>) [0 explorer_tester_destory S1 A8])
        (const_int 0 [0])) "main.c":237:3 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       3 [always]  (FALLTHRU) main.c:238:1
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 1, flags: (RTL, MODIFIED)
;;  pred:       2 [always]  (FALLTHRU) main.c:238:1
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(note 80 77 81 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 81 80 82 3 (const_int 0 [0]) "main.c":238:1 928 {nop}
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(note 82 81 0 NOTE_INSN_DELETED)

;; Function search_check_path (search_check_path, funcdef_no=26, decl_uid=3424, cgraph_uid=27, symbol_order=30)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=48, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 19 to 7 (offset=32, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 6:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 7:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 11:  (0) ?mr {*cmpdi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 14:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 16:  (0) r  (1) l  (2) M {*ashldi3_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 17:  (0) r  (1) i {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 18:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 19:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 22:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 24:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 31:  (0) =rm  (1) %0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 37:  (0) rm  (1) re {*cmpsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 40:  (0) m  (1) re {*movsi_internal}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #1: **********

EBB 2
EBB 3 4
EBB 5
EBB 6 7
EBB 9
EBB 8

********** Pseudo live ranges #1: **********

  BB 8
  BB 7
   Insn 47: point = 0, n_alt = -1
   Insn 40: point = 0, n_alt = 1
  BB 9
   Insn 51: point = 0, n_alt = -1
  BB 4
   Insn 25: point = 0, n_alt = -1
   Insn 24: point = 0, n_alt = 0
   Insn 23: point = 1, n_alt = -2
   Insn 22: point = 2, n_alt = 0
   Insn 21: point = 2, n_alt = -2
   Insn 20: point = 3, n_alt = -2
   Insn 19: point = 4, n_alt = 3
   Insn 18: point = 5, n_alt = 3
   Insn 17: point = 7, n_alt = 4
   Insn 16: point = 8, n_alt = 1
   Insn 15: point = 10, n_alt = 0
   Insn 14: point = 12, n_alt = 0
  BB 3
   Insn 12: point = 13, n_alt = -1
   Insn 11: point = 13, n_alt = 1
  BB 6
   Insn 38: point = 13, n_alt = -1
   Insn 37: point = 13, n_alt = 0
  BB 2
   Insn 45: point = 13, n_alt = -1
   Insn 7: point = 13, n_alt = 1
   Insn 6: point = 13, n_alt = 1
   Insn 2: point = 13, n_alt = 5
  BB 5
   Insn 31: point = 13, n_alt = 0
 r82: [2..5]
 r83: [0..1]
 r84: [9..10]
 r85: [11..12]
 r86: [6..8]
 r87: [6..7]
 r88: [3..4]
Compressing live ranges: from 13 to 10 - 76%
Ranges after the compression:
 r82: [2..3]
 r83: [0..1]
 r84: [6..7]
 r85: [8..9]
 r86: [4..5]
 r87: [4..5]
 r88: [2..3]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 6
	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=48, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 19 to 7 (offset=32, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
changing reg in insn 18
changing reg in insn 21
changing reg in insn 23
changing reg in insn 24
changing reg in insn 15
changing reg in insn 16
changing reg in insn 14
changing reg in insn 15
changing reg in insn 16
changing reg in insn 18
changing reg in insn 17
changing reg in insn 18
changing reg in insn 19
changing reg in insn 20
deleting insn with uid = 23.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 22.


search_check_path

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;;  ref usage 	r0={6d,5u} r1={4d,2u} r2={2d} r4={3d,1u} r5={3d,2u} r6={1d,18u} r7={1d,10u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r17={6d,3u} r18={1d} r19={1d,1u} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={2d} r37={2d} r38={1d} r39={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} 
;;    total ref usage 140{98d,42u,0e} in 23{22 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [3 path+0 S8 A64])
        (reg:DI 5 di [ path ])) "main.c":247:43 80 {*movdi_internal}
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
        (const_int 0 [0])) "main.c":248:7 81 {*movsi_internal}
     (nil))
(insn 7 6 45 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
        (const_int 0 [0])) "main.c":249:10 81 {*movsi_internal}
     (nil))
(jump_insn 45 7 46 2 (set (pc)
        (label_ref 32)) "main.c":249:3 892 {jump}
     (nil)
 -> 32)
;;  succ:       6 [always]  main.c:249:3
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 46 45 34)
;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       6
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags]
(code_label 34 46 10 3 43 (nil) [1 uses])
(note 10 34 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                    (const_int -24 [0xffffffffffffffe8])) [3 path+0 S8 A64])
            (const_int 0 [0]))) "main.c":250:8 8 {*cmpdi_ccno_1}
     (nil))
(jump_insn 12 11 13 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 29)
            (pc))) "main.c":250:8 891 {*jcc}
     (nil)
 -> 29)
;;  succ:       4 (FALLTHRU)
;;              5
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 82 83 84 85 86 87 88
(note 13 12 14 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 15 4 (set (reg:SI 0 ax [85])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "main.c":250:37 81 {*movsi_internal}
     (nil))
(insn 15 14 16 4 (set (reg:DI 0 ax [84])
        (sign_extend:DI (reg:SI 0 ax [85]))) "main.c":250:37 154 {*extendsidi2_rex64}
     (nil))
(insn 16 15 17 4 (parallel [
            (set (reg:DI 1 dx [86])
                (ashift:DI (reg:DI 0 ax [84])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":250:37 713 {*ashldi3_1}
     (nil))
(insn 17 16 18 4 (set (reg:DI 0 ax [87])
        (symbol_ref:DI ("expected_path") [flags 0x2]  <var_decl 0x7fa610841120 expected_path>)) "main.c":250:37 80 {*movdi_internal}
     (nil))
(insn 18 17 19 4 (set (reg/f:DI 0 ax [orig:82 _1 ] [82])
        (mem/f:DI (plus:DI (reg:DI 1 dx [86])
                (reg:DI 0 ax [87])) [3 expected_path[i_3]+0 S8 A64])) "main.c":250:37 80 {*movdi_internal}
     (nil))
(insn 19 18 20 4 (set (reg:DI 1 dx [88])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [3 path+0 S8 A64])) "main.c":250:17 80 {*movdi_internal}
     (nil))
(insn 20 19 21 4 (set (reg:DI 4 si)
        (reg:DI 1 dx [88])) "main.c":250:17 80 {*movdi_internal}
     (nil))
(insn 21 20 22 4 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:82 _1 ] [82])) "main.c":250:17 80 {*movdi_internal}
     (nil))
(call_insn/i 22 21 24 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7fa610abec00 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) "main.c":250:17 909 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 24 22 25 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:83 _2 ] [83])
            (const_int 0 [0]))) "main.c":250:14 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 25 24 29 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 50)
            (pc))) "main.c":250:14 891 {*jcc}
     (nil)
 -> 50)
;;  succ:       9 main.c:251:7
;;              5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL, MODIFIED)
;;  pred:       3
;;              4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags]
(code_label 29 25 30 5 41 (nil) [1 uses])
(note 30 29 31 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 32 5 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":249:23 229 {*addsi_1}
     (nil))
;;  succ:       6 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 7, flags: (RTL, MODIFIED)
;;  pred:       5 (FALLTHRU,DFS_BACK)
;;              2 [always]  main.c:249:3
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags]
(code_label 32 31 33 6 40 (nil) [1 uses])
(note 33 32 37 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 37 33 38 6 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
            (const_int 3 [0x3]))) "main.c":249:17 11 {*cmpsi_1}
     (nil))
(jump_insn 38 37 39 6 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 34)
            (pc))) "main.c":249:17 891 {*jcc}
     (nil)
 -> 34)
;;  succ:       3
;;              7 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 7, loop depth 0, maybe hot
;;  prev block 6, next block 9, flags: (RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(note 39 38 40 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 47 7 (set (mem/c:SI (symbol_ref:DI ("search_err") [flags 0x2]  <var_decl 0x7fa6108411b0 search_err>) [1 search_err+0 S4 A32])
        (const_int 1 [0x1])) "main.c":253:14 81 {*movsi_internal}
     (nil))
(jump_insn 47 40 48 7 (set (pc)
        (label_ref 43)) 892 {jump}
     (nil)
 -> 43)
;;  succ:       8
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 48 47 50)
;; basic block 9, loop depth 0, maybe hot
;;  prev block 7, next block 8, flags: (RTL, MODIFIED)
;;  pred:       4 main.c:251:7
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(code_label 50 48 49 9 44 (nil) [1 uses])
(note 49 50 51 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 51 49 43 9 (const_int 0 [0]) "main.c":251:7 928 {nop}
     (nil))
;;  succ:       8 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 8, loop depth 0, maybe hot
;;  prev block 9, next block 1, flags: (RTL, MODIFIED)
;;  pred:       9 [always]  (FALLTHRU)
;;              7
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(code_label 43 51 44 8 39 (nil) [1 uses])
(note 44 43 52 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(note 52 44 0 NOTE_INSN_DELETED)

;; Function search_callback (search_callback, funcdef_no=27, decl_uid=3433, cgraph_uid=28, symbol_order=31)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 3:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 7:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 9:  (0) r  (1) i {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 11:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 13:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 16:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 18:  (0) rBwBz {*call}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #1: **********

EBB 2 3

********** Pseudo live ranges #1: **********

  BB 3
   Insn 22: point = 0, n_alt = -1
  BB 2
   Insn 18: point = 0, n_alt = 0
   Insn 17: point = 0, n_alt = -2
   Insn 16: point = 1, n_alt = 3
   Insn 15: point = 2, n_alt = 0
   Insn 14: point = 2, n_alt = -2
   Insn 13: point = 3, n_alt = 3
   Insn 12: point = 4, n_alt = 0
   Insn 11: point = 4, n_alt = 3
   Insn 10: point = 4, n_alt = -2
   Insn 9: point = 5, n_alt = 4
   Insn 8: point = 6, n_alt = -2
   Insn 7: point = 7, n_alt = 3
   Insn 3: point = 8, n_alt = 5
   Insn 2: point = 8, n_alt = 5
 r82: [6..7]
 r83: [4..5]
 r84: [2..3]
 r85: [0..1]
Compressing live ranges: from 8 to 8 - 100%
Ranges after the compression:
 r82: [6..7]
 r83: [4..5]
 r84: [2..3]
 r85: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 6
	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
changing reg in insn 7
changing reg in insn 8
changing reg in insn 9
changing reg in insn 10
changing reg in insn 13
changing reg in insn 14
changing reg in insn 16
changing reg in insn 17
starting the processing of deferred insns
ending the processing of deferred insns


search_callback

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 4 [si] 5 [di] 6 [bp] 7 [sp]
;;  ref usage 	r0={9d,5u} r1={4d} r2={4d} r4={5d,2u} r5={7d,4u} r6={1d,8u} r7={1d,6u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r17={3d} r18={3d} r19={1d,1u} r20={4d} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={4d} r37={4d} r38={3d} r39={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} 
;;    total ref usage 254{228d,26u,0e} in 15{12 regular + 3 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 82 83 84 85
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [3 path+0 S8 A64])
        (reg:DI 5 di [ path ])) "main.c":255:60 80 {*movdi_internal}
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [13 file+0 S8 A64])
        (reg:DI 4 si [ file ])) "main.c":255:60 80 {*movdi_internal}
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:DI 0 ax [82])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [3 path+0 S8 A64])) "main.c":256:3 80 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:DI 4 si)
        (reg:DI 0 ax [82])) "main.c":256:3 80 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 0 ax [83])
        (symbol_ref/f:DI ("*.LC34") [flags 0x2]  <var_decl 0x7fa6108fdab0 *.LC34>)) "main.c":256:3 80 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [83])) "main.c":256:3 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC34") [flags 0x2]  <var_decl 0x7fa6108fdab0 *.LC34>)
        (nil)))
(insn 11 10 12 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "main.c":256:3 83 {*movqi_internal}
     (nil))
(call_insn 12 11 13 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fa610ac6000 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "main.c":256:3 909 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 13 12 14 2 (set (reg:DI 0 ax [84])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [3 path+0 S8 A64])) "main.c":257:3 80 {*movdi_internal}
     (nil))
(insn 14 13 15 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [84])) "main.c":257:3 80 {*movdi_internal}
     (nil))
(call_insn 15 14 16 2 (call (mem:QI (symbol_ref:DI ("search_check_path") [flags 0x3]  <function_decl 0x7fa610840300 search_check_path>) [0 search_check_path S1 A8])
        (const_int 0 [0])) "main.c":257:3 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 16 15 17 2 (set (reg:DI 0 ax [85])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [13 file+0 S8 A64])) "main.c":258:3 80 {*movdi_internal}
     (nil))
(insn 17 16 18 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [85])) "main.c":258:3 80 {*movdi_internal}
     (nil))
(call_insn 18 17 21 2 (call (mem:QI (symbol_ref:DI ("checksum_upd_file") [flags 0x3]  <function_decl 0x7fa610835700 checksum_upd_file>) [0 checksum_upd_file S1 A8])
        (const_int 0 [0])) "main.c":258:3 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       3 [always]  (FALLTHRU) main.c:259:1
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 1, flags: (RTL, MODIFIED)
;;  pred:       2 [always]  (FALLTHRU) main.c:259:1
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(note 21 18 22 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 3 (const_int 0 [0]) "main.c":259:1 928 {nop}
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(note 23 22 0 NOTE_INSN_DELETED)

;; Function test_explorer_search (test_explorer_search, funcdef_no=28, decl_uid=3435, cgraph_uid=29, symbol_order=32)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=416, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 19 to 7 (offset=400, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
            2 Scratch win: reject+=2
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3:  (0) =m  (1) m  (2) =&r {stack_protect_set_1_di}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 6:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 8:  (1) rBwBz {*call_value}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 10:  (0) m  (1) re {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 11:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 13:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 14:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 15:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 18:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 19:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 20:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 21:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 24:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 25:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 27:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 28:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 31:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            alt=1: Bad operand -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 32:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 33:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 35:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            alt=1: Bad operand -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 36:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 37:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 39:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            alt=1: Bad operand -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 40:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 41:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 42:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 44:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 45:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 46:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 49:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 50:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 51:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 52:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 53:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 56:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            alt=1: Bad operand -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 57:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 58:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 60:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            alt=1: Bad operand -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 61:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 62:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 63:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 65:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 66:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 67:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 70:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 71:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 72:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 73:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 74:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 77:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            alt=1: Bad operand -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 78:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 79:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 81:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            alt=1: Bad operand -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 82:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 83:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 84:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 86:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 87:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 88:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 91:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 92:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 93:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 94:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 97:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 98:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 99:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 100:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 103:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 104:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 105:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 106:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 107:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 110:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            alt=1: Bad operand -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 111:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 112:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 114:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            alt=1: Bad operand -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 115:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 116:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 118:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            alt=1: Bad operand -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 119:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 120:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 121:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 123:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 124:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 125:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 128:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 129:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 130:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 131:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 134:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 135:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 136:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 137:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 140:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 141:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 142:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 143:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 146:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 147:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 148:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 149:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 150:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 153:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            alt=1: Bad operand -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 154:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 155:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 157:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            alt=1: Bad operand -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 158:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 159:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 161:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            alt=1: Bad operand -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 162:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 163:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 164:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 166:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 167:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 168:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 171:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 172:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 173:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 174:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 177:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 178:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 179:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 180:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 183:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 184:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 185:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 186:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 187:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 190:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            alt=1: Bad operand -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 191:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 192:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 194:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            alt=1: Bad operand -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 195:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 196:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 198:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            alt=1: Bad operand -- refuse
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 199:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 200:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 201:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 203:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 204:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 205:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 208:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 209:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 210:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 211:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 214:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 215:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 216:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 217:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 220:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 221:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 222:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 223:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 226:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 227:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 228:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 229:  (0) r  (1) i {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 231:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 234:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 235:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 236:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 237:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 0 in insn 238:  (0) =rm  (1) %0  (2) re {*iorsi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 239:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 240:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 241:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 243:  (0) rBwBz {*call}
            3 Scratch win: reject+=2
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 245:  (1) m  (2) m  (3) =&r {stack_protect_test_1_di}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 247:  (0) rBwBz {*call}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #1: **********

EBB 2 3
EBB 4

********** Pseudo live ranges #1: **********

  BB 3
   Insn 247: point = 0, n_alt = 0
  BB 4
  BB 2
   Insn 246: point = 0, n_alt = -1
   Insn 245: point = 0, n_alt = 0
   Insn 253: point = 2, n_alt = -1
   Insn 243: point = 2, n_alt = 0
   Insn 242: point = 2, n_alt = -2
   Insn 241: point = 3, n_alt = 3
   Insn 240: point = 4, n_alt = 1
   Insn 239: point = 5, n_alt = 3
   Insn 238: point = 6, n_alt = 0
   Insn 237: point = 8, n_alt = 0
   Insn 236: point = 9, n_alt = 0
   Insn 235: point = 11, n_alt = 3
   Insn 234: point = 12, n_alt = 0
   Insn 233: point = 12, n_alt = -2
   Insn 232: point = 13, n_alt = -2
   Insn 231: point = 14, n_alt = 4
   Insn 230: point = 15, n_alt = -2
   Insn 229: point = 16, n_alt = 4
   Insn 228: point = 17, n_alt = 3
   Insn 227: point = 19, n_alt = 3
   Insn 226: point = 20, n_alt = 0
   Insn 225: point = 20, n_alt = -2
   Insn 224: point = 21, n_alt = -2
   Insn 223: point = 22, n_alt = 4
   Insn 222: point = 23, n_alt = 0
   Insn 221: point = 23, n_alt = 3
   Insn 220: point = 24, n_alt = 0
   Insn 219: point = 24, n_alt = -2
   Insn 218: point = 25, n_alt = -2
   Insn 217: point = 26, n_alt = 4
   Insn 216: point = 27, n_alt = 0
   Insn 215: point = 27, n_alt = 3
   Insn 214: point = 28, n_alt = 0
   Insn 213: point = 28, n_alt = -2
   Insn 212: point = 29, n_alt = -2
   Insn 211: point = 30, n_alt = 4
   Insn 210: point = 31, n_alt = 0
   Insn 209: point = 31, n_alt = 3
   Insn 208: point = 32, n_alt = 0
   Insn 207: point = 32, n_alt = -2
   Insn 206: point = 33, n_alt = -2
   Insn 205: point = 34, n_alt = 4
   Insn 204: point = 35, n_alt = 0
   Insn 203: point = 35, n_alt = 0
   Insn 202: point = 35, n_alt = -2
   Insn 201: point = 36, n_alt = 0
   Insn 200: point = 36, n_alt = 3
   Insn 199: point = 37, n_alt = 3
   Insn 198: point = 38, n_alt = 0
   Insn 197: point = 38, n_alt = -2
   Insn 196: point = 39, n_alt = 0
   Insn 195: point = 39, n_alt = 3
   Insn 194: point = 40, n_alt = 0
   Insn 193: point = 40, n_alt = -2
   Insn 192: point = 41, n_alt = 0
   Insn 191: point = 41, n_alt = 3
   Insn 190: point = 42, n_alt = 0
   Insn 189: point = 42, n_alt = -2
   Insn 188: point = 43, n_alt = -2
   Insn 187: point = 44, n_alt = 4
   Insn 186: point = 45, n_alt = 0
   Insn 185: point = 45, n_alt = 0
   Insn 184: point = 45, n_alt = 3
   Insn 183: point = 46, n_alt = 0
   Insn 182: point = 46, n_alt = -2
   Insn 181: point = 47, n_alt = -2
   Insn 180: point = 48, n_alt = 4
   Insn 179: point = 49, n_alt = 0
   Insn 178: point = 49, n_alt = 3
   Insn 177: point = 50, n_alt = 0
   Insn 176: point = 50, n_alt = -2
   Insn 175: point = 51, n_alt = -2
   Insn 174: point = 52, n_alt = 4
   Insn 173: point = 53, n_alt = 0
   Insn 172: point = 53, n_alt = 3
   Insn 171: point = 54, n_alt = 0
   Insn 170: point = 54, n_alt = -2
   Insn 169: point = 55, n_alt = -2
   Insn 168: point = 56, n_alt = 4
   Insn 167: point = 57, n_alt = 0
   Insn 166: point = 57, n_alt = 0
   Insn 165: point = 57, n_alt = -2
   Insn 164: point = 58, n_alt = 0
   Insn 163: point = 58, n_alt = 3
   Insn 162: point = 59, n_alt = 3
   Insn 161: point = 60, n_alt = 0
   Insn 160: point = 60, n_alt = -2
   Insn 159: point = 61, n_alt = 0
   Insn 158: point = 61, n_alt = 3
   Insn 157: point = 62, n_alt = 0
   Insn 156: point = 62, n_alt = -2
   Insn 155: point = 63, n_alt = 0
   Insn 154: point = 63, n_alt = 3
   Insn 153: point = 64, n_alt = 0
   Insn 152: point = 64, n_alt = -2
   Insn 151: point = 65, n_alt = -2
   Insn 150: point = 66, n_alt = 4
   Insn 149: point = 67, n_alt = 0
   Insn 148: point = 67, n_alt = 0
   Insn 147: point = 67, n_alt = 3
   Insn 146: point = 68, n_alt = 0
   Insn 145: point = 68, n_alt = -2
   Insn 144: point = 69, n_alt = -2
   Insn 143: point = 70, n_alt = 4
   Insn 142: point = 71, n_alt = 0
   Insn 141: point = 71, n_alt = 3
   Insn 140: point = 72, n_alt = 0
   Insn 139: point = 72, n_alt = -2
   Insn 138: point = 73, n_alt = -2
   Insn 137: point = 74, n_alt = 4
   Insn 136: point = 75, n_alt = 0
   Insn 135: point = 75, n_alt = 3
   Insn 134: point = 76, n_alt = 0
   Insn 133: point = 76, n_alt = -2
   Insn 132: point = 77, n_alt = -2
   Insn 131: point = 78, n_alt = 4
   Insn 130: point = 79, n_alt = 0
   Insn 129: point = 79, n_alt = 3
   Insn 128: point = 80, n_alt = 0
   Insn 127: point = 80, n_alt = -2
   Insn 126: point = 81, n_alt = -2
   Insn 125: point = 82, n_alt = 4
   Insn 124: point = 83, n_alt = 0
   Insn 123: point = 83, n_alt = 0
   Insn 122: point = 83, n_alt = -2
   Insn 121: point = 84, n_alt = 0
   Insn 120: point = 84, n_alt = 3
   Insn 119: point = 85, n_alt = 3
   Insn 118: point = 86, n_alt = 0
   Insn 117: point = 86, n_alt = -2
   Insn 116: point = 87, n_alt = 0
   Insn 115: point = 87, n_alt = 3
   Insn 114: point = 88, n_alt = 0
   Insn 113: point = 88, n_alt = -2
   Insn 112: point = 89, n_alt = 0
   Insn 111: point = 89, n_alt = 3
   Insn 110: point = 90, n_alt = 0
   Insn 109: point = 90, n_alt = -2
   Insn 108: point = 91, n_alt = -2
   Insn 107: point = 92, n_alt = 4
   Insn 106: point = 93, n_alt = 0
   Insn 105: point = 93, n_alt = 0
   Insn 104: point = 93, n_alt = 3
   Insn 103: point = 94, n_alt = 0
   Insn 102: point = 94, n_alt = -2
   Insn 101: point = 95, n_alt = -2
   Insn 100: point = 96, n_alt = 4
   Insn 99: point = 97, n_alt = 0
   Insn 98: point = 97, n_alt = 3
   Insn 97: point = 98, n_alt = 0
   Insn 96: point = 98, n_alt = -2
   Insn 95: point = 99, n_alt = -2
   Insn 94: point = 100, n_alt = 4
   Insn 93: point = 101, n_alt = 0
   Insn 92: point = 101, n_alt = 3
   Insn 91: point = 102, n_alt = 0
   Insn 90: point = 102, n_alt = -2
   Insn 89: point = 103, n_alt = -2
   Insn 88: point = 104, n_alt = 4
   Insn 87: point = 105, n_alt = 0
   Insn 86: point = 105, n_alt = 0
   Insn 85: point = 105, n_alt = -2
   Insn 84: point = 106, n_alt = 0
   Insn 83: point = 106, n_alt = 3
   Insn 82: point = 107, n_alt = 3
   Insn 81: point = 108, n_alt = 0
   Insn 80: point = 108, n_alt = -2
   Insn 79: point = 109, n_alt = 0
   Insn 78: point = 109, n_alt = 3
   Insn 77: point = 110, n_alt = 0
   Insn 76: point = 110, n_alt = -2
   Insn 75: point = 111, n_alt = -2
   Insn 74: point = 112, n_alt = 4
   Insn 73: point = 113, n_alt = 0
   Insn 72: point = 113, n_alt = 0
   Insn 71: point = 113, n_alt = 3
   Insn 70: point = 114, n_alt = 0
   Insn 69: point = 114, n_alt = -2
   Insn 68: point = 115, n_alt = -2
   Insn 67: point = 116, n_alt = 4
   Insn 66: point = 117, n_alt = 0
   Insn 65: point = 117, n_alt = 0
   Insn 64: point = 117, n_alt = -2
   Insn 63: point = 118, n_alt = 0
   Insn 62: point = 118, n_alt = 3
   Insn 61: point = 119, n_alt = 3
   Insn 60: point = 120, n_alt = 0
   Insn 59: point = 120, n_alt = -2
   Insn 58: point = 121, n_alt = 0
   Insn 57: point = 121, n_alt = 3
   Insn 56: point = 122, n_alt = 0
   Insn 55: point = 122, n_alt = -2
   Insn 54: point = 123, n_alt = -2
   Insn 53: point = 124, n_alt = 4
   Insn 52: point = 125, n_alt = 0
   Insn 51: point = 125, n_alt = 0
   Insn 50: point = 125, n_alt = 3
   Insn 49: point = 126, n_alt = 0
   Insn 48: point = 126, n_alt = -2
   Insn 47: point = 127, n_alt = -2
   Insn 46: point = 128, n_alt = 4
   Insn 45: point = 129, n_alt = 0
   Insn 44: point = 129, n_alt = 0
   Insn 43: point = 129, n_alt = -2
   Insn 42: point = 130, n_alt = 0
   Insn 41: point = 130, n_alt = 3
   Insn 40: point = 131, n_alt = 3
   Insn 39: point = 132, n_alt = 0
   Insn 38: point = 132, n_alt = -2
   Insn 37: point = 133, n_alt = 0
   Insn 36: point = 133, n_alt = 3
   Insn 35: point = 134, n_alt = 0
   Insn 34: point = 134, n_alt = -2
   Insn 33: point = 135, n_alt = 0
   Insn 32: point = 135, n_alt = 3
   Insn 31: point = 136, n_alt = 0
   Insn 30: point = 136, n_alt = -2
   Insn 29: point = 137, n_alt = -2
   Insn 28: point = 138, n_alt = 4
   Insn 27: point = 139, n_alt = 0
   Insn 26: point = 139, n_alt = 0
   Insn 25: point = 139, n_alt = 3
   Insn 24: point = 140, n_alt = 0
   Insn 23: point = 140, n_alt = -2
   Insn 22: point = 141, n_alt = -2
   Insn 21: point = 142, n_alt = 4
   Insn 20: point = 143, n_alt = 0
   Insn 19: point = 143, n_alt = 3
   Insn 18: point = 144, n_alt = 0
   Insn 17: point = 144, n_alt = -2
   Insn 16: point = 145, n_alt = -2
   Insn 15: point = 146, n_alt = 4
   Insn 14: point = 147, n_alt = 0
   Insn 13: point = 147, n_alt = 3
   Insn 12: point = 148, n_alt = 0
   Insn 11: point = 148, n_alt = 3
   Insn 10: point = 148, n_alt = 5
   Insn 9: point = 149, n_alt = -2
   Insn 8: point = 150, n_alt = 0
   Insn 7: point = 150, n_alt = -2
   Insn 6: point = 151, n_alt = 4
   Insn 3: point = 152, n_alt = 0
 r82: [12..17]
 r83: [7..9]
 r84: [7..8]
 r85: [4..6]
 r86: [150..151]
 r87: [148..149]
 r88: [144..147]
 r89: [145..146]
 r90: [140..143]
 r91: [141..142]
 r92: [136..139]
 r93: [137..138]
 r94: [134..135]
 r95: [132..133]
 r96: [129..131]
 r97: [126..130]
 r98: [127..128]
 r99: [122..125]
 r100: [123..124]
 r101: [120..121]
 r102: [117..119]
 r103: [114..118]
 r104: [115..116]
 r105: [110..113]
 r106: [111..112]
 r107: [108..109]
 r108: [105..107]
 r109: [102..106]
 r110: [103..104]
 r111: [98..101]
 r112: [99..100]
 r113: [94..97]
 r114: [95..96]
 r115: [90..93]
 r116: [91..92]
 r117: [88..89]
 r118: [86..87]
 r119: [83..85]
 r120: [80..84]
 r121: [81..82]
 r122: [76..79]
 r123: [77..78]
 r124: [72..75]
 r125: [73..74]
 r126: [68..71]
 r127: [69..70]
 r128: [64..67]
 r129: [65..66]
 r130: [62..63]
 r131: [60..61]
 r132: [57..59]
 r133: [54..58]
 r134: [55..56]
 r135: [50..53]
 r136: [51..52]
 r137: [46..49]
 r138: [47..48]
 r139: [42..45]
 r140: [43..44]
 r141: [40..41]
 r142: [38..39]
 r143: [35..37]
 r144: [32..36]
 r145: [33..34]
 r146: [28..31]
 r147: [29..30]
 r148: [24..27]
 r149: [25..26]
 r150: [20..23]
 r151: [21..22]
 r152: [18..19]
 r153: [15..16]
 r154: [13..14]
 r155: [10..11]
 r156: [4..5]
 r157: [2..3]
 r158: [152..153]
 r159: [0..1]
Compressing live ranges: from 154 to 102 - 66%
Ranges after the compression:
 r82: [10..13]
 r83: [6..7]
 r84: [6..7]
 r85: [4..5]
 r86: [98..99]
 r87: [96..97]
 r88: [94..95]
 r89: [94..95]
 r90: [92..93]
 r91: [92..93]
 r92: [90..91]
 r93: [90..91]
 r94: [88..89]
 r95: [86..87]
 r96: [84..85]
 r97: [82..85]
 r98: [82..83]
 r99: [80..81]
 r100: [80..81]
 r101: [78..79]
 r102: [76..77]
 r103: [74..77]
 r104: [74..75]
 r105: [72..73]
 r106: [72..73]
 r107: [70..71]
 r108: [68..69]
 r109: [66..69]
 r110: [66..67]
 r111: [64..65]
 r112: [64..65]
 r113: [62..63]
 r114: [62..63]
 r115: [60..61]
 r116: [60..61]
 r117: [58..59]
 r118: [56..57]
 r119: [54..55]
 r120: [52..55]
 r121: [52..53]
 r122: [50..51]
 r123: [50..51]
 r124: [48..49]
 r125: [48..49]
 r126: [46..47]
 r127: [46..47]
 r128: [44..45]
 r129: [44..45]
 r130: [42..43]
 r131: [40..41]
 r132: [38..39]
 r133: [36..39]
 r134: [36..37]
 r135: [34..35]
 r136: [34..35]
 r137: [32..33]
 r138: [32..33]
 r139: [30..31]
 r140: [30..31]
 r141: [28..29]
 r142: [26..27]
 r143: [24..25]
 r144: [22..25]
 r145: [22..23]
 r146: [20..21]
 r147: [20..21]
 r148: [18..19]
 r149: [18..19]
 r150: [16..17]
 r151: [16..17]
 r152: [14..15]
 r153: [12..13]
 r154: [10..11]
 r155: [8..9]
 r156: [4..5]
 r157: [2..3]
 r158: [100..101]
 r159: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 6
	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=416, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 19 to 7 (offset=400, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
changing reg in insn 228
changing reg in insn 233
changing reg in insn 236
changing reg in insn 238
changing reg in insn 237
changing reg in insn 238
changing reg in insn 238
changing reg in insn 240
changing reg in insn 6
changing reg in insn 7
changing reg in insn 9
changing reg in insn 10
changing reg in insn 13
changing reg in insn 17
changing reg in insn 15
changing reg in insn 16
changing reg in insn 19
changing reg in insn 23
changing reg in insn 21
changing reg in insn 22
changing reg in insn 25
changing reg in insn 30
changing reg in insn 28
changing reg in insn 29
changing reg in insn 32
changing reg in insn 34
changing reg in insn 36
changing reg in insn 38
changing reg in insn 40
changing reg in insn 43
changing reg in insn 41
changing reg in insn 48
changing reg in insn 46
changing reg in insn 47
changing reg in insn 50
changing reg in insn 55
changing reg in insn 53
changing reg in insn 54
changing reg in insn 57
changing reg in insn 59
changing reg in insn 61
changing reg in insn 64
changing reg in insn 62
changing reg in insn 69
changing reg in insn 67
changing reg in insn 68
changing reg in insn 71
changing reg in insn 76
changing reg in insn 74
changing reg in insn 75
changing reg in insn 78
changing reg in insn 80
changing reg in insn 82
changing reg in insn 85
changing reg in insn 83
changing reg in insn 90
changing reg in insn 88
changing reg in insn 89
changing reg in insn 92
changing reg in insn 96
changing reg in insn 94
changing reg in insn 95
changing reg in insn 98
changing reg in insn 102
changing reg in insn 100
changing reg in insn 101
changing reg in insn 104
changing reg in insn 109
changing reg in insn 107
changing reg in insn 108
changing reg in insn 111
changing reg in insn 113
changing reg in insn 115
changing reg in insn 117
changing reg in insn 119
changing reg in insn 122
changing reg in insn 120
changing reg in insn 127
changing reg in insn 125
changing reg in insn 126
changing reg in insn 129
changing reg in insn 133
changing reg in insn 131
changing reg in insn 132
changing reg in insn 135
changing reg in insn 139
changing reg in insn 137
changing reg in insn 138
changing reg in insn 141
changing reg in insn 145
changing reg in insn 143
changing reg in insn 144
changing reg in insn 147
changing reg in insn 152
changing reg in insn 150
changing reg in insn 151
changing reg in insn 154
changing reg in insn 156
changing reg in insn 158
changing reg in insn 160
changing reg in insn 162
changing reg in insn 165
changing reg in insn 163
changing reg in insn 170
changing reg in insn 168
changing reg in insn 169
changing reg in insn 172
changing reg in insn 176
changing reg in insn 174
changing reg in insn 175
changing reg in insn 178
changing reg in insn 182
changing reg in insn 180
changing reg in insn 181
changing reg in insn 184
changing reg in insn 189
changing reg in insn 187
changing reg in insn 188
changing reg in insn 191
changing reg in insn 193
changing reg in insn 195
changing reg in insn 197
changing reg in insn 199
changing reg in insn 202
changing reg in insn 200
changing reg in insn 207
changing reg in insn 205
changing reg in insn 206
changing reg in insn 209
changing reg in insn 213
changing reg in insn 211
changing reg in insn 212
changing reg in insn 215
changing reg in insn 219
changing reg in insn 217
changing reg in insn 218
changing reg in insn 221
changing reg in insn 225
changing reg in insn 223
changing reg in insn 224
changing reg in insn 227
changing reg in insn 228
changing reg in insn 229
changing reg in insn 230
changing reg in insn 231
changing reg in insn 232
changing reg in insn 235
changing reg in insn 236
changing reg in insn 239
changing reg in insn 240
changing reg in insn 241
changing reg in insn 242
changing reg in insn 3
changing reg in insn 245
deleting insn with uid = 9.
deleting insn with uid = 29.
deleting insn with uid = 47.
deleting insn with uid = 54.
deleting insn with uid = 68.
deleting insn with uid = 75.
deleting insn with uid = 89.
deleting insn with uid = 108.
deleting insn with uid = 126.
deleting insn with uid = 151.
deleting insn with uid = 169.
deleting insn with uid = 188.
deleting insn with uid = 206.
deleting insn with uid = 230.
starting the processing of deferred insns
ending the processing of deferred insns


test_explorer_search

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 36 [r8] 37 [r9]
;;  ref usage 	r0={84d,43u} r1={73d,33u} r2={65d,25u} r4={75d,35u} r5={77d,37u} r6={1d,51u} r7={1d,43u} r8={39d} r9={39d} r10={39d} r11={39d} r12={39d} r13={39d} r14={39d} r15={39d} r17={58d,1u} r18={39d} r19={1d,1u} r20={40d} r21={40d} r22={40d} r23={40d} r24={40d} r25={40d} r26={40d} r27={40d} r28={39d} r29={39d} r30={39d} r31={39d} r32={39d} r33={39d} r34={39d} r35={39d} r36={46d,6u} r37={46d,6u} r38={39d} r39={39d} r44={39d} r45={39d} r46={39d} r47={39d} r48={39d} r49={39d} r50={39d} r51={39d} r52={39d} r53={39d} r54={39d} r55={39d} r56={39d} r57={39d} r58={39d} r59={39d} r60={39d} r61={39d} r62={39d} r63={39d} r64={39d} r65={39d} r66={39d} r67={39d} r68={39d} r69={39d} r70={39d} r71={39d} r72={39d} r73={39d} r74={39d} r75={39d} 
;;    total ref usage 3117{2836d,281u,0e} in 229{190 regular + 39 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 4 3 2 NOTE_INSN_FUNCTION_BEG)
(insn 3 2 6 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 6 bp)
                        (const_int -8 [0xfffffffffffffff8])) [9 D.3578+0 S8 A64])
                (unspec:DI [
                        (mem/v/f:DI (const_int 40 [0x28]) [0 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_SET))
            (set (reg:DI 0 ax [158])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "main.c":261:29 1265 {stack_protect_set_1_di}
     (nil))
(insn 6 3 7 2 (set (reg:DI 0 ax [86])
        (symbol_ref/f:DI ("*.LC35") [flags 0x2]  <var_decl 0x7fa6108fdea0 *.LC35>)) "main.c":262:36 80 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [86])) "main.c":262:36 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC35") [flags 0x2]  <var_decl 0x7fa6108fdea0 *.LC35>)
        (nil)))
(call_insn 8 7 10 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("explorer_tester_create") [flags 0x41]  <function_decl 0x7fa610b72300 explorer_tester_create>) [0 explorer_tester_create S1 A8])
            (const_int 0 [0]))) "main.c":262:36 909 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 10 8 11 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -392 [0xfffffffffffffe78])) [14 tester+0 S8 A64])
        (reg:DI 0 ax [87])) "main.c":262:36 80 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "main.c":264:3 83 {*movqi_internal}
     (nil))
(call_insn 12 11 13 2 (call (mem:QI (symbol_ref:DI ("checksum_reset") [flags 0x3]  <function_decl 0x7fa610835100 checksum_reset>) [0 checksum_reset S1 A8])
        (const_int 0 [0])) "main.c":264:3 898 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (nil)))
(insn 13 12 14 2 (set (reg:DI 0 ax [88])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -392 [0xfffffffffffffe78])) [14 tester+0 S8 A64])) "main.c":267:3 80 {*movdi_internal}
     (nil))
(insn 14 13 15 2 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "main.c":267:3 81 {*movsi_internal}
     (nil))
(insn 15 14 16 2 (set (reg:DI 2 cx [89])
        (symbol_ref/f:DI ("*.LC36") [flags 0x2]  <var_decl 0x7fa6108fdf30 *.LC36>)) "main.c":267:3 80 {*movdi_internal}
     (nil))
(insn 16 15 17 2 (set (reg:DI 4 si)
        (reg:DI 2 cx [89])) "main.c":267:3 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC36") [flags 0x2]  <var_decl 0x7fa6108fdf30 *.LC36>)
        (nil)))
(insn 17 16 18 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [88])) "main.c":267:3 80 {*movdi_internal}
     (nil))
(call_insn 18 17 19 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_mkdir") [flags 0x41]  <function_decl 0x7fa610b72c00 explorer_tester_mkdir>) [0 explorer_tester_mkdir S1 A8])
        (const_int 0 [0])) "main.c":267:3 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 19 18 20 2 (set (reg:DI 0 ax [90])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -392 [0xfffffffffffffe78])) [14 tester+0 S8 A64])) "main.c":268:3 80 {*movdi_internal}
     (nil))
(insn 20 19 21 2 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "main.c":268:3 81 {*movsi_internal}
     (nil))
(insn 21 20 22 2 (set (reg:DI 2 cx [91])
        (symbol_ref/f:DI ("*.LC36") [flags 0x2]  <var_decl 0x7fa6108fdf30 *.LC36>)) "main.c":268:3 80 {*movdi_internal}
     (nil))
(insn 22 21 23 2 (set (reg:DI 4 si)
        (reg:DI 2 cx [91])) "main.c":268:3 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC36") [flags 0x2]  <var_decl 0x7fa6108fdf30 *.LC36>)
        (nil)))
(insn 23 22 24 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [90])) "main.c":268:3 80 {*movdi_internal}
     (nil))
(call_insn 24 23 25 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_chdir") [flags 0x41]  <function_decl 0x7fa610b72600 explorer_tester_chdir>) [0 explorer_tester_chdir S1 A8])
        (const_int 0 [0])) "main.c":268:3 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 25 24 26 2 (set (reg:DI 0 ax [92])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -392 [0xfffffffffffffe78])) [14 tester+0 S8 A64])) "main.c":270:5 80 {*movdi_internal}
     (nil))
(insn 26 25 27 2 (set (reg:SI 2 cx)
        (const_int 1 [0x1])) "main.c":270:5 81 {*movsi_internal}
     (nil))
(insn 27 26 28 2 (set (reg:SI 1 dx)
        (const_int 0 [0])) "main.c":270:5 81 {*movsi_internal}
     (nil))
(insn 28 27 30 2 (set (reg:DI 4 si [93])
        (symbol_ref/f:DI ("*.LC37") [flags 0x2]  <var_decl 0x7fa610909000 *.LC37>)) "main.c":270:5 80 {*movdi_internal}
     (nil))
(insn 30 28 31 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [92])) "main.c":270:5 80 {*movdi_internal}
     (nil))
(call_insn 31 30 32 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_create_file") [flags 0x41]  <function_decl 0x7fa610b72b00 explorer_tester_create_file>) [0 explorer_tester_create_file S1 A8])
        (const_int 0 [0])) "main.c":270:5 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 32 31 33 2 (parallel [
            (set (reg:DI 0 ax [94])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -384 [0xfffffffffffffe80])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":271:5 230 {*adddi_1}
     (nil))
(insn 33 32 34 2 (set (reg:SI 4 si)
        (const_int 373 [0x175])) "main.c":271:5 81 {*movsi_internal}
     (nil))
(insn 34 33 35 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [94])) "main.c":271:5 80 {*movdi_internal}
     (nil))
(call_insn 35 34 36 2 (call (mem:QI (symbol_ref:DI ("fill_random") [flags 0x3]  <function_decl 0x7fa610820900 fill_random>) [0 fill_random S1 A8])
        (const_int 0 [0])) "main.c":271:5 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 36 35 37 2 (parallel [
            (set (reg:DI 0 ax [95])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -384 [0xfffffffffffffe80])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":271:28 230 {*adddi_1}
     (nil))
(insn 37 36 38 2 (set (reg:SI 4 si)
        (const_int 373 [0x175])) "main.c":271:28 81 {*movsi_internal}
     (nil))
(insn 38 37 39 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [95])) "main.c":271:28 80 {*movdi_internal}
     (nil))
(call_insn 39 38 40 2 (call (mem:QI (symbol_ref:DI ("checksum_upd_bytes") [flags 0x3]  <function_decl 0x7fa610835500 checksum_upd_bytes>) [0 checksum_upd_bytes S1 A8])
        (const_int 0 [0])) "main.c":271:28 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 40 39 41 2 (parallel [
            (set (reg:DI 1 dx [96])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -384 [0xfffffffffffffe80])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":272:5 230 {*adddi_1}
     (nil))
(insn 41 40 42 2 (set (reg:DI 0 ax [97])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -392 [0xfffffffffffffe78])) [14 tester+0 S8 A64])) "main.c":272:5 80 {*movdi_internal}
     (nil))
(insn 42 41 43 2 (set (reg:SI 37 r9)
        (const_int 1 [0x1])) "main.c":272:5 81 {*movsi_internal}
     (nil))
(insn 43 42 44 2 (set (reg:DI 36 r8)
        (reg:DI 1 dx [96])) "main.c":272:5 80 {*movdi_internal}
     (nil))
(insn 44 43 45 2 (set (reg:SI 2 cx)
        (const_int 373 [0x175])) "main.c":272:5 81 {*movsi_internal}
     (nil))
(insn 45 44 46 2 (set (reg:SI 1 dx)
        (const_int 32 [0x20])) "main.c":272:5 81 {*movsi_internal}
     (nil))
(insn 46 45 48 2 (set (reg:DI 4 si [98])
        (symbol_ref/f:DI ("*.LC37") [flags 0x2]  <var_decl 0x7fa610909000 *.LC37>)) "main.c":272:5 80 {*movdi_internal}
     (nil))
(insn 48 46 49 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [97])) "main.c":272:5 80 {*movdi_internal}
     (nil))
(call_insn 49 48 50 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_write") [flags 0x41]  <function_decl 0x7fa610b72a00 explorer_tester_write>) [0 explorer_tester_write S1 A8])
        (const_int 0 [0])) "main.c":272:5 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:DI (use (reg:DI 36 r8))
                        (expr_list:SI (use (reg:SI 37 r9))
                            (nil))))))))
(insn 50 49 51 2 (set (reg:DI 0 ax [99])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -392 [0xfffffffffffffe78])) [14 tester+0 S8 A64])) "main.c":274:5 80 {*movdi_internal}
     (nil))
(insn 51 50 52 2 (set (reg:SI 2 cx)
        (const_int 1 [0x1])) "main.c":274:5 81 {*movsi_internal}
     (nil))
(insn 52 51 53 2 (set (reg:SI 1 dx)
        (const_int 0 [0])) "main.c":274:5 81 {*movsi_internal}
     (nil))
(insn 53 52 55 2 (set (reg:DI 4 si [100])
        (symbol_ref/f:DI ("*.LC38") [flags 0x2]  <var_decl 0x7fa610909090 *.LC38>)) "main.c":274:5 80 {*movdi_internal}
     (nil))
(insn 55 53 56 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [99])) "main.c":274:5 80 {*movdi_internal}
     (nil))
(call_insn 56 55 57 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_create_file") [flags 0x41]  <function_decl 0x7fa610b72b00 explorer_tester_create_file>) [0 explorer_tester_create_file S1 A8])
        (const_int 0 [0])) "main.c":274:5 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 57 56 58 2 (parallel [
            (set (reg:DI 0 ax [101])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -384 [0xfffffffffffffe80])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":275:5 230 {*adddi_1}
     (nil))
(insn 58 57 59 2 (set (reg:SI 4 si)
        (const_int 373 [0x175])) "main.c":275:5 81 {*movsi_internal}
     (nil))
(insn 59 58 60 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [101])) "main.c":275:5 80 {*movdi_internal}
     (nil))
(call_insn 60 59 61 2 (call (mem:QI (symbol_ref:DI ("fill_random") [flags 0x3]  <function_decl 0x7fa610820900 fill_random>) [0 fill_random S1 A8])
        (const_int 0 [0])) "main.c":275:5 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 61 60 62 2 (parallel [
            (set (reg:DI 1 dx [102])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -384 [0xfffffffffffffe80])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":276:5 230 {*adddi_1}
     (nil))
(insn 62 61 63 2 (set (reg:DI 0 ax [103])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -392 [0xfffffffffffffe78])) [14 tester+0 S8 A64])) "main.c":276:5 80 {*movdi_internal}
     (nil))
(insn 63 62 64 2 (set (reg:SI 37 r9)
        (const_int 1 [0x1])) "main.c":276:5 81 {*movsi_internal}
     (nil))
(insn 64 63 65 2 (set (reg:DI 36 r8)
        (reg:DI 1 dx [102])) "main.c":276:5 80 {*movdi_internal}
     (nil))
(insn 65 64 66 2 (set (reg:SI 2 cx)
        (const_int 373 [0x175])) "main.c":276:5 81 {*movsi_internal}
     (nil))
(insn 66 65 67 2 (set (reg:SI 1 dx)
        (const_int 0 [0])) "main.c":276:5 81 {*movsi_internal}
     (nil))
(insn 67 66 69 2 (set (reg:DI 4 si [104])
        (symbol_ref/f:DI ("*.LC38") [flags 0x2]  <var_decl 0x7fa610909090 *.LC38>)) "main.c":276:5 80 {*movdi_internal}
     (nil))
(insn 69 67 70 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [103])) "main.c":276:5 80 {*movdi_internal}
     (nil))
(call_insn 70 69 71 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_write") [flags 0x41]  <function_decl 0x7fa610b72a00 explorer_tester_write>) [0 explorer_tester_write S1 A8])
        (const_int 0 [0])) "main.c":276:5 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:DI (use (reg:DI 36 r8))
                        (expr_list:SI (use (reg:SI 37 r9))
                            (nil))))))))
(insn 71 70 72 2 (set (reg:DI 0 ax [105])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -392 [0xfffffffffffffe78])) [14 tester+0 S8 A64])) "main.c":278:5 80 {*movdi_internal}
     (nil))
(insn 72 71 73 2 (set (reg:SI 2 cx)
        (const_int 1 [0x1])) "main.c":278:5 81 {*movsi_internal}
     (nil))
(insn 73 72 74 2 (set (reg:SI 1 dx)
        (const_int 0 [0])) "main.c":278:5 81 {*movsi_internal}
     (nil))
(insn 74 73 76 2 (set (reg:DI 4 si [106])
        (symbol_ref/f:DI ("*.LC39") [flags 0x2]  <var_decl 0x7fa610909120 *.LC39>)) "main.c":278:5 80 {*movdi_internal}
     (nil))
(insn 76 74 77 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [105])) "main.c":278:5 80 {*movdi_internal}
     (nil))
(call_insn 77 76 78 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_create_file") [flags 0x41]  <function_decl 0x7fa610b72b00 explorer_tester_create_file>) [0 explorer_tester_create_file S1 A8])
        (const_int 0 [0])) "main.c":278:5 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 78 77 79 2 (parallel [
            (set (reg:DI 0 ax [107])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -384 [0xfffffffffffffe80])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":279:5 230 {*adddi_1}
     (nil))
(insn 79 78 80 2 (set (reg:SI 4 si)
        (const_int 373 [0x175])) "main.c":279:5 81 {*movsi_internal}
     (nil))
(insn 80 79 81 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [107])) "main.c":279:5 80 {*movdi_internal}
     (nil))
(call_insn 81 80 82 2 (call (mem:QI (symbol_ref:DI ("fill_random") [flags 0x3]  <function_decl 0x7fa610820900 fill_random>) [0 fill_random S1 A8])
        (const_int 0 [0])) "main.c":279:5 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 82 81 83 2 (parallel [
            (set (reg:DI 1 dx [108])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -384 [0xfffffffffffffe80])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":280:5 230 {*adddi_1}
     (nil))
(insn 83 82 84 2 (set (reg:DI 0 ax [109])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -392 [0xfffffffffffffe78])) [14 tester+0 S8 A64])) "main.c":280:5 80 {*movdi_internal}
     (nil))
(insn 84 83 85 2 (set (reg:SI 37 r9)
        (const_int 1 [0x1])) "main.c":280:5 81 {*movsi_internal}
     (nil))
(insn 85 84 86 2 (set (reg:DI 36 r8)
        (reg:DI 1 dx [108])) "main.c":280:5 80 {*movdi_internal}
     (nil))
(insn 86 85 87 2 (set (reg:SI 2 cx)
        (const_int 373 [0x175])) "main.c":280:5 81 {*movsi_internal}
     (nil))
(insn 87 86 88 2 (set (reg:SI 1 dx)
        (const_int 0 [0])) "main.c":280:5 81 {*movsi_internal}
     (nil))
(insn 88 87 90 2 (set (reg:DI 4 si [110])
        (symbol_ref/f:DI ("*.LC39") [flags 0x2]  <var_decl 0x7fa610909120 *.LC39>)) "main.c":280:5 80 {*movdi_internal}
     (nil))
(insn 90 88 91 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [109])) "main.c":280:5 80 {*movdi_internal}
     (nil))
(call_insn 91 90 92 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_write") [flags 0x41]  <function_decl 0x7fa610b72a00 explorer_tester_write>) [0 explorer_tester_write S1 A8])
        (const_int 0 [0])) "main.c":280:5 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:DI (use (reg:DI 36 r8))
                        (expr_list:SI (use (reg:SI 37 r9))
                            (nil))))))))
(insn 92 91 93 2 (set (reg:DI 0 ax [111])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -392 [0xfffffffffffffe78])) [14 tester+0 S8 A64])) "main.c":282:5 80 {*movdi_internal}
     (nil))
(insn 93 92 94 2 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "main.c":282:5 81 {*movsi_internal}
     (nil))
(insn 94 93 95 2 (set (reg:DI 2 cx [112])
        (symbol_ref/f:DI ("*.LC22") [flags 0x2]  <var_decl 0x7fa6108e21b0 *.LC22>)) "main.c":282:5 80 {*movdi_internal}
     (nil))
(insn 95 94 96 2 (set (reg:DI 4 si)
        (reg:DI 2 cx [112])) "main.c":282:5 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC22") [flags 0x2]  <var_decl 0x7fa6108e21b0 *.LC22>)
        (nil)))
(insn 96 95 97 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [111])) "main.c":282:5 80 {*movdi_internal}
     (nil))
(call_insn 97 96 98 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_mkdir") [flags 0x41]  <function_decl 0x7fa610b72c00 explorer_tester_mkdir>) [0 explorer_tester_mkdir S1 A8])
        (const_int 0 [0])) "main.c":282:5 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 98 97 99 2 (set (reg:DI 0 ax [113])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -392 [0xfffffffffffffe78])) [14 tester+0 S8 A64])) "main.c":283:5 80 {*movdi_internal}
     (nil))
(insn 99 98 100 2 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "main.c":283:5 81 {*movsi_internal}
     (nil))
(insn 100 99 101 2 (set (reg:DI 2 cx [114])
        (symbol_ref/f:DI ("*.LC22") [flags 0x2]  <var_decl 0x7fa6108e21b0 *.LC22>)) "main.c":283:5 80 {*movdi_internal}
     (nil))
(insn 101 100 102 2 (set (reg:DI 4 si)
        (reg:DI 2 cx [114])) "main.c":283:5 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC22") [flags 0x2]  <var_decl 0x7fa6108e21b0 *.LC22>)
        (nil)))
(insn 102 101 103 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [113])) "main.c":283:5 80 {*movdi_internal}
     (nil))
(call_insn 103 102 104 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_chdir") [flags 0x41]  <function_decl 0x7fa610b72600 explorer_tester_chdir>) [0 explorer_tester_chdir S1 A8])
        (const_int 0 [0])) "main.c":283:5 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 104 103 105 2 (set (reg:DI 0 ax [115])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -392 [0xfffffffffffffe78])) [14 tester+0 S8 A64])) "main.c":285:7 80 {*movdi_internal}
     (nil))
(insn 105 104 106 2 (set (reg:SI 2 cx)
        (const_int 1 [0x1])) "main.c":285:7 81 {*movsi_internal}
     (nil))
(insn 106 105 107 2 (set (reg:SI 1 dx)
        (const_int 0 [0])) "main.c":285:7 81 {*movsi_internal}
     (nil))
(insn 107 106 109 2 (set (reg:DI 4 si [116])
        (symbol_ref/f:DI ("*.LC37") [flags 0x2]  <var_decl 0x7fa610909000 *.LC37>)) "main.c":285:7 80 {*movdi_internal}
     (nil))
(insn 109 107 110 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [115])) "main.c":285:7 80 {*movdi_internal}
     (nil))
(call_insn 110 109 111 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_create_file") [flags 0x41]  <function_decl 0x7fa610b72b00 explorer_tester_create_file>) [0 explorer_tester_create_file S1 A8])
        (const_int 0 [0])) "main.c":285:7 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 111 110 112 2 (parallel [
            (set (reg:DI 0 ax [117])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -384 [0xfffffffffffffe80])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":286:7 230 {*adddi_1}
     (nil))
(insn 112 111 113 2 (set (reg:SI 4 si)
        (const_int 373 [0x175])) "main.c":286:7 81 {*movsi_internal}
     (nil))
(insn 113 112 114 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [117])) "main.c":286:7 80 {*movdi_internal}
     (nil))
(call_insn 114 113 115 2 (call (mem:QI (symbol_ref:DI ("fill_random") [flags 0x3]  <function_decl 0x7fa610820900 fill_random>) [0 fill_random S1 A8])
        (const_int 0 [0])) "main.c":286:7 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 115 114 116 2 (parallel [
            (set (reg:DI 0 ax [118])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -384 [0xfffffffffffffe80])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":286:30 230 {*adddi_1}
     (nil))
(insn 116 115 117 2 (set (reg:SI 4 si)
        (const_int 373 [0x175])) "main.c":286:30 81 {*movsi_internal}
     (nil))
(insn 117 116 118 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [118])) "main.c":286:30 80 {*movdi_internal}
     (nil))
(call_insn 118 117 119 2 (call (mem:QI (symbol_ref:DI ("checksum_upd_bytes") [flags 0x3]  <function_decl 0x7fa610835500 checksum_upd_bytes>) [0 checksum_upd_bytes S1 A8])
        (const_int 0 [0])) "main.c":286:30 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 119 118 120 2 (parallel [
            (set (reg:DI 1 dx [119])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -384 [0xfffffffffffffe80])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":287:7 230 {*adddi_1}
     (nil))
(insn 120 119 121 2 (set (reg:DI 0 ax [120])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -392 [0xfffffffffffffe78])) [14 tester+0 S8 A64])) "main.c":287:7 80 {*movdi_internal}
     (nil))
(insn 121 120 122 2 (set (reg:SI 37 r9)
        (const_int 1 [0x1])) "main.c":287:7 81 {*movsi_internal}
     (nil))
(insn 122 121 123 2 (set (reg:DI 36 r8)
        (reg:DI 1 dx [119])) "main.c":287:7 80 {*movdi_internal}
     (nil))
(insn 123 122 124 2 (set (reg:SI 2 cx)
        (const_int 373 [0x175])) "main.c":287:7 81 {*movsi_internal}
     (nil))
(insn 124 123 125 2 (set (reg:SI 1 dx)
        (const_int 32 [0x20])) "main.c":287:7 81 {*movsi_internal}
     (nil))
(insn 125 124 127 2 (set (reg:DI 4 si [121])
        (symbol_ref/f:DI ("*.LC37") [flags 0x2]  <var_decl 0x7fa610909000 *.LC37>)) "main.c":287:7 80 {*movdi_internal}
     (nil))
(insn 127 125 128 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [120])) "main.c":287:7 80 {*movdi_internal}
     (nil))
(call_insn 128 127 129 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_write") [flags 0x41]  <function_decl 0x7fa610b72a00 explorer_tester_write>) [0 explorer_tester_write S1 A8])
        (const_int 0 [0])) "main.c":287:7 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:DI (use (reg:DI 36 r8))
                        (expr_list:SI (use (reg:SI 37 r9))
                            (nil))))))))
(insn 129 128 130 2 (set (reg:DI 0 ax [122])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -392 [0xfffffffffffffe78])) [14 tester+0 S8 A64])) "main.c":290:5 80 {*movdi_internal}
     (nil))
(insn 130 129 131 2 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "main.c":290:5 81 {*movsi_internal}
     (nil))
(insn 131 130 132 2 (set (reg:DI 2 cx [123])
        (symbol_ref/f:DI ("*.LC36") [flags 0x2]  <var_decl 0x7fa6108fdf30 *.LC36>)) "main.c":290:5 80 {*movdi_internal}
     (nil))
(insn 132 131 133 2 (set (reg:DI 4 si)
        (reg:DI 2 cx [123])) "main.c":290:5 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC36") [flags 0x2]  <var_decl 0x7fa6108fdf30 *.LC36>)
        (nil)))
(insn 133 132 134 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [122])) "main.c":290:5 80 {*movdi_internal}
     (nil))
(call_insn 134 133 135 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_cdpar") [flags 0x41]  <function_decl 0x7fa610b72500 explorer_tester_cdpar>) [0 explorer_tester_cdpar S1 A8])
        (const_int 0 [0])) "main.c":290:5 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 135 134 136 2 (set (reg:DI 0 ax [124])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -392 [0xfffffffffffffe78])) [14 tester+0 S8 A64])) "main.c":292:5 80 {*movdi_internal}
     (nil))
(insn 136 135 137 2 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "main.c":292:5 81 {*movsi_internal}
     (nil))
(insn 137 136 138 2 (set (reg:DI 2 cx [125])
        (symbol_ref/f:DI ("*.LC23") [flags 0x2]  <var_decl 0x7fa6108e2240 *.LC23>)) "main.c":292:5 80 {*movdi_internal}
     (nil))
(insn 138 137 139 2 (set (reg:DI 4 si)
        (reg:DI 2 cx [125])) "main.c":292:5 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC23") [flags 0x2]  <var_decl 0x7fa6108e2240 *.LC23>)
        (nil)))
(insn 139 138 140 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [124])) "main.c":292:5 80 {*movdi_internal}
     (nil))
(call_insn 140 139 141 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_mkdir") [flags 0x41]  <function_decl 0x7fa610b72c00 explorer_tester_mkdir>) [0 explorer_tester_mkdir S1 A8])
        (const_int 0 [0])) "main.c":292:5 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 141 140 142 2 (set (reg:DI 0 ax [126])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -392 [0xfffffffffffffe78])) [14 tester+0 S8 A64])) "main.c":293:5 80 {*movdi_internal}
     (nil))
(insn 142 141 143 2 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "main.c":293:5 81 {*movsi_internal}
     (nil))
(insn 143 142 144 2 (set (reg:DI 2 cx [127])
        (symbol_ref/f:DI ("*.LC23") [flags 0x2]  <var_decl 0x7fa6108e2240 *.LC23>)) "main.c":293:5 80 {*movdi_internal}
     (nil))
(insn 144 143 145 2 (set (reg:DI 4 si)
        (reg:DI 2 cx [127])) "main.c":293:5 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC23") [flags 0x2]  <var_decl 0x7fa6108e2240 *.LC23>)
        (nil)))
(insn 145 144 146 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [126])) "main.c":293:5 80 {*movdi_internal}
     (nil))
(call_insn 146 145 147 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_chdir") [flags 0x41]  <function_decl 0x7fa610b72600 explorer_tester_chdir>) [0 explorer_tester_chdir S1 A8])
        (const_int 0 [0])) "main.c":293:5 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 147 146 148 2 (set (reg:DI 0 ax [128])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -392 [0xfffffffffffffe78])) [14 tester+0 S8 A64])) "main.c":295:7 80 {*movdi_internal}
     (nil))
(insn 148 147 149 2 (set (reg:SI 2 cx)
        (const_int 1 [0x1])) "main.c":295:7 81 {*movsi_internal}
     (nil))
(insn 149 148 150 2 (set (reg:SI 1 dx)
        (const_int 0 [0])) "main.c":295:7 81 {*movsi_internal}
     (nil))
(insn 150 149 152 2 (set (reg:DI 4 si [129])
        (symbol_ref/f:DI ("*.LC37") [flags 0x2]  <var_decl 0x7fa610909000 *.LC37>)) "main.c":295:7 80 {*movdi_internal}
     (nil))
(insn 152 150 153 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [128])) "main.c":295:7 80 {*movdi_internal}
     (nil))
(call_insn 153 152 154 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_create_file") [flags 0x41]  <function_decl 0x7fa610b72b00 explorer_tester_create_file>) [0 explorer_tester_create_file S1 A8])
        (const_int 0 [0])) "main.c":295:7 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 154 153 155 2 (parallel [
            (set (reg:DI 0 ax [130])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -384 [0xfffffffffffffe80])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":296:7 230 {*adddi_1}
     (nil))
(insn 155 154 156 2 (set (reg:SI 4 si)
        (const_int 373 [0x175])) "main.c":296:7 81 {*movsi_internal}
     (nil))
(insn 156 155 157 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [130])) "main.c":296:7 80 {*movdi_internal}
     (nil))
(call_insn 157 156 158 2 (call (mem:QI (symbol_ref:DI ("fill_random") [flags 0x3]  <function_decl 0x7fa610820900 fill_random>) [0 fill_random S1 A8])
        (const_int 0 [0])) "main.c":296:7 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 158 157 159 2 (parallel [
            (set (reg:DI 0 ax [131])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -384 [0xfffffffffffffe80])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":296:30 230 {*adddi_1}
     (nil))
(insn 159 158 160 2 (set (reg:SI 4 si)
        (const_int 373 [0x175])) "main.c":296:30 81 {*movsi_internal}
     (nil))
(insn 160 159 161 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [131])) "main.c":296:30 80 {*movdi_internal}
     (nil))
(call_insn 161 160 162 2 (call (mem:QI (symbol_ref:DI ("checksum_upd_bytes") [flags 0x3]  <function_decl 0x7fa610835500 checksum_upd_bytes>) [0 checksum_upd_bytes S1 A8])
        (const_int 0 [0])) "main.c":296:30 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 162 161 163 2 (parallel [
            (set (reg:DI 1 dx [132])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -384 [0xfffffffffffffe80])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":297:7 230 {*adddi_1}
     (nil))
(insn 163 162 164 2 (set (reg:DI 0 ax [133])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -392 [0xfffffffffffffe78])) [14 tester+0 S8 A64])) "main.c":297:7 80 {*movdi_internal}
     (nil))
(insn 164 163 165 2 (set (reg:SI 37 r9)
        (const_int 1 [0x1])) "main.c":297:7 81 {*movsi_internal}
     (nil))
(insn 165 164 166 2 (set (reg:DI 36 r8)
        (reg:DI 1 dx [132])) "main.c":297:7 80 {*movdi_internal}
     (nil))
(insn 166 165 167 2 (set (reg:SI 2 cx)
        (const_int 373 [0x175])) "main.c":297:7 81 {*movsi_internal}
     (nil))
(insn 167 166 168 2 (set (reg:SI 1 dx)
        (const_int 48 [0x30])) "main.c":297:7 81 {*movsi_internal}
     (nil))
(insn 168 167 170 2 (set (reg:DI 4 si [134])
        (symbol_ref/f:DI ("*.LC37") [flags 0x2]  <var_decl 0x7fa610909000 *.LC37>)) "main.c":297:7 80 {*movdi_internal}
     (nil))
(insn 170 168 171 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [133])) "main.c":297:7 80 {*movdi_internal}
     (nil))
(call_insn 171 170 172 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_write") [flags 0x41]  <function_decl 0x7fa610b72a00 explorer_tester_write>) [0 explorer_tester_write S1 A8])
        (const_int 0 [0])) "main.c":297:7 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:DI (use (reg:DI 36 r8))
                        (expr_list:SI (use (reg:SI 37 r9))
                            (nil))))))))
(insn 172 171 173 2 (set (reg:DI 0 ax [135])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -392 [0xfffffffffffffe78])) [14 tester+0 S8 A64])) "main.c":300:7 80 {*movdi_internal}
     (nil))
(insn 173 172 174 2 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "main.c":300:7 81 {*movsi_internal}
     (nil))
(insn 174 173 175 2 (set (reg:DI 2 cx [136])
        (symbol_ref/f:DI ("*.LC24") [flags 0x2]  <var_decl 0x7fa6108e22d0 *.LC24>)) "main.c":300:7 80 {*movdi_internal}
     (nil))
(insn 175 174 176 2 (set (reg:DI 4 si)
        (reg:DI 2 cx [136])) "main.c":300:7 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC24") [flags 0x2]  <var_decl 0x7fa6108e22d0 *.LC24>)
        (nil)))
(insn 176 175 177 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [135])) "main.c":300:7 80 {*movdi_internal}
     (nil))
(call_insn 177 176 178 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_mkdir") [flags 0x41]  <function_decl 0x7fa610b72c00 explorer_tester_mkdir>) [0 explorer_tester_mkdir S1 A8])
        (const_int 0 [0])) "main.c":300:7 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 178 177 179 2 (set (reg:DI 0 ax [137])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -392 [0xfffffffffffffe78])) [14 tester+0 S8 A64])) "main.c":301:7 80 {*movdi_internal}
     (nil))
(insn 179 178 180 2 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "main.c":301:7 81 {*movsi_internal}
     (nil))
(insn 180 179 181 2 (set (reg:DI 2 cx [138])
        (symbol_ref/f:DI ("*.LC24") [flags 0x2]  <var_decl 0x7fa6108e22d0 *.LC24>)) "main.c":301:7 80 {*movdi_internal}
     (nil))
(insn 181 180 182 2 (set (reg:DI 4 si)
        (reg:DI 2 cx [138])) "main.c":301:7 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC24") [flags 0x2]  <var_decl 0x7fa6108e22d0 *.LC24>)
        (nil)))
(insn 182 181 183 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [137])) "main.c":301:7 80 {*movdi_internal}
     (nil))
(call_insn 183 182 184 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_chdir") [flags 0x41]  <function_decl 0x7fa610b72600 explorer_tester_chdir>) [0 explorer_tester_chdir S1 A8])
        (const_int 0 [0])) "main.c":301:7 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 184 183 185 2 (set (reg:DI 0 ax [139])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -392 [0xfffffffffffffe78])) [14 tester+0 S8 A64])) "main.c":303:9 80 {*movdi_internal}
     (nil))
(insn 185 184 186 2 (set (reg:SI 2 cx)
        (const_int 1 [0x1])) "main.c":303:9 81 {*movsi_internal}
     (nil))
(insn 186 185 187 2 (set (reg:SI 1 dx)
        (const_int 0 [0])) "main.c":303:9 81 {*movsi_internal}
     (nil))
(insn 187 186 189 2 (set (reg:DI 4 si [140])
        (symbol_ref/f:DI ("*.LC37") [flags 0x2]  <var_decl 0x7fa610909000 *.LC37>)) "main.c":303:9 80 {*movdi_internal}
     (nil))
(insn 189 187 190 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [139])) "main.c":303:9 80 {*movdi_internal}
     (nil))
(call_insn 190 189 191 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_create_file") [flags 0x41]  <function_decl 0x7fa610b72b00 explorer_tester_create_file>) [0 explorer_tester_create_file S1 A8])
        (const_int 0 [0])) "main.c":303:9 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 191 190 192 2 (parallel [
            (set (reg:DI 0 ax [141])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -384 [0xfffffffffffffe80])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":304:9 230 {*adddi_1}
     (nil))
(insn 192 191 193 2 (set (reg:SI 4 si)
        (const_int 373 [0x175])) "main.c":304:9 81 {*movsi_internal}
     (nil))
(insn 193 192 194 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [141])) "main.c":304:9 80 {*movdi_internal}
     (nil))
(call_insn 194 193 195 2 (call (mem:QI (symbol_ref:DI ("fill_random") [flags 0x3]  <function_decl 0x7fa610820900 fill_random>) [0 fill_random S1 A8])
        (const_int 0 [0])) "main.c":304:9 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 195 194 196 2 (parallel [
            (set (reg:DI 0 ax [142])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -384 [0xfffffffffffffe80])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":304:32 230 {*adddi_1}
     (nil))
(insn 196 195 197 2 (set (reg:SI 4 si)
        (const_int 373 [0x175])) "main.c":304:32 81 {*movsi_internal}
     (nil))
(insn 197 196 198 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [142])) "main.c":304:32 80 {*movdi_internal}
     (nil))
(call_insn 198 197 199 2 (call (mem:QI (symbol_ref:DI ("checksum_upd_bytes") [flags 0x3]  <function_decl 0x7fa610835500 checksum_upd_bytes>) [0 checksum_upd_bytes S1 A8])
        (const_int 0 [0])) "main.c":304:32 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 199 198 200 2 (parallel [
            (set (reg:DI 1 dx [143])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -384 [0xfffffffffffffe80])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":305:9 230 {*adddi_1}
     (nil))
(insn 200 199 201 2 (set (reg:DI 0 ax [144])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -392 [0xfffffffffffffe78])) [14 tester+0 S8 A64])) "main.c":305:9 80 {*movdi_internal}
     (nil))
(insn 201 200 202 2 (set (reg:SI 37 r9)
        (const_int 1 [0x1])) "main.c":305:9 81 {*movsi_internal}
     (nil))
(insn 202 201 203 2 (set (reg:DI 36 r8)
        (reg:DI 1 dx [143])) "main.c":305:9 80 {*movdi_internal}
     (nil))
(insn 203 202 204 2 (set (reg:SI 2 cx)
        (const_int 373 [0x175])) "main.c":305:9 81 {*movsi_internal}
     (nil))
(insn 204 203 205 2 (set (reg:SI 1 dx)
        (const_int 64 [0x40])) "main.c":305:9 81 {*movsi_internal}
     (nil))
(insn 205 204 207 2 (set (reg:DI 4 si [145])
        (symbol_ref/f:DI ("*.LC37") [flags 0x2]  <var_decl 0x7fa610909000 *.LC37>)) "main.c":305:9 80 {*movdi_internal}
     (nil))
(insn 207 205 208 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [144])) "main.c":305:9 80 {*movdi_internal}
     (nil))
(call_insn 208 207 209 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_write") [flags 0x41]  <function_decl 0x7fa610b72a00 explorer_tester_write>) [0 explorer_tester_write S1 A8])
        (const_int 0 [0])) "main.c":305:9 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:DI (use (reg:DI 36 r8))
                        (expr_list:SI (use (reg:SI 37 r9))
                            (nil))))))))
(insn 209 208 210 2 (set (reg:DI 0 ax [146])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -392 [0xfffffffffffffe78])) [14 tester+0 S8 A64])) "main.c":308:7 80 {*movdi_internal}
     (nil))
(insn 210 209 211 2 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "main.c":308:7 81 {*movsi_internal}
     (nil))
(insn 211 210 212 2 (set (reg:DI 2 cx [147])
        (symbol_ref/f:DI ("*.LC23") [flags 0x2]  <var_decl 0x7fa6108e2240 *.LC23>)) "main.c":308:7 80 {*movdi_internal}
     (nil))
(insn 212 211 213 2 (set (reg:DI 4 si)
        (reg:DI 2 cx [147])) "main.c":308:7 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC23") [flags 0x2]  <var_decl 0x7fa6108e2240 *.LC23>)
        (nil)))
(insn 213 212 214 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [146])) "main.c":308:7 80 {*movdi_internal}
     (nil))
(call_insn 214 213 215 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_cdpar") [flags 0x41]  <function_decl 0x7fa610b72500 explorer_tester_cdpar>) [0 explorer_tester_cdpar S1 A8])
        (const_int 0 [0])) "main.c":308:7 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 215 214 216 2 (set (reg:DI 0 ax [148])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -392 [0xfffffffffffffe78])) [14 tester+0 S8 A64])) "main.c":310:5 80 {*movdi_internal}
     (nil))
(insn 216 215 217 2 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "main.c":310:5 81 {*movsi_internal}
     (nil))
(insn 217 216 218 2 (set (reg:DI 2 cx [149])
        (symbol_ref/f:DI ("*.LC36") [flags 0x2]  <var_decl 0x7fa6108fdf30 *.LC36>)) "main.c":310:5 80 {*movdi_internal}
     (nil))
(insn 218 217 219 2 (set (reg:DI 4 si)
        (reg:DI 2 cx [149])) "main.c":310:5 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC36") [flags 0x2]  <var_decl 0x7fa6108fdf30 *.LC36>)
        (nil)))
(insn 219 218 220 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [148])) "main.c":310:5 80 {*movdi_internal}
     (nil))
(call_insn 220 219 221 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_cdpar") [flags 0x41]  <function_decl 0x7fa610b72500 explorer_tester_cdpar>) [0 explorer_tester_cdpar S1 A8])
        (const_int 0 [0])) "main.c":310:5 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 221 220 222 2 (set (reg:DI 0 ax [150])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -392 [0xfffffffffffffe78])) [14 tester+0 S8 A64])) "main.c":312:3 80 {*movdi_internal}
     (nil))
(insn 222 221 223 2 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "main.c":312:3 81 {*movsi_internal}
     (nil))
(insn 223 222 224 2 (set (reg:DI 2 cx [151])
        (symbol_ref/f:DI ("*.LC29") [flags 0x2]  <var_decl 0x7fa6108e2990 *.LC29>)) "main.c":312:3 80 {*movdi_internal}
     (nil))
(insn 224 223 225 2 (set (reg:DI 4 si)
        (reg:DI 2 cx [151])) "main.c":312:3 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC29") [flags 0x2]  <var_decl 0x7fa6108e2990 *.LC29>)
        (nil)))
(insn 225 224 226 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [150])) "main.c":312:3 80 {*movdi_internal}
     (nil))
(call_insn 226 225 227 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_cdpar") [flags 0x41]  <function_decl 0x7fa610b72500 explorer_tester_cdpar>) [0 explorer_tester_cdpar S1 A8])
        (const_int 0 [0])) "main.c":312:3 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 227 226 228 2 (set (reg/f:DI 0 ax [152])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -392 [0xfffffffffffffe78])) [14 tester+0 S8 A64])) "main.c":314:3 80 {*movdi_internal}
     (nil))
(insn 228 227 229 2 (set (reg/f:DI 0 ax [orig:82 _1 ] [82])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [152])
                (const_int 24 [0x18])) [6 tester_7->inner_explore+0 S8 A64])) "main.c":314:3 80 {*movdi_internal}
     (nil))
(insn 229 228 231 2 (set (reg:DI 1 dx [153])
        (symbol_ref:DI ("search_callback") [flags 0x3]  <function_decl 0x7fa610840500 search_callback>)) "main.c":314:3 80 {*movdi_internal}
     (nil))
(insn 231 229 232 2 (set (reg:DI 2 cx [154])
        (symbol_ref/f:DI ("*.LC37") [flags 0x2]  <var_decl 0x7fa610909000 *.LC37>)) "main.c":314:3 80 {*movdi_internal}
     (nil))
(insn 232 231 233 2 (set (reg:DI 4 si)
        (reg:DI 2 cx [154])) "main.c":314:3 80 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC37") [flags 0x2]  <var_decl 0x7fa610909000 *.LC37>)
        (nil)))
(insn 233 232 234 2 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:82 _1 ] [82])) "main.c":314:3 80 {*movdi_internal}
     (nil))
(call_insn 234 233 235 2 (call (mem:QI (symbol_ref:DI ("explorer_search_recursive") [flags 0x41]  <function_decl 0x7fa610b6ea00 explorer_search_recursive>) [0 explorer_search_recursive S1 A8])
        (const_int 0 [0])) "main.c":314:3 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 235 234 236 2 (set (reg/f:DI 0 ax [155])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -392 [0xfffffffffffffe78])) [14 tester+0 S8 A64])) "main.c":315:9 80 {*movdi_internal}
     (nil))
(insn 236 235 237 2 (set (reg:SI 1 dx [orig:83 _2 ] [83])
        (mem:SI (plus:DI (reg/f:DI 0 ax [155])
                (const_int 32 [0x20])) [1 tester_7->error+0 S4 A64])) "main.c":315:9 81 {*movsi_internal}
     (nil))
(insn 237 236 238 2 (set (reg:SI 0 ax [orig:84 search_err.24_3 ] [84])
        (mem/c:SI (symbol_ref:DI ("search_err") [flags 0x2]  <var_decl 0x7fa6108411b0 search_err>) [1 search_err+0 S4 A32])) "main.c":315:17 81 {*movsi_internal}
     (nil))
(insn 238 237 239 2 (parallel [
            (set (reg:SI 1 dx [orig:85 _4 ] [85])
                (ior:SI (reg:SI 1 dx [orig:83 _2 ] [83])
                    (reg:SI 0 ax [orig:84 search_err.24_3 ] [84])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":315:17 563 {*iorsi_1}
     (nil))
(insn 239 238 240 2 (set (reg/f:DI 0 ax [156])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -392 [0xfffffffffffffe78])) [14 tester+0 S8 A64])) "main.c":315:17 80 {*movdi_internal}
     (nil))
(insn 240 239 241 2 (set (mem:SI (plus:DI (reg/f:DI 0 ax [156])
                (const_int 32 [0x20])) [1 tester_7->error+0 S4 A64])
        (reg:SI 1 dx [orig:85 _4 ] [85])) "main.c":315:17 81 {*movsi_internal}
     (nil))
(insn 241 240 242 2 (set (reg:DI 0 ax [157])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -392 [0xfffffffffffffe78])) [14 tester+0 S8 A64])) "main.c":317:3 80 {*movdi_internal}
     (nil))
(insn 242 241 243 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [157])) "main.c":317:3 80 {*movdi_internal}
     (nil))
(call_insn 243 242 253 2 (call (mem:QI (symbol_ref:DI ("explorer_tester_destory") [flags 0x41]  <function_decl 0x7fa610b72400 explorer_tester_destory>) [0 explorer_tester_destory S1 A8])
        (const_int 0 [0])) "main.c":317:3 898 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 253 243 245 2 (const_int 0 [0]) "main.c":318:1 928 {nop}
     (nil))
(insn 245 253 246 2 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 6 bp)
                                (const_int -8 [0xfffffffffffffff8])) [9 D.3578+0 S8 A64])
                        (mem/v/f:DI (const_int 40 [0x28]) [0 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_TEST))
            (clobber (reg:DI 0 ax [159]))
        ]) "main.c":318:1 1270 {stack_protect_test_1_di}
     (nil))
(jump_insn 246 245 251 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 249)
            (pc))) "main.c":318:1 891 {*jcc}
     (nil)
 -> 249)
;;  succ:       4
;;              3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
(note 251 246 247 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(call_insn 247 251 248 3 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fa61088e500 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) "main.c":318:1 898 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 19 [frame]

(barrier 248 247 249)
;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 1, flags: (RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(code_label 249 248 252 4 47 (nil) [1 uses])
(note 252 249 254 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(note 254 252 0 NOTE_INSN_DELETED)

;; Function main (main, funcdef_no=29, decl_uid=3439, cgraph_uid=30, symbol_order=33)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=16, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 5:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) rBwBz {*call}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 7:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 8:  (0) rBwBz {*call}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 9:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) rBwBz {*call}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 11:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (0) rBwBz {*call}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 13:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 14:  (0) rBwBz {*call}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 15:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 16:  (0) rBwBz {*call}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 17:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 18:  (0) rBwBz {*call}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 19:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 20:  (0) rBwBz {*call}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 21:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 22:  (0) rBwBz {*call}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 23:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 24:  (0) rBwBz {*call}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 25:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (0) rBwBz {*call}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 27:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 28:  (0) rBwBz {*call}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 29:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 30:  (0) rBwBz {*call}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 31:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 32:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 33:  (0) =r  (1) g {*movsi_internal}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #1: **********

EBB 2

********** Pseudo live ranges #1: **********

  BB 2
   Insn 41: point = 0, n_alt = -1
   Insn 40: point = 0, n_alt = -2
   Insn 36: point = 1, n_alt = -2
   Insn 33: point = 3, n_alt = 0
   Insn 32: point = 4, n_alt = 0
   Insn 31: point = 4, n_alt = 3
   Insn 30: point = 4, n_alt = 0
   Insn 29: point = 4, n_alt = 3
   Insn 28: point = 4, n_alt = 0
   Insn 27: point = 4, n_alt = 3
   Insn 26: point = 4, n_alt = 0
   Insn 25: point = 4, n_alt = 3
   Insn 24: point = 4, n_alt = 0
   Insn 23: point = 4, n_alt = 3
   Insn 22: point = 4, n_alt = 0
   Insn 21: point = 4, n_alt = 3
   Insn 20: point = 4, n_alt = 0
   Insn 19: point = 4, n_alt = 3
   Insn 18: point = 4, n_alt = 0
   Insn 17: point = 4, n_alt = 3
   Insn 16: point = 4, n_alt = 0
   Insn 15: point = 4, n_alt = 3
   Insn 14: point = 4, n_alt = 0
   Insn 13: point = 4, n_alt = 3
   Insn 12: point = 4, n_alt = 0
   Insn 11: point = 4, n_alt = 3
   Insn 10: point = 4, n_alt = 0
   Insn 9: point = 4, n_alt = 3
   Insn 8: point = 4, n_alt = 0
   Insn 7: point = 4, n_alt = 3
   Insn 6: point = 4, n_alt = 0
   Insn 5: point = 4, n_alt = 3
 r82: [2..3]
 r83: [0..1]
Compressing live ranges: from 4 to 4 - 100%
Ranges after the compression:
 r82: [2..3]
 r83: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 6
	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=16, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
changing reg in insn 33
changing reg in insn 36
changing reg in insn 36
changing reg in insn 40
deleting insn with uid = 36.
deleting insn with uid = 40.
starting the processing of deferred insns
ending the processing of deferred insns


main

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 6 [bp] 7 [sp]
;;  ref usage 	r0={30d,16u} r1={15d} r2={15d} r4={15d} r5={15d} r6={1d,2u} r7={1d,16u} r8={14d} r9={14d} r10={14d} r11={14d} r12={14d} r13={14d} r14={14d} r15={14d} r17={14d} r18={14d} r19={1d,1u} r20={15d} r21={15d} r22={15d} r23={15d} r24={15d} r25={15d} r26={15d} r27={15d} r28={14d} r29={14d} r30={14d} r31={14d} r32={14d} r33={14d} r34={14d} r35={14d} r36={15d} r37={15d} r38={14d} r39={14d} r44={14d} r45={14d} r46={14d} r47={14d} r48={14d} r49={14d} r50={14d} r51={14d} r52={14d} r53={14d} r54={14d} r55={14d} r56={14d} r57={14d} r58={14d} r59={14d} r60={14d} r61={14d} r62={14d} r63={14d} r64={14d} r65={14d} r66={14d} r67={14d} r68={14d} r69={14d} r70={14d} r71={14d} r72={14d} r73={14d} r74={14d} r75={14d} 
;;    total ref usage 1006{971d,35u,0e} in 30{16 regular + 14 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 82 83
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "main.c":321:3 83 {*movqi_internal}
     (nil))
(call_insn 6 5 7 2 (call (mem:QI (symbol_ref:DI ("test_file_write_inbound") [flags 0x3]  <function_decl 0x7fa610820700 test_file_write_inbound>) [0 test_file_write_inbound S1 A8])
        (const_int 0 [0])) "main.c":321:3 898 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (nil)))
(insn 7 6 8 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "main.c":322:3 83 {*movqi_internal}
     (nil))
(call_insn 8 7 9 2 (call (mem:QI (symbol_ref:DI ("test_file_write_outbound") [flags 0x3]  <function_decl 0x7fa61082c100 test_file_write_outbound>) [0 test_file_write_outbound S1 A8])
        (const_int 0 [0])) "main.c":322:3 898 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (nil)))
(insn 9 8 10 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "main.c":323:3 83 {*movqi_internal}
     (nil))
(call_insn 10 9 11 2 (call (mem:QI (symbol_ref:DI ("test_file_read_inbound") [flags 0x3]  <function_decl 0x7fa61082c300 test_file_read_inbound>) [0 test_file_read_inbound S1 A8])
        (const_int 0 [0])) "main.c":323:3 898 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (nil)))
(insn 11 10 12 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "main.c":324:3 83 {*movqi_internal}
     (nil))
(call_insn 12 11 13 2 (call (mem:QI (symbol_ref:DI ("test_file_read_outbound") [flags 0x3]  <function_decl 0x7fa61082c500 test_file_read_outbound>) [0 test_file_read_outbound S1 A8])
        (const_int 0 [0])) "main.c":324:3 898 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (nil)))
(insn 13 12 14 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "main.c":325:3 83 {*movqi_internal}
     (nil))
(call_insn 14 13 15 2 (call (mem:QI (symbol_ref:DI ("test_file_read_write") [flags 0x3]  <function_decl 0x7fa61082c700 test_file_read_write>) [0 test_file_read_write S1 A8])
        (const_int 0 [0])) "main.c":325:3 898 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (nil)))
(insn 15 14 16 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "main.c":327:3 83 {*movqi_internal}
     (nil))
(call_insn 16 15 17 2 (call (mem:QI (symbol_ref:DI ("test_dir_add_file") [flags 0x3]  <function_decl 0x7fa61082c900 test_dir_add_file>) [0 test_dir_add_file S1 A8])
        (const_int 0 [0])) "main.c":327:3 898 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (nil)))
(insn 17 16 18 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "main.c":328:3 83 {*movqi_internal}
     (nil))
(call_insn 18 17 19 2 (call (mem:QI (symbol_ref:DI ("test_dir_add_dir") [flags 0x3]  <function_decl 0x7fa61082cb00 test_dir_add_dir>) [0 test_dir_add_dir S1 A8])
        (const_int 0 [0])) "main.c":328:3 898 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (nil)))
(insn 19 18 20 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "main.c":329:3 83 {*movqi_internal}
     (nil))
(call_insn 20 19 21 2 (call (mem:QI (symbol_ref:DI ("test_dir_add_delete") [flags 0x3]  <function_decl 0x7fa61082cd00 test_dir_add_delete>) [0 test_dir_add_delete S1 A8])
        (const_int 0 [0])) "main.c":329:3 898 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (nil)))
(insn 21 20 22 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "main.c":330:3 83 {*movqi_internal}
     (nil))
(call_insn 22 21 23 2 (call (mem:QI (symbol_ref:DI ("test_dir_size") [flags 0x3]  <function_decl 0x7fa61082cf00 test_dir_size>) [0 test_dir_size S1 A8])
        (const_int 0 [0])) "main.c":330:3 898 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (nil)))
(insn 23 22 24 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "main.c":332:3 83 {*movqi_internal}
     (nil))
(call_insn 24 23 25 2 (call (mem:QI (symbol_ref:DI ("test_explorer_init") [flags 0x3]  <function_decl 0x7fa610835900 test_explorer_init>) [0 test_explorer_init S1 A8])
        (const_int 0 [0])) "main.c":332:3 898 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (nil)))
(insn 25 24 26 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "main.c":333:3 83 {*movqi_internal}
     (nil))
(call_insn 26 25 27 2 (call (mem:QI (symbol_ref:DI ("test_explorer_file1") [flags 0x3]  <function_decl 0x7fa610835b00 test_explorer_file1>) [0 test_explorer_file1 S1 A8])
        (const_int 0 [0])) "main.c":333:3 898 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (nil)))
(insn 27 26 28 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "main.c":334:3 83 {*movqi_internal}
     (nil))
(call_insn 28 27 29 2 (call (mem:QI (symbol_ref:DI ("test_explorer_file2") [flags 0x3]  <function_decl 0x7fa610835d00 test_explorer_file2>) [0 test_explorer_file2 S1 A8])
        (const_int 0 [0])) "main.c":334:3 898 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (nil)))
(insn 29 28 30 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "main.c":335:3 83 {*movqi_internal}
     (nil))
(call_insn 30 29 31 2 (call (mem:QI (symbol_ref:DI ("test_explorer_dir1") [flags 0x3]  <function_decl 0x7fa610835f00 test_explorer_dir1>) [0 test_explorer_dir1 S1 A8])
        (const_int 0 [0])) "main.c":335:3 898 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (nil)))
(insn 31 30 32 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "main.c":337:3 83 {*movqi_internal}
     (nil))
(call_insn 32 31 33 2 (call (mem:QI (symbol_ref:DI ("test_explorer_search") [flags 0x3]  <function_decl 0x7fa610840700 test_explorer_search>) [0 test_explorer_search S1 A8])
        (const_int 0 [0])) "main.c":337:3 898 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (nil)))
(insn 33 32 41 2 (set (reg:SI 0 ax [orig:82 _16 ] [82])
        (const_int 0 [0])) "main.c":338:10 81 {*movsi_internal}
     (nil))
(insn 41 33 43 2 (use (reg/i:SI 0 ax)) "main.c":339:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(note 43 41 0 NOTE_INSN_DELETED)
